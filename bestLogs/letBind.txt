**** BEGIN LOGGING AT Fri Mar 30 19:07:25 2018

Mar 30 19:07:25 *	Now talking on #haskell
Mar 30 19:07:25 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Mar 30 19:07:25 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
Mar 30 19:07:26 *	Channel #haskell url: http://www.haskell.org/
Mar 30 19:08:00 <EvanR>	is that the vscode bridge you were talking about
Mar 30 19:08:09 <EvanR>	or is there another one
Mar 30 19:08:14 <inkbottle>	What'd that be? https://camo.githubusercontent.com/2aa08d157d92b2953bd86cfd35769fc0c42fb994/68747470733a2f2f692e696d6775722e636f6d2f3176716d3465462e676966
Mar 30 19:08:38 <EvanR>	that url is insane
Mar 30 19:09:06 <inkbottle>	because the gif is awesome
Mar 30 19:09:13 *	Yuras has quit (Ping timeout: 256 seconds)
Mar 30 19:09:57 *	tomphp has quit (Ping timeout: 264 seconds)
Mar 30 19:10:16 <crestfallen>	what about a good editor for 32bit machine with pretty colors that is not vim?
Mar 30 19:10:29 *	rblaze has quit (Ping timeout: 276 seconds)
Mar 30 19:11:00 <EvanR>	sounds like a contradiction
Mar 30 19:11:00 <inkbottle>	ed?
Mar 30 19:11:13 *	moet has quit (Ping timeout: 248 seconds)
Mar 30 19:11:18 <inkbottle>	not sure for the colors
Mar 30 19:12:07 *	rshetty (~rshetty@106.51.233.117) has joined
Mar 30 19:12:55 <crestfallen>	inkbottle, this is my init.vim file. the colors look cool but not on my 32bit machine : https://ptpb.pw/91uP
Mar 30 19:14:33 <davean>	crestfallen: If the 32 bit machines has PAE, emacs?
Mar 30 19:14:53 *	bemeurer (~bemeurer@185.236.200.248) has joined
Mar 30 19:15:15 <crestfallen>	the type signature and func def lines are utterly different colors. that is annoying. no davean no emacs on it
Mar 30 19:15:50 *	banc (~master@82.145.37.203) has joined
Mar 30 19:15:57 *	tomphp (~tomphp@213.205.198.66) has joined
Mar 30 19:16:47 *	nakal (~nakal@port-92-196-54-139.dynamic.qsc.de) has joined
Mar 30 19:17:21 *	augur has quit (Remote host closed the connection)
Mar 30 19:18:03 <inkbottle>	crestfallen: have you tried that: https://github.com/altercation/vim-colors-solarized?
Mar 30 19:18:15 <inkbottle>	or sth solarized?
Mar 30 19:18:29 *	cschneid has quit (Remote host closed the connection)
Mar 30 19:18:41 <inkbottle>	EvanR: have you found what ide it was?
Mar 30 19:18:51 *	nakal_ has quit (Ping timeout: 256 seconds)
Mar 30 19:20:02 *	cschneid (~cschneid@c-73-217-7-3.hsd1.co.comcast.net) has joined
Mar 30 19:20:36 *	moet (~moet@d-173-44-92-193.cpe.metrocast.net) has joined
Mar 30 19:21:07 <EvanR>	no
Mar 30 19:21:22 <EvanR>	didnt really try
Mar 30 19:21:30 <crestfallen>	inkbottle, thanks looking at that
Mar 30 19:22:23 *	theDon has quit (Ping timeout: 260 seconds)
Mar 30 19:23:10 <Maxdamantus>	crestfallen: presumably you could try copying the Haskell syntax plugin from the good system to the bad one.
Mar 30 19:23:23 <Maxdamantus>	(since I'm guessing they're probably different for whatever reason)
Mar 30 19:23:58 *	theDon (~td@mue-88-130-49-143.dsl.tropolys.de) has joined
Mar 30 19:24:11 *	branweb (~branweb@c-24-56-236-26.customer.broadstripe.net) has joined
Mar 30 19:24:12 <crestfallen>	Maxdamantus, tried that. inkbottle thing is in neovim there is a .config/nvim/bundle file so I'll try to clone it into there..
Mar 30 19:24:41 *	cschneid has quit (Remote host closed the connection)
Mar 30 19:24:52 <crestfallen>	using pathogen
Mar 30 19:24:55 *	cschneid (~cschneid@c-73-217-7-3.hsd1.co.comcast.net) has joined
Mar 30 19:25:29 <crestfallen>	thanks Maxdamantus 
Mar 30 19:26:28 *	lambdaman has quit (Ping timeout: 260 seconds)
Mar 30 19:27:04 *	Wuzzy2 has quit (Quit: Wuzzy2)
Mar 30 19:27:22 *	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined
Mar 30 19:27:58 *	antsanto (~antsanto@171.78.183.88) has joined
Mar 30 19:28:27 *	rayediaz (~rayediaz@148.101.15.171) has joined
Mar 30 19:28:57 *	pera has quit (Ping timeout: 240 seconds)
Mar 30 19:29:01 <laudecay>	is there an interpreter that takes haskell to C?
Mar 30 19:29:29 <laudecay>	i want to turn in my assignment in shakespeare programming language for the memes, but i also want to write it in haskell for the knowledge
Mar 30 19:29:38 <laudecay>	and i have a c->SPL interpreter
Mar 30 19:29:53 <laudecay>	kick me if you must i know this is heresy
Mar 30 19:29:57 *	brynedwardz (~bryn@109.76.14.240) has joined
Mar 30 19:29:58 *	conal has quit (Quit: Computer has gone to sleep.)
Mar 30 19:30:00 *	brynedwards has quit (Disconnected by services)
Mar 30 19:30:02 *	brynedwardz is now known as brynedwards
**** BEGIN LOGGING AT Fri Mar 30 19:33:25 2018

Mar 30 19:33:25 *	Now talking on #haskell
Mar 30 19:33:25 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Mar 30 19:33:25 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
Mar 30 19:33:26 *	Channel #haskell url: http://www.haskell.org/
Mar 30 19:33:48 <laudecay>	EvanR: I want to fuck with my TA by turning something in in Shakespeare Programming Language
Mar 30 19:33:49 <EvanR>	"John's Haskell Compiler"
Mar 30 19:34:00 <laudecay>	beacuse this class is easy and i am bored and have a sick sense of humor
Mar 30 19:34:25 <crestfallen>	inkbottle, how would one learn to interpret and edit that giant file solarized ?
Mar 30 19:34:32 <laudecay>	we're allowed to turn shit in in any language we like, as long as we can provide detailed instructions to compile it on the department servers
Mar 30 19:34:46 <laudecay>	i have to implement paxos
Mar 30 19:35:13 <EvanR>	JHC bullet points: "No garbage collector. A variant of Region Inference is in the works." o_O
Mar 30 19:35:23 <EvanR>	what is this alien tech
Mar 30 19:35:52 *	cschneid has quit (Remote host closed the connection)
Mar 30 19:35:57 *	holoirc (~holoirc@188.120.201.244) has joined
Mar 30 19:36:29 *	gaussalpha has quit (Ping timeout: 276 seconds)
Mar 30 19:37:47 <laudecay>	yeah okay i'll turn in brainfuck
Mar 30 19:37:55 <laudecay>	jhc -> c -> brainfuck
Mar 30 19:39:28 *	cschneid (~cschneid@c-73-217-7-3.hsd1.co.comcast.net) has joined
Mar 30 19:43:00 *	tomphp has quit (Read error: Connection reset by peer)
Mar 30 19:43:02 *	preyalone has quit (Quit: Connection closed for inactivity)
Mar 30 19:44:01 *	rayediaz (~rayediaz@148.101.5.42) has joined
Mar 30 19:44:48 *	beala has quit (Quit: WeeChat 2.1)
Mar 30 19:44:50 *	Sgeo (~Sgeo@ool-18b98dd9.dyn.optonline.net) has joined
Mar 30 19:46:05 *	Sgeo__ has quit (Ping timeout: 240 seconds)
Mar 30 19:46:50 <EvanR>	now i feel like writing myself a malbolge
Mar 30 19:47:21 *	dload_ (~Derrick@CPE703acb8197a8-CM64777dd7c140.cpe.net.cable.rogers.com) has joined
Mar 30 19:47:33 <laudecay>	i see you are a man of culture
Mar 30 19:48:08 *	gestone (~gestone@97-126-127-222.tukw.qwest.net) has joined
Mar 30 19:48:47 *	rayediaz (~rayediaz@148.101.5.42) has left
Mar 30 19:48:50 *	antsanto has quit (Ping timeout: 276 seconds)
Mar 30 19:49:03 <inkbottle>	edmundnoble_: VScode seems very very nice, but it wont do with my fully open source debian; I like very much the code preview sidebar
Mar 30 19:49:09 *	jedws has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Mar 30 19:50:57 *	dload__ has quit (Ping timeout: 256 seconds)
Mar 30 19:51:52 *	guest5291 (~username@110.235.163.170) has joined
Mar 30 19:51:53 *	guest529 has quit (Read error: Connection reset by peer)
Mar 30 19:53:10 *	gestone has quit (Ping timeout: 264 seconds)
Mar 30 19:54:34 *	tomphp (~tomphp@213.205.198.66) has joined
Mar 30 19:55:31 Python interface unloaded
Mar 30 19:55:31 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri Mar 30 19:55:31 2018

**** BEGIN LOGGING AT Tue Apr 10 19:47:43 2018

Apr 10 19:47:43 *	Now talking on #haskell
Apr 10 19:47:43 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Apr 10 19:47:43 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
Apr 10 19:47:44 *	Channel #haskell url: http://www.haskell.org/
Apr 10 19:47:47 *	nesqi has quit (Ping timeout: 256 seconds)
Apr 10 19:47:51 <buhman>	dyl: not trying to contradict at all; but do you count people with job titles like "software engineer" in your count of "programmers"?
Apr 10 19:47:54 <dyl>	If it’s not your analyses, it’s your experiments themselves, or a tool/package you use, or figure preparation...
Apr 10 19:47:58 <Welkin>	dyl: but programming for those use cases is made as easy as importing a libraries and passing a bunch of data to one function
Apr 10 19:47:58 *	chao-tic (~chao@203.97.21.86) has joined
Apr 10 19:48:06 *	fmixing (~fmixing@5.18.219.156) has joined
Apr 10 19:48:07 <dyl>	But in practice it’s not just that.
Apr 10 19:48:08 <Welkin>	it's not software engineering, more like scripting
Apr 10 19:48:18 <dyl>	Right, it is closed to scripting.
Apr 10 19:48:28 <crestfallen>	hi please teach me the intuition for writing folde here: the first pattern match I understand fine...  https://ptpb.pw/LB5y
Apr 10 19:48:34 <dyl>	But reproducibility and determinism matter even more and aren’t enforced or even encouraged in any meaningful way.
Apr 10 19:48:51 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Apr 10 19:48:51 <dyl>	Code review for published academic code is nonexistent.
Apr 10 19:48:59 <crestfallen>	its the second one that is tricky for me
Apr 10 19:49:05 <EvanR>	i try to pretend that software engineering and scripting are different too
Apr 10 19:49:06 <dyl>	Use of invariant analyses techniques or even numeric stability analyses is nonexistent.
Apr 10 19:49:21 <dyl>	Software engineering is different than scripting in that the users are a team.
Apr 10 19:49:28 <dyl>	Scripting to me is smaller scale.
Apr 10 19:49:31 <Cale>	crestfallen: the idea is that we're taking replacements for each of the data constructors, and making those replacements throughout the structure
Apr 10 19:49:32 *	lambdaman (~lambdaman@207.81.117.110) has joined
Apr 10 19:49:33 <arahael>	And software engineering requires a whole project.
Apr 10 19:49:34 <dyl>	And in practice in labs it’s 1-2 people.
Apr 10 19:49:38 <Cale>	crestfallen: It might help to write it like...
Apr 10 19:49:43 <dyl>	And maybe a few more that are just copy pasting and reusing bits.
Apr 10 19:49:43 <arahael>	"scripting" is just a task, which may well be part of a project.
Apr 10 19:49:48 <dyl>	^
Apr 10 19:49:53 <dyl>	More or less, yes.
Apr 10 19:49:53 <Cale>	folde val add = f
Apr 10 19:49:55 <dyl>	That’s my take.
Apr 10 19:50:01 <Cale>	  where f (Val x) = val x
Apr 10 19:50:09 <EvanR>	totally
Apr 10 19:50:16 <Cale>	        f (Add x y) = add (f x) (f y)
Apr 10 19:50:18 <Welkin>	a script is just thrown together, not designed in any meaningful way
Apr 10 19:50:27 <Welkin>	and you certainly don't invent abstractions
Apr 10 19:50:34 <Welkin>	just use library functions
Apr 10 19:50:35 <dyl>	Correct.
Apr 10 19:50:38 <dyl>	Not always.
Apr 10 19:50:40 <crestfallen>	Cale why did you use add there?
Apr 10 19:50:41 <dyl>	But usually yes.
Apr 10 19:50:48 <Cale>	It's the replacement for Add
Apr 10 19:50:54 <dyl>	But when those scripts are meaningful parts of your research and publishable
Apr 10 19:51:01 <Cale>	The idea is to replace each Val with val and each Add with add
Apr 10 19:51:03 <dyl>	“idk this script worked” ceases to be acceptable.
Apr 10 19:51:06 *	sleffy (~sleffy@c-24-7-67-0.hsd1.ca.comcast.net) has joined
Apr 10 19:51:09 <Welkin>	dyl: yeah, I can see the problem
Apr 10 19:51:10 <dyl>	We can do better.
Apr 10 19:51:11 <Cale>	throughout the entire structure
Apr 10 19:51:13 *	Johannes13__ (~Johannes1@unaffiliated/johannes13) has joined
Apr 10 19:51:15 <EvanR>	people just throw together, in no meaningful way, using library functions, whole huge projects all that time!
Apr 10 19:51:18 <dyl>	Especially given the usage patterns you point out.
Apr 10 19:51:24 *	theDon has quit (Ping timeout: 260 seconds)
Apr 10 19:51:29 <dyl>	This is a use case in which invariant analysis could work very well for example.
Apr 10 19:51:31 <Cale>	So if you have something like Add (Val 5) (Add (Val 1) (Val 2))
Apr 10 19:51:33 <crestfallen>	ok so that is the first line, what about the second Cale?
Apr 10 19:51:46 <Cale>	the result we want is  add (val 5) (add (val 1) (val 2))
Apr 10 19:51:51 <Welkin>	I have a friend who recently had to take over a disaster of a project that is a searchable database of grad student papers that was many thousands of lines of php
Apr 10 19:51:58 *	lagothri1 has quit (Ping timeout: 264 seconds)
Apr 10 19:51:59 <Welkin>	a huge mess written over many years
Apr 10 19:51:59 <Cale>	where add and val are these functions which are supplied by the user
Apr 10 19:52:00 <dyl>	The tooling also needs to be better. But the catch is that if it requires any onboarding time or introduces issues, it won’t be used.
Apr 10 19:52:10 <Cale>	so we just recursively replace them throughout the structure
Apr 10 19:52:18 <EvanR>	dyl: what are you talkng about again?
Apr 10 19:52:28 <Welkin>	EvanR: programming tools for scientists
Apr 10 19:52:31 <Welkin>	better tools*
Apr 10 19:52:34 <Cale>	If the input is of the form  Val x  the result is  val x
Apr 10 19:52:34 <dyl>	How bad the programming situation is in academia.
Apr 10 19:52:35 <EvanR>	python?
Apr 10 19:52:35 *	path[l] (~vsi@199.201.64.131) has joined
Apr 10 19:52:37 <crestfallen>	these functions being (+ 0) and (+) right Cale ?
Apr 10 19:52:41 *	fmixing has quit (Ping timeout: 256 seconds)
Apr 10 19:52:44 <Cale>	not necessarily
Apr 10 19:52:47 <Cale>	they could be anything
Apr 10 19:52:50 <dyl>	One sensible approach I see is in “interactive assistant” type tools, that do not impose constraints but guide towards better practices.
Apr 10 19:52:53 <Welkin>	dyl: how do you thikn it can be improved?
Apr 10 19:52:58 <Welkin>	the language, or the general tooling?
Apr 10 19:53:05 <dyl>	A few ways but none that I can be sure of without user studies.
Apr 10 19:53:06 <dyl>	So
Apr 10 19:53:08 <Welkin>	haha
Apr 10 19:53:12 <Welkin>	you mean like haskell?
Apr 10 19:53:14 <dyl>	I would like to do things from the language.
Apr 10 19:53:15 <EvanR>	improving the people
Apr 10 19:53:20 <Welkin>	at least a type system
Apr 10 19:53:24 <dyl>	But the reality is you won’t get people to switch.
Apr 10 19:53:25 <Welkin>	have them use Coq! :D
Apr 10 19:53:29 <dyl>	The risk is too high.
Apr 10 19:53:36 <crestfallen>	ok thanks could you give an example of alternatives where we're not looking at the second two funcs size and eval ?
Apr 10 19:53:38 <dyl>	You need to nudge people towards better practices incrementally.
Apr 10 19:53:39 <crestfallen>	Cale
Apr 10 19:53:49 <arahael>	I'd bet that most data scientists are still on python 2.7
Apr 10 19:53:50 *	HoloIRCUser1 has quit (Read error: Connection reset by peer)
Apr 10 19:53:50 <dyl>	You need to give them something that helps them but doesn’t get in their way.
Apr 10 19:53:51 <crestfallen>	for f and g
Apr 10 19:53:53 <Cale>	Sure, perhaps we want to know the depth of the expression
Apr 10 19:53:55 <dyl>	This is a design problem imo.
Apr 10 19:54:07 <dyl>	arahael you mean 2.6 :p?
Apr 10 19:54:07 *	HoloIRCUser1 (~holoirc@130.195.253.25) has joined
Apr 10 19:54:23 <dyl>	And yes it is mostly 2.6/2.7. Though the situation with 3 is much better now.
Apr 10 19:54:35 <Welkin>	python2 is deprecated
Apr 10 19:54:38 <Welkin>	3 is the standard now
Apr 10 19:54:42 <crestfallen>	at attention...
Apr 10 19:54:44 <dyl>	So are plenty of things frequently used.
Apr 10 19:54:45 <Cale>	So  depth = folde (const 0) (\d1 d2 -> 1 + max d1 d2)
Apr 10 19:54:46 <Welkin>	even numpy/scipy switched to 3
Apr 10 19:54:47 <arahael>	dyl: Heh.  Indeed.  They only switch to python3 once it's literally a drop-in replacement, which depends on how the code was accidentally written.
Apr 10 19:54:47 <Welkin>	I believe
Apr 10 19:54:50 <dyl>	Academic programming tools and usage are the epitome of “the enemy of better is good enough”.
Apr 10 19:54:51 *	jackcrfs (~jackcrfs@011.139.48.116.static.netvigator.com) has joined
Apr 10 19:54:58 <EvanR>	i am tired of talking about python
Apr 10 19:55:01 <dyl>	Any successful tools in this space need minimal “activation energy”.
Apr 10 19:55:01 <Welkin>	haha
Apr 10 19:55:16 <Cale>	crestfallen: Or perhaps we'd just like to flip the entire expression over, reversing all the Adds
Apr 10 19:55:18 <dyl>	They need to be catalysts, not new reactants.
Apr 10 19:55:23 *	dyl falls into biospeak.
Apr 10 19:55:28 *	Saukk has quit (Remote host closed the connection)
Apr 10 19:55:29 *	raatiniemi has quit (Ping timeout: 260 seconds)
Apr 10 19:55:31 <Welkin>	dyl: so what advantages do you think julia has?
Apr 10 19:55:32 <Cale>	flipExpr = folde Val (flip Add)
Apr 10 19:55:41 <dyl>	Julia is a neat language but I don’t see it replacing Python.
Apr 10 19:55:50 <Welkin>	and then there is R, which looks technically better, but no idea how usable it is
Apr 10 19:55:54 <arahael>	Julia does have a fantastic python binding, though.
Apr 10 19:55:58 <dyl>	The main use case is heavily numeric computations where Python isn’t cutting it and it’s a young student.
Apr 10 19:55:58 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Apr 10 19:56:07 <Cale>	So that'll turn  Add (Val 1) (Add (Val 2) (Val 3)) into  Add (Add (Val 3) (Val 2)) (Val 1)
Apr 10 19:56:08 <dyl>	The cost of hopping from Python to Julia is relatively low.
Apr 10 19:56:18 <EvanR>	so haskell
Apr 10 19:56:23 <dyl>	But the cost of using scipy/pandas is even less.
Apr 10 19:56:24 <EvanR>	-offtopic
Apr 10 19:56:35 <Welkin>	EvanR: it's happy hour
Apr 10 19:56:41 *	hphuoc25 (~hphuoc25@128.106.171.206) has joined
Apr 10 19:56:45 <crestfallen>	Cale thanks ! I'm getting kicked out of cafe. thanks I will study that appreciate it !!
Apr 10 19:56:50 *	llinguini (uid257922@gateway/web/irccloud.com/x-xjaruwixgkzxulsn) has joined
Apr 10 19:56:54 <arahael>	Welkin: "happy hour" implies everybody is happy.k
Apr 10 19:56:54 <rotaerk>	EvanR, go into #python and start talking about haskell
Apr 10 19:56:57 *	lambdaman has quit (Remote host closed the connection)
Apr 10 19:56:58 <rotaerk>	bring the world into balance
Apr 10 19:57:11 <Cale>	crestfallen: As your expressions get more complicated, there will be more interesting functions to write
Apr 10 19:57:16 <dyl>	rotaerk: when this channel was all math for an hour I checked ##math and they were talking about programming.
Apr 10 19:57:21 <Welkin>	rotaerk: his messages will soon be lost in a sea of "help me my program doesn't work!"
Apr 10 19:57:21 <rotaerk>	heh
Apr 10 19:57:30 <Cale>	crestfallen: for example, if there were lambdas, perhaps we could write something to collect up all the free variables
Apr 10 19:57:51 *	dan_f (~dan@24.148.40.200) has joined
Apr 10 19:58:14 <arahael>	Welkin: I'm curious.  Why wouldn't an html renderer be written in haskell?
Apr 10 19:58:21 <dyl>	arahael: the key theme I want to emphasize is “oh, it’s nice, but good luck with adoption”.
Apr 10 19:58:23 <crestfallen>	I see yes, really getting kicked out .. thanks Cale for your time and patience.
Apr 10 19:58:28 <rotaerk>	haskell code can be hard to understand, but compared to other languages, it's not easy to *misunderstand* either
Apr 10 19:58:37 <dyl>	And that’s why I don’t think new languages can help too much *alone*.
Apr 10 19:58:44 <Welkin>	rotaerk: I disagree. It depends on who wrote the code
Apr 10 19:58:48 <dyl>	The tooling needs to be more robust and designed for that class of users.
Apr 10 19:58:49 <Welkin>	I have read some horrendous haskell
Apr 10 19:58:53 *	chowie (~chowie@d154-5-160-162.bchsia.telus.net) has joined
Apr 10 19:58:56 <arahael>	rotaerk: Ironically, my data scientist colleague is a fan of haskell, too...  But he uses python instead.  Prefers python.
Apr 10 19:58:56 <Welkin>	that made me want to gouge my eyes out with a spork
Apr 10 19:59:03 Python interface unloaded
Apr 10 19:59:03 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue Apr 10 19:59:03 2018

**** BEGIN LOGGING AT Thu Apr 12 12:16:14 2018

Apr 12 12:16:14 *	Now talking on #haskell
Apr 12 12:16:14 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Apr 12 12:16:14 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
Apr 12 12:16:15 *	Channel #haskell url: http://www.haskell.org/
Apr 12 12:16:25 <CahC5ooz>	Given f x a = a + x, (f x) returns \a -> a + x; that's a closure, no?
Apr 12 12:16:32 *	odites (~odites@94.161.203.241) has left ("Konversation terminated!")
Apr 12 12:16:47 <jle`>	by closure, do you mean function?
Apr 12 12:16:48 <Welkin>	a closure maintains state
Apr 12 12:16:51 <Welkin>	there is no state here
Apr 12 12:16:54 *	danso has quit (Read error: Connection reset by peer)
Apr 12 12:16:58 <crestfallen>	https://ptpb.pw/VpJE hi the flipExpr function required that I add deriving Show to folde. why is that? 
Apr 12 12:16:58 <EvanR>	\a -> a + x, by itself is wrong
Apr 12 12:17:04 <EvanR>	x not found
Apr 12 12:17:17 <EvanR>	at runtime, none of these notations work
Apr 12 12:17:25 <jle`>	crestfallen: it probably doesn't
Apr 12 12:17:38 *	danso (~dan@modemcable078.123-81-70.mc.videotron.ca) has joined
Apr 12 12:17:40 <jle`>	also you can't derive Show for folde, you can only derive Show for types
Apr 12 12:17:43 <CahC5ooz>	jle`: by closure I mean fn + env; EvanR: x is a free variable, obviously - because of that it's a closure, that's my point.
Apr 12 12:17:51 <EvanR>	its not a free variable at all
Apr 12 12:18:03 *	lortabac has quit (Ping timeout: 260 seconds)
Apr 12 12:18:04 <EvanR>	you passed x in as a concrete value
Apr 12 12:18:09 <crestfallen>	jle`, sorry let me update that paste
Apr 12 12:18:11 *	louispan has quit (Quit: louispan)
Apr 12 12:18:24 <Welkin>	substitute the values like an algebraic equation
Apr 12 12:18:30 <EvanR>	the original question was why it cant be lifted, but there it is
Apr 12 12:18:44 <Welkin>	there is no environment
Apr 12 12:18:48 <Welkin>	it just substitutes
Apr 12 12:18:59 <jle`>	crestfallen: are you sure the error isn't happening when you try to show an Expr?
Apr 12 12:19:57 <dumptruckman>	is there a package out there for creating a sandboxed ghci instance?
Apr 12 12:20:13 <crestfallen>	yes this is what I needed to get it working https://ptpb.pw/WrIV  jle` 
Apr 12 12:20:14 <EvanR>	it removes nested lambdas. you seem to be referring to different (vague) things all as function/lambda/closure
Apr 12 12:20:20 <Welkin>	dumptruckman: what does that mean?
Apr 12 12:20:27 *	ddellaco_ has quit (Remote host closed the connection)
Apr 12 12:20:28 *	SenasOzys (~SenasOzys@user208.77-105-199.netatonce.net) has joined
Apr 12 12:20:29 <davean>	dumptruckman: "sandboxed"? dumptruckman does "new-repl" do basicly what you want?
Apr 12 12:20:31 <Welkin>	when you start ghci, it is already a fresh instance of it
Apr 12 12:20:31 <CahC5ooz>	EvanR: I'm sorry, but I don't think you understood the question. When you pass a "concrete value" to a curried function, it creates a closure. In any case, I'm not here for arguing, so I guess I'll just ask the question again later.
Apr 12 12:20:45 <Cale>	dumptruckman: There are a whole bunch of ways to get that to happen depending on what you want :)
Apr 12 12:20:46 <jle`>	crestfallen: flipExpr shouldn't require it
Apr 12 12:21:15 <jle`>	crestfallen: it should be required if you want to Show an Expr
Apr 12 12:21:19 <crestfallen>	all the functions worked except flipExpr
Apr 12 12:21:23 <dumptruckman>	I want to make a discord bot that can do haskell eval but obviously don't want people to be able to access my file system
Apr 12 12:21:28 <dumptruckman>	or do other nasty things
Apr 12 12:21:30 <jle`>	crestfallen: does that file compile?
Apr 12 12:21:38 <EvanR>	me neither, lambda lifting can be applied there
Apr 12 12:21:54 <Welkin>	dumptruckman: just install lambdabot
Apr 12 12:21:57 <Welkin>	it's already all set up
Apr 12 12:22:07 <dumptruckman>	oh
Apr 12 12:22:07 <jle`>	CahC5ooz: i think you might be confusing lambda calculus with implementations of functional programming
Apr 12 12:22:08 <Welkin>	https://github.com/lambdabot/lambdabot
Apr 12 12:22:10 <Cale>	Welkin: someone added discord support to lambdabot?
Apr 12 12:22:16 <crestfallen>	jle`, yeah. since flipExpr is the only one returning an Expr jle` 
Apr 12 12:22:17 <Welkin>	Cale: no, but someone can
Apr 12 12:22:23 <Cale>	Okay :)
Apr 12 12:22:29 <jle`>	CahC5ooz: lambda lifting is an abstract mathematical concept
Apr 12 12:22:33 *	kderme (4d9fc13e@gateway/web/freenode/ip.77.159.193.62) has joined
Apr 12 12:22:33 <Welkin>	I meant the bot is already written
Apr 12 12:22:37 <Cale>	right
Apr 12 12:22:37 <dumptruckman>	Then just installing it won't work
Apr 12 12:22:46 <EvanR>	see the two bullet points on the wikipedia for Lambda_Lifting, thats all i did
Apr 12 12:22:49 <jle`>	CahC5ooz: closures are a technique some programming languages use to for implementation
Apr 12 12:22:52 <Welkin>	all you need to do is add a discord interface
Apr 12 12:22:52 <Cale>	dumptruckman: lambdabot runs Haskell via a thing called mueval, iirc.
Apr 12 12:22:59 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
Apr 12 12:23:07 <dumptruckman>	alright
Apr 12 12:23:13 <Cale>	(well, I recall correctly for some point in history, but lots of changes have been made since I last looked at lambdabot)
Apr 12 12:23:16 <jle`>	CahC5ooz: another connection might be something like (5 + 6), and asking how to add 5 and 6 without doing any bit manipulations
Apr 12 12:23:21 *	Nd-69-M (~nend@109.72.55.120) has joined
Apr 12 12:23:22 <jle`>	s/connection/parallel
Apr 12 12:23:26 *	ddellacosta (~ddellacos@2604:2000:7007:d000:bda3:3613:59cf:3773) has joined
Apr 12 12:23:31 *	dijonmustard has quit (Quit: WeeChat 2.1)
Apr 12 12:23:40 <Cale>	But yeah, maybe just hacking on lambdabot itself would be easier than starting from scratch... possibly.
Apr 12 12:23:53 <jle`>	the addition of 5 and 6 is a mathematical idea, and we can talk about it without invoking operational aspects of how a computer might compute it
Apr 12 12:24:04 <jle`>	crestfallen: yes
Apr 12 12:24:10 <Welkin>	or try mueval
Apr 12 12:24:10 <jle`>	crestfallen: so flipExpr doesn't require Show to work
Apr 12 12:24:16 <Welkin>	I don't know how much work that will be to set up though
Apr 12 12:24:22 <CahC5ooz>	jle`: lambda lifting is both a "mathematical" concept and an implementation technique; see http://wiki.c2.com/?LambdaLifting or e.g. the wikipedia article
Apr 12 12:24:27 <Welkin>	https://github.com/gwern/mueval
Apr 12 12:24:43 *	perspectival has quit (Quit: Leaving.)
Apr 12 12:24:47 <crestfallen>	jle`, it does compile, so it makes sense to you that it requires that deriving Show then ? 
Apr 12 12:24:59 <jle`>	crestfallen: flipExpr doesn't require deriving Show
Apr 12 12:25:04 <Welkin>	lol, c2.com
Apr 12 12:25:20 *	vlatkoB has quit (Remote host closed the connection)
Apr 12 12:25:32 *	louispan (~textual@14-203-219-236.static.tpgi.com.au) has joined
Apr 12 12:25:33 <Cale>	CahC5ooz: The usual distinction I draw is that things stop being closures once you can no longer separate the code and environment part of the pair.
Apr 12 12:25:47 <Cale>	and instead are something that you used a closure to implement
Apr 12 12:25:50 <Cale>	(usually functions)
Apr 12 12:26:05 <jle`>	crestfallen: it should compile without deriving Show
Apr 12 12:26:38 <Cale>	Since there's no way to tear apart a function like (+) 5 and see the 5 on its own or substitute it for something else, that's not quite a closure any longer, even if the compiler chooses to implement it by one (it may not)
Apr 12 12:26:46 *	replay has quit (Ping timeout: 264 seconds)
Apr 12 12:27:24 <jle`>	crestfallen: what are you doing that causes you to see the error?
Apr 12 12:28:20 *	alex`` has quit (Ping timeout: 255 seconds)
Apr 12 12:28:48 *	sdothum has quit (Quit: ZNC 1.6.6 - http://znc.in)
Apr 12 12:28:51 <Cale>	CahC5ooz: Often people from lisp-ish backgrounds like to confuse the implementation detail with the feature that's been implemented though, so you will hear people throw around the word "closure" when they effectively mean "function" or "procedure"
Apr 12 12:28:57 <crestfallen>	jle`, I'm using ...
Apr 12 12:29:44 <Cale>	(or even specifically for "function which happened to capture the values of variables which were in local scope when it was defined")
Apr 12 12:30:16 <crestfallen>	i.e. λ > flipExpr (Add (Add (Val 3) (Val 5)) (Val 33))
Apr 12 12:30:22 <crestfallen>	jle`, 
Apr 12 12:30:39 <jle`>	crestfallen: that in and of itself should be ok
Apr 12 12:30:49 <jle`>	for example, try doing something like `x = flipExor ....`
Apr 12 12:30:49 <EvanR>	im not sure its right to say that a higher order function returns a lambda, which is a syntax
Apr 12 12:30:51 <jle`>	and that should be fine
Apr 12 12:31:04 <jle`>	crestfallen: the problem happens when you do (show x)
Apr 12 12:31:04 <Cale>	Haskell has a bit more graph-rewriting culture behind it, and so it's a little more unusual to give functions of that sort a special distinction.
Apr 12 12:31:11 <jle`>	crestfallen: or when you do show (Val 3), even
Apr 12 12:31:39 <jle`>	crestfallen: flipExor is fine as it is.  it's just when you try to show the result that you get a problem
Apr 12 12:31:48 <jle`>	crestfallen: but this doesn't have to do with flipExor
Apr 12 12:32:01 *	robotroll (~robotroll@unaffiliated/robotroll) has joined
Apr 12 12:32:02 <jle`>	crestfallen: the same thing happens if you ghci> Val 3
Apr 12 12:32:10 <jle`>	or ghci> Add (Val 3) (Val 3)
Apr 12 12:32:15 *	sdothum (~znc@108.63.186.54) has joined
Apr 12 12:32:22 <jle`>	the issue isn't with flipExpr, but in the display of Expr's
Apr 12 12:32:29 <Cale>	Oh did he forget to add the deriving Show?
Apr 12 12:32:33 *	humanoyd has quit (Quit: WeeChat 2.1)
Apr 12 12:32:48 <jle`>	they were wondering why flipExpr wouldn't work without deriving Show
Apr 12 12:32:58 <Cale>	oh
Apr 12 12:32:58 *	MindlessDrone has quit (Ping timeout: 268 seconds)
Apr 12 12:33:01 <crestfallen>	deriving Show allows the flip func to print
Apr 12 12:33:13 <jle`>	and i was triyng to say that flipExpr isn't the problem
Apr 12 12:33:15 <Cale>	right, it allows you to print trees
Apr 12 12:33:17 <crestfallen>	but yeah its on the data constructor line
Apr 12 12:33:26 <jle`>	crestfallen: note that you don't print flipExpr
Apr 12 12:33:30 <jle`>	crestfallen: you flip the Expr that it gives
Apr 12 12:33:41 <crestfallen>	sorry?
Apr 12 12:33:41 <Cale>	It's just if the interpreter ever needs to display an Expr for you, it will need an instance of Show to do that
Apr 12 12:33:45 <jle`>	you can *use* flipExpr just fine
Apr 12 12:33:48 <CahC5ooz>	Cale: I'm not sure what you're talking about. ((+) 5) is a closure (it has 5 in its env). (+) is not. You can lift the f = ((+) 5) by rewriting all its call sites from e.g. f x to f 5 x. Obviously, "+" and "5" were used purely as an example; my question is not specific to any of this. Can we please stop arguing about what "closure" and "lambda lifting" are? Anyone interested can read the definition on the wiki.
Apr 12 12:33:55 <jle`>	crestfallen: you never print the actual function
Apr 12 12:34:02 <jle`>	you only print (flipExpr (Val 3)) etc.
Apr 12 12:34:07 <jle`>	you print the Expr that the function returns
Apr 12 12:34:07 <Cale>	CahC5ooz: ((+) 5) might be implemented by a closure, but that's up to GHC to decide.
Apr 12 12:34:20 <Cale>	CahC5ooz: It might also just be an expression graph
Apr 12 12:34:25 <Cale>	(like any other expression)
Apr 12 12:34:29 <jle`>	crestfallen: so, flipExpr will work fine with or without a Show instance
Apr 12 12:34:36 <jle`>	crestfallen: for example, try:
Apr 12 12:34:43 <[exa]>	CahC5ooz: (+) may be a closure with hidden type argument
Apr 12 12:34:51 <Cale>	Indeed, that too
Apr 12 12:34:51 <jle`>	ghci> size (flipExpr (add (Val 3) (Val 2))
Apr 12 12:34:57 *	woodson (~woodson@142.204.244.64) has joined
Apr 12 12:34:57 *	chaosmasttter has quit (Ping timeout: 240 seconds)
Apr 12 12:35:01 <jle`>	crestfallen: ^ that should run fine, and show you the result
Apr 12 12:35:04 *	robotroll has quit (Read error: Connection reset by peer)
Apr 12 12:35:13 <jle`>	crestfallen: that will work even if you have no Show instance for Expr
Apr 12 12:35:23 <jle`>	so flipExor isn't the thing that requires Show
Apr 12 12:35:25 <Cale>	(or a type class instance argument)
Apr 12 12:35:38 *	kripto (2e24273e@gateway/web/freenode/ip.46.36.39.62) has joined
Apr 12 12:35:48 <CahC5ooz>	Cale: as I've pointed out previously, my question (actually, 2 of them) isn't specific to GHC and the details of how it's implemented - it's a theoretical one. Therefore, I'm sorry, but that's not helpful at all.
Apr 12 12:35:49 *	louispan has quit (Quit: louispan)
Apr 12 12:35:56 <CahC5ooz>	[exa]: ok, good to know.
Apr 12 12:36:05 <Cale>	CahC5ooz: The thing is, it's an implementation detail whether ((+) 5) is implemented by a pair of some code and an environment mapping free variables in that code to values.
Apr 12 12:36:06 <jle`>	CahC5ooz: that's the point -- closure is implementation-specific, not theoretical
Apr 12 12:36:16 <Cale>	It's not such a pair from the programmer's perspective.
Apr 12 12:36:26 <kripto>	Hey, looking to exchange $ for a fairly easy and small program, please PM me.
Apr 12 12:36:30 *	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has joined
Apr 12 12:36:41 <crestfallen>	ok yeah without minor typo it works. Cale said trees need the Show so I guess that is a tree because expressions are nested
Apr 12 12:36:50 <jle`>	CahC5ooz: talking about closures is the implementation-specific thing. if your question is completely theoretical, closures aren't a part of the picture
Apr 12 12:37:01 <Cale>	From the programmer's perspective, once you apply (+) to 5, there's no way to separate those things again.
Apr 12 12:37:07 <davean>	CahC5ooz: The thing is you're conflating how you tihnk it works with the spec, which is very open
Apr 12 12:37:34 <[exa]>	CahC5ooz: regarding your questions, 1] has a problem of what is a "compiled primitive", by this you usually mean some highly fragile syntactic sugar; there's not much of that in Haskell and in other languages that can be solved by simply wrapping it in a nullary function
Apr 12 12:37:39 <jle`>	crestfallen: you just need Show if you want to display the result; flipExpr never displays any results to String, so it doesn't work
Apr 12 12:37:44 <jle`>	er, so it should work
Apr 12 12:37:48 <jle`>	flipExpr shouldn't require Show
Apr 12 12:37:49 *	chessandgo (~tom@173-11-63-2-Minnesota.hfc.comcastbusiness.net) has joined
Apr 12 12:38:05 *	yaxu (~alex@185.24.14.3) has joined
Apr 12 12:38:14 <chessandgo>	is hackage down or something? I'm unable to update my cabal list due to "cabal: Failed to download http://hackage.haskell.org/00-index.tar.gz : HTTP
Apr 12 12:38:18 <chessandgo>	code 503
Apr 12 12:38:20 <jle`>	chessandgo: hackage is down
Apr 12 12:38:31 <CahC5ooz>	Cale: I didn't say anything about separating (+) and 5 after applying one to another, so I'm not sure how it's related.
Apr 12 12:38:31 <jle`>	https://status.haskell.org/
Apr 12 12:38:32 <Welkin>	yeah, someone broke it
Apr 12 12:38:40 <chessandgo>	rip ;(
Apr 12 12:38:48 <Welkin>	which is embarassing
Apr 12 12:38:48 <davean>	CahC5ooz: you clearly have an assumption about how Haskell works. People are telling you "Your assumption is wrong", but you're responding "That doesn't conform to my assumption so it isn't helpful"
Apr 12 12:38:57 <Welkin>	we are better than the npm crowd
Apr 12 12:39:02 <Cale>	CahC5ooz: I'm giving that as evidence that it is not a closure from the programmer's point of view.
Apr 12 12:39:06 <davean>	CahC5ooz: Until you consider what people are saying a bit more, I don't think you'll get anywhere
Apr 12 12:39:14 <Cale>	CahC5ooz: If you had access to the actual closure, you could take them apart again.
Apr 12 12:39:15 <Welkin>	oh my god
Apr 12 12:39:22 <Welkin>	you are still arguing over the semantics of closures?
Apr 12 12:39:23 <Welkin>	what!
Apr 12 12:39:30 <EvanR>	Welkin what is this, programming language racism
Apr 12 12:39:31 <chessandgo>	leftpad ;)
Apr 12 12:39:36 <Welkin>	Cale: you have better things to do with your time
Apr 12 12:39:37 <sclv>	chessandgo: you can change your config to point to one of the mirrors as per http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Apr 12 12:39:40 <yaxu>	any word on when hackage might be back? I have a friend trying to set up a workshop in Equador, and another preparing a music performance, both trying to install tidal..
Apr 12 12:39:43 <CahC5ooz>	[exa]: "compiled primitive" is something the body of which we can't rewrite; I've cleared it up in a subsequent message.
Apr 12 12:39:43 <sclv>	(newer cabals fall back automatically)
Apr 12 12:39:48 *	theelous3 (~theelous3@unaffiliated/theelous3) has joined
Apr 12 12:39:51 *	henriksod (~Thunderbi@h-206-177.A251.priv.bahnhof.se) has joined
Apr 12 12:39:57 <jle`>	yaxu: installs should still work fine
Apr 12 12:40:09 <CahC5ooz>	davean: my question has nothing to do with how Haskell is implemented, as I've pointed previously a couple of times.
Apr 12 12:40:16 <sclv>	for cabals that aren't sufficiently new they manually need to set the mirror however
Apr 12 12:40:20 <Cale>	CahC5ooz: Also, the compiler is free to inline the 5 into the definition of (+) and compile specialised code for that function rather than a closure
Apr 12 12:40:25 <Cale>	CahC5ooz: So there's no way of knowing
Apr 12 12:40:26 <davean>	Cale: Yes, but you're just wrong
Apr 12 12:40:31 <davean>	er, CahC5ooz you're jut wrong
Apr 12 12:40:35 <Cale>	haha
Apr 12 12:40:42 <EvanR>	on the internet
Apr 12 12:40:46 <CahC5ooz>	davean: wrong about what?
Apr 12 12:40:46 *	stevenxl (uid133530@gateway/web/irccloud.com/x-fcdcrmoerlegpktl) has joined
Apr 12 12:40:46 <[exa]>	CahC5ooz: 2] that would be basically equal to inlining, not lifting
Apr 12 12:40:58 <davean>	CahC5ooz: That it doesn't have anything to do with how its implimented.
Apr 12 12:41:00 <Welkin>	CahC5ooz: if your question is not about haskell, then why are you asking it in here?
Apr 12 12:41:02 <yaxu>	it's already quite difficult to install haskell + libraries on 32 bit windows on a whole bunch of machines in a cybercafe in equador
Apr 12 12:41:14 <sclv>	yaxu: i'm sorry :-/
Apr 12 12:41:16 *	hive-mind has quit (Remote host closed the connection)
Apr 12 12:41:17 <sclv>	working on it
Apr 12 12:41:19 <Cale>	CahC5ooz: I don't even know what your original question was, but if it included the word "closure" everyone's going to think you're talking about language implementation details.
Apr 12 12:41:25 <sclv>	but there's definitely an additional step for now
Apr 12 12:41:28 <Welkin>	yaxu: install haskell platform
Apr 12 12:41:29 <[exa]>	CahC5ooz: unrewriteable things don't exist (except for scheme maybe)
Apr 12 12:41:40 <Cale>	And given that you're talking about it in #haskell, people will probably assume you're talking about language implementation details in Haskell.
Apr 12 12:41:42 *	replay (~replay@pdpc/supporter/student/replay) has joined
Apr 12 12:41:52 <sclv>	i think if you direct them to use the latest cabal (2.2) (which isn't with the platform yet) then it actually will fetch the mirror automatically via dns magic
Apr 12 12:41:56 <CahC5ooz>	Oh, lots of noise. Can you guys (except for [exa]) just stop replying to me? Honestly, this isn't helping anyone, and it's turned into pure shitposting tbh
Apr 12 12:41:57 <sclv>	even with cabal down.
Apr 12 12:41:57 <yaxu>	@sclv thanks, sorry to grump, I do appreciate everything haskell
Apr 12 12:41:58 <lambdabot>	Unknown command, try @list
Apr 12 12:42:02 <sclv>	or rather even with hackage down
Apr 12 12:42:08 <Cale>	Closures have nothing to do with anything programmer facing really -- they're just an underlying implementation detail for a bunch of related features.
Apr 12 12:42:13 <sclv>	in the meantime its just changing one line in ~/.cabal/config
Apr 12 12:42:23 <Welkin>	yaxu: https://www.haskell.org/platform/#windows
Apr 12 12:42:23 *	sclv goes back to hacking on the recovery
Apr 12 12:42:24 <Cale>	(and in any given application of them, there are other approaches which might be taken in general)
Apr 12 12:42:28 <jle`>	yaxu: the main thing affected is the online docs, but you can use stackage docs for now
Apr 12 12:42:37 <EvanR>	the question is, "is the reason lambda lifting cant be done to \x -> map (+x) [...]  because map is a compiled primitive"
Apr 12 12:42:38 *	hive-mind (pranq@rrcs-67-53-148-69.west.biz.rr.com) has joined
Apr 12 12:42:39 <jle`>	yaxu: and for your original question, it will most likely be down for the rest of the day
Apr 12 12:42:46 <Welkin>	once you install haskell platform. you can upgrade cabal (if you need to)
Apr 12 12:42:54 <gentauro>	Is Haskell.org down? https://hackage.haskell.org/package/base/docs/Data-Ratio.html
Apr 12 12:43:00 <jle`>	gentauro: no, just hackage
Apr 12 12:43:03 <Cale>	gentauro: Hackage in particular is down
Apr 12 12:43:09 <jle`>	can we update the /topic, maybe, heh
Apr 12 12:43:09 <Cale>	It's really really annoying
Apr 12 12:43:09 *	nesqi has quit (Ping timeout: 256 seconds)
Apr 12 12:43:09 <gentauro>	OK
Apr 12 12:43:09 <crestfallen>	Weird, I get the error without it. but thanks jle` Cale alot
Apr 12 12:43:15 <CahC5ooz>	[exa]: yes, I believe it's much closer to inlining. So, my question was is this always possible (I guess yes, for the reasons stated in the first message) and why people don't seem to use it much?
Apr 12 12:43:19 <jle`>	it's the second person to ask in the past minute
Apr 12 12:43:26 <jle`>	crestfallen: the error isn't from flipExor
Apr 12 12:43:30 <gentauro>	jle`: it has been down the hole day
Apr 12 12:43:31 <jle`>	crestfallen: the error is from when you Show the answer
Apr 12 12:43:34 <gentauro>	I thought i was my connection
Apr 12 12:43:35 <jle`>	gentauro: yes
Apr 12 12:43:36 *	BlueRavenGT (~BlueRaven@8-22-13-238.utopiafiber.net) has joined
Apr 12 12:43:42 <jle`>	it has been down for about 12 hours now
Apr 12 12:43:44 *	ackpacket has quit (Ping timeout: 260 seconds)
Apr 12 12:43:56 <jle`>	current estimates say it will be down for the rest of the day
Apr 12 12:44:03 <gentauro>	Roger that
Apr 12 12:44:05 *	johnw has quit (Ping timeout: 255 seconds)
Apr 12 12:44:06 <crestfallen>	jle`, is that because a tree structure requires that ?
Apr 12 12:44:06 <EvanR>	luckily i purchased the hackage DVD and i am not affected
Apr 12 12:44:10 <jle`>	crestfallen: no
Apr 12 12:44:23 <jle`>	crestfallen: it is because showing Expr requires it
Apr 12 12:44:25 <yaxu>	@Welkin yes that needs 32 bit windows version which isn't there, tried with an old version but somehow couldn't get the c compiler to work - that step where you have to edit a difficult to locate file for an unclear reason wasn't working
Apr 12 12:44:25 <lambdabot>	Unknown command, try @list
Apr 12 12:44:29 <jle`>	that's how showing works in Haskell
Apr 12 12:44:34 <[exa]>	CahC5ooz: inlining usually makes your code literally explode in size, which is not very popular if a] evaluating code takes run-time b] optimizing it back is NPC
Apr 12 12:44:41 <chessandgo>	sclv: this link, http://mail.haskell.org/pipermail/haskell/2018-January/025325.html , seems to be talking about a different issue, and doesnt list mirrors. Unless im reading it wrong
Apr 12 12:44:43 <jle`>	if you want to 'print out' or display a value, it needs to have a Show instance
Apr 12 12:44:44 <yaxu>	anyway we'll get through it..
Apr 12 12:44:54 <Cale>	CahC5ooz: It's usually weird to lambda lift out free-variables which are still in scope at the top level.
Apr 12 12:45:00 <Cale>	CahC5ooz: You can certainly do it...
Apr 12 12:45:13 <sclv>	oh whoops
Apr 12 12:45:30 <crestfallen>	so the value returned is more complex than an Int, say, and ghc 
Apr 12 12:45:34 <sclv>	https://mail.haskell.org/pipermail/haskell-cafe/2018-April/128913.html
Apr 12 12:45:38 <crestfallen>	requires it
Apr 12 12:45:38 <Cale>	But there's not much advantage to turning that into  \map -> \(+) -> \x -> map (+x) [...]  or whatever
Apr 12 12:45:44 <jle`>	crestfallen: complexity doesn't matter
Apr 12 12:45:48 <sclv>	an admin should update the topic i guess
Apr 12 12:45:51 <jle`>	crestfallen: even Int requires a Show instance to print :)
Apr 12 12:45:56 <Cale>	when you're just going to immediately apply it again
Apr 12 12:46:04 <jle`>	crestfallen: every value, no matte rhow simple, requires an instance of Show
Apr 12 12:46:06 <EvanR>	so they were really asking about inlining...
Apr 12 12:46:08 <jle`>	if you want to print it
Apr 12 12:46:28 <EvanR>	explaining the relevant of map being primitive or not
Apr 12 12:46:33 <crestfallen>	sorry, than why is it explicitly required in this case?
Apr 12 12:46:39 <crestfallen>	then*
Apr 12 12:46:44 <jle`>	crestfallen: it is not explicitly required in this case
Apr 12 12:46:48 *	zdw (~zdw@wsip-24-248-177-158.ph.ph.cox.net) has joined
Apr 12 12:46:49 <jle`>	it is only required if you want to show the result
Apr 12 12:46:57 <Cale>	CahC5ooz: When you want to lift something outward, you only care about parameterising over the things which will no longer be in scope.
Apr 12 12:47:01 <jle`>	crestfallen: the file you have itself never shows the result
Apr 12 12:47:07 <Welkin>	yaxu: https://www.haskell.org/platform/prior.html
Apr 12 12:47:08 <jle`>	so the file and source code do not require deriving Show
Apr 12 12:47:10 *	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined
Apr 12 12:47:10 <[exa]>	CahC5ooz: btw there's a nice reading on inlining/dropping and related considerations/efficiency from O.Danvy (kindof outdated now, but still illustrative)
Apr 12 12:47:15 <Welkin>	yaxu: 32-bit windows releases are all there :)
Apr 12 12:47:22 <jle`>	crestfallen: however, if you want to show *any* Expr, then you need a Show instance
Apr 12 12:47:46 <jle`>	crestfallen: so, nothing in the actual file you have requires Show
Apr 12 12:47:48 *	refold (~refold@88.98.210.31) has joined
Apr 12 12:47:59 *	Guest6344 (~BlueRaven@8-22-13-238.utopiafiber.net) has joined
Apr 12 12:48:00 <jle`>	crestfallen: however, if you load up ghci and want to print an Expr in your repl, it'll require Show
Apr 12 12:48:11 <jle`>	whether or not the expr you made was defined using flipExpr
Apr 12 12:48:23 *	MP2E (~MP2E@ip68-224-146-82.lv.lv.cox.net) has joined
Apr 12 12:48:33 *	BlueRavenGT has quit (Read error: Connection reset by peer)
Apr 12 12:48:42 <jle`>	for example, this causes the same error:
Apr 12 12:48:47 <jle`>	ghci> Add (Val 3) (Val 5)
Apr 12 12:48:48 *	ndrei has quit (Remote host closed the connection)
Apr 12 12:48:57 *	pagnol has quit (Ping timeout: 276 seconds)
Apr 12 12:49:02 <jle`>	if you just type in a value in ghci, it'll attempt to Show the result
Apr 12 12:49:03 <zdw>	I'm having trouble getting to hackage.haskell.org - I get a 503 error.
Apr 12 12:49:08 <jle`>	zdw: yes, hackage is down
Apr 12 12:49:39 <gentauro>	jle`: they should probably change the topic of the channel ;)
Apr 12 12:49:42 <zdw>	Ah, thanks, glad it's not only me.  Any reason why?
Apr 12 12:49:49 <gentauro>	cos we all come and ask the same :)
Apr 12 12:49:52 <jle`>	there was an incident
Apr 12 12:50:02 <crestfallen>	ok I'll chew on that many thanks. also .. why did the book choose to name the function folde. does that recursion act as a fold?
Apr 12 12:50:14 <Cale>	Effectively yeah.
Apr 12 12:50:15 <CahC5ooz>	[exa]: yes, the explosion is a thing (iirc lambda to SK is quadratic in number of terms); on the other hand, I was thinking about compiling to a stack-based IR anyway, and I believe you can optimize away many of the overhead with pretty simple rules. So, other than that, do you think there are other (bad) things to be considered? Also, re Danvy - are you referring to "Defunctionalization at Work" or some other paper?
Apr 12 12:50:22 <Cale>	I would have called it foldExpr
Apr 12 12:50:22 <jle`>	crestfallen: probably because it's 'collapsing' the Expr down into a single value
Apr 12 12:50:27 *	s3mi0 (~s3mi0@5766.s.hostens.cloud) has joined
Apr 12 12:50:38 <Cale>	You can look at foldr as an instance of the same thing
Apr 12 12:51:02 <crestfallen>	got it thanks kindly jle` Cale
Apr 12 12:51:02 <Cale>	foldr cons nil replaces each (:) in the construction of a list with cons, and the [] at the end (if any) with nil
Apr 12 12:51:16 <jle`>	no problem :)
Apr 12 12:51:27 <jle`>	crestfallen: one thing you might consider is that there is no native reflection in haskell
Apr 12 12:51:36 <crestfallen>	pardon?
Apr 12 12:51:38 <jle`>	once things are compiled, there is no way to inspect the data type itself
Apr 12 12:51:45 <jle`>	for things like the name of its constructors
Apr 12 12:51:49 <jle`>	what its type is
Apr 12 12:51:51 <jle`>	etc.
Apr 12 12:51:51 <dumptruckman>	how exactly do i search for packages on hackage.fpcomplete.com?
Apr 12 12:52:01 <jle`>	and for ghc, at runtime, it's just a blob of bytes
Apr 12 12:52:06 <Cale>	(except for the at least two and perhaps more ways that people have cooked up and GHC has support for)
Apr 12 12:52:10 <Cale>	lol
Apr 12 12:52:12 <chessandgo>	sclv: that seemed to work, thanks!
Apr 12 12:52:17 *	trig-ger_ is now known as trig-ger
Apr 12 12:52:19 *	mizu_no_oto_work (~textual@c-24-60-15-130.hsd1.ma.comcast.net) has joined
Apr 12 12:52:32 <jle`>	crestfallen: so if you just have a "Expr" value, it's just a blob of bytes...how would ghc know what to print out?
Apr 12 12:52:37 <jle`>	that's what the Show typeclass is for
Apr 12 12:52:47 *	son0p_ (~ff@181.137.68.52) has joined
Apr 12 12:52:55 <jle`>	it augments the type with 'showing' abilities
Apr 12 12:53:13 <EvanR>	it might not even be a blog of bytes
Apr 12 12:53:14 <jle`>	without this ability, the all you have is a blob of amorphous bytes
Apr 12 12:53:17 <EvanR>	()
Apr 12 12:53:20 <EvanR>	Void
Apr 12 12:53:27 <jle`>	indeed :)
Apr 12 12:53:29 *	lambdaman (~lambdaman@216.81.48.202) has joined
Apr 12 12:53:34 <crestfallen>	right, because Val is just verbage and not numeric or a string ?
Apr 12 12:53:35 <EvanR>	RealWorld#
Apr 12 12:53:37 *	amelliaa has quit (Quit: -)
Apr 12 12:53:41 <jle`>	crestfallen: even numeric and string
Apr 12 12:53:46 <jle`>	need Show instances
Apr 12 12:53:55 *	chaosmasttter (~chaosmast@p54B47E81.dip0.t-ipconnect.de) has joined
Apr 12 12:53:57 <crestfallen>	but they're built in right?
Apr 12 12:53:58 <[exa]>	CahC5ooz: defunctionalization will be great for you if youre targeting stack; but there's also "lambda dropping" paper
Apr 12 12:54:05 *	Guest6344 has quit (Quit: Leaving)
Apr 12 12:54:06 <[exa]>	hope that's from danvy
Apr 12 12:54:19 <jle`>	crestfallen: their Show instances aren't necessarily built into the compiler, they're provided as a part of the base libraries
Apr 12 12:54:21 <dumptruckman>	does someone know how to view hackage packages on a mirror?
Apr 12 12:54:23 <jle`>	written within the language
Apr 12 12:54:31 <jle`>	dumptruckman: you can use a hackage doc mirror like stackage
Apr 12 12:54:42 *	oish (~charlie@d8192.artnet.gda.pl) has joined
Apr 12 12:54:49 <crestfallen>	got it. thanks kindly. I need to split . pax
Apr 12 12:54:58 *	s3mi0 has quit (Ping timeout: 264 seconds)
Apr 12 12:54:58 <Cale>	crestfallen: They're pretty close to built-in, though actually implemented in terms of some lower-level things available in GHC.
Apr 12 12:54:59 <jle`>	crestfallen: so it's not quite "built in" to the language, it's just a normal library module that provides it
Apr 12 12:55:17 <EvanR>	the Show class is assumed to exist in e.g. ghci
Apr 12 12:56:25 <c_wraith>	sure, but ghci isn't part of the language spec.
Apr 12 12:56:33 <[exa]>	CahC5ooz: danvy, schulz: lambda dropping: .... TCS, (2000)
Apr 12 12:56:43 <EvanR>	the spec assumes it exists :)
Apr 12 12:56:59 <EvanR>	i was ignoring the spec though
Apr 12 12:57:00 <jle`>	Show and its instances might be magically built into the compiler, but that within the language, they are indistinguishable from normal user-defined typeclasses and instances
Apr 12 12:57:14 <crestfallen>	thanks ALL. gotta go
Apr 12 12:57:17 Python interface unloaded
Apr 12 12:57:17 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Apr 12 12:57:17 2018

**** BEGIN LOGGING AT Thu Apr 12 19:07:36 2018

Apr 12 19:07:36 *	Now talking on #haskell
Apr 12 19:07:36 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Apr 12 19:07:36 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
Apr 12 19:07:37 *	Channel #haskell url: http://www.haskell.org/
Apr 12 19:08:47 *	tathougies (~tathougie@162-234-252-211.lightspeed.sntcca.sbcglobal.net) has joined
Apr 12 19:09:50 *	acarrico has quit (Ping timeout: 276 seconds)
Apr 12 19:10:03 <Iceland_jack>	jle`: Wow glad to hear
Apr 12 19:10:42 <crestfallen>	hi what would be examples of input where we have  (==) _ _ as on lines 7, 12 ?   https://ptpb.pw/Xry2
Apr 12 19:10:57 <Iceland_jack>	I think it will make a great combo with -XDependentHaskell which will make it easy to parameterize `deriving' with terms, but we can already model it somewhat effortlessly
Apr 12 19:11:27 <Iceland_jack>	crestfallen: Just 1 == Nothing
Apr 12 19:11:37 <Iceland_jack>	crestfallen: [1,2,3] == []
Apr 12 19:11:52 *	LeanderK (~textual@ppp-93-104-84-120.dynamic.mnet-online.de) has joined
Apr 12 19:11:54 *	sigmundv (~sigmundv@92.251.190.54.threembb.ie) has joined
Apr 12 19:11:58 *	oisdk (~textual@2601:184:4080:3151:b91b:c458:c7de:cec3) has joined
Apr 12 19:12:23 *	juhp (~juhp@redhat/juhp) has joined
Apr 12 19:12:53 *	simbon has quit (Ping timeout: 255 seconds)
Apr 12 19:12:58 <crestfallen>	Iceland_jack crucify_me here. sorry I keep changing my nick. thanks for previous/current help! so thats ....
Apr 12 19:13:15 <Iceland_jack>	jle`: Serious question, should I add -XGeneralizedGeneralizedNewtypeDeriving to the proposal to mean the same
Apr 12 19:13:33 <crestfallen>	so those inputs would match the wildcard cases
Apr 12 19:13:33 *	rblaze has quit (Quit: Leaving.)
Apr 12 19:13:33 *	sigmundv has quit (Remote host closed the connection)
Apr 12 19:14:49 <Iceland_jack>	Yes they cover different constructors, eg 'Just' on the left and 'Nothing' on the right
Apr 12 19:15:01 *	rblaze (~Adium@199.201.65.2) has joined
Apr 12 19:15:22 <Iceland_jack>	They are a shorthand for
Apr 12 19:15:22 <Iceland_jack>	    (==) Nothing  (Just _) = False
Apr 12 19:15:22 <Iceland_jack>	    (==) (Just _) Nothing  = False
Apr 12 19:15:42 <crestfallen>	ok so if there is a combinaiton of the previous two pattern matches in either instance declaration, that would return False and not an error
Apr 12 19:15:58 <lyxia>	I'm looking forward to using DerivingVia to derive To/FromJSON with type-level options.
Apr 12 19:16:14 *	banc (~master@82.145.37.203) has joined
Apr 12 19:16:23 <Iceland_jack>	lyxia: That's one exciting use is keeping different instances in sync wrt a particular configuration
Apr 12 19:16:48 *	sigmundv (~sigmundv@92.251.190.54.threembb.ie) has joined
Apr 12 19:17:10 *	nakal (~nakal@port-92-196-68-240.dynamic.qsc.de) has joined
Apr 12 19:17:42 *	nuncanada has quit (Quit: Leaving)
Apr 12 19:17:43 *	silver has quit (Read error: Connection reset by peer)
Apr 12 19:18:44 *	fandi has quit (Remote host closed the connection)
Apr 12 19:18:44 *	fandi_ has quit (Remote host closed the connection)
Apr 12 19:19:03 *	nakal_ has quit (Ping timeout: 256 seconds)
Apr 12 19:19:42 *	xcmw has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Apr 12 19:19:53 *	tathougies has quit (Quit: Leaving.)
Apr 12 19:20:16 *	jackcrfs (~jackcrfs@011.139.48.116.static.netvigator.com) has joined
Apr 12 19:21:46 <crestfallen>	Iceland_jack, sorry, so (==) [2,3] [] would match the wildcard case, not the '(==) (x:xs) (y:ys)' right?
Apr 12 19:21:57 *	sigmundv has quit (Ping timeout: 240 seconds)
Apr 12 19:22:34 *	twandy has quit (Quit: twandy)
Apr 12 19:22:50 *	twandy (~Thunderbi@cas-fw-sta.inet.casair.net) has joined
Apr 12 19:23:14 *	darjeeling_ (~darjeelin@205.175.98.207) has joined
Apr 12 19:24:07 <ddellacosta>	crestfallen: you can consider `(==) (x:xs) (y:ys)` as the general case vs. base case in the recursive function--if you hit the base case (`(==) [] []`) then you get equality--otherwise, you are either still recursing (`(==) (x:xs) (y:ys)`) or you've "fallen through to inequality" (`(==) _ _`)
Apr 12 19:24:35 *	simbon (~simbon@39.179.222.91) has joined
Apr 12 19:25:10 <crestfallen>	ddellacosta, excellent that is well said thanks
Apr 12 19:25:23 <ddellacosta>	crestfallen: hope that helped!
Apr 12 19:25:56 *	LeanderK has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Apr 12 19:26:00 <crestfallen>	it DOES, some inputs return errors though and not False
Apr 12 19:26:17 <ddellacosta>	oh, I may not have thought it through fully then.
Apr 12 19:28:30 <ddellacosta>	crestfallen: can you give me an example of where it throughs an error?
Apr 12 19:28:37 <ddellacosta>	*throw
Apr 12 19:29:02 *	urodna_ has quit (Ping timeout: 260 seconds)
Apr 12 19:29:25 *	DTZUZU (~DTZUZU@S0106bcd16584b0aa.vs.shawcable.net) has joined
Apr 12 19:29:35 *	Stanley00 has quit (Ping timeout: 260 seconds)
Apr 12 19:32:42 <crestfallen>	one sec I might be confused ddellacosta .. thanks hold on
Apr 12 19:32:45 *	conal_ (~conal@38.132.115.208) has joined
Apr 12 19:32:47 *	Tops21 has quit (Read error: Connection reset by peer)
Apr 12 19:32:53 <ddellacosta>	crestfallen: sure thing
Apr 12 19:34:02 *	Azel (6e4dc0e6@gateway/web/freenode/ip.110.77.192.230) has joined
Apr 12 19:34:09 <crestfallen>	eg (==) ["T"] [2] .. I thought the idea in the use of Maybe was to not throw errors
Apr 12 19:34:11 *	plugin (~plugin@2604:2000:8101:3500:a1f3:4fcd:17ea:dcdf) has joined
Apr 12 19:34:57 *	SenasOzys has quit (Ping timeout: 265 seconds)
Apr 12 19:34:57 <ddellacosta>	crestfallen: you aren't going to be able to compare those two, they are different types. And Maybe is different here--in the case you just showed me those are two lists
Apr 12 19:34:59 *	dsantiago has quit (Ping timeout: 260 seconds)
Apr 12 19:35:15 *	tathougies (~tathougie@162-234-252-211.lightspeed.sntcca.sbcglobal.net) has joined
Apr 12 19:35:31 <crestfallen>	yeah sorry its not the same instance declaration. 
Apr 12 19:36:21 *	theDon has quit (Ping timeout: 264 seconds)
Apr 12 19:36:25 <ddellacosta>	crestfallen: it seems like there's still something unclear to you--can you tell me more about what you're finding confusing? I bet I can shed some light on it, or help you work through it yourself
Apr 12 19:36:51 *	lambdaman (~lambdaman@216.81.48.202) has joined
Apr 12 19:37:12 <crestfallen>	very kind, one moment pls
Apr 12 19:37:53 *	theDon (~td@mue-88-130-49-207.dsl.tropolys.de) has joined
Apr 12 19:37:56 <ddellacosta>	take your time
Apr 12 19:38:59 <plugin>	Could someone glance at this abridged type family / existential definition I have and tell me if the last signiture should typecheck?  I'm trying to untangle a type error and I believe it should but . . .
Apr 12 19:39:02 <plugin>	https://gist.github.com/o1lo01ol1o/2f6695c0bc6e092d84293fc82094bd4f
Apr 12 19:40:42 *	mizu_no_oto_work (~textual@2601:196:4a01:e520:c011:46a0:29ff:15ac) has joined
Apr 12 19:40:43 *	plutoniix (~q@node-5r2.pool-1-10.dynamic.totbb.net) has joined
Apr 12 19:41:12 *	plutoniix has quit (Max SendQ exceeded)
Apr 12 19:41:29 *	Wuzzy has quit (Remote host closed the connection)
Apr 12 19:41:42 *	plutoniix (~q@node-5r2.pool-1-10.dynamic.totbb.net) has joined
Apr 12 19:42:09 *	dsantiago (~dsantiago@cpe-104-175-193-69.socal.res.rr.com) has joined
Apr 12 19:42:19 *	sword865 (uid208942@gateway/web/irccloud.com/x-zabfrpogruzcasum) has joined
Apr 12 19:42:48 <crestfallen>	ddellacosta, so I guess its similar to using ' otherwise False'
Apr 12 19:43:25 *	plutoniix has quit (Max SendQ exceeded)
Apr 12 19:43:36 <ddellacosta>	crestfallen: yep, in the sense of "match any other case"
Apr 12 19:43:52 *	plutoniix (~q@node-5r2.pool-1-10.dynamic.totbb.net) has joined
Apr 12 19:43:53 <lyxia>	plugin: there's way too little context
Apr 12 19:44:19 <lyxia>	plugin: what's T, what extensions do you have enabled, what is the error message
Apr 12 19:45:25 *	plutoniix has quit (Max SendQ exceeded)
Apr 12 19:45:52 *	plutoniix (~q@node-5r2.pool-1-10.dynamic.totbb.net) has joined
Apr 12 19:46:36 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Apr 12 19:46:57 *	acarrico (~acarrico@dhcp-68-142-35-239.greenmountainaccess.net) has joined
Apr 12 19:47:09 <plugin>	lyxia:  The actual code is a bit more complicated but it boils down to needing to pack a [Nat] parameter and then be able to unpack it with enough information that the type family Combined can do its thing.  The error involves an ambiguous `Combined j0 k` popping up.
Apr 12 19:47:11 <crestfallen>	ddellacosta, thanks kindly I'm satisfied. this is review but the wildcard will always perplex me
Apr 12 19:47:48 <ddellacosta>	crestfallen: okay! Hope that helped. Feel free to ping me if I'm around and you have more questions
Apr 12 19:48:38 <plugin>	lyxia:  added the extensions
Apr 12 19:48:43 <crestfallen>	excellent thanks . I was on this channel as crucify_me for a while. Need to brush up..
Apr 12 19:50:03 *	mizu_no_oto_work has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Apr 12 19:50:09 *	lagothri1 has quit (Ping timeout: 264 seconds)
Apr 12 19:50:59 *	hph^ (~hph@ip72-195-187-57.mc.at.cox.net) has joined
Apr 12 19:51:10 >Iceland_jack<	Hey would you mind following me on twitter.? I have one follower I think. not sure how to entreat people to follow me! @lambda_xy
Apr 12 19:53:21 *	conal_ has quit (Quit: Computer has gone to sleep.)
Apr 12 19:55:15 *	oisdk has quit (Quit: Textual IRC Client: www.textualapp.com)
Apr 12 19:56:35 *	danso has quit (Read error: Connection reset by peer)
Apr 12 19:56:39 *	cnm (4e8c3f42@gateway/web/freenode/ip.78.140.63.66) has joined
Apr 12 19:56:43 Python interface unloaded
**** ENDING LOGGING AT Thu Apr 12 19:56:43 2018

**** BEGIN LOGGING AT Sun Apr 22 13:30:41 2018

Apr 22 13:30:41 *	Now talking on #haskell
Apr 22 13:30:42 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Apr 22 13:30:42 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
Apr 22 13:30:42 *	Channel #haskell url: http://www.haskell.org/
Apr 22 13:30:52 *	ZeuPiark has quit (Remote host closed the connection)
Apr 22 13:31:05 <EvanR>	what was your issue with that IsString Doc instance
Apr 22 13:31:08 <edwardk>	given the number of users on the other side i'm not in a hurry to say 'failed experiment' or anything, but its good to know the level of pain.
Apr 22 13:31:21 *	caryoscelus has quit (Remote host closed the connection)
Apr 22 13:31:54 <edwardk>	EvanR: instance IsString (MyDataType a) -- oh crap overlap
Apr 22 13:31:54 *	caryoscelus (~caryoscel@176.195.94.39) has joined
Apr 22 13:31:56 <EvanR>	(i've actually noticed very few netsplits in recent history)
Apr 22 13:32:10 *	Dynasty3 (~Dynasty4@96-81-76-110-static.hfc.comcastbusiness.net) has joined
Apr 22 13:32:24 <srid>	Does anyone why automatic deriving of `Read` on GADT doesn't work here?  https://www.irccloud.com/pastebin/FuBpow2O/a.hs
Apr 22 13:32:49 <srid>	(full ghc error) https://www.irccloud.com/pastebin/rSUerSHK/
Apr 22 13:32:55 *	Insanity1 (~dylan@ip-83-134-209-112.dsl.scarlet.be) has joined
Apr 22 13:32:56 <EvanR>	how is instance IsString Doc and instance IsString (MyDataType a) overlapping
Apr 22 13:33:05 <edwardk>	IsString (m Doc)
Apr 22 13:33:14 <edwardk>	m = MyDataType, a = Doc
Apr 22 13:33:46 *	Emi2000RND has quit (Read error: Connection reset by peer)
Apr 22 13:33:46 <EvanR>	oh i see it at the bottom now
Apr 22 13:34:03 <EvanR>	yeah that makes no sense
Apr 22 13:34:22 *	johnw has quit (Ping timeout: 245 seconds)
Apr 22 13:35:13 *	Dynasty2 has quit (Ping timeout: 248 seconds)
Apr 22 13:35:19 <lyxia>	srid: how should it instantiate a
Apr 22 13:35:21 <edwardk>	[a] -- has an IsString instance with a context a ~ Char.. Given a [Doc]  in scope, both of those instances overlap and want to do different things. the IsString String instance wants to force Doc ~ Char into scope and would fail but only after backtracking, while the m Doc one wants to make a singleton list...
Apr 22 13:35:42 *	trcc has quit ()
Apr 22 13:35:59 <EvanR>	we need a DoWhatIMean extension
Apr 22 13:36:16 <EvanR>	and program everything with string literals!
Apr 22 13:36:16 <srid>	lyxia:  `read :: a`? (`a` has a Show and Read instance, per line 11,12)
Apr 22 13:36:24 *	thblt has quit (Ping timeout: 260 seconds)
Apr 22 13:36:27 <srid>	and line 9
Apr 22 13:36:46 <nshepperd>	srid: what should 'read "Stuff []" :: Stuff' contain
Apr 22 13:37:06 <nshepperd>	where are you going to get a Show and Read dictionary from, and for what type
Apr 22 13:37:29 *	trcc (~trcc@85.191.91.16) has joined
Apr 22 13:38:04 *	coot has quit (Quit: coot)
Apr 22 13:38:19 <srid>	`a` will be arbitrary, as long as they have a Read/Show instance you can construct `Foo Whatever` and put it in Stuff
Apr 22 13:38:25 *	BartAdv (uid90451@gateway/web/irccloud.com/x-vlysuyfknkhblgwd) has joined
Apr 22 13:38:30 <nshepperd>	it can't be arbitrary
Apr 22 13:38:34 *	Geraldus has quit (Ping timeout: 260 seconds)
Apr 22 13:38:38 <srid>	That's what `forall.` achieves, no?
Apr 22 13:38:46 <DigitalKiwi>	edwardk I wouldn't even know there was a problem with it if you weren't talking about it since I disabled join/parts which is what most people do if they are bothered by that kind of thin ;)
Apr 22 13:38:56 <crestfallen>	EvanR et al if I could ask some questions based on chat the other day regarding the laziness of (:) and it being the node of an AST  -- using fishy*thefish example ... 
Apr 22 13:38:57 *	khisanth__ has quit (Ping timeout: 240 seconds)
Apr 22 13:39:26 <srid>	Essentially I'm writing a todo list, where individual items can be values of different types (customizable in future ,via plugins)
Apr 22 13:39:41 <nshepperd>	srid: case matching on Stuff grants the ability to read/show a type
Apr 22 13:39:49 <srid>	A GADT would be suitable here, as I can do `MkItem JournalType` and then later `MkItem FoodLogType`
Apr 22 13:39:56 <crestfallen>	@let myPred = not . myPred
Apr 22 13:39:58 <lambdabot>	 Defined.
Apr 22 13:40:08 <srid>	but I want to keep the x in `MkItem x` as a discrete type to do stuff
Apr 22 13:40:09 <nshepperd>	where does that come from, in 'case read "Stuff []" of { Stuff _ -> ... }'
Apr 22 13:40:10 <lyxia>	srid: If you read "Stuff [MkFoo 3]", should it be an Int, Integer, Word, Natural, or something else?
Apr 22 13:40:23 <edwardk>	EvanR: i'm pretty sure mightybyte wrote an acme-dwim package with a DoWhatIMean typeclass. i just don't think he ever shipped it
Apr 22 13:40:26 <crestfallen>	> head (0 : filter myPred [1..]
Apr 22 13:40:29 <lambdabot>	 <hint>:1:30: error:
Apr 22 13:40:29 <lambdabot>	     parse error (possibly incorrect indentation or mismatched brackets)
Apr 22 13:40:35 *	Garmy has quit (Quit: Bye!)
Apr 22 13:40:35 <crestfallen>	> head (0 : filter myPred [1..])
Apr 22 13:40:38 <lambdabot>	 0
Apr 22 13:40:40 *	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined
Apr 22 13:40:43 <trcc>	Hi everyone. I have an issue with Haskell not terminating a process when using terminateProcess. I do not get any errors. http://lpaste.net/4827089657797804032
Apr 22 13:41:03 *	oisdk (~textual@c-174-63-80-5.hsd1.ma.comcast.net) has joined
Apr 22 13:41:04 <EvanR>	crestfallen: whats the question
Apr 22 13:41:10 <crestfallen>	one sec
Apr 22 13:41:53 <srid>	nshepperd: lyxia: Ya, I see what you mean. In my application, `x` will be a set of known types. "Stuff [MkFoo JournalType, MkFoo FoodLogType]" etc.
Apr 22 13:41:56 <crestfallen>	> myPred 1
Apr 22 13:42:03 <lambdabot>	 mueval-core: Time limit exceeded
Apr 22 13:42:03 <lambdabot>	 mueval: ExitFailure 1
Apr 22 13:42:13 *	oisdk_ has quit (Ping timeout: 256 seconds)
Apr 22 13:42:27 <EvanR>	:t myPred
Apr 22 13:42:29 <lambdabot>	a -> Bool
Apr 22 13:42:39 *	xpycm has quit (Quit: ChatZilla 0.9.93 [Firefox 52.7.4/20180416135225])
Apr 22 13:42:55 <EvanR>	ah predicate
Apr 22 13:43:13 <srid>	nshepperd: lyxia For some background context, I had been using JSON to encode/decode values; but that fails with GADTs (there is no automatic aeson deriving for GADTs), so I figured I just use show/read instead of json ...
Apr 22 13:43:17 <crestfallen>	first I don't understand why s/he used @let myPred = not . myPred
Apr 22 13:43:23 <srid>	It works mostly, but breaks down at `read`
Apr 22 13:43:30 <EvanR>	crestfallen: its a bool test that freezes up
Apr 22 13:43:41 <EvanR>	because its badly recursive
Apr 22 13:43:58 <srid>	Also, `Stuff` doesn't have a type variable, as it is a stuff is _disparate_ types.
Apr 22 13:44:05 <srid>	s/stuff is/stuff of/
Apr 22 13:44:43 *	Dynasty3 is now known as Dynasty
Apr 22 13:44:58 <EvanR>	they used myPred to demonstrating filtering by a broken function, and how it didnt cause any problems in the end due to laziness
Apr 22 13:45:47 <lyxia>	srid: use a sum type if you know what they are
Apr 22 13:45:50 <crestfallen>	thanks Evans so you were talking about (:) as a node in the AST ...
Apr 22 13:45:55 <crestfallen>	EvanR
Apr 22 13:46:14 *	zv has quit (Ping timeout: 276 seconds)
Apr 22 13:46:15 <srid>	lyxia: That's what I'm using already, but I want to be able to pass around the individual types to functions. sum type constructors won't fit the bill
Apr 22 13:46:20 *	emilypi has quit (Ping timeout: 276 seconds)
Apr 22 13:46:27 <EvanR>	_ : _ yes
Apr 22 13:46:41 <srid>	eg: `rendeUI :: IsTask x => x -> m ()`
Apr 22 13:46:52 *	ma27 has quit (Ping timeout: 256 seconds)
Apr 22 13:46:54 <crestfallen>	where we had x : filter (/= x) (rmdups xs)   ...
Apr 22 13:47:15 <crestfallen>	you said (:) was in the highest spot
Apr 22 13:47:24 <crestfallen>	so on the rhs ..
Apr 22 13:47:40 <crestfallen>	what is the node on the rhs ? in the filter expression?
Apr 22 13:47:42 <lemmih>	trcc: Did you read the documentation for 'terminateProcess'?
Apr 22 13:47:58 *	emilypi (~emilypi@pool-100-33-104-88.nycmny.fios.verizon.net) has joined
Apr 22 13:47:58 <trcc>	Yes. I think it has to do with my if inside launch maestro
Apr 22 13:48:03 <trcc>	lemmih
Apr 22 13:48:19 <EvanR>	(filter (/= x)) (rmdups xs)
Apr 22 13:48:25 *	Dynasty has quit (Quit: Leaving)
Apr 22 13:48:28 *	_ashbreeze_ has quit (Remote host closed the connection)
Apr 22 13:48:31 <EvanR>	the space in the middle there is a node
Apr 22 13:48:59 <trcc>	lemmih: hmm no.. Still cannot get it to work. Works if I just keep it all in main without invoking other functions, so must be something related to that
Apr 22 13:49:59 <EvanR>	f x y z = ((f x) y) z
Apr 22 13:50:09 *	posytron (~posytron@200.49.37.58) has joined
Apr 22 13:50:10 <nshepperd>	srid: well the short answer is that sort of Read instance for an existential is impossible
Apr 22 13:50:24 <lemmih>	trcc: If you keep what in main?
Apr 22 13:50:27 <crestfallen>	the space ok that's interesting
Apr 22 13:50:45 *	_ashbreeze_ (~mark@c-73-82-100-21.hsd1.ga.comcast.net) has joined
Apr 22 13:50:54 <srid>	hmm, alright. thanks nshepperd and lyxia.
Apr 22 13:51:00 *	unyu (~pyon@unaffiliated/pyon) has joined
Apr 22 13:51:02 <lyxia>	srid: what's wrong with rendeUI :: SumType -> m ()
Apr 22 13:51:07 <srid>	it is sad to not be able to use GADTs because no aeson deriving
Apr 22 13:51:11 <nshepperd>	you're asking the 'read' function to conjure up from nowhere an instance for both Read and Show for an unknown type
Apr 22 13:51:14 <trcc>	lemmih just do:  hdl <- fmap Just $ spawnCommand "Java -jar resources/maestro.jar >> MaestroProcessOutput" instead of hdl <- launchMaestro
Apr 22 13:51:22 <EvanR>	you could think of fun application as a left assoc operator... f x y z = f @@ x @@ y @@ z
Apr 22 13:51:25 *	MP2E (~MP2E@ip68-224-146-82.lv.lv.cox.net) has joined
Apr 22 13:51:29 <EvanR>	but we use blank space instead
Apr 22 13:51:47 <srid>	lyxia: it prevents a plugin like model. now you have the UI for all plugins in a case block of a single monolithic function
Apr 22 13:51:49 <Xal>	what if we instead used a box
Apr 22 13:51:51 <crestfallen>	so if I really cast out the idea of a stack, that I learned in scheme (I had the idea in scheme in error as well?) I can start thinking like this.
Apr 22 13:51:58 *	zdenal has quit (Ping timeout: 256 seconds)
Apr 22 13:52:03 <EvanR>	scheme has the same thing
Apr 22 13:52:20 <crestfallen>	the AST idea?
Apr 22 13:52:24 <lemmih>	trcc: That very much should not be the case. Try figuring out exactly which part of 'launchMaestro' that makes it fail.
Apr 22 13:52:36 *	khisanth__ (~Khisanth@pool-108-46-4-32.nycmny.east.verizon.net) has joined
Apr 22 13:52:51 <crestfallen>	I was thinking about it wrong, while "writing" the output of scheme programs
Apr 22 13:52:56 <EvanR>	yeah scheme code exists as an AST. though it becomes tough to use it to reasonable what the program will do
Apr 22 13:53:00 <crestfallen>	longhand
Apr 22 13:53:08 <lemmih>	trcc: And you're sure your command will terminate if it is sent SIGTERM?
Apr 22 13:53:09 <EvanR>	to reason*
Apr 22 13:53:20 *	codyw (~cody@c-98-248-33-71.hsd1.ca.comcast.net) has joined
Apr 22 13:53:25 <lemmih>	trcc: If you aren't sure, you can test it from the command line.
Apr 22 13:53:51 <crestfallen>	got it. I think I learned a bad habit in scheme because I never fully understood the "longhand output" in exercises
Apr 22 13:54:02 <EvanR>	i am not sure what longhand output is
Apr 22 13:54:14 <trcc>	lemmih: yes. I can easily send a kill
Apr 22 13:54:17 <crestfallen>	one moment
Apr 22 13:54:28 <lemmih>	trcc: SIGTERM is not the same as SIGKILL.
Apr 22 13:54:57 *	posytron has quit (Ping timeout: 263 seconds)
Apr 22 13:55:26 <EvanR>	also understanding lisp code as it evaluates in terms of syntax only is tough, i now know for sure instead of just assuming that i am ignorant
Apr 22 13:55:57 <EvanR>	because you have to know if the code was already evaluated, (quote x y z) vs (x y z)
Apr 22 13:56:02 *	SpinTensor has quit (Quit: WeeChat 2.1)
Apr 22 13:56:10 *	simukis has quit (Ping timeout: 264 seconds)
Apr 22 13:56:25 *	Folkol has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
Apr 22 13:56:30 *	danvet_ has quit (Ping timeout: 256 seconds)
Apr 22 13:56:32 <crestfallen>	here is not the best example I have : https://ptpb.pw/ZzGq
Apr 22 13:56:38 *	gtomas has quit (Ping timeout: 256 seconds)
Apr 22 13:56:54 *	kapil___ has quit (Quit: Connection closed for inactivity)
Apr 22 13:57:06 <trcc>	hmm lemmih I think threaddelay causes it to fail
Apr 22 13:57:26 <EvanR>	ok
Apr 22 13:57:31 <EvanR>	yeah you arent showing enough steps
Apr 22 13:58:02 <EvanR>	(+ (* 1 13) (* -1 8)) ; -> 5 is skipping the step (+ 13 -8)
Apr 22 13:58:09 <lemmih>	trcc: Did you verify that the java program responds to SIGTERM after 2 seconds?
Apr 22 13:58:16 *	jimmyrcom_ (~fold@64.134.76.1) has joined
Apr 22 13:58:18 <lyxia>	srid: you can try to look for libraries of extensible sums/open union types, although it's all quite experimental.
Apr 22 13:58:23 <trcc>	lemmih: I am going to try now. Sec
Apr 22 13:58:43 *	MarcelineVQ (~anja@S01069050ca2f4f83.no.shawcable.net) has joined
Apr 22 13:58:44 *	crave (~crave@212-124-152-15.adsl.highway.telekom.at) has joined
Apr 22 13:59:00 <EvanR>	you can do the same "longhand" analysis in haskell, as long as you use normal order evaluation and not eager evaluation like scheme
Apr 22 13:59:20 <trcc>	lemmih: kill -SIGTERM pid works fine
Apr 22 13:59:57 *	Goplat has quit ()
Apr 22 13:59:57 *	hph^ has quit (Ping timeout: 265 seconds)
Apr 22 14:00:00 <crestfallen>	yeah I don't even want to look at that. you exposing to the idea of the node/leaf in the AST is big. thanks.. oh , if you don't mind would you supply an example of that based on our discussion of (:) ?
Apr 22 14:00:10 <crestfallen>	exposing me*
Apr 22 14:00:24 <EvanR>	the scheme code is even more obviously a tree haha
Apr 22 14:00:39 <EvanR>	ok
Apr 22 14:00:41 <crestfallen>	the normal order example that is
Apr 22 14:01:12 <Xal>	crestfallen: you can single-step through code in ghci
Apr 22 14:02:08 <lemmih>	trcc: Strange. terminateProcess should just send that signal. Does waiting for the process to finish just hang?
Apr 22 14:02:16 <crestfallen>	Xal, thanks please hold that thought and let me see what Evan*R comes up with
Apr 22 14:02:23 *	juanca_ has quit ()
Apr 22 14:02:32 <EvanR>	http://lpaste.net/365149
Apr 22 14:03:09 <trcc>	lemmih: it is a server, so not interested in waiting. Seems like threadDelay causes it
Apr 22 14:03:25 *	crave has quit (Client Quit)
Apr 22 14:03:34 *	toblorone (~toblorone@172.58.91.178) has joined
Apr 22 14:04:11 <EvanR>	if it was scheme, you would have computed the argument to head first
Apr 22 14:04:22 *	augur has quit (Ping timeout: 245 seconds)
Apr 22 14:04:34 <EvanR>	here it was delayed, and even then still not fully evaluated
Apr 22 14:05:13 *	thy0 (~thy0@199.115.112.89) has joined
Apr 22 14:05:22 <lemmih>	trcc: Your example program is not a server. Maybe the signal is sent in a background thread which doesn't get to run because your app immediately quits.
Apr 22 14:05:56 <trcc>	lemmih: i'll try a delay after terminateprocess
Apr 22 14:06:18 <lemmih>	trcc: Try waiting for a little while.
Apr 22 14:07:13 *	Xal (~Xal@S010664777dabacc3.vw.shawcable.net) has left ("ERC (IRC client for Emacs 25.3.1)")
Apr 22 14:07:26 <crestfallen>	ok that is different from how I used to laboriously write out the "Stack" with each new recursion being written to the rhs of the previous one. so here with no recursion line 5 has just ghci forcing the return of the head 0 ?
Apr 22 14:08:37 <EvanR>	by stack do you mean the intermediate states of the gcd computations?
Apr 22 14:08:49 *	jimmyrcom_ has quit (Ping timeout: 248 seconds)
Apr 22 14:09:03 <EvanR>	your examples dont actually show explicit recursion, since gcd never appears twice
Apr 22 14:09:08 <trcc>	lemmih: just tried: SpawnCommand, sleep 2 sec, terminateProcess, sleep 2 sec. Same result, process is still there
Apr 22 14:09:20 <crestfallen>	does your example mean that ghci provides just two cases and no case , i.e. no chance , to evaluate the filter exp?
Apr 22 14:09:40 <lemmih>	trcc: Try actually using 'waitProcess'.
Apr 22 14:09:52 <crestfallen>	sorry I need to paste a better example
Apr 22 14:09:53 *	enterprisey has quit (Read error: Connection reset by peer)
Apr 22 14:10:13 *	Xal (~Xal@S010664777dabacc3.vw.shawcable.net) has joined
Apr 22 14:10:20 <EvanR>	the example shows step 1, replace `head (stuff)` with the definition of the head function, but where the parameter has (stuff) substituted
Apr 22 14:10:34 <lemmih>	trcc: Also, try other spawning 'sleep 10'.
Apr 22 14:10:47 <EvanR>	which is what you should also have been doing with gcd, only after you fully computed the arguments first
Apr 22 14:11:28 <trcc>	lemmih: cannot find the waitProcess function
Apr 22 14:11:45 <EvanR>	ill give you an example with more steps
Apr 22 14:12:09 <lemmih>	trcc: Eh, waitForProcess.
Apr 22 14:12:48 <lemmih>	trcc: Are you using Windows, btw?
Apr 22 14:12:56 <trcc>	lemmih: mac
Apr 22 14:13:18 <crestfallen>	so it carries the parameter ( value 0 ) into the case statement
Apr 22 14:13:40 *	albertus1 has quit (Quit: Leaving.)
Apr 22 14:13:52 *	Guest39693 has quit (Remote host closed the connection)
Apr 22 14:14:02 <crestfallen>	(on line 5)
Apr 22 14:14:11 <EvanR>	the parameter is not 0
Apr 22 14:14:19 <EvanR>	the parameter is (0 : filter f [1..])
Apr 22 14:14:26 <EvanR>	which is not fully evaluated
Apr 22 14:14:55 <trcc>	lemmih: waitForProcess does not make a change. The application terminates, but the java process is still there
Apr 22 14:15:22 <crestfallen>	right its only evaluated enough to see that x = 0
Apr 22 14:15:32 <EvanR>	it didnt even
Apr 22 14:15:46 <EvanR>	it evaluated enough to see that the argument is _:_ and not []
Apr 22 14:15:52 <lemmih>	trcc: Well, that means that the process /does/ get terminated. Your java app might have spawned another process.
Apr 22 14:15:54 <EvanR>	and returned whatever was on the left of :
Apr 22 14:15:59 <EvanR>	does not care if its 0
Apr 22 14:16:05 <EvanR>	or 99
Apr 22 14:16:07 <crestfallen>	that's interesting thanks
Apr 22 14:16:17 *	Codrrr has quit (Read error: Connection reset by peer)
Apr 22 14:16:38 <trcc>	lemmih: working from mwe http://lpaste.net/365151 . If that is the case, why does it work with kill -SIGTERM?
Apr 22 14:17:41 *	fmixing has quit (Remote host closed the connection)
Apr 22 14:18:05 *	alexteves (~alexfmpe@a95-94-156-56.cpe.netcabo.pt) has joined
Apr 22 14:18:14 <lemmih>	trcc: You're sending the signal to the process spawned by java, not the process spawned by your app.
Apr 22 14:18:24 *	chisui has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
Apr 22 14:18:35 *	fmixing (~fmixing@195.154.233.78) has joined
Apr 22 14:19:18 <crestfallen>	but EvanR can it be said that the head function wouldn't even see the rhs of (:) there?
Apr 22 14:19:26 <crestfallen>	since you wrote _ : _
Apr 22 14:20:01 *	dsantiago has quit (Ping timeout: 248 seconds)
Apr 22 14:20:10 <EvanR>	it won't
Apr 22 14:20:12 <crestfallen>	" it evaluated enough to see that the argument is _:_ and not []  "
Apr 22 14:20:23 <EvanR>	and i updated the example to match on (x:_) so yeah
Apr 22 14:20:29 <trcc>	lemmih: so the process spawned by my app using spawnCommand returns a different pid than then process by manually invoking Java -jar Maestro.jar in the terminal?
Apr 22 14:20:35 <EvanR>	it never looks at _
Apr 22 14:20:48 *	knupfer has quit (Remote host closed the connection)
Apr 22 14:20:50 <crestfallen>	sorry didn't see that. thanks very helpful!
Apr 22 14:21:17 <lemmih>	trcc: Oh yes, you're actually spawning a shell. You spawn a shell and run 'Java -jar resources/maestro.jar >> MaestroProcessOutput' in that shell.
Apr 22 14:21:28 *	posytron (~posytron@200.49.37.58) has joined
Apr 22 14:21:38 *	dsantiago (~dsantiago@cpe-104-175-193-69.socal.res.rr.com) has joined
Apr 22 14:22:09 <trcc>	hmm any idea on how to get the handle on the Java process then? Manually look it up?
Apr 22 14:22:58 <trcc>	ahh lemmih, the >> was the issue!
Apr 22 14:23:16 <trcc>	after removing >> MaestroProcessOutput it works
Apr 22 14:23:28 <lemmih>	trcc: Do the piping manually.
Apr 22 14:23:50 <trcc>	can you point me to how? If not, that is fair enough.
Apr 22 14:23:51 *	tobloron_ (~toblorone@172.58.91.178) has joined
Apr 22 14:23:51 *	tobloron_ has quit (Client Quit)
Apr 22 14:23:58 <trcc>	thank you for your time no matter what :)
Apr 22 14:24:44 <lemmih>	trcc: Open the output file and then use, say, runProcess with that handle for 'stdout'.
Apr 22 14:25:08 *	physicist__ has quit (Remote host closed the connection)
Apr 22 14:25:11 *	knupfer (~Thunderbi@200116b82ceda400f69634fffef0b45f.dip.versatel-1u1.de) has joined
Apr 22 14:25:37 <lemmih>	trcc: 'runProcess' is much like 'spawnProcess'. It just takes a few more arguments (leave most of them as Nothing) and it doesn't spawn a shell for you.
Apr 22 14:25:57 *	toblorone has quit (Ping timeout: 240 seconds)
Apr 22 14:25:59 *	posytron has quit (Ping timeout: 260 seconds)
Apr 22 14:27:09 *	zezeri (5f592615@gateway/web/freenode/ip.95.89.38.21) has joined
Apr 22 14:27:15 *	epsilonhalbe (~epsilonha@84-113-106-42.cable.dynamic.surfer.at) has left
Apr 22 14:27:18 <trcc>	lemmih: but doesn't runProcess what for the process to finish?
Apr 22 14:27:44 <trcc>	wait(
Apr 22 14:27:46 <trcc>	*
Apr 22 14:27:58 *	hexfive (~hexfive@50-46-223-124.evrt.wa.frontiernet.net) has joined
Apr 22 14:27:59 <lemmih>	Nope.
Apr 22 14:28:07 <trcc>	great. Thank you! i'll try that
Apr 22 14:28:16 <EvanR>	crestfallen: http://lpaste.net/365152
Apr 22 14:28:35 *	amar_ has quit (Remote host closed the connection)
Apr 22 14:28:57 *	beefjoe has quit (Ping timeout: 240 seconds)
Apr 22 14:28:59 <crestfallen>	still wondering , does _ mean "no matter what is here " or does it mean "don't look here at all " EvanR like say with \_ -> True
Apr 22 14:29:03 <crestfallen>	oh thanks looking at that
Apr 22 14:29:11 *	amar (~amar@cpc110667-lewi19-2-0-cust794.2-4.cable.virginm.net) has joined
Apr 22 14:29:28 *	xkapastel has quit (Quit: Connection closed for inactivity)
Apr 22 14:29:39 <zezeri>	does anyone know how to resolve the famous "error code 2 " after installing haskell on windows.
Apr 22 14:29:53 <EvanR>	crestfallen: _ is the "don't care" pattern, anything matches it
Apr 22 14:30:11 *	psychicist__ has quit (Ping timeout: 256 seconds)
Apr 22 14:30:50 <crestfallen>	I can relate to don't care !
Apr 22 14:31:06 <crestfallen>	looking at paste
Apr 22 14:31:34 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
Apr 22 14:33:21 *	amar has quit (Ping timeout: 248 seconds)
Apr 22 14:34:09 *	ackpacket has quit (Ping timeout: 260 seconds)
Apr 22 14:34:45 *	knupfer has quit (Ping timeout: 265 seconds)
Apr 22 14:35:02 *	energizer has quit (Remote host closed the connection)
Apr 22 14:35:25 *	energizer (~energizer@unaffiliated/energizer) has joined
Apr 22 14:35:58 <zezeri>	how can i set the $PATH$  in windows?
Apr 22 14:36:46 *	donjoe3 has quit (Quit: Leaving)
Apr 22 14:37:23 *	aueuaio has quit (Remote host closed the connection)
Apr 22 14:37:37 *	energizer has quit (Read error: Connection reset by peer)
Apr 22 14:38:04 *	energizer (~energizer@unaffiliated/energizer) has joined
Apr 22 14:38:29 *	Deide has quit (Quit: Seeee yaaaa)
Apr 22 14:38:29 *	k0ral (~koral@2a01:cb1d:115:e400:dd5:effa:e59d:30fb) has joined
Apr 22 14:38:55 <EvanR>	crestfallen: I added a second experiment which involves an infinite list, which shows how lazy evaluation can be exploited
Apr 22 14:39:24 <k0ral>	is there such a thing as an injective 'Map a b' ?
Apr 22 14:39:48 <k0ral>	if not, how would you emulate it ?
Apr 22 14:39:48 <EvanR>	wait... about to run out the door, rewriting
Apr 22 14:40:36 <crestfallen>	thanks so much !
Apr 22 14:40:47 <crestfallen>	EvanR, 
Apr 22 14:41:12 *	navy_seal9614 (~navy_seal@cpe-74-130-11-236.kya.res.rr.com) has joined
Apr 22 14:41:18 *	energizer has quit (Read error: Connection reset by peer)
Apr 22 14:41:24 *	spaceloop has quit (Ping timeout: 256 seconds)
Apr 22 14:41:38 *	energizer (~energizer@unaffiliated/energizer) has joined
Apr 22 14:41:43 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
Apr 22 14:42:39 *	iross has quit (Ping timeout: 256 seconds)
Apr 22 14:42:54 *	jeltsch has quit (Ping timeout: 255 seconds)
Apr 22 14:43:03 *	thunderrd_ has quit (Remote host closed the connection)
Apr 22 14:43:23 *	thunderrd_ (~thunderrd@110.78.155.96) has joined
Apr 22 14:43:28 <EvanR>	ok
Apr 22 14:44:13 <pavonia>	k0ral: You could have Set of the codomain elements with your Map and check via smart constructors whether a new element maps to a value already present in the Set
Apr 22 14:44:35 <EvanR>	in enumFrom 5 !! 2, or ((!!) (enumFrom 5) 2), with eager evaluation youd first fully evaluate enumFrom 5. which is
Apr 22 14:44:38 <EvanR>	> enumFrom 5
Apr 22 14:44:40 <lambdabot>	 [5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31...
Apr 22 14:44:45 <EvanR>	infinite
Apr 22 14:44:48 *	iross (~iross@mail.skybluetrades.net) has joined
Apr 22 14:45:57 *	t7 has quit (Quit: Leaving)
Apr 22 14:46:04 <EvanR>	with lazy evaluation enumFrom 5 is deferred until needed to decide which case to go with
Apr 22 14:46:06 *	ompaul has quit (Quit: and zebedee said its time for other stuff)
Apr 22 14:46:39 *	mda1 (~metts@84-236-35-197.pool.digikabel.hu) has joined
Apr 22 14:46:52 *	abhiroop (~abhiroop@2a01:388:211:150::1:2e) has joined
Apr 22 14:47:27 <crestfallen>	EvanR, thanks I thought you left. plenty of homework...
Apr 22 14:47:33 <EvanR>	i am leaving now
Apr 22 14:47:37 <crestfallen>	pax
Apr 22 14:50:36 *	hiratara has quit (Ping timeout: 276 seconds)
Apr 22 14:51:34 *	OmegaDoug (8e74a3cd@gateway/web/freenode/ip.142.116.163.205) has joined
Apr 22 14:52:19 *	chewzerita (~user@199.192.150.167) has joined
Apr 22 14:52:41 *	enterprisey has quit (Remote host closed the connection)
Apr 22 14:52:49 *	hiratara (~hiratara@240f:7:4708:1:2096:45a5:69ee:b52d) has joined
Apr 22 14:53:19 *	abhiroop has quit (Quit: Leaving...)
Apr 22 14:53:46 <k0ral>	pavonia: can't we do better than relying on a dynamic check at insertion/construction ?
**** BEGIN LOGGING AT Tue Apr 24 19:01:19 2018

Apr 24 19:01:19 *	Now talking on #haskell
Apr 24 19:01:19 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Apr 24 19:01:19 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
Apr 24 19:01:19 *	Channel #haskell url: http://www.haskell.org/
Apr 24 19:01:50 *	banc has quit (Quit: ZNC - http://znc.in)
Apr 24 19:01:54 <crestfallen>	hi anyone help me get rid of this warning message? http://lpaste.net/365218
Apr 24 19:02:24 *	emilypi has quit (Ping timeout: 260 seconds)
Apr 24 19:02:26 <CodeKiwi>	jasondockers in lua you could have this table {foo = "bar"; baz = 1; high = low} everything in it is a different type
Apr 24 19:02:42 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
Apr 24 19:03:33 *	Unhammer (~Unhammer@gateway/tor-sasl/unhammer) has joined
Apr 24 19:03:42 *	emilypi (~emilypi@pool-100-33-104-88.nycmny.fios.verizon.net) has joined
Apr 24 19:03:42 *	coot (~coot@188.146.67.65.nat.umts.dynamic.t-mobile.pl) has joined
Apr 24 19:03:47 *	streblo has quit (Quit: streblo)
Apr 24 19:03:58 *	posytron (~posytron@200.49.37.58) has joined
Apr 24 19:04:03 *	hexfive has quit (Quit: WeeChat 1.9.1)
Apr 24 19:04:05 <acowley>	crestfallen: You need to indent the lines beginning with `show`
Apr 24 19:04:32 <Welkin>	so you get row polymorphism, heterogenous containers, optional parameters, default parameters for free
Apr 24 19:04:37 <CodeKiwi>	in this isolated case low is actually nil but if it was defined outside of there it could be a reference to something else
Apr 24 19:04:40 <Welkin>	it's a very different way of programming than haskell
Apr 24 19:04:44 *	hucksy has quit (Ping timeout: 260 seconds)
Apr 24 19:04:45 <Welkin>	but it's also quite powerful
Apr 24 19:05:08 <Welkin>	very much like the lisp/scheme way of doing things
Apr 24 19:05:18 <CodeKiwi>	lua actually has a fair amount of utility for functional programming
Apr 24 19:05:23 <Welkin>	it has tco
Apr 24 19:05:27 <Welkin>	and built-in coroutines
Apr 24 19:05:28 *	klntsky (~klntsky@gateway/tor-sasl/klntsky) has joined
Apr 24 19:05:30 <Welkin>	and metatables, so yeah
Apr 24 19:05:39 <CodeKiwi>	it's also influenced a lot by scheme so it makes sense
Apr 24 19:05:51 <CodeKiwi>	proper lexical scoping etc.
Apr 24 19:06:47 *	secretmessage has quit (Remote host closed the connection)
Apr 24 19:06:47 *	philippirrip has quit (Remote host closed the connection)
Apr 24 19:07:03 <CodeKiwi>	there's even a hs-lua thing! :P
Apr 24 19:09:11 *	oisdk (~textual@141.255.166.197) has joined
Apr 24 19:09:22 *	brandly has quit (Ping timeout: 264 seconds)
Apr 24 19:09:37 *	posytron has quit (Ping timeout: 248 seconds)
Apr 24 19:09:56 *	maugha has quit (Quit: WeeChat 2.0.1)
Apr 24 19:09:57 *	thy0 has quit (Quit: TTFN)
Apr 24 19:09:59 *	oisdk_ has quit (Ping timeout: 260 seconds)
Apr 24 19:10:33 *	darjeeling_ (~darjeelin@205.175.107.99) has joined
Apr 24 19:10:42 <iqubic>	Does haskell have lexical scoping?
Apr 24 19:10:44 <crestfallen>	acowley, thanks usually that's a tab warning or similar right?
Apr 24 19:12:06 *	Snircle has quit (Quit: Textual IRC Client: www.textualapp.com)
Apr 24 19:12:38 <Welkin>	iqubic: of course
Apr 24 19:12:39 <acowley>	crestfallen: It's a bit tricky in this case. What you've done is defined your own function called `show`. The warnings you might get are for an under-defined instance (like what you got), a missing type signature on your accidental `show` function, and shadowing the name from Prelude.
Apr 24 19:12:43 *	lagothri1 (~lagothrix@unaffiliated/lagothrix) has joined
Apr 24 19:12:45 *	lnostdal (~lnostdal@77.70.119.51) has joined
Apr 24 19:12:54 *	ryantrinkle has quit (Ping timeout: 260 seconds)
Apr 24 19:12:55 <acowley>	crestfallen: But no errors!
Apr 24 19:13:15 <crestfallen>	shadowing , hmm, thanks. its a book example acowley 
Apr 24 19:13:17 *	pera (~pera@unaffiliated/pera) has joined
Apr 24 19:13:21 *	freeman42x]NixOS has quit (Ping timeout: 248 seconds)
Apr 24 19:13:45 <CodeKiwi>	iqubic there are several fairly widespread languages without good scoping
Apr 24 19:14:19 <acowley>	crestfallen: It's all perfectly fine, but getting indentation wrong in Haskell will often lead to surprises. It's something you always have to watch out for.
Apr 24 19:14:47 <acowley>	It's another reason Haskellers are fond of having warnings enabled
Apr 24 19:15:25 *	louispan (~textual@14-203-219-236.static.tpgi.com.au) has joined
Apr 24 19:15:47 *	lagothrix has quit (Ping timeout: 256 seconds)
Apr 24 19:16:24 *	louispan has quit (Client Quit)
Apr 24 19:16:27 <Welkin>	javascript does not have lexical scoping before es6
Apr 24 19:16:35 *	jasondockers has quit (Remote host closed the connection)
Apr 24 19:16:40 *	banc (~master@82.145.37.203) has joined
Apr 24 19:16:40 <Welkin>	the `var` keyword is not lexically scoped
Apr 24 19:16:58 <Welkin>	so it can leak into the outer scope
Apr 24 19:17:02 *	jasondockers (~jasondock@unaffiliated/jasondockers) has joined
Apr 24 19:17:09 *	acarrico has quit (Ping timeout: 255 seconds)
Apr 24 19:17:17 *	nakal has quit (Disconnected by services)
Apr 24 19:17:18 <Welkin>	C89 for-loop values are also not lexically scoped
Apr 24 19:17:19 *	nakal_ (~nakal@port-92-196-118-225.dynamic.qsc.de) has joined
Apr 24 19:17:22 <CodeKiwi>	I'd guess the list of languages that do things right is probably longer than the list that do it wrong, so it's quite unfortunate that some of the most popular ones are so crapy :|
Apr 24 19:17:37 *	freemonad (~djang0nub@23-124-109-53.lightspeed.sntcca.sbcglobal.net) has joined
Apr 24 19:17:39 <Welkin>	luckily no one uses C89
Apr 24 19:18:50 <iqubic>	Does haskell do the right thing?
Apr 24 19:18:57 *	zzach has quit (Ping timeout: 263 seconds)
Apr 24 19:19:05 <Welkin>	yes
Apr 24 19:19:09 *	zzach (~irc.freen@dslc-082-082-208-226.pools.arcor-ip.net) has joined
Apr 24 19:19:14 <CodeKiwi>	cough lua is c89 cough
Apr 24 19:21:08 *	fishythefish has quit (Ping timeout: 276 seconds)
Apr 24 19:24:27 *	jmcarthur has quit (Ping timeout: 265 seconds)
Apr 24 19:24:59 *	anon136 has quit (Ping timeout: 260 seconds)
Apr 24 19:25:59 *	fishythefish (~fishythef@2620:10d:c090:180::1:5e82) has joined
Apr 24 19:26:46 <crestfallen>	acowley, thanks. hey also what is this brak term in last where statement? why is that used?
Apr 24 19:26:50 <crestfallen>	https://ptpb.pw/rFbE
Apr 24 19:26:55 *	cemerick has quit (Ping timeout: 256 seconds)
Apr 24 19:27:18 <crestfallen>	ie why was it named that?
Apr 24 19:27:47 <acowley>	bracket
Apr 24 19:28:15 <crestfallen>	got it thanks
Apr 24 19:28:18 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
Apr 24 19:28:50 *	cynapse (~chris@d24-141-240-242.home.cgocable.net) has joined
Apr 24 19:30:05 *	SneakySeb has quit (Ping timeout: 240 seconds)
Apr 24 19:30:37 *	juhp has quit (Read error: Connection reset by peer)
Apr 24 19:31:07 *	juhp (~juhp@redhat/juhp) has joined
Apr 24 19:32:45 *	reactormonk has quit (Ping timeout: 264 seconds)
Apr 24 19:36:06 *	zachary12 has quit (Quit: ZNC 1.6.3+deb1 - http://znc.in)
Apr 24 19:36:20 *	hackage hvega 0.1.0.0 - Create Vega and Vega-Lite visualizations.  http://hackage.haskell.org/package/hvega-0.1.0.0 (DouglasBurke)
Apr 24 19:36:51 *	dpyro (~dpyro@66-169-160-49.dhcp.ftwo.tx.charter.com) has joined
Apr 24 19:37:14 *	crobbins (~crobbins@2601:2c7:780:416e::7433) has joined
Apr 24 19:38:15 *	mizu_no_oto has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
Apr 24 19:38:41 *	ryantrinkle (~ryan@cpe-68-173-35-198.nyc.res.rr.com) has joined
Apr 24 19:39:29 *	theDon has quit (Ping timeout: 248 seconds)
Apr 24 19:40:47 *	Paks has quit (Quit: leaving)
Apr 24 19:40:49 *	WhatisRT (~whatisrt@2a02:8109:8fc0:1485:21fd:361a:e295:a30a) has joined
Apr 24 19:40:56 *	cynapse has quit (Remote host closed the connection)
Apr 24 19:41:06 *	Paks (~paks@c-98-228-66-67.hsd1.il.comcast.net) has joined
Apr 24 19:41:13 *	theDon (~td@mue-88-130-49-085.dsl.tropolys.de) has joined
Apr 24 19:41:35 *	ystael has quit (Ping timeout: 240 seconds)
Apr 24 19:42:35 Python interface unloaded
Apr 24 19:42:35 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue Apr 24 19:42:35 2018

**** BEGIN LOGGING AT Wed Apr 25 11:52:29 2018

Apr 25 11:52:29 *	Now talking on #haskell
Apr 25 11:52:30 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Apr 25 11:52:30 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
Apr 25 11:52:30 *	Channel #haskell url: http://www.haskell.org/
Apr 25 11:52:42 <rrTornado>	juan0sorio: Here's a simple way to think about it. A function X is faster than function Y in getting the answer when it does less work to get the answer.
Apr 25 11:53:34 <rrTornado>	Less work usually means running fewer calculations. See how fib' manages that.
Apr 25 11:53:43 <juanOsorio>	hmm. I just cant wrap my head around the very last line. fib' f1 f2 n = fib' f2 (f1 + f2) (n - 1)
Apr 25 11:54:06 *	kassick[m] (kassickmat@gateway/shell/matrix.org/x-zohucmgzdzyiityt) has joined
Apr 25 11:54:18 <crestfallen>	hi my book says an empty list denotes failure. The use of valid on the list comprehension doesn't seem to do anything here: https://ptpb.pw/tq3O
Apr 25 11:54:57 *	w77 has quit (Ping timeout: 248 seconds)
Apr 25 11:54:57 *	posytron_ (~posytron@200.49.37.58) has joined
Apr 25 11:54:59 *	hc (~ircd@unaffiliated/hc) has joined
Apr 25 11:55:19 *	posytron_ has quit (Read error: Connection reset by peer)
Apr 25 11:55:31 <cocreature>	crestfallen: what do you mean by “doesn’t seem to do anything”? can you provide some example input for eval as well as the output you expect and the one you actually get?
Apr 25 11:55:35 *	posytron_ (~posytron@200.49.37.58) has joined
Apr 25 11:56:13 <crestfallen>	I commented out the valid prerequisite (what do you call that?) and it worked the same. thanks cocreature 
Apr 25 11:56:17 <cocreature>	it’s also a rather weird choice to use lists for failures, we have a special datatype for that called Maybe
Apr 25 11:56:27 <cocreature>	which can only contain 0 or 1 element
Apr 25 11:56:41 *	oisdk (~textual@141.255.166.197) has joined
Apr 25 11:56:42 <crestfallen>	yes the book says this about the use of Maybe here ....
Apr 25 11:57:04 <cocreature>	crestfallen: eval (Val (-15)) will give you an empty list so everything else will also be empty
Apr 25 11:57:27 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
Apr 25 11:57:29 *	biglama (~Day_dream@89-159-133-187.rev.numericable.fr) has joined
Apr 25 11:57:29 <crestfallen>	failure within eval could also be handled by using the Maybe type, but we prefer to use the list type because...
Apr 25 11:57:35 <rrTornado>	juan0sorio: Try evaluating the value of fib' 0 1 n for different values of n.
Apr 25 11:57:37 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
Apr 25 11:57:37 <cocreature>	because?
Apr 25 11:57:43 <crestfallen>	the comprehension notation then provides...
Apr 25 11:57:53 <crestfallen>	a convenient way to define the eval function
Apr 25 11:58:09 *	posytron has quit (Ping timeout: 248 seconds)
Apr 25 11:58:21 <cocreature>	you can use do notation or if you enable the MonadComprehensions extension even the same syntax
Apr 25 11:58:38 <crestfallen>	notation? 
Apr 25 11:58:54 <cocreature>	do notation
Apr 25 11:58:56 <crestfallen>	this is a book, I'm just following the example
Apr 25 11:59:04 <cocreature>	right I’m saying the book is wrong :)
Apr 25 11:59:05 *	streblo has quit (Quit: streblo)
Apr 25 11:59:16 <cocreature>	or at the very least not idiomatic
Apr 25 11:59:16 <crestfallen>	hutton second edition
Apr 25 11:59:44 <crestfallen>	I can't follow your advice but thanks..
Apr 25 12:00:01 <cocreature>	do x <- Just 1; y <- Just 2 <- pure (x + y)
Apr 25 12:00:02 <cocreature>	> do x <- Just 1; y <- Just 2 <- pure (x + y)
Apr 25 12:00:05 <lambdabot>	 <hint>:1:1: error:
Apr 25 12:00:06 <lambdabot>	     Parse error in pattern: do x <- Just 1
Apr 25 12:00:06 <lambdabot>	                                y <- Just 2
Apr 25 12:00:11 <cocreature>	> do x <- Just 1; y <- Just 2; pure (x + y)
Apr 25 12:00:13 <lambdabot>	 Just 3
Apr 25 12:00:19 <crestfallen>	I was asking why valid is used since a boolean is not returned anywhere
Apr 25 12:00:27 *	connrs has quit (Ping timeout: 240 seconds)
Apr 25 12:00:37 <cocreature>	valid is used to filter elements in the list
Apr 25 12:01:09 <cocreature>	so if "valid o x y" returns False the result will not be included in the list
Apr 25 12:01:10 *	toure|biab is now known as toure
Apr 25 12:01:26 *	sqooq (~cypress@96.58.47.10) has joined
Apr 25 12:01:53 *	gestone has quit (Ping timeout: 248 seconds)
Apr 25 12:02:27 <cocreature>	> [1 | False]
Apr 25 12:02:29 <lambdabot>	 []
Apr 25 12:02:31 <cocreature>	> [1 | True]
Apr 25 12:02:33 *	iAmerikan has quit (Ping timeout: 256 seconds)
Apr 25 12:02:33 <lambdabot>	 [1]
Apr 25 12:02:37 <cocreature>	^ crestfallen that example might be helpful
Apr 25 12:02:45 <zincy>	I am using the maybe function and this is the inferred type signature is this repetition a code smell ? maybe :: Maybe AuctionTXout      -> ((AuctionTXout -> IO (Maybe AuctionTXout))          -> Maybe AuctionTXout)      -> Maybe (AuctionTXout -> IO (Maybe AuctionTXout))      -> Maybe AuctionTXout
Apr 25 12:03:44 <crestfallen>	ok the func valid assumes that there is no negative number as argument. note my example at the bottom of the paste would return True with valid. thats why I was confused.
Apr 25 12:03:51 <fishythefish>	juanOsorio: that line is saying "suppose f1, f2 are the 0th and 1st elements of the fibonacci sequence and we want the nth element; to get that, we can instead start the sequence with f2, (f1 + f2) and get the (n-1)th element`
Apr 25 12:04:14 *	Major_Biscuit (~Major_Bis@global-184-110.nat-1.net.cam.ac.uk) has joined
Apr 25 12:04:25 <crestfallen>	cocreature, ^^
Apr 25 12:04:34 *	hc has quit (Remote host closed the connection)
Apr 25 12:04:37 <juanOsorio>	oh oh. I think I get im getting it!
Apr 25 12:04:37 <rrTornado>	As far as I can see the behavior is correct. The eval function returns a result only if the inputs are valid.
Apr 25 12:04:39 <cocreature>	crestfallen: right, "valid" returns true but in the recursive call you will eventually call "eval (Val (- 15))"
Apr 25 12:04:43 <rrTornado>	Non negative.
Apr 25 12:04:52 <cocreature>	crestfallen: and in that case n > 0 will be False, so you’ll get back the empty list
Apr 25 12:05:05 *	bendo (~bendo@aftr-62-216-207-186.dynamic.mnet-online.de) has joined
Apr 25 12:05:18 <rrTornado>	And running a list comprehension from elements of an empty list will return an empty list.
Apr 25 12:05:24 <crestfallen>	thanks yeah its up to the user
Apr 25 12:05:42 <crestfallen>	right thanks rrTornado cocreature 
Apr 25 12:06:30 *	xkapastel (uid17782@gateway/web/irccloud.com/x-wosriqkrmyqpdqch) has joined
Apr 25 12:06:31 *	mnoonan has quit (Remote host closed the connection)
Apr 25 12:06:56 *	mnoonan (~mnoonan@cpe-69-201-46-148.twcny.res.rr.com) has joined
Apr 25 12:07:12 <LysergicDreams>	I want to make a separate daemon & TUI that are running on the same machine to send data between each other. What's the best method for this? Network.Sockets?
Apr 25 12:08:14 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
Apr 25 12:08:20 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
Apr 25 12:08:45 *	cschneid_ (~cschneid@c-73-78-144-189.hsd1.co.comcast.net) has joined
Apr 25 12:10:15 *	Deewiant (~deewiant@fr1.ut.deewiant.iki.fi) has joined
Apr 25 12:10:21 <marmistrz>	Is there any way to write it in a more monadic, flat style?
Apr 25 12:10:21 <marmistrz>	https://zerobin.net/?f081415fb970fa4b#LJm7WrRQwG7JipUuJS47plDB85LY7FkPeu67oQnTbyg=
Apr 25 12:10:33 *	Yuras has quit (Ping timeout: 264 seconds)
Apr 25 12:10:36 *	Vq has quit (Quit: Maintenance reboot)
Apr 25 12:10:38 <marmistrz>	The code is moving so much to the right, it looks quite similar to manual matching of maybes
Apr 25 12:10:55 <marmistrz>	I'm working in ExceptT Error (Reader Env) a
Apr 25 12:11:33 *	Fubar^ has quit (Remote host closed the connection)
Apr 25 12:11:34 *	eschnett has quit (Quit: eschnett)
Apr 25 12:13:44 *	iAmerikan has quit (Ping timeout: 260 seconds)
Apr 25 12:14:43 <lyxia>	for the second one, write a function   MonadError e a => Maybe a -> e -> m a
Apr 25 12:14:51 <lyxia>	for the second case ^
Apr 25 12:14:53 *	chessai (~quassel@12.150.97.130) has joined
Apr 25 12:15:06 <lyxia>	third*
Apr 25 12:15:54 *	Vq (~vq@90-227-195-41-no77.tbcn.telia.com) has joined
Apr 25 12:15:59 *	akfp (~user@static.151.184.130.94.clients.your-server.de) has joined
Apr 25 12:16:17 *	ian_andrich has quit (Ping timeout: 248 seconds)
Apr 25 12:16:31 <akfp>	how do I find which package transitively depends on "entropy" in my project?
Apr 25 12:17:15 *	acidjnk (~acid@mue-88-130-58-099.dsl.tropolys.de) has joined
Apr 25 12:18:02 <lyxia>	akfp: http://packdeps.haskellers.com/reverse/entropy maybe this helps narrow it down?
Apr 25 12:18:56 *	Wuzzy (~Wuzzy@p5B0DF295.dip0.t-ipconnect.de) has joined
Apr 25 12:19:02 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
Apr 25 12:19:30 *	acarrico (~acarrico@dhcp-68-142-35-239.greenmountainaccess.net) has joined
Apr 25 12:19:50 <cocreature>	akfp: are you using stack or cabal?
Apr 25 12:20:04 <akfp>	stack
Apr 25 12:20:21 <cocreature>	you can use "stack dot" to get a graph of your dependencies
Apr 25 12:20:40 <lyxia>	marmistrz: you could also define a function to deconstruct TFn or return Nothing, and then use that function I mentioned for the second case too.
Apr 25 12:20:57 <cocreature>	or "stack dot --external"
Apr 25 12:21:26 *	lambdaman has quit (Remote host closed the connection)
Apr 25 12:21:28 *	eschnett (~eschnett@38.104.158.162) has joined
Apr 25 12:21:37 *	tsaka__ has quit (Quit: Konversation terminated!)
Apr 25 12:21:52 Python interface unloaded
Apr 25 12:21:52 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Wed Apr 25 12:21:52 2018

**** BEGIN LOGGING AT Sun Apr 29 17:26:53 2018

Apr 29 17:26:53 *	Now talking on #haskell
Apr 29 17:26:53 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Apr 29 17:26:53 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
Apr 29 17:26:53 *	Channel #haskell url: http://www.haskell.org/
Apr 29 17:26:55 <d34df00d>	Well, the compiler is supposed to derive those.
Apr 29 17:26:57 <MarcelineVQ>	ghc generates those
Apr 29 17:27:10 <d34df00d>	If it knows the role of the parameters does not affect the representation.
Apr 29 17:27:23 >lambdabot<	:t subsequences
Apr 29 17:27:40 <Axman6>	sure, but there's no mentnion that those instances exist in the constraint on the function
Apr 29 17:27:46 *	[Leary] (~leary@210-55-85-248.dialup.xtra.co.nz) has joined
Apr 29 17:27:47 *	tsoernes has quit (Remote host closed the connection)
Apr 29 17:28:01 <Axman6>	I would've thought you'd need a Coercible (v s) (v s') constraint or something
Apr 29 17:28:59 <d34df00d>	If I replace DVS.Vector with [], I get a type error in the second case too.
Apr 29 17:29:00 <d34df00d>	Wut.
Apr 29 17:29:32 <d34df00d>	Couldn't match representation of type ‘v s'’ with that of ‘v s’ arising from a use of ‘coerce’ // NB: We cannot know what roles the parameters to ‘v’ have; we must assume that the role is nominal
Apr 29 17:29:53 <d34df00d>	Totally reasonable. Why the typechecker accepts this code if it's DVS.Vector (v s) -> DVS.Vector (v s') instead of [v s] -> [v s']?
Apr 29 17:30:38 <crestfallen>	hi in Data.List subsequences is defined ' subsequences = List.subsequencies ' .  Is that as far as I can read into the definition?
Apr 29 17:30:45 *	Guest62897 (~bwahaHAHA@pa49-197-119-158.pa.qld.optusnet.com.au) has joined
Apr 29 17:31:26 <Axman6>	possibly because the instance for Vector is wonky - the instance that would be derived by GHC without any anotations would show that two Storable.Vectors are representationally the same. Just a guess though
Apr 29 17:31:37 <d34df00d>	That actually makes sense.
Apr 29 17:31:54 <Axman6>	crestfallen: is there an import at the top defining a module called List?
Apr 29 17:31:57 <d34df00d>	Not sure how exactly ghc would come to that conclusion though.
Apr 29 17:32:02 <Axman6>	like import qualified GHC.List as List?
Apr 29 17:32:29 *	danthemyth has quit (Ping timeout: 268 seconds)
Apr 29 17:32:35 <crestfallen>	it says import qualified
Apr 29 17:32:40 *	hexo_ is now known as badpilot
Apr 29 17:32:56 <Axman6>	crestfallen: ewhat does it say after that...
Apr 29 17:33:06 <crestfallen>	sorry import qualified Data.List as List 
Apr 29 17:33:09 <d34df00d>	Is there a way to say that a role of a given type argument is phantom when defining a type class?
Apr 29 17:33:22 <crestfallen>	but I don't know what that means
Apr 29 17:33:28 *	hackage sensu-run 0.5.0.1 - A tool to send command execution results to Sensu  http://hackage.haskell.org/package/sensu-run-0.5.0.1 (MitsutoshiAoe)
Apr 29 17:33:52 <Axman6>	that means it's importing the module GHC.List and calling it List, so anywhere you see List.foo, that's come from GHC.List
Apr 29 17:34:20 *	Psybur (~Psybur@unaffiliated/psybur) has joined
Apr 29 17:34:45 *	jonlaing_ (~jonlaing@ool-3f8fc312.dyn.optonline.net) has joined
Apr 29 17:34:46 *	jonlaing has quit (Read error: Connection reset by peer)
Apr 29 17:35:13 <crestfallen>	ok, so > :info subsequences doesn't give a full def. I have a book example that returns the subsequences in a different order from the Data.List func. I wanted to see how its written
Apr 29 17:35:30 <d34df00d>	> Roles other than ‘nominal’ for class parameters can lead to incoherence.
Apr 29 17:35:31 <d34df00d>	Wut?
Apr 29 17:35:32 <lambdabot>	 <hint>:1:18: error: lexical error at character 'n'
Apr 29 17:35:38 <crestfallen>	pasting ...
Apr 29 17:35:45 *	danilo__ has quit (Quit: Leaving)
Apr 29 17:36:15 *	ania123 (5e89ad7a@gateway/web/freenode/ip.94.137.173.122) has joined
Apr 29 17:36:15 <crestfallen>	at the bottom of this paste is the books version : https://ptpb.pw/vXJy
Apr 29 17:36:22 <ania123>	https://www.morganclaypool.com/doi/abs/10.2200/S00692ED1V01Y201601AIM032
Apr 29 17:36:29 <ania123>	dies someone has a access to this paper?
Apr 29 17:36:29 *	theelous3_ has quit (Ping timeout: 256 seconds)
Apr 29 17:38:06 *	jonlaing_ has quit (Remote host closed the connection)
Apr 29 17:38:35 *	conal has quit (Quit: Computer has gone to sleep.)
Apr 29 17:39:07 <crestfallen>	so when you load Data.List into ghci, :info doesn't show the full code. any way to see it from ghci ?
Apr 29 17:39:21 *	cyphase has quit (Ping timeout: 240 seconds)
Apr 29 17:39:42 <Axman6>	load GHC.List?
Apr 29 17:39:50 *	Sampuka has quit (Read error: Connection reset by peer)
Apr 29 17:39:54 <Axman6>	I never look at source code in GHCi
Apr 29 17:40:19 <MarcelineVQ>	can that even be done?
Apr 29 17:40:31 *	danthemyth (~danthemyt@206.198.251.213) has joined
Apr 29 17:41:00 <crestfallen>	I'm here but cant read the source https://hackage.haskell.org/package/prelude-compat-0.0.0.1/docs/src/Data-List2010.html#subsequences
Apr 29 17:41:29 *	WhatisRT has quit (Remote host closed the connection)
Apr 29 17:41:44 <crestfallen>	sorry how to do this : 
Apr 29 17:41:46 <MarcelineVQ>	Axman6 said how to find more on List.subsequences a moment ago
Apr 29 17:42:17 <Axman6>	that's definitely not the right package to be looking at
Apr 29 17:42:21 *	x77686d has quit (Quit: x77686d)
Apr 29 17:42:24 <crestfallen>	I don't understand how to do it. missing fundamental
Apr 29 17:42:31 <Axman6>	http://hackage.haskell.org/package/base-4.11.1.0/docs/src/GHC.List.html
Apr 29 17:42:42 <ania123>	does someone has a access to this paper?
Apr 29 17:42:43 <Axman6>	I found that by searching in google for ghc.list
Apr 29 17:42:44 *	dxtr (76c98783@fsfe/dxtr) has joined
Apr 29 17:42:45 <ania123>	https://www.morganclaypool.com/doi/abs/10.2200/S00692ED1V01Y201601AIM032
Apr 29 17:43:40 <Axman6>	ania123: does this have anything to do with Haskell? and have you checked arXiv.org?
Apr 29 17:44:09 <Axman6>	hmm, GHC.List doesn't seem to have permutations definied in it any more
Apr 29 17:44:32 *	xcmw has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Apr 29 17:44:59 <Axman6>	crestfallen: try http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-List.html#v:permutations and click on the "Source" link at the right of the page
Apr 29 17:45:10 <crestfallen>	will do thanks
Apr 29 17:45:21 *	emilypi has quit (Ping timeout: 248 seconds)
Apr 29 17:45:57 *	danthemyth has quit (Ping timeout: 264 seconds)
Apr 29 17:46:04 <d34df00d>	Axman6: interestingly, https://github.com/haskell/vector/issues/148 suggests the current behaviour with `a` being deduced as phantom for Data.Vector.Storable is wrong.
Apr 29 17:46:08 <d34df00d>	So much for the safety.
Apr 29 17:46:54 *	emilypi (~emilypi@pool-100-33-104-88.nycmny.fios.verizon.net) has joined
Apr 29 17:46:57 <Axman6>	yeah, as it is written it really is a phantom type
Apr 29 17:50:15 *	cyphase (~cyphase@unaffiliated/cyphase) has joined
Apr 29 17:50:59 *	conal (~conal@185.236.200.133) has joined
Apr 29 17:51:17 *	dented42 (~dented42@65-130-220-28.slkc.qwest.net) has joined
Apr 29 17:51:51 *	darjeeling_ has quit (Ping timeout: 240 seconds)
Apr 29 17:51:51 *	dqd (id@wikipedia/dqd) has joined
Apr 29 17:52:20 *	ania123 has quit (Ping timeout: 260 seconds)
Apr 29 17:52:48 *	jonlaing (~jonlaing@ool-3f8fcab3.dyn.optonline.net) has joined
Apr 29 17:54:05 *	pera has quit (Ping timeout: 240 seconds)
Apr 29 17:54:20 *	hphuoc25 (~hphuoc25@132.147.71.104) has joined
Apr 29 17:54:21 *	dxtr has quit (Quit: leaving)
Apr 29 17:55:11 *	dan_f has quit (Ping timeout: 256 seconds)
Apr 29 17:56:21 *	emilypi has quit (Ping timeout: 240 seconds)
Apr 29 17:57:18 *	aarvar (~foewfoiew@50.34.105.170) has joined
Apr 29 17:57:21 *	cschneid_ has quit (Ping timeout: 264 seconds)
Apr 29 17:57:35 <crestfallen>	Axman6, ok that func is pretty complicated:    [] : nonEmptySubsequences
Apr 29 17:57:56 *	emilypi (~emilypi@pool-100-33-104-88.nycmny.fios.verizon.net) has joined
Apr 29 17:58:33 <Axman6>	IIRC the reason for it being to complicated is that it works on infinite lists with maximum laziness
Apr 29 17:58:51 *	hphuoc25 has quit (Ping timeout: 240 seconds)
Apr 29 17:58:54 <Axman6>	> map (take 5) $ permutations [1..]
Apr 29 17:58:55 <lambdabot>	 [[1,2,3,4,5],[2,1,3,4,5],[3,2,1,4,5],[2,3,1,4,5],[3,1,2,4,5],[1,3,2,4,5],[4,...
Apr 29 17:59:08 <crestfallen>	I was hoping to compare that with https://ptpb.pw/vXJy  since the output is slightly different (the ordering)
Apr 29 17:59:18 <Axman6>	> map (take 5 . drop 1000) $ permutations [1..]
Apr 29 17:59:20 <lambdabot>	 [[1001,1002,1003,1004,1005],[1001,1002,1003,1004,1005],[1001,1002,1003,1004,...
Apr 29 17:59:31 <Axman6>	> map (take 5) . drop 1000 $ permutations [1..]
Apr 29 17:59:32 <lambdabot>	 [[3,5,2,4,7],[3,5,2,4,6],[7,3,5,4,2],[3,7,5,4,2],[3,5,7,4,2],[3,5,4,7,2],[3,...
Apr 29 18:00:15 <crestfallen>	> subsequences [1,2,3]
Apr 29 18:00:17 <lambdabot>	 [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]
Apr 29 18:00:22 *	fmixing (~fmixing@5.18.211.209) has joined
Apr 29 18:01:19 <Axman6>	ha, only just realised I kept talking about permutations when you wanted subsequences, my bad!
Apr 29 18:01:21 *	cyphase has quit (Ping timeout: 248 seconds)
Apr 29 18:01:34 <crestfallen>	Axman6, no worries yeah a bit confused
Apr 29 18:01:40 <crestfallen>	I am
Apr 29 18:02:33 *	ixian8 (~mgold@2002:4a74:ba78:1701:0:ff:fe78:6269) has joined
Apr 29 18:03:27 *	sim590 has quit (Ping timeout: 240 seconds)
Apr 29 18:03:41 *	francesco_ (~francesco@host218-48-dynamic.5-87-r.retail.telecomitalia.it) has joined
Apr 29 18:04:18 <crestfallen>	can I enter in that entire subs func here ?
Apr 29 18:04:33 *	fmixing has quit (Ping timeout: 248 seconds)
Apr 29 18:04:33 *	hjdskes has quit (Ping timeout: 268 seconds)
Apr 29 18:04:36 *	dxtr (e5b0034e@fsfe/dxtr) has joined
Apr 29 18:04:42 *	ixian has quit (Ping timeout: 256 seconds)
Apr 29 18:04:51 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
Apr 29 18:07:33 *	Franciman has quit (Ping timeout: 264 seconds)
Apr 29 18:07:36 *	sim590 (~sim590@cable-192.222.210.73.electronicbox.net) has joined
Apr 29 18:07:59 *	xcmw (~textual@cpe-69-133-49-123.cinci.res.rr.com) has joined
Apr 29 18:09:05 *	marek has quit (Ping timeout: 240 seconds)
Apr 29 18:09:21 *	marek (mmahut@nat/redhat/x-ucsxntismbebgxcw) has joined
Apr 29 18:09:51 *	plugin (~plugin@2604:2000:8101:3500:9112:1374:ddfa:72d8) has joined
Apr 29 18:10:12 *	cyphase (~cyphase@unaffiliated/cyphase) has joined
Apr 29 18:12:33 *	antsanto (~antsanto@27.57.48.237) has joined
Apr 29 18:13:37 *	hjdskes has quit (Ping timeout: 248 seconds)
Apr 29 18:13:41 *	xcmw has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Apr 29 18:14:05 *	caryoscelus_ has quit (Ping timeout: 240 seconds)
Apr 29 18:15:55 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
Apr 29 18:15:56 *	gkn_ (~gkn@p5DC82F7C.dip0.t-ipconnect.de) has joined
Apr 29 18:17:08 *	louispan has quit (Quit: louispan)
Apr 29 18:18:14 >Axman6<	sorry you mind going through my version of subs https://ptpb.pw/vXJy   for a bit ?
Apr 29 18:18:23 *	XorSwap_ (~XorSwap@wnpgmb016qw-ppp-103-253.dynamic.bellmts.net) has joined
Apr 29 18:18:28 *	gkn_ has quit (Client Quit)
Apr 29 18:18:38 *	XorSwap_ has quit (Client Quit)
Apr 29 18:19:19 *	gkn has quit (Ping timeout: 260 seconds)
Apr 29 18:19:57 *	hjdskes has quit (Ping timeout: 240 seconds)
Apr 29 18:20:52 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
Apr 29 18:20:54 *	crobbins_ (~crobbins@c-73-232-226-190.hsd1.tx.comcast.net) has joined
Apr 29 18:21:23 *	amar (~amar@cpc110667-lewi19-2-0-cust794.2-4.cable.virginm.net) has joined
Apr 29 18:21:41 *	bgncld (~bgnchd86e@47-72-199-155.dsl.dyn.ihug.co.nz) has joined
Apr 29 18:22:14 *	antsanto has quit (Ping timeout: 260 seconds)
Apr 29 18:23:05 *	louispan (~textual@203.38.203.134) has joined
Apr 29 18:24:24 *	cschneid_ (~cschneid@c-73-78-144-189.hsd1.co.comcast.net) has joined
Apr 29 18:25:32 *	conal has quit (Quit: Computer has gone to sleep.)
Apr 29 18:26:05 *	antsanto (~antsanto@171.78.136.196) has joined
Apr 29 18:26:09 *	amar has quit (Ping timeout: 264 seconds)
Apr 29 18:28:35 *	crobbins_ has quit (Ping timeout: 240 seconds)
Apr 29 18:29:35 *	jackoe has quit (Ping timeout: 240 seconds)
Apr 29 18:30:27 *	hjdskes has quit (Ping timeout: 268 seconds)
Apr 29 18:30:58 *	jackoe (~jackoe@eduroam-166-227.dyn.carleton.edu) has joined
Apr 29 18:31:45 *	kuttifunk1 (~Thunderbi@host-188-174-195-84.customer.m-online.net) has joined
Apr 29 18:31:56 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
Apr 29 18:32:01 *	markus1199 (~markus118@329087267D.tidsl.titannet.de) has joined
Apr 29 18:32:25 *	Bare (~Bare@73.96.113.35) has joined
Apr 29 18:32:44 *	emilypi has quit (Ping timeout: 260 seconds)
Apr 29 18:32:45 *	kuttifunk has quit (Ping timeout: 264 seconds)
Apr 29 18:32:45 *	kuttifunk1 is now known as kuttifunk
Apr 29 18:32:51 *	xx00__ has quit (Quit: xx00__)
Apr 29 18:33:18 *	louispan has quit (Quit: louispan)
Apr 29 18:33:53 *	xx00__ (~gort@cpe-66-108-137-140.nyc.res.rr.com) has joined
Apr 29 18:34:26 *	emilypi (~emilypi@pool-100-33-104-88.nycmny.fios.verizon.net) has joined
Apr 29 18:35:05 *	markus1189 has quit (Ping timeout: 240 seconds)
Apr 29 18:35:19 *	louispan (~textual@203.38.203.134) has joined
Apr 29 18:36:17 *	fishythefish (~fishythef@2620:10d:c090:180::1:fbd8) has joined
Apr 29 18:38:02 *	antsanto has quit (Remote host closed the connection)
Apr 29 18:38:16 *	gkn (~gkn@p57842ADA.dip0.t-ipconnect.de) has joined
Apr 29 18:38:27 *	freeman42x]NixOS has quit (Ping timeout: 260 seconds)
Apr 29 18:39:44 *	hjdskes has quit (Ping timeout: 260 seconds)
Apr 29 18:39:45 *	cyphase has quit (Ping timeout: 248 seconds)
Apr 29 18:39:46 *	antsanto (~antsanto@171.78.136.196) has joined
Apr 29 18:40:26 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
Apr 29 18:40:50 *	danthemyth (~danthemyt@206.198.251.213) has joined
Apr 29 18:42:21 *	doyougnu has quit (Ping timeout: 264 seconds)
Apr 29 18:43:30 *	dan_f (~dan@24.148.40.200) has joined
Apr 29 18:45:05 *	emilypi has quit (Ping timeout: 248 seconds)
Apr 29 18:45:56 *	antsanto has quit (Remote host closed the connection)
Apr 29 18:45:57 *	emilypi (~emilypi@pool-100-33-104-88.nycmny.fios.verizon.net) has joined
Apr 29 18:46:00 *	qzo (~qzo@c-67-177-224-24.hsd1.co.comcast.net) has joined
Apr 29 18:48:34 *	jonlaing has quit (Remote host closed the connection)
Apr 29 18:49:04 *	dented42 has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Apr 29 18:50:00 *	crobbins_ (~crobbins@2601:2c7:780:416e::7433) has joined
Apr 29 18:50:15 *	conal (~conal@185.236.200.133) has joined
Apr 29 18:50:32 *	rcdilorenzo_ (~rcdiloren@cpe-76-182-26-65.nc.res.rr.com) has left
Apr 29 18:50:32 *	danthemyth has quit (Remote host closed the connection)
Apr 29 18:50:57 *	dodong (~aegon@49.148.94.88) has joined
Apr 29 18:52:33 *	emilypi has quit (Ping timeout: 248 seconds)
Apr 29 18:52:52 *	fmixing (~fmixing@5.18.211.209) has joined
Apr 29 18:53:28 *	emilypi (~emilypi@pool-100-33-104-88.nycmny.fios.verizon.net) has joined
Apr 29 18:53:45 *	hjdskes has quit (Ping timeout: 255 seconds)
Apr 29 18:54:00 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
Apr 29 18:54:05 *	jackdk has quit (Ping timeout: 240 seconds)
Apr 29 18:54:07 *	lol-md5 has quit (Ping timeout: 255 seconds)
Apr 29 18:54:36 *	nomicflux has quit (Quit: nomicflux)
Apr 29 18:56:57 *	dented42 (~dented42@65-130-220-28.slkc.qwest.net) has joined
Apr 29 18:57:21 *	fmixing has quit (Ping timeout: 264 seconds)
Apr 29 18:57:57 *	cschneid_ has quit (Ping timeout: 264 seconds)
Apr 29 18:58:09 Python interface unloaded
Apr 29 18:58:09 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sun Apr 29 18:58:09 2018

**** BEGIN LOGGING AT Mon Apr 30 12:06:33 2018

Apr 30 12:06:33 *	Now talking on #haskell
Apr 30 12:06:33 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Apr 30 12:06:33 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
Apr 30 12:06:33 *	Channel #haskell url: http://www.haskell.org/
Apr 30 12:06:57 *	AndreasK (~AndreasK@194-118-229-105.hdsl.highway.telekom.at) has joined
Apr 30 12:06:58 *	albertus1 (~seb@x4db07c62.dyn.telefonica.de) has joined
Apr 30 12:07:18 *	Bhailey (~Bhail@80-121-128-83.adsl.highway.telekom.at) has joined
Apr 30 12:07:59 <crestfallen>	hi I'm confused by how this subsequences func evaluates. true to form I'm trying to write out by hand the output. the concat always throws me off in a recursion https://ptpb.pw/xXRS  please see what I'm trying to write out
Apr 30 12:08:05 *	machined1od has quit (Client Quit)
Apr 30 12:09:10 *	noan has quit (Remote host closed the connection)
Apr 30 12:09:31 <[exa]>	crestfallen: map (x:) prepends x to _all_ elements of the list
Apr 30 12:10:47 <newsham>	> map (100:) [[1,2],[3],[4,5,6]]
Apr 30 12:10:49 <lambdabot>	 [[100,1,2],[100,3],[100,4,5,6]]
Apr 30 12:10:57 *	envjj_ has quit (Ping timeout: 240 seconds)
Apr 30 12:11:13 *	ZeuPiark has quit (Remote host closed the connection)
Apr 30 12:11:23 *	codesoup has quit (Ping timeout: 276 seconds)
Apr 30 12:11:25 *	crobbins (~crobbins@mobile-166-172-120-24.mycingular.net) has joined
Apr 30 12:12:09 *	plugin has quit (Remote host closed the connection)
Apr 30 12:12:58 <albeit>	I have a computation "applied :: MonadState Foo m => ExceptT Bar m ()". If I have a "foo :: Foo", how can I executed the state monad with foo and get ":: ExceptT Bar m Foo"??
Apr 30 12:13:12 *	envjj (~envjj@mobile-130-126-255-241.near.illinois.edu) has joined
Apr 30 12:13:14 *	brandly has quit (Ping timeout: 276 seconds)
Apr 30 12:13:20 *	hackage sparrow 0.0.1.5 - Unified streaming dependency management for web apps  http://hackage.haskell.org/package/sparrow-0.0.1.5 (athanclark)
Apr 30 12:13:50 <crestfallen>	thanks, but the list initially is [1,2,3] so map is not being called on a list of lists, but on (xs) which is [2,3], right? [exa] newsham 
Apr 30 12:14:19 *	rblaze has quit (Quit: Leaving.)
Apr 30 12:14:26 <isovector>	it's being called on subseqs, which returns a list of lists
Apr 30 12:15:12 <crestfallen>	so that is determined in the type signature and not in the definition of map, then isovector ?
Apr 30 12:15:34 <crestfallen>	in the subseqs type signature
Apr 30 12:15:39 *	rblaze (~Adium@2620:10d:c091:200::2:3f2) has joined
Apr 30 12:16:30 <crestfallen>	> map (1:) [[2,3]]
Apr 30 12:16:32 <lambdabot>	 [[1,2,3]]
Apr 30 12:17:04 <crestfallen>	map (1:) [[2,3],[2],[3]]
Apr 30 12:17:15 *	codesoup (~codesoup@174.119.180.211) has joined
Apr 30 12:17:20 <[exa]>	crestfallen: it's called on subseqs [2,3], not on just [2,3]
Apr 30 12:17:24 <crestfallen>	> map (1:) [[2,3],[2],[3]]
Apr 30 12:17:26 <lambdabot>	 [[1,2,3],[1,2],[1,3]]
Apr 30 12:18:14 <[exa]>	crestfallen: the logic of that function is "all subsequences of list of length N+1 are all subsequences without the +1'th element, and all subsequences with the +1th element"
Apr 30 12:18:27 *	Wuzzy3 has quit (Ping timeout: 240 seconds)
Apr 30 12:19:33 <crestfallen>	[exa], recently it was explained to me that the function is a node (++) and the subexpressions are leaves. so on that line which has precedence?
Apr 30 12:19:59 <[exa]>	node?
Apr 30 12:20:26 <dmwit>	albeit: `applied >> get :: MonadState Foo m => ExceptT Bar m Foo`
Apr 30 12:20:27 <crestfallen>	yeah, ie the evaluation is a tree structure
Apr 30 12:20:32 <dmwit>	albeit: But your question is a bit confused, I think.
Apr 30 12:20:42 <newsham>	(subseq xs) ++ (map (x:) (subseq xs))   <- precedence of ++
Apr 30 12:20:43 <crestfallen>	with precedence rules
Apr 30 12:20:50 *	Wuzzy (~Wuzzy@p5790E43B.dip0.t-ipconnect.de) has joined
Apr 30 12:20:55 <[exa]>	crestfallen: well you can look at that like trees, but I can't see where you get the precedence there
Apr 30 12:20:59 *	chaosmasttter1 (~chaosmast@p54B469E6.dip0.t-ipconnect.de) has joined
Apr 30 12:21:21 <dmwit>	albeit: Presumably what you actually want is an `Except Bar Foo` instead. In which case have a look at `mapExceptT` and `runStateT`.
Apr 30 12:21:31 *	chaosmasttter has quit (Ping timeout: 256 seconds)
Apr 30 12:22:09 <crestfallen>	[exa] I'd like to write that out so I can keep track of the evaluation , if possible
Apr 30 12:22:21 *	isovector has quit (Quit: Leaving)
Apr 30 12:22:33 *	robotroll has quit (Read error: Connection reset by peer)
Apr 30 12:22:49 <crestfallen>	newsham, sorry I didn't catch your last point
Apr 30 12:22:55 <XorSwap>	@hoogle (*>)
Apr 30 12:22:55 <lambdabot>	Prelude (*>) :: Applicative f => f a -> f b -> f b
Apr 30 12:22:55 <lambdabot>	Control.Applicative (*>) :: Applicative f => f a -> f b -> f b
Apr 30 12:22:55 <lambdabot>	Diagrams.Prelude (*>) :: Applicative f => f a -> f b -> f b
Apr 30 12:23:03 <[exa]>	crestfallen: well you almost got it, except you somehow omitted the 'map' in your trace
Apr 30 12:23:07 *	zdenal (~zdenal@ip-89-103-38-66.net.upcbroadband.cz) has joined
Apr 30 12:23:27 *	Bhailey has quit (Ping timeout: 240 seconds)
Apr 30 12:23:47 *	sz0 (uid110435@gateway/web/irccloud.com/x-yqggxezfarquiyzx) has joined
Apr 30 12:23:47 *	tomphp (~tomphp@31.73.140.15) has joined
Apr 30 12:23:50 *	hackage sparrow 0.0.1.6 - Unified streaming dependency management for web apps  http://hackage.haskell.org/package/sparrow-0.0.1.6 (athanclark)
Apr 30 12:24:13 <[exa]>	crestfallen: see here:  subseqs [1,2,3] = subseqs [2,3] ++ map (1:) (subseqs [2,3]) -- first recurse to subseqs [2,3]
Apr 30 12:24:27 *	juno_ (~juno@82-132-228-222.dab.02.net) has joined
Apr 30 12:24:36 *	skregas (0c68f406@gateway/web/cgi-irc/kiwiirc.com/ip.12.104.244.6) has joined
Apr 30 12:25:09 <newsham>	crestfallen: here is your example written out in more detail.  http://lpaste.net/365414
Apr 30 12:25:37 <crestfallen>	[exa] newsham thanks kindly ! working on those
Apr 30 12:25:48 <newsham>	oops.. thats not quite right.
Apr 30 12:26:25 *	codesoup has quit (Ping timeout: 248 seconds)
Apr 30 12:26:28 *	rckd has quit (Remote host closed the connection)
Apr 30 12:26:39 <newsham>	sorry, i just took your example and added stuff without realizing you had mistakes in it
Apr 30 12:26:57 <crestfallen>	newsham any edits appreciated
Apr 30 12:26:57 *	acarrico has quit (Ping timeout: 240 seconds)
Apr 30 12:27:35 <albeit>	dmwit: Yes, definitely a confused question! I want to run the computation and get the new state but have it potentially terminate early.
Apr 30 12:27:46 *	bluepixe1 (~bluepixel@unaffiliated/bluepixel) has joined
Apr 30 12:27:50 <dminuoso>	ertes: Dont want to sidetrack. Monoid instance of IO?
Apr 30 12:28:02 *	dminuoso is a bit confused
Apr 30 12:28:23 <dminuoso>	I mean that's suggesting there'd be some mempty
Apr 30 12:28:24 <dmwit>	albeit: In which case you probably want `StateT Foo (Except Bar)` instead of `ExceptT Bar (State Foo)` as your monomorphised monad.
Apr 30 12:28:39 <dmwit>	albeit: ...and also in which case, the answer to your question is just `execStateT`.
Apr 30 12:28:55 <[exa]>	dminuoso: 'return mempty' ?
Apr 30 12:28:55 <dmwit>	?unmtl StateT Foo (Except Bar) ()
Apr 30 12:28:56 <lambdabot>	Foo -> Except Bar ((), Foo)
Apr 30 12:29:04 <dmwit>	?unmtl ExceptT Bar (State Foo) ()
Apr 30 12:29:04 <lambdabot>	ExceptT Bar (State Foo) ()
Apr 30 12:29:22 <dmwit>	?unmtl ErrorT Bar (State Foo) ()
Apr 30 12:29:22 <lambdabot>	Foo -> (Either Bar (), Foo)
Apr 30 12:29:24 <dminuoso>	[exa]: No nevermind! He just revealed the missing bit, it was just implied for `IO ()`
Apr 30 12:29:25 <newsham>	crestfallen: this isnt your homework, is it? :)
Apr 30 12:29:31 <dminuoso>	[exa]: Not `IO a`
Apr 30 12:29:47 *	Zowlyfon has quit (Quit: oh no)
Apr 30 12:29:48 *	Boarders (5609c5c6@gateway/web/freenode/ip.86.9.197.198) has joined
Apr 30 12:30:11 *	bluepixel has quit (Read error: Connection reset by peer)
Apr 30 12:30:12 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
Apr 30 12:30:18 <[exa]>	dminuoso: okay :]
Apr 30 12:30:34 *	Zowlyfon (~Zowly@bnc.zow.li) has joined
Apr 30 12:31:00 <newsham>	http://lpaste.net/365415
Apr 30 12:31:10 <dmwit>	albeit: and the answer to the question-as-asked is this:
Apr 30 12:31:13 *	bluepixe1 is now known as bluepixel
Apr 30 12:31:13 <crestfallen>	newsham, I'm 56 years old , hardly :)
Apr 30 12:31:29 <crestfallen>	thanks
Apr 30 12:31:37 <newsham>	sure thing.  does that make sense to you?
Apr 30 12:31:43 <dmwit>	\s -> mapExceptT (\m -> do (a, s') <- runStateT m s; return (return s'))
Apr 30 12:31:53 <crestfallen>	burning my hand with green tea ...
Apr 30 12:33:14 *	reggie_ has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Apr 30 12:33:53 <newsham>	its equational reasoning.. each step just replaces something with something else its equal to..  although I skip over the steps of how builtin functions "map", ":" and "++" work...
Apr 30 12:34:27 *	wonko7 (~wonko7@37.171.194.110) has joined
Apr 30 12:34:27 <ertes>	dminuoso: instance Monoid SimpleIO where mempty = SimpleIO (pure ()); mappend (SimpleIO c) (SimpleIO d) = SimpleIO (c *> d)
Apr 30 12:34:29 <newsham>	like line 6 uses the equation at line 2 to replace the first half of the right hand side
Apr 30 12:34:37 <crestfallen>	newsham, really appreciate it... one moment
Apr 30 12:34:54 <dminuoso>	ertes: Yeah I know. But until you talked about IO () it sounded like you wanted some `instance Monoid (IO a)`
Apr 30 12:35:00 <dminuoso>	Which had me completely confused
Apr 30 12:35:24 <newsham>	unfort i have to head out the door now.. good luck and enjoy
Apr 30 12:35:26 *	gestone has quit (Ping timeout: 276 seconds)
Apr 30 12:35:42 <crestfallen>	so you start with the final member of the list?
Apr 30 12:35:47 <albeit>	dmwit: Thanks! Still trying to make sense of mapExceptT, but working through it
Apr 30 12:35:49 *	x77686d (~whm@150.135.165.40) has joined
Apr 30 12:36:03 <ertes>	dminuoso: well, you could do this:  instance (Monoid a) => Monoid (IO a)
Apr 30 12:36:13 <ertes>	dminuoso: you can do this for every Applicative
Apr 30 12:36:35 *	nicholaslyang has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Apr 30 12:36:37 <ertes>	instance (Monoid a) => Monoid (F a) where mappend = liftA2 (<>); mempty = pure mempty
Apr 30 12:36:39 <dminuoso>	ertes: Yeah.. I mean.. ah well it's all good. Just wasn't sure what the goal was - but it's clear now anyway.
Apr 30 12:36:46 <ertes>	ok =)
Apr 30 12:37:04 *	kakashiAL (~kakashiAL@87.140.195.202) has joined
Apr 30 12:37:22 *	hphuoc25 has quit (Remote host closed the connection)
Apr 30 12:39:45 *	crobbins has quit (Ping timeout: 248 seconds)
Apr 30 12:39:45 <Boarders>	I am trying to learn openGL and have been following this: https://www.cs.hs-rm.de/~panitz/hopengl/skript.pdf
Apr 30 12:39:51 <Boarders>	(I realise it is very out of date)
Apr 30 12:40:01 <Boarders>	from it I have this code: http://lpaste.net/365416
Apr 30 12:40:07 <Boarders>	but it displays no points for me
Apr 30 12:40:24 <Boarders>	anyone have any ideas what I am doing wrong?
Apr 30 12:40:38 *	energizer (~energizer@unaffiliated/energizer) has joined
Apr 30 12:41:09 *	envjj has quit (Ping timeout: 264 seconds)
Apr 30 12:41:16 *	siiky (~siiky@bl6-174-56.dsl.telepac.pt) has joined
Apr 30 12:41:57 *	juno_ has quit (Ping timeout: 268 seconds)
Apr 30 12:42:08 <crestfallen>	newsham, I see much of it. still working... I heard richard bird writes well on equational reasoning
Apr 30 12:43:11 *	jonlaing has quit (Remote host closed the connection)
Apr 30 12:43:11 *	aplainzetakind has quit (Ping timeout: 268 seconds)
Apr 30 12:43:34 <[exa]>	Boarders: you might want to set a drawing color, and there's a slight possibility that the points are out of view (try with (x,y,z-20) )
Apr 30 12:43:57 <[exa]>	Boarders: also the point size might be different, but I hope the default is the reasonable 1.
Apr 30 12:43:59 <Boarders>	ok, I'll give both a try
Apr 30 12:44:00 <Boarders>	thanks
Apr 30 12:44:09 *	zachk (~zachk@pool-108-26-44-145.syrcny.east.verizon.net) has joined
Apr 30 12:44:09 *	zachk has quit (Changing host)
Apr 30 12:44:09 *	zachk (~zachk@unaffiliated/zachk) has joined
Apr 30 12:44:52 <[exa]>	Boarders: also it looks like you're not swapping the buffers (if that's needed with glut)
Apr 30 12:45:27 <albeit>	dmwit: Would it be cleaner/more correct o have the "applied :: (MonadState Foo m, MonadError Bar m) => m ()" instead?
Apr 30 12:45:31 *	altjsus has quit (Quit: altjsus)
Apr 30 12:45:49 <crestfallen>	newsham, that's very interesting thanks KINDLY
Apr 30 12:45:54 <Boarders>	exa: sorry I'm new to graphics what does that mean?
Apr 30 12:45:55 <[exa]>	Boarders: add 'flush' on the bottom of displayPoints, it works like charm
Apr 30 12:46:01 <Boarders>	yeah that fixed it
Apr 30 12:46:06 <Boarders>	I saw it on a different tutorial
Apr 30 12:46:07 <Boarders>	thanks
Apr 30 12:46:24 *	ian_andrich (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
Apr 30 12:46:26 *	kalt (5df32f6c@gateway/web/freenode/ip.93.243.47.108) has joined
Apr 30 12:46:31 *	amirpro has quit (Quit: amirpro)
Apr 30 12:46:49 <[exa]>	Boarders: after you draw stuff to backbuffer, you need to swap it with the front buffer so that it's displayed for a moment (while you're drawing to the second buffer)
Apr 30 12:47:04 <[exa]>	(google double buffering, they'll have a nice picture about flickering)
Apr 30 12:47:32 *	amirpro (~amirpro@41.235.70.55) has joined
Apr 30 12:48:20 <Boarders>	ah, cool
Apr 30 12:48:21 *	ctome has quit (Ping timeout: 240 seconds)
Apr 30 12:48:21 <Boarders>	thanks
Apr 30 12:48:48 <crestfallen>	newsham, are you still available ? just some questions about your technique
Apr 30 12:48:48 <[exa]>	also there's https://learnopengl.com/ now
Apr 30 12:48:58 *	Noldorin has quit (Ping timeout: 256 seconds)
Apr 30 12:49:31 <[exa]>	crestfallen: you're on IRC, don't ask to ask. :]
Apr 30 12:49:38 *	fishythefish (~fishythef@2620:10d:c090:200::4:fdcb) has joined
Apr 30 12:49:53 *	paolino_ has quit (Ping timeout: 248 seconds)
Apr 30 12:50:36 <crestfallen>	[exa] word. new*sham has the last element of the list for starters here : http://lpaste.net/365415    and ...
Apr 30 12:51:03 *	amirpro has quit (Client Quit)
Apr 30 12:51:06 *	jfredett_ has quit (Read error: Connection reset by peer)
Apr 30 12:51:13 <crestfallen>	why did s/he start with the last element ?
Apr 30 12:51:25 *	amirpro (~amirpro@41.235.70.55) has joined
Apr 30 12:52:12 *	danthemyth has quit (Remote host closed the connection)
Apr 30 12:52:19 <[exa]>	crestfallen: because that's how the actual computation makes sense. The recursion in fact starts from the first, but can't evaluate much with that before having results from the rest of the list
Apr 30 12:52:20 *	jfredett (~quassel@2601:189:c600:c2e:3c11:b585:4519:4fc7) has joined
Apr 30 12:52:30 <[exa]>	crestfallen: (/me making a new version)
Apr 30 12:53:38 *	x77686d has quit (Quit: x77686d)
Apr 30 12:53:39 *	fmixing (~fmixing@5.18.211.209) has joined
Apr 30 12:53:57 *	posytron has quit (Remote host closed the connection)
Apr 30 12:54:25 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Apr 30 12:54:32 *	posytron (~posytron@201.6.231.240) has joined
Apr 30 12:54:57 *	markus1189 has quit (Ping timeout: 265 seconds)
Apr 30 12:55:05 *	robstr has quit (Quit: WeeChat 1.9.1)
Apr 30 12:55:18 *	markus1189 (~markus118@329087267D.tidsl.titannet.de) has joined
Apr 30 12:56:25 *	boxscape (5cd30180@gateway/web/cgi-irc/kiwiirc.com/ip.92.211.1.128) has joined
Apr 30 12:56:31 *	amirpro has quit (Quit: amirpro)
Apr 30 12:56:36 <boxscape>	is there a way to have a closed data family?
Apr 30 12:56:47 <boxscape>	using the syntax from closed type families doesn't seem to work
Apr 30 12:56:49 *	ddellacosta has quit (Remote host closed the connection)
Apr 30 12:56:58 *	amirpro (~amirpro@41.235.70.55) has joined
Apr 30 12:57:28 *	jonlaing (~jonlaing@ool-457195af.dyn.optonline.net) has joined
Apr 30 12:57:31 *	pio_ has quit (Quit: pio_)
Apr 30 12:57:53 *	coot (~coot@188.146.45.207.nat.umts.dynamic.t-mobile.pl) has joined
Apr 30 12:57:53 <crestfallen>	[exa], sorry you're writing another paste?
Apr 30 12:57:56 *	danthemyth (~danthemyt@206.198.251.213) has joined
Apr 30 12:58:02 *	bendo (~bendo@aftr-62-216-207-26.dynamic.mnet-online.de) has joined
Apr 30 12:58:34 *	fmixing has quit (Ping timeout: 264 seconds)
Apr 30 12:58:34 <boxscape>	actually nevermind apparently someone asked this on stackoverflow a month ago
Apr 30 12:58:37 *	knupfer (58823d2e@gateway/web/cgi-irc/kiwiirc.com/ip.88.130.61.46) has joined
Apr 30 12:58:38 <[exa]>	crestfallen: really explicit version http://lpaste.net/1158326652229386240
Apr 30 12:58:41 *	streblo (~streblo@65.204.128.202) has joined
Apr 30 12:58:51 <dminuoso>	boxscape: https://stackoverflow.com/a/49436255
Apr 30 12:58:53 <crestfallen>	excellent [exa] !! thanks, looking
Apr 30 12:58:57 *	posytron has quit (Ping timeout: 248 seconds)
Apr 30 12:59:02 *	aplainzetakind (~dk@85.100.179.208) has joined
Apr 30 12:59:11 <boxscape>	dmiles: yeah that's what I just found as well, thanks :)
Apr 30 12:59:13 *	x77686d (~whm@150.135.165.13) has joined
Apr 30 12:59:21 <boxscape>	oops
Apr 30 12:59:28 <knupfer>	Where can I find the function of type `String -> Q Exp` which is used in [e| ... |]  ?
Apr 30 12:59:29 <boxscape>	dminuoso ^
Apr 30 12:59:38 *	Erstarrung (~Castor@monads.fr) has left
Apr 30 12:59:54 <knupfer>	I want to write a QQ which manipulates a Q Exp emitted by [| |]
Apr 30 12:59:56 *	fishythefish has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Apr 30 13:00:13 *	posytron (~posytron@201.6.231.240) has joined
Apr 30 13:01:25 *	wonko77 (~wonko7@37.171.194.110) has joined
Apr 30 13:01:26 *	fishythefish (~fishythef@2620:10d:c090:200::4:fdcb) has joined
Apr 30 13:01:29 <dminuoso>	knupfer: The module you imported the QuasiQuoter e from?
Apr 30 13:01:33 *	rblaze has quit (Quit: Leaving.)
Apr 30 13:01:37 *	bgamari has quit (Quit: ZNC 1.6.6 - http://znc.in)
Apr 30 13:01:52 *	bgamari (~bgamari@2001:470:e438::1) has joined
Apr 30 13:02:17 <knupfer>	dminuoso: I'm talking about the quotation from TH, like [| 1 + 2 |]
Apr 30 13:02:30 <knupfer>	[| |] is shorthand for [e|  |]
Apr 30 13:03:38 <knupfer>	It's from the TH pragma, but I can't find this function, perhaps it's nowhere exported?
Apr 30 13:04:20 <knupfer>	My goal is to quote an haskell expression, make some simplifications on the ast and reify it back.
Apr 30 13:04:49 *	phenoble has quit (Ping timeout: 248 seconds)
Apr 30 13:04:55 *	tsahyt has quit (Quit: ZNC 1.6.6 - http://znc.in)
Apr 30 13:04:58 <knupfer>	Unfortunately it's not possible with rewrite rules, because I'll move value strings to Symbols.
Apr 30 13:05:14 *	xx00__ has quit (Quit: xx00__)
Apr 30 13:05:20 *	wonko7 has quit (Ping timeout: 276 seconds)
Apr 30 13:05:42 *	rblaze (~Adium@2620:10d:c091:200::2:3f2) has joined
Apr 30 13:06:22 *	xx00__ (~gort@static-71-190-137-119.nycmny.fios.verizon.net) has joined
Apr 30 13:06:38 *	phenoble (~phenoble@ip-88-153-105-95.hsi04.unitymediagroup.de) has joined
Apr 30 13:06:44 *	ddellacosta (~ddellacos@static-98-116-200-127.nycmny.fios.verizon.net) has joined
Apr 30 13:07:15 <dpyro>	using Data.Aeson, how can I get a sum datatype like Field = A | B to encode as "field": "a" and decode from the same?
Apr 30 13:07:18 *	physicist__ has quit (Remote host closed the connection)
Apr 30 13:07:28 <dpyro>	assuming the particular value in this case is A / "a"
Apr 30 13:07:49 <knupfer>	dminuoso: any idea?
Apr 30 13:08:01 *	LysergicDreams has quit (Ping timeout: 248 seconds)
Apr 30 13:08:20 *	LysergicDreams (~Lysergia@104.245.228.34) has joined
Apr 30 13:08:40 *	nicholaslyang (~nicholasl@cpe-67-243-133-73.nyc.res.rr.com) has joined
Apr 30 13:08:54 *	howdoi (uid224@gateway/web/irccloud.com/x-gkxpbwfxdkwdwfhb) has joined
Apr 30 13:09:17 *	jonlaing has quit (Remote host closed the connection)
Apr 30 13:10:25 *	tobloron_ (~toblorone@162.246.216.28) has joined
Apr 30 13:10:42 *	Sulis (~shannon@cpc82625-woki8-2-0-cust948.6-2.cable.virginm.net) has joined
Apr 30 13:10:51 *	emph^ has quit ()
Apr 30 13:11:33 *	nhh^ (~hph@ip72-195-187-57.mc.at.cox.net) has joined
Apr 30 13:11:49 *	tsahyt (~tsahyt@tsahyt.com) has joined
Apr 30 13:13:10 <dminuoso>	knupfer: Right now Im wondering whether that documentation is possibly out of date.
Apr 30 13:13:13 *	jfredett_ (~quassel@2601:189:c600:c2e:3c11:b585:4519:4fc7) has joined
Apr 30 13:13:35 <dminuoso>	knupfer: Looking at the parser, [|, [p|, [t| and [d| are specially parsed. So this is somehow rigged into GHC.
Apr 30 13:13:53 *	toblorone has quit (Ping timeout: 248 seconds)
Apr 30 13:13:55 <dminuoso>	knupfer: But I dont see any case for [e| here
Apr 30 13:14:20 *	kderment (4d9fc13e@gateway/web/freenode/ip.77.159.193.62) has joined
Apr 30 13:14:24 <dminuoso>	knupfer: Wow nevermind weirdness. The lexer does this.
Apr 30 13:14:58 *	Lepidora has quit (Quit: Lepidora)
Apr 30 13:14:58 <knupfer>	dminuoso: and is this function somehow accessible? perhaps in GHC ?
Apr 30 13:15:48 *	envjj_ (~envjj@mobile-130-126-255-241.near.illinois.edu) has joined
Apr 30 13:16:17 *	jfredett has quit (Ping timeout: 276 seconds)
Apr 30 13:16:50 *	albertus1 has quit (Quit: Leaving.)
Apr 30 13:16:54 *	trcc (~trcc@85.191.91.16) has joined
Apr 30 13:17:13 *	philippirrip has quit (Remote host closed the connection)
Apr 30 13:17:45 <fishythefish>	dpyro: write ToJSON/FromJSON instances for it
Apr 30 13:18:19 <knupfer>	or will I have to write:   $(optimize [| ... |])
Apr 30 13:18:29 <knupfer>	I hoped to be able to avoid that
Apr 30 13:18:42 <dpyro>	fishythefish: i have ToJSON and FromJSON  with genericParseJSON / genericToEncoding defaultOptions {constructorTagModifier = lowerFirst}
Apr 30 13:18:44 <knupfer>	where optimize :: Q Exp -> Q Exp
Apr 30 13:18:53 <dpyro>	it seems to work for decoding but not encoding
Apr 30 13:19:44 <fishythefish>	dpyro: you can write manual instances
Apr 30 13:19:44 *	dedgrant_ has quit (Ping timeout: 260 seconds)
Apr 30 13:20:06 <dpyro>	i know, but since i can do it for decoding i was hoping i can do it for encoding using the options
Apr 30 13:20:20 *	pfurla has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
Apr 30 13:21:13 *	oisdk (~textual@185.93.2.168) has joined
Apr 30 13:21:18 *	t8 (~tommo@2a00:23c5:12a8:1400:146d:a9e1:c42b:2e38) has joined
Apr 30 13:21:27 *	ecx has quit (Quit: ecx)
Apr 30 13:21:31 *	pfurla (~textual@38.86.167.91) has joined
Apr 30 13:21:52 *	Reisen has quit (Remote host closed the connection)
Apr 30 13:21:55 <fishythefish>	dpyro: then you probably want to check out the sumEncoding option
Apr 30 13:22:12 *	sleffy (~sleffy@c-24-7-67-0.hsd1.ca.comcast.net) has joined
Apr 30 13:22:27 *	xx00__ has quit (Quit: xx00__)
Apr 30 13:22:56 *	xx00__ (~gort@static-71-190-137-119.nycmny.fios.verizon.net) has joined
Apr 30 13:23:33 *	codesoup (~codesoup@2607:fea8:e220:70:b53e:6adb:7974:bb47) has joined
Apr 30 13:23:45 *	allenj12 has quit (Ping timeout: 264 seconds)
Apr 30 13:24:21 *	pio__ has quit (Quit: pio__)
Apr 30 13:24:26 *	t7 has quit (Ping timeout: 265 seconds)
Apr 30 13:25:49 <dpyro>	👌
Apr 30 13:26:51 *	hackage hledger-ui 1.9.1, hledger 1.9.1, hledger-lib 1.9.1, hledger-api 1.9.1, hledger-web 1.9.2 (SimonMichael): https://qbin.io/cox-aol-gcqy
Apr 30 13:27:06 *	preyalone has quit (Quit: Connection closed for inactivity)
Apr 30 13:28:19 <dminuoso>	knupfer: What I have discovered so far, is that [||] actually gets desugared into.. something
Apr 30 13:30:15 *	amirpro_ (~amirpro@41.236.136.173) has joined
Apr 30 13:30:18 <knupfer>	ok?
Apr 30 13:30:36 <dminuoso>	knupfer: Okay nevermind. Im completely lost. Plenty of magic happening there. =)
Apr 30 13:30:57 *	amirpro has quit (Ping timeout: 248 seconds)
Apr 30 13:31:05 *	amirpro_ has quit (Remote host closed the connection)
Apr 30 13:31:25 *	amirpro (~amirpro@41.236.136.173) has joined
Apr 30 13:32:04 <kalt>	kosmikus: I'm reading this gist and wondering if there was a way to defined the inverse: https://gist.github.com/kosmikus/3db332604190637bc93cede5031ea0e3
Apr 30 13:32:10 <dminuoso>	knupfer: compiler/deSugar/DsMeta.hs is where things start happening..
Apr 30 13:32:16 *	csauce (~user@acad-prov1801.main.ad.rit.edu) has joined
Apr 30 13:32:29 *	coot has quit (Quit: coot)
Apr 30 13:32:34 *	tomsen has quit (Ping timeout: 260 seconds)
Apr 30 13:32:35 <kalt>	kosmikus: ie. go from Person I to Person Maybe
Apr 30 13:32:54 *	Reisen (~reisen@unaffiliated/reisen) has joined
Apr 30 13:33:08 *	takuan has quit (Ping timeout: 265 seconds)
Apr 30 13:33:24 *	coot (~coot@188.146.45.207.nat.umts.dynamic.t-mobile.pl) has joined
Apr 30 13:33:37 <knupfer>	dminuoso: at least I've found two persons on SO contemplating the same question.
Apr 30 13:33:52 <knupfer>	It seems that it's practically not possible.
Apr 30 13:33:54 <kalt>	kosmikus: it seems like it should be trivial... hmap seems to have the signature I'm looking for, but it's not
Apr 30 13:34:03 *	vlatkoB_ has quit (Remote host closed the connection)
Apr 30 13:34:16 *	xcmw (~textual@107.14.49.0) has joined
Apr 30 13:34:21 <kosmikus>	kalt: one moment, I have to look at that gist again
Apr 30 13:34:36 <knupfer>	The ASTs are quite different, they propose haskell-src-exts (which is quite buggy).
Apr 30 13:36:05 *	boxscape has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
Apr 30 13:37:01 *	davr0s has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
Apr 30 13:37:38 <kosmikus>	kalt: to . hcoerce . hmap (Just . unI) . from
Apr 30 13:38:20 *	fishythefish has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
**** ENDING LOGGING AT Mon Apr 30 13:38:21 2018

**** BEGIN LOGGING AT Thu May  3 10:36:44 2018

May 03 10:36:44 *	Now talking on #haskell
May 03 10:36:44 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 03 10:36:44 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
May 03 10:36:44 *	Channel #haskell url: http://www.haskell.org/
May 03 10:36:57 *	nschoe has quit (Ping timeout: 240 seconds)
May 03 10:37:35 *	ccomb has quit (Ping timeout: 276 seconds)
May 03 10:37:56 *	WhatisRT (~whatisrt@client-182.wlan.hu-berlin.de) has joined
May 03 10:38:42 *	carafe (~slavedriv@GRD-nat-65.anu.edu.au) has joined
May 03 10:38:43 *	conal (~conal@2603:3024:180e:ab00:d19b:a197:18cf:fef3) has joined
May 03 10:38:55 *	elfets (~stefan@ip-178-200-141-84.hsi07.unitymediagroup.de) has joined
May 03 10:39:07 *	mrlemon (~lemon@unaffiliated/mrlemon) has joined
May 03 10:39:28 *	path[l] (~vsi@c-73-231-4-104.hsd1.ca.comcast.net) has joined
May 03 10:39:49 *	WhatisRT has quit (Read error: Connection reset by peer)
May 03 10:40:13 *	liamd (~textual@38.142.126.50) has joined
May 03 10:40:22 *	JuanDaugherty has quit (Quit: Ex Chat)
May 03 10:40:25 *	ddellacosta (~ddellacos@static-98-116-200-127.nycmny.fios.verizon.net) has joined
May 03 10:40:41 *	xcmw (~textual@host-129-137-24-5.vpn.uc.edu) has joined
May 03 10:40:56 <crucify_me>	hi a member helped me with this written out evaluation https://ptpb.pw/LsD5   I attempted to emulate it here https://ptpb.pw/LiMm  but its wrong and/or not as complete. please critique that second paste. thanks
May 03 10:41:02 <crucify_me>	aka crestfallen
May 03 10:41:13 <xcmw>	http://lpaste.net/365559
May 03 10:41:19 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
May 03 10:41:27 *	bbrodriguez (~Bender_Be@189.207.185.175) has joined
May 03 10:42:04 <xcmw>	Why can't I make a cyclic type alias?
May 03 10:42:27 <xcmw>	How can I work around the restriction?
May 03 10:42:48 <crucify_me>	*I attempted
May 03 10:43:06 *	conal has quit (Quit: Computer has gone to sleep.)
May 03 10:43:15 *	antsanto (~antsanto@171.60.193.5) has joined
May 03 10:43:40 <pavonia>	xcmw: Don't use type snonyms
May 03 10:43:46 <pavonia>	+y
May 03 10:44:02 <xcmw>	What should I use instead?
May 03 10:44:23 <pavonia>	data or newtype
May 03 10:44:31 *	dxvxb has quit (Remote host closed the connection)
May 03 10:44:31 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 03 10:44:32 *	conal (~conal@2603:3024:180e:ab00:19dc:49f4:2c7e:2500) has joined
May 03 10:44:44 *	macrover has quit (Remote host closed the connection)
May 03 10:44:45 *	emilypi has quit (Ping timeout: 276 seconds)
May 03 10:45:15 *	emilypi (~emilypi@pool-100-33-104-88.nycmny.fios.verizon.net) has joined
May 03 10:45:40 <cocreature>	xcmw: type synonyms don’t create a new type. as the name suggests they are just synonyms for existing types. try to write the type that Fields is a synonym for without the use of type synonyms and you’ll see the problem
May 03 10:46:13 *	wrengr_away is now known as wrengr
May 03 10:46:27 <mizu_no_oto>	xcmw: type synonyms are pretty nice to reduce typing, but they don't add any type safety
May 03 10:46:38 *	iAmerikan has quit (Ping timeout: 255 seconds)
May 03 10:47:12 *	liamd has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 03 10:47:18 <xcmw>	But using a newtype would add more wrapping and unwrapping code
May 03 10:47:32 *	antsanto has quit (Ping timeout: 260 seconds)
May 03 10:47:47 <ezyang_>	xcmw: Haskell doesn't have equirecursive types, you don't have a choice
May 03 10:47:56 <xcmw>	Ok
May 03 10:48:10 <xcmw>	Thanks
May 03 10:48:59 <mnoonan>	xcmw: fwiw, most of the wrapping and unwrapping will disappear at compile time
May 03 10:49:24 *	davr0s has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
May 03 10:49:57 *	qqwy (~qqwy@82.102.19.139) has joined
May 03 10:50:13 *	Inst_ has quit (Remote host closed the connection)
May 03 10:50:17 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 03 10:50:57 *	ccomb (~ccomb@83.66.146.217) has joined
May 03 10:51:01 <mizu_no_oto>	I don't have any problems with something like "type State = StateT Identity", but "type Board = [[Maybe Piece]]" isn't a good idea
May 03 10:51:18 *	path[l] has quit (Quit: path[l])
May 03 10:51:19 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
May 03 10:51:33 <mnoonan>	the ultimate sin: "type Row = Int; type Column = Int"
May 03 10:51:33 *	Inst (~Inst@unaffiliated/inst) has joined
May 03 10:51:45 *	conal has quit (Quit: Computer has gone to sleep.)
May 03 10:51:45 *	oisdk (~textual@104.129.24.147.adsl.inet-telecom.org) has joined
May 03 10:52:02 *	amirpro has quit (Quit: amirpro)
May 03 10:52:12 *	enterprisey has quit (Remote host closed the connection)
May 03 10:52:13 <mizu_no_oto>	That's pretty awful, yeah
May 03 10:52:44 <mizu_no_oto>	xcmw: For wrapping and upwrapping, check out lens, Data.Coerce and Control.Newtype.
May 03 10:52:49 *	Benzi-Junior has quit (Max SendQ exceeded)
May 03 10:52:57 *	altjsus has quit (Quit: altjsus)
May 03 10:53:07 <pavonia>	mnoonan: What's so bad about that?
May 03 10:53:11 *	Benzi-Junior (~BenziJuni@213-213-143-178.xdsl.is) has joined
May 03 10:53:22 <xcmw>	I can deal with the layers its just more annoying.
May 03 10:53:44 *	Inst has quit (Remote host closed the connection)
May 03 10:54:03 *	energizer (~energizer@unaffiliated/energizer) has joined
May 03 10:54:06 *	Inst (~Inst@unaffiliated/inst) has joined
May 03 10:54:07 -NickServ-	crestfallen!~crestfall@128.32.176.159 has just authenticated as you (n_blownapart)
May 03 10:54:13 *	kapil___ has quit (Quit: Connection closed for inactivity)
May 03 10:54:30 *	ezyang_ has quit (Ping timeout: 260 seconds)
May 03 10:54:58 *	markus1199 has quit (Ping timeout: 264 seconds)
May 03 10:55:02 <mnoonan>	pavonia: you're pretty much guaranteed to use a row index where you meant to use a column index at some point, or vice versa.
May 03 10:55:07 *	beka has quit (Ping timeout: 260 seconds)
May 03 10:55:08 *	markus1189 (~markus118@32908726BB.tidsl.titannet.de) has joined
May 03 10:55:31 *	Destol (~Destol@public-243-75.nat.utoronto.ca) has joined
May 03 10:55:57 *	iAmerikan has quit (Ping timeout: 240 seconds)
May 03 10:56:02 <johnw>	mnoonan: right, and debugging such a mixup is the height of frustration
May 03 10:56:27 *	altjsus (~altjsus@213.87.131.134) has joined
May 03 10:56:57 *	connrs has quit (Ping timeout: 240 seconds)
May 03 10:57:11 *	amirpro (~amirpro@41.235.194.52) has joined
May 03 10:57:25 *	mrlemon has quit (Quit: (∪｡∪)｡｡｡zzZ)
May 03 10:58:25 *	FreeBirdLjj has quit (Remote host closed the connection)
May 03 10:58:44 <mnoonan>	made especially bad because it is so easy and low-cost to have the compiler stop you from doing that.
May 03 10:58:48 *	amirpro has quit (Client Quit)
May 03 10:58:48 *	lawlesseel has quit (Remote host closed the connection)
May 03 10:58:53 <mizu_no_oto>	mnoonan: That example was part of the original justification of Hungarian notation, which tried to fix the problem by making "wrong code look wrong".
May 03 10:59:00 *	FreeBirdLjj (~freebirdl@180.170.20.182) has joined
May 03 10:59:22 <mizu_no_oto>	But in Haskell we can have wrong code not compile, which is both easier and less error prone.
May 03 10:59:52 <mnoonan>	make wrong code *be* wrong :)
May 03 10:59:53 *	Zipheir (~Zipheir@98.4.178.27) has joined
May 03 11:00:20 *	kefin__ has quit (Ping timeout: 276 seconds)
May 03 11:00:38 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 03 11:02:08 *	darkred (~kvirc@212.54.195.97.dsl.dynv6.forthnet.gr) has joined
May 03 11:02:45 <dyl>	mizu_no_oto can be make Hungarian notation a compile-time error though?
May 03 11:03:08 *	acarrico (~acarrico@dhcp-68-142-35-239.greenmountainaccess.net) has joined
May 03 11:03:23 *	FreeBirdLjj has quit (Ping timeout: 256 seconds)
May 03 11:03:42 *	lonokhov has quit (Quit: WeeChat 2.0)
May 03 11:03:55 <mizu_no_oto>	make mistakes in Hungarian an error, or make the use of Hungarian in the first place into an error?
May 03 11:05:01 *	replay (~replay@pdpc/supporter/student/replay) has joined
May 03 11:05:09 *	beka has quit (Ping timeout: 260 seconds)
May 03 11:05:53 *	jao has quit (Ping timeout: 248 seconds)
May 03 11:10:37 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 03 11:11:01 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 03 11:11:36 *	HarveyPwca (~HarveyPwc@ip-64-134-173-247.public.wayport.net) has joined
May 03 11:12:15 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
May 03 11:13:03 *	eschnett has quit (Quit: eschnett)
May 03 11:13:21 *	ryantrinkle has quit (Ping timeout: 248 seconds)
May 03 11:13:22 *	wchresta_ (~wchresta_@81.7.237.234) has joined
May 03 11:14:20 *	oisdk (~textual@104.129.24.147.adsl.inet-telecom.org) has joined
May 03 11:14:35 *	kefin__ (~kefin@188.113.91.146) has joined
May 03 11:15:17 *	beka has quit (Ping timeout: 256 seconds)
May 03 11:55:37 *	Disconnected ()
**** ENDING LOGGING AT Thu May  3 11:55:37 2018

**** BEGIN LOGGING AT Thu May  3 11:56:03 2018

May 03 11:56:03 *	Now talking on #haskell
May 03 11:56:03 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 03 11:56:03 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
May 03 11:56:03 *	Channel #haskell url: http://www.haskell.org/
May 03 11:57:56 *	jedws has quit (Ping timeout: 265 seconds)
May 03 11:58:08 *	x77686d (~whm@c-107-2-11-38.hsd1.az.comcast.net) has joined
May 03 11:59:12 *	iAmerikan has quit (Ping timeout: 248 seconds)
May 03 11:59:18 *	fishythefish has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 03 11:59:44 -NickServ-	crestfallen!~crestfall@128.32.176.159 has just authenticated as you (n_blownapart)
May 03 12:00:06 *	liamd (~textual@38.142.126.50) has joined
May 03 12:00:16 *	Benzi-Junior has quit (Ping timeout: 248 seconds)
May 03 12:00:40 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
May 03 12:01:30 *	rblaze has quit (Quit: Leaving.)
May 03 12:01:44 *	Benzi-Junior (~BenziJuni@213-213-143-178.xdsl.is) has joined
May 03 12:01:48 *	path[l] has quit (Quit: path[l])
May 03 12:01:50 *	hackage fuzzy-dates 0.1.0.0 -   http://hackage.haskell.org/package/fuzzy-dates-0.1.0.0 (ReedOei)
May 03 12:01:52 *	rblaze (~Adium@2620:10d:c091:200::4c35) has joined
May 03 12:02:24 *	xkapastel (uid17782@gateway/web/irccloud.com/x-serucwrxrkjabnys) has joined
May 03 12:02:59 *	ali_bush has quit (Remote host closed the connection)
May 03 12:03:20 *	hackage fuzzy-dates 0.1.0.1 - Libary for parsing dates in strings in varied formats.  http://hackage.haskell.org/package/fuzzy-dates-0.1.0.1 (ReedOei)
May 03 12:04:00 *	micro_ has quit (Remote host closed the connection)
May 03 12:04:24 >lambdabot<	subs :: [x] -> [[x]]; subs [] = [[]]; subs (x:xs) = subs xs ++ map (x:) subs xs
May 03 12:04:58 *	netheranthem has quit (Quit: Leaving)
May 03 12:05:13 >lambdabot<	subs :: [x] -> [[x]]; subs [] = [[]]; subs (x:xs) = subs xs ++ map (x:) subs xs
May 03 12:05:25 *	twanvl (~twanvl@92-110-121-28.cable.dynamic.v4.ziggo.nl) has joined
May 03 12:05:58 *	hololeap (~hololeap@unaffiliated/hololeap) has joined
May 03 12:06:15 >lamdabot<	subs [1,2,3]
May 03 12:07:29 <crucify_me>	> subs :: [x] -> [[x]]; subs [] = [[]]; subs (x:xs) = subs xs ++ map (x:) subs xs
May 03 12:07:32 <lambdabot>	 <hint>:1:21: error: parse error on input ‘;’
May 03 12:07:34 *	wchresta_ has quit (Ping timeout: 240 seconds)
May 03 12:07:42 *	ian_andrich (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
May 03 12:07:57 <crucify_me>	sorry how do I input an entire func ^ ?
May 03 12:08:22 *	supki has quit (Remote host closed the connection)
May 03 12:08:23 *	Saukk has quit (Remote host closed the connection)
May 03 12:08:35 *	albertus1 (~seb@x590c7f78.dyn.telefonica.de) has joined
May 03 12:08:54 <crucify_me>	I messaged lambdabot to test but I can't a pm from it
May 03 12:08:59 <crucify_me>	get*
May 03 12:09:03 <byorgey>	crucify_me: put 'let' at the beginning
May 03 12:09:11 <Psybur>	% subs :: [x] -> [[x]]; subs [] = [[]]; subs (x:xs) = subs xs ++ map (x:) (subs xs)
May 03 12:09:11 <yahb>	Psybur:
May 03 12:09:17 <byorgey>	 > let subs :: ....
May 03 12:09:24 <Psybur>	% subs :: [x] -> [[x]]; subs [] = [[]]; subs (x:xs) = subs xs ++ map (x:) (subs xs); subs "dudewhat"
May 03 12:09:24 <yahb>	Psybur: ; <interactive>:14:84: error:; Parse error: module header, import declaration; or top-level declaration expected.
May 03 12:09:38 <Psybur>	% subs "dudewhat"
May 03 12:09:38 <yahb>	Psybur: ["","t","a","at","h","ht","ha","hat","w","wt","wa","wat","wh","wht","wha","what","e","et","ea","eat","eh","eht","eha","ehat","ew","ewt","ewa","ewat","ewh","ewht","ewha","ewhat","d","dt","da","dat","dh","dht","dha","dhat","dw","dwt","dwa","dwat","dwh","dwht","dwha","dwhat","de","det","dea","deat","deh","deht","deha","dehat","dew","dewt","dewa","dewat","dewh","dewht","dewha","dewhat","u","ut","ua","
May 03 12:09:46 *	rihards has quit (Quit: rihards)
May 03 12:09:48 <crucify_me>	byorgey,< thanks > Psybur 
May 03 12:09:49 <[exa]>	dude, like
May 03 12:10:02 *	fishythefish (~fishythef@2620:10d:c091:180::1:fe22) has joined
May 03 12:10:32 <[exa]>	well -- just out of curiosity -- werent there already 2 people this week trying to get 'subs' working?
May 03 12:10:33 *	liamd has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 03 12:10:52 <monochrom>	Perhaps same person under two names?
May 03 12:11:01 <Psybur>	What is this subs supposed to be
May 03 12:11:01 *	liamd (~textual@38.142.126.50) has joined
May 03 12:11:06 *	Plato[m] (~platochat@plapadoo.de) has left ("User left")
May 03 12:11:07 *	[exa] getting paranoid!
May 03 12:11:31 <Psybur>	% reverse $ subs "dudewhat"
May 03 12:11:31 <yahb>	Psybur: ["dudewhat","dudewha","dudewht","dudewh","dudewat","dudewa","dudewt","dudew","dudehat","dudeha","dudeht","dudeh","dudeat","dudea","dudet","dude","dudwhat","dudwha","dudwht","dudwh","dudwat","dudwa","dudwt","dudw","dudhat","dudha","dudht","dudh","dudat","duda","dudt","dud","duewhat","duewha","duewht","duewh","duewat","duewa","duewt","duew","duehat","dueha","dueht","dueh","dueat","duea","duet","due"
May 03 12:11:36 <crucify_me>	[exa] please look at this . that is I .. you were extremely helpful. sorry yes my crestfallen nick is on a machine in sleep mode. sorry all
May 03 12:12:00 <[exa]>	crucify_me: oh nevermind! I was just surprised to see that happening multiple times :]
May 03 12:12:20 *	hackage fuzzy-dates 0.1.0.2 - Libary for parsing dates in strings in varied formats.  http://hackage.haskell.org/package/fuzzy-dates-0.1.0.2 (ReedOei)
May 03 12:12:21 <crucify_me>	https://ptpb.pw/LiMm  this is another attempt to write out the evaluation order
May 03 12:12:28 <crucify_me>	[exa], ^
May 03 12:13:16 <crucify_me>	I don't know how to fill in missing code, to emulate how you did it
May 03 12:13:26 *	awwtoemate (~awwtoemat@14.139.160.250) has joined
May 03 12:13:26 <crucify_me>	with the other func
May 03 12:13:59 <crucify_me>	another function called interleave
May 03 12:14:33 *	liamd has quit (Client Quit)
May 03 12:14:46 <[exa]>	crucify_me: I'm going to do something very impure but I guess it will help you
May 03 12:15:00 <crucify_me>	excellent
May 03 12:15:05 *	humanoyd_ has quit (Quit: WeeChat 2.1)
May 03 12:15:55 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 03 12:16:15 <awwtoemate>	hello there, I am new to haskell and I seem to be using too many parantheses. Is there any reading material that helps me here?
May 03 12:16:55 <oo_miguel>	awwtoemate: I am new to haskell as well but you can use $ and . in many places to reduce parentheses
May 03 12:17:29 <crucify_me>	generally I don't understand a word of haskell until I see an accurate rendering of the ghc output. so [[exa]] was very helpful :)
May 03 12:17:54 *	danthemyth has quit (Remote host closed the connection)
May 03 12:19:04 <crucify_me>	to see the eval order of subs   https://ptpb.pw/LsD5
May 03 12:19:24 *	aplainzetakind (~dk@85.100.179.208) has joined
May 03 12:19:30 *	albatross (44ad23c6@gateway/web/freenode/ip.68.173.35.198) has joined
May 03 12:19:33 *	sleffy (~sleffy@c-24-7-67-0.hsd1.ca.comcast.net) has joined
May 03 12:19:42 <fishythefish>	crucify_me: if you want a more interactive demonstration of evaluation order, you should play around with :sprint
May 03 12:19:45 <albatross>	hey guys, do you guys have an example using forM from Control.Monad?
May 03 12:19:56 <albatross>	I'm trying to figure out how this function works
May 03 12:20:20 <fishythefish>	albatross: do you already understand mapM, by any chance?
May 03 12:20:20 <albatross>	I have checked the hackage/internet and couldn't figure it out.
May 03 12:20:31 <crucify_me>	fishythefish, never hoid of it 
May 03 12:20:32 <albatross>	fishythefish, no i don't.
May 03 12:20:41 <monochrom>	awwtoemate: I would not use $.  If your parentheses are absolutely necessary due to operator precedence then it is not too many.  If you still don't like it, you can always convert "f (g x)" into "let y = g x in f y" or the "where" equivalent.
May 03 12:20:41 <albatross>	I tried understanding it but i need mroe help
May 03 12:20:45 *	beka has quit (Ping timeout: 264 seconds)
May 03 12:20:48 <crucify_me>	a tool that does similar ? that sounds great
May 03 12:21:02 <fishythefish>	albatross: how about sequence?
May 03 12:21:14 <albatross>	XD no.....
May 03 12:21:34 <[exa]>	crucify_me: still there?
May 03 12:21:42 <[exa]>	crucify_me: http://lpaste.net/365569
May 03 12:21:43 *	altjsus has quit (Quit: altjsus)
May 03 12:21:59 <fishythefish>	albatross: which monad functions are you comfortable with?
May 03 12:22:27 *	beala has quit (Quit: WeeChat 2.1)
May 03 12:22:43 <albatross>	fishythefish, I haven't gone over monads
May 03 12:22:43 <fishythefish>	% let x = map even [1..10]
May 03 12:22:43 <yahb>	fishythefish:
May 03 12:22:47 <[exa]>	crucify_me: I've changed the evaluation order a bit so that the output is more consumable, but you can remove the "leftPart `seq` rightPart `seq`" to see the order that is actually getting used
May 03 12:22:51 <fishythefish>	% :sprint x
May 03 12:22:51 <yahb>	fishythefish: x = _
May 03 12:22:56 *	whaletechho has quit (Read error: Connection reset by peer)
May 03 12:23:05 <fishythefish>	crucify_me: ^ this says that x hasn't been evaluated at all
May 03 12:23:09 *	adjofun has quit (Ping timeout: 260 seconds)
May 03 12:23:10 <fishythefish>	% length x
May 03 12:23:10 <yahb>	fishythefish: 10
May 03 12:23:13 <fishythefish>	% :sprint x
May 03 12:23:13 <yahb>	fishythefish: x = [_,_,_,_,_,_,_,_,_,_]
May 03 12:23:14 *	HarveyPwca has quit (Quit: Leaving)
May 03 12:23:30 <fishythefish>	crucify_me: ^ now the spine of x is evaluated, since that's what was required for computing the length
May 03 12:23:41 <fishythefish>	% take 2 x
May 03 12:23:41 <yahb>	fishythefish: [False,True]
May 03 12:23:41 *	raingloom (~raingloom@C2267141.catv.pool.telekom.hu) has joined
May 03 12:23:44 <fishythefish>	% :sprint x
May 03 12:23:45 <yahb>	fishythefish: x = [False,True,_,_,_,_,_,_,_,_]
May 03 12:23:52 *	path[l] (~vsi@199.201.64.134) has joined
May 03 12:24:05 <fishythefish>	crucify_me: ^ and now the first two elements have been fully evaluated since we printed them out
May 03 12:24:36 <fishythefish>	albatross: if you haven't been introduced to monads, forM won't make a lot of sense
May 03 12:24:45 *	navi_se (~gian@94.119.64.21) has joined
May 03 12:25:04 <albatross>	fishythefish, any recommended source for me to learn about monads?
May 03 12:25:27 *	darkred has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
May 03 12:25:38 <crucify_me>	[exa], fishythefish thanks so much , one moment I stepped away...
May 03 12:25:43 *	tomphp (~tomphp@2a01:4b00:8e02:f700:48d4:14c4:acff:c894) has joined
May 03 12:25:58 <fishythefish>	albatross: roughly speaking, it takes a bunch of `a` values and a function which maps `a` to `b`, except that the `b` is "decorated" with some additional info
May 03 12:26:20 <fishythefish>	albatross: if you were to just `fmap` this function over your bunch of `a`s, you'd get a bunch of decorated `b`s
May 03 12:26:43 <Zipheir>	albatross: Piponi's article is really good: http://blog.sigfpe.com/2006/08/you-could-have-invented-monads-and.html
May 03 12:26:56 <jle`>	you can understand forM_ for specific types without understanding monads
May 03 12:26:57 *	dented42 (~dented42@144.35.80.60) has joined
May 03 12:26:59 <fishythefish>	albatross: however, the decorators can actually be combined in such a way that instead of having a bunch of decorated `b`s, you can have a decorated bunch of `b`s
May 03 12:27:01 <[exa]>	crucify_me: does that print out the evaluation order for you?
May 03 12:27:22 <navi_se>	beginner here, trying to generate a list of random numbers such that the i-th number  is in (0, n-i), but this doesn't work (can't match type) [ randomRIO (0,n) | n <- [5,4,3]]
May 03 12:27:25 <fishythefish>	albatross: but I recommend playing around with specific instances of Monad and Traversable before trying to understand the fully general type
May 03 12:27:40 *	liamd (~textual@38.142.126.50) has joined
May 03 12:27:45 *	psychicist__ (~psychicis@5356A22B.cm-6-7c.dynamic.ziggo.nl) has joined
May 03 12:27:48 <jle`>	albatross: you can understand forM for specific instances, like IO and lists, without understanding monad or traversable in general
May 03 12:27:51 <[exa]>	navi_se: you can't define impure stuff (randoms) in pure environment
May 03 12:28:04 <jle`>	albatross: are you familiar with the 'map' function?
May 03 12:28:14 <jle`>	navi_se: you can use 'sequence' on that
May 03 12:28:19 <albatross>	jle` yes i am familiar with the map function
May 03 12:28:26 <jle`>	navi_se: sequence :: [IO Int] -> IO [Int]
May 03 12:28:30 *	zfnmxt (~zfnmxt@p5DF235D6.dip0.t-ipconnect.de) has joined
May 03 12:28:41 <jle`>	albatross: map lets you map an (a -> b) on an [a] to get a [b]
May 03 12:28:51 <albatross>	right
May 03 12:29:05 <jle`>	albatross: mapM (which is just forM but flipped) lets you map an (a -> IO b) on an [a] to get an IO [b]
May 03 12:29:18 <jle`>	albatross: map lets you map a 'pure' function; mapM lets you map an 'IO function'
May 03 12:29:27 *	liamd has quit (Client Quit)
May 03 12:29:43 *	xx00__ has quit (Quit: xx00__)
May 03 12:29:47 <fishythefish>	note that `map` still lets you map an "IO function", but the result type is `[IO b]`, not `IO [b]`
May 03 12:29:48 <jle`>	it maps the (a -> IO b) on all of the a's in [a], sequences all of the resulting IO actions, and collects the results together into the [b]
May 03 12:30:35 <albatross>	jle` thanks! that's making a lot of sense!
May 03 12:30:42 <fishythefish>	`IO` defines a way to collect all of the separate IO actions into a single one
May 03 12:30:54 *	supki (~matt@li305-103.members.linode.com) has joined
May 03 12:31:04 <jle`>	albatross: you can also think of it in terms of a map + sequence
May 03 12:31:11 <jle`>	sequence :: [IO a] -> IO [a]
May 03 12:31:13 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 03 12:31:38 <zfnmxt>	I wrote a basic parser in the spirit of ReadP, but I'd like to add line/column numbers for error reporting. I'm not really sure how to do that with the non-deterministic nature of the parser: individual are constantly failing. Here's what I have so far: https://github.com/zfnmxt/TigerHaskell/blob/master/compiler/src/DumbParser.hs
May 03 12:31:38 <fishythefish>	similarly, let's say your function is instead (a -> Maybe b), i.e. the result includes a possible failure state
May 03 12:31:40 <jle`>	sequence takes a list of IO actions, and returns a new IO action that represents executing all of the actions in the given list, and collects all of the results of those actions
May 03 12:31:45 *	nckx has quit (Quit: Updating my GNU GuixSD server — gnu.org/s/guix)
May 03 12:31:48 <fishythefish>	then mapM :: (a -> Maybe b) -> [a] -> Maybe [b]
May 03 12:31:52 *	Tops2 (~Tobias@dyndsl-095-033-092-129.ewe-ip-backbone.de) has joined
May 03 12:31:58 -NickServ-	crestfallen!~crestfall@128.32.176.159 has just authenticated as you (n_blownapart)
May 03 12:31:58 <jle`>	so mapM f xs = sequence (map f xs)
May 03 12:32:06 <fishythefish>	it maps your function over the list of `a`s, but the result is Nothing if any of the individual applications resulted in Nothing
May 03 12:33:10 <zfnmxt>	I was thinking of maybe changing the type of the Parser to String -> Either (some error type) [(a, String)] and then adjusting the way the monad works...but I'm really not sure.
May 03 12:33:53 *	danso has quit (Read error: Connection reset by peer)
May 03 12:34:04 <jle`>	zfnmxt: what is the issue you are running into?
May 03 12:34:16 <zfnmxt>	The issue is that I don't know how to proceed :)
May 03 12:34:27 <zfnmxt>	and don't want to go down the wrong path.
May 03 12:34:29 *	danso (~dan@modemcable078.123-81-70.mc.videotron.ca) has joined
May 03 12:34:34 <albatross>	thanks fishythefish and jle`
May 03 12:34:39 *	nckx (~nckx@tobias.gr) has joined
May 03 12:34:47 <navi_se>	jle`: so I did randomlist = sequence $ [ randomRIO (0,n) | n <- [5,4,3]]
May 03 12:34:49 <jle`>	albatross: no problem!
May 03 12:35:13 <jle`>	zmanian: i might recommend using Maybe (a, String) instead of [(a, String)]; the list doesn't really add too much in the long run
May 03 12:35:21 *	gestone has quit (Ping timeout: 240 seconds)
May 03 12:35:22 <jle`>	zmanian: you can think of Maybe as a list of zero or one items
May 03 12:35:33 <navi_se>	jle`: which works, but I am confused, I thought the return from the list comprehension was already a list
May 03 12:35:36 <zfnmxt>	jle`: That was meant for me, right?
May 03 12:35:41 <navi_se>	jle`: why do I need sequence?
May 03 12:35:44 <jle`>	oh yes, for zfnmxt , sorry!
May 03 12:35:51 <jle`>	navi_se: the result of the list comprehension is a list of IO actions
May 03 12:35:55 <fishythefish>	navi_se: because your list doesn't contain numbers, it contains IO actions which yield numbers
May 03 12:35:56 <jle`>	navi_se: an [IO Int]
May 03 12:36:05 <jle`>	navi_se: sequence takes a list of IO actions and returns an IO action producing a list
May 03 12:36:27 *	son0p_ has quit (Remote host closed the connection)
May 03 12:36:34 <jle`>	navi_se: then you can execute/sequence that IO action to get the list of numbers as a result
May 03 12:36:37 *	ccomb has quit (Ping timeout: 260 seconds)
May 03 12:36:49 *	ninegrid has quit (Quit: leaving)
May 03 12:37:05 *	chaosmasttter has quit (Ping timeout: 248 seconds)
May 03 12:37:34 *	pfurla has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
May 03 12:37:44 <zfnmxt>	jle`: How would that work for (<|>)?
May 03 12:37:45 *	piyush-kurur has quit (Read error: Connection reset by peer)
May 03 12:37:57 *	nckx has quit (Client Quit)
May 03 12:37:58 *	liamd (~textual@38.142.126.50) has joined
May 03 12:38:01 <jle`>	zfnmxt: the same thing, just only ever keeping the first value if it exists
May 03 12:38:12 <jle`>	it's kind of like a quotienting of your entire program
May 03 12:38:19 <crucify_me>	[exa] still trying to get it to work..
May 03 12:38:29 <jle`>	if you only ever 'get' the first possible result, then you might as well just only ever keep the first result
May 03 12:38:30 *	nckx (~nckx@tobias.gr) has joined
May 03 12:39:22 *	x77686d has quit (Quit: x77686d)
May 03 12:39:22 *	ccomb (~ccomb@83.66.146.217) has joined
May 03 12:39:47 *	infinity0 (~infinity0@freenet/developer/infinity0) has joined
May 03 12:40:31 <crucify_me>	[exa], thanks that ran with interleave 5 [1,2,3] . the way we did it for subseqs, that is doable with interleave as well?
May 03 12:40:48 <zfnmxt>	jle`: Wait, at the moment if I do runParser (munch1 (\_ -> True)) "abc" I'll get [("a", "bc"), ("ab", "c"), ("abc", "")]...right?
May 03 12:41:05 <zfnmxt>	Oh, wait.
May 03 12:41:09 <jle`>	you would just get `Just ("a", "bc")`
May 03 12:41:11 <jle`>	if you change your parser type
May 03 12:41:11 <zfnmxt>	I was thinking of many there.
May 03 12:41:21 <jle`>	or ('a', "bc") depending on how munch1 is defined
May 03 12:41:33 <crucify_me>	I haven't acclimated to this output yet. Too much glare on my screen..
May 03 12:41:48 *	awwtoemate has quit (Quit: Leaving)
May 03 12:42:10 <jle`>	zfnmxt: everything should work more or less the same, the only difference is at the end you only get zero or one results, which is usually what people want anyway
May 03 12:42:10 <zfnmxt>	jle`: This would have the consequence of making the order of (<|>) matter, right?
May 03 12:42:13 *	WhatisRT (~whatisrt@client-182.wlan.hu-berlin.de) has joined
May 03 12:42:28 <zfnmxt>	i.e. (<|>) won't be commutative. Right now it is.
May 03 12:42:32 <zfnmxt>	At least I think it is. :)
May 03 12:42:38 <jle`>	yeah, it makes the "first" result the privileged result that gets kept instead of thrown away
May 03 12:43:02 <crucify_me>	[exa] I need to go. thanks a lot I will study this and fishythefish 's suggestion. pax  back soon as crestfallen
May 03 12:43:03 <jle`>	zfnmxt: disregarding laziness, it isn't quite commutative in the sense that the final results in the end might have different order anyway
May 03 12:43:07 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 03 12:43:11 <jle`>	zfnmxt: but yes it's commutative if you disregard order of results
May 03 12:43:33 <zfnmxt>	jle`: I do, since the only result I consider is (_, "") and if you have more than one of those the parser's ambiguous :P
May 03 12:43:46 *	eschnett has quit (Quit: eschnett)
May 03 12:43:52 Python interface unloaded
May 03 12:43:52 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu May  3 12:43:52 2018

**** BEGIN LOGGING AT Fri May  4 16:53:08 2018

May 04 16:53:08 *	Now talking on #haskell
May 04 16:53:08 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 04 16:53:08 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
May 04 16:53:08 *	Channel #haskell url: http://www.haskell.org/
May 04 16:57:09 *	hjdskes has quit (Ping timeout: 260 seconds)
May 04 16:57:49 *	Zipheir has quit (Quit: Zipheir)
May 04 16:58:24 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 04 16:58:45 <beefjoe>	why do I get an error https://hastebin.com/rutomuteri.hs
May 04 16:58:49 <crestfallen>	well, I guess the textbook assumes I can follow the evaluation of perms(permutations) here. no clue. it uses the adjacent function interleave. more fun with longhand evaluation if anyone wants to help, thanks https://ptpb.pw/pFmZ
May 04 16:59:05 *	xx00__ has quit (Quit: xx00__)
May 04 16:59:12 *	tromp (~tromp@ip-217-103-3-94.ip.prioritytelecom.net) has joined
May 04 16:59:38 *	acarrico (~acarrico@dhcp-68-142-35-239.greenmountainaccess.net) has joined
May 04 16:59:58 <pavonia>	beefjoe: You're mixing the position of the list and number parameters in your definitions
May 04 17:00:04 *	sdx23 has quit (Remote host closed the connection)
May 04 17:00:13 *	sdx23 (~sdx23@unaffiliated/sdx23) has joined
May 04 17:00:41 *	Zipheir (~Zipheir@98.4.178.27) has joined
May 04 17:00:53 <pavonia>	beefjoe: Also, in (x : y), x is the first element and y the rest list
May 04 17:01:09 <crestfallen>	i.e. how do I write out the evaluation, when interleave is using a list of lists as its 2nd argument.
May 04 17:02:03 <beefjoe>	pavonia but I want to be able to do this [1..10] `nth` 3
May 04 17:02:12 <beefjoe>	get the list first
May 04 17:02:54 <pavonia>	Yes, that is what your type says but your definitions use flipped parameters
May 04 17:03:42 *	twk- has quit (Ping timeout: 268 seconds)
May 04 17:03:45 *	tromp has quit (Ping timeout: 248 seconds)
May 04 17:04:02 *	fmixing (~fmixing@5.18.211.209) has joined
May 04 17:04:02 <pavonia>	crestfallen: Have you tried evaluating some small examples by hand?
May 04 17:04:40 <crestfallen>	yeah, if I may show you my evaluation of interleave ... pasting
May 04 17:05:10 <crestfallen>	https://ptpb.pw/fxMT pavonia 
May 04 17:05:39 <crestfallen>	so I've never done it with the composition before
May 04 17:06:31 *	beefjoe has quit (Ping timeout: 256 seconds)
May 04 17:06:54 *	beefjoe (~beefjoe@unaffiliated/beefjoe) has joined
May 04 17:07:25 <beefjoe>	pavonia sry got disconnected
May 04 17:07:44 <pavonia>	crestfallen: That seems wrong. In the second step, you don't have any 1 anymore
May 04 17:07:56 <beefjoe>	didn't see if you wrote anything
May 04 17:08:14 *	cemerick_ (~cemerick@c-73-47-112-232.hsd1.ma.comcast.net) has joined
May 04 17:08:27 *	fmixing has quit (Ping timeout: 240 seconds)
May 04 17:08:37 <pavonia>	beefjoe: The last thing I wrote was "Yes, that is what your type says but your definitions use flipped parameters"
May 04 17:09:08 <pavonia>	beefjoe: Look at lines 3 and 4, you use the number first there
May 04 17:09:58 <beefjoe>	nth 0 (x : _)  = Just x
May 04 17:09:58 <beefjoe>	nth n (_ : xs) = nth (n - 1) xs
May 04 17:10:07 <crestfallen>	pavonia, I have a better version a member helped me write. As for perms, I just cant visualize how to start .. say with > map (interleave 5) (perms [6,7]) ... I can see how that works in ghc, but cannot write it. let me paste the improved version of interleave
May 04 17:10:10 <beefjoe>	I still get an error that way
May 04 17:10:34 <beefjoe>	I'd like to receive the list first then the integer
May 04 17:10:58 <crestfallen>	https://ptpb.pw/zNxd this is how interleave should look
May 04 17:11:10 <pavonia>	beefjoe: Your type is "nth :: [a] -> Integer -> Maybe a". 0 is not of type [a], neither is (x : _) of type Integer
May 04 17:11:45 *	cemerick has quit (Ping timeout: 264 seconds)
May 04 17:12:23 <pavonia>	crestfallen: Yep, that looks much better
May 04 17:12:47 *	synProgrammer has quit (Quit: Connection closed for inactivity)
May 04 17:13:05 *	jsomedon has quit (Quit: jsomedon)
May 04 17:13:16 <beefjoe>	how would (x : _) become integer ?
May 04 17:13:21 *	jsomedon (~jsomedon@222.131.158.129) has joined
May 04 17:13:37 <crestfallen>	pavonia, in the first version, the 1 is retained in this part :    = 1: [5,2,3] : map (2:) (interleave 5 [3]  )
May 04 17:13:41 <pavonia>	beefjoe: It doesn't
May 04 17:14:04 *	hjdskes has quit (Ping timeout: 260 seconds)
May 04 17:14:57 <crestfallen>	but yeah it loses the lists already processed
May 04 17:15:17 *	mnoonan has quit (Remote host closed the connection)
May 04 17:15:23 *	mnoonan_ (~mnoonan@cpe-69-201-46-148.twcny.res.rr.com) has joined
May 04 17:15:44 <crestfallen>	but pavonia this is how I'd like to write every function ... pasting ...
May 04 17:16:17 <crestfallen>	https://ptpb.pw/LsD5
May 04 17:16:21 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 04 17:16:28 <crestfallen>	this is for a function called subseqs
May 04 17:16:39 *	figurehe4d (~figurehe4@cpe-24-25-205-201.san.res.rr.com) has joined
May 04 17:16:58 *	cn28h has quit (Quit: WeeChat 0.4.2)
May 04 17:17:33 <crestfallen>	but as you can see the two methods are in reverse, one for human consumption. this is also confusing me
May 04 17:18:18 *	jgertm has quit (Ping timeout: 256 seconds)
May 04 17:18:22 <Welkin>	not fit for human consumption
May 04 17:18:22 <pavonia>	What exactly is the problem with that?
May 04 17:18:24 *	path[l] (~vsi@199.201.64.134) has joined
May 04 17:18:25 <Welkin>	(but okay for dogs?)
May 04 17:19:05 <beefjoe>	https://hastebin.com/uxiguqohef.hs
May 04 17:19:05 <hpc>	Welkin: https://hillelwayne.com/post/falsehoods-programmers-believe-about-dogs/
May 04 17:19:09 <beefjoe>	like that ?
May 04 17:19:54 *	kefin__ has quit (Read error: Connection reset by peer)
May 04 17:20:11 <pavonia>	beefjoe: Looks correct
May 04 17:20:22 *	kefin__ (~kefin@188.113.91.146) has joined
May 04 17:20:30 <beefjoe>	    Couldn't match expected type ‘Integer’ with actual type ‘[a]’
May 04 17:20:45 <pavonia>	Err right, in line 4 there's still a flipped call
May 04 17:20:55 <infinisil>	Oh my god
May 04 17:21:09 <infinisil>	I just spent a couple hours on this but I finally got it working
May 04 17:21:31 <infinisil>	Turns out I need forall to make it work, which I've never used before, but now I'm proud to have needed to use it
May 04 17:21:45 *	conal (~conal@207.189.24.163) has joined
May 04 17:22:57 *	zachk has quit (Quit: Leaving)
May 04 17:23:09 <infinisil>	Wait, nevermind, it doesn't work
May 04 17:23:11 <Welkin>	infinisil: rank-2 types
May 04 17:23:11 <Welkin>	?
May 04 17:23:28 <Welkin>	you shouldn't need a forall unless you are using scoped type variables
May 04 17:23:39 <Welkin>	or rank-n types (like for ST
May 04 17:23:40 <crestfallen>	pavonia, its ok, I can sort that one out. my problem is combining perms and interleave in a way that is easy to follow. pavonia 
May 04 17:23:48 <Welkin>	there is always an implicit forall
May 04 17:24:18 <infinisil>	Welkin: I think Rank2Types
May 04 17:24:25 <infinisil>	It doesn't work without the extension
May 04 17:24:32 <EvanR>	you indeed do need forall if youre writing a rank 2 polymorphic function, because higher rank polymorphism precludes inference
May 04 17:24:36 <crestfallen>	if you could get me started on that..
May 04 17:24:40 *	aarvar has quit (Ping timeout: 268 seconds)
May 04 17:24:40 *	thc202 has quit (Ping timeout: 268 seconds)
May 04 17:24:52 *	BartAdv has quit (Quit: Connection closed for inactivity)
May 04 17:24:57 *	raingloom has quit (Ping timeout: 240 seconds)
May 04 17:25:32 <pavonia>	crestfallen: Well, using that first notation method, it's straight-forward, as you replace function calls on the right-hand side successively
May 04 17:25:37 <infinisil>	But while this now compiles, it doesn't really do what i wanted originally
May 04 17:25:54 *	hjdskes has quit (Ping timeout: 268 seconds)
May 04 17:26:30 <pavonia>	infinisil: Could you paste a code sample?
May 04 17:26:55 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 04 17:27:01 <pavonia>	Whenever I need to enable Rank2Types, it turns out I'm doing something wrong :p
May 04 17:27:02 <infinisil>	Hmm it's a 500 line long file :P, but yes hold on
May 04 17:27:40 <Welkin>	500 feet?
May 04 17:27:47 <crestfallen>	you mean the first occurrence of (perms xs)   right?
May 04 17:28:18 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 04 17:29:31 *	DTZUZU has quit (Quit: WeeChat 1.9)
May 04 17:29:53 *	exarkun has quit (Ping timeout: 248 seconds)
May 04 17:30:12 <pavonia>	crestfallen: You replace the function call with its definiton (with parameters replaced). So you get a growing list of nested values that then shrinks when being simplified
May 04 17:30:49 <pavonia>	crestfallen: Like what you did here in the first example https://ptpb.pw/LsD5
May 04 17:30:59 *	xkapastel has quit (Quit: Connection closed for inactivity)
May 04 17:31:09 *	jonlaing has quit (Remote host closed the connection)
May 04 17:31:29 *	hjdskes has quit (Ping timeout: 248 seconds)
May 04 17:31:36 <pavonia>	It's not different from that, just two different functions being applied in an interleaved way
May 04 17:31:42 *	conal has quit (Quit: Computer has gone to sleep.)
May 04 17:31:57 *	jix (~jix@jix.omnomnom.pizza) has joined
May 04 17:31:57 *	jimmyrcom_ has quit (Ping timeout: 240 seconds)
May 04 17:32:25 *	swflint (~swflint@fsf/member/swflint) has joined
May 04 17:32:45 *	gestone has quit (Ping timeout: 264 seconds)
May 04 17:32:56 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 04 17:34:01 <crestfallen>	so with perms [5,6,7] we start with the empty list on the right, like perms [5,6,7] = concat (map (interleave 7) perms [])    ? 
May 04 17:34:06 <crestfallen>	pavonia, 
May 04 17:34:27 *	twk- (~thewormki@unaffiliated/twk-) has joined
May 04 17:35:19 *	reggie_ (~textual@c-71-227-235-231.hsd1.wa.comcast.net) has joined
May 04 17:35:20 <pavonia>	No, it's perms (x:xs) = concat (map (interleave x) (perms xs)) with x = 5, xs = [6,7]. No empty list there
May 04 17:35:44 *	wrengr is now known as wrengr_away
May 04 17:35:55 <crestfallen>	ok thanks I can run with that. really appreciate it pavonia 
May 04 17:36:47 <pavonia>	No problem
May 04 17:36:47 *	conal (~conal@207.189.24.163) has joined
May 04 17:37:23 *	tromp (~tromp@ip-217-103-3-94.ip.prioritytelecom.net) has joined
May 04 17:37:24 *	hjdskes has quit (Ping timeout: 260 seconds)
May 04 17:37:25 *	jimmyrcom_ (~fold@71-11-240-211.dhcp.dntn.tx.charter.com) has joined
May 04 17:37:53 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 04 17:37:54 *	jsomedon has quit (Quit: jsomedon)
May 04 17:37:55 *	reggie_ has quit (Client Quit)
May 04 17:38:15 *	silver_ (~silver@mm-145-59-85-93.mgts.dynamic.pppoe.byfly.by) has joined
May 04 17:38:24 *	jsomedon (~jsomedon@222.131.158.129) has joined
May 04 17:38:36 *	AndreasK has quit (Quit: Going offline, see ya! (www.adiirc.com))
May 04 17:39:35 *	caryoscelus (~caryoscel@176.195.94.39) has joined
May 04 17:40:22 Python interface unloaded
May 04 17:40:22 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri May  4 17:40:22 2018

**** BEGIN LOGGING AT Sat May  5 11:40:29 2018

May 05 11:40:29 *	Now talking on #haskell
May 05 11:40:29 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 05 11:40:29 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
May 05 11:40:29 *	Channel #haskell url: http://www.haskell.org/
May 05 11:41:18 <cocreature>	the cabal file and the package.yaml file play the same role. package.yaml just uses a different syntax and has some convenience features
May 05 11:41:31 <cocreature>	the cabal file is automatically generated from that
**** BEGIN LOGGING AT Sat May  5 11:41:37 2018

May 05 11:41:37 *	Now talking on #haskell
May 05 11:41:37 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 05 11:41:37 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
May 05 11:41:37 *	n_blownapart (~crestfall@76.243.123.17) has joined
May 05 11:41:38 *	Channel #haskell url: http://www.haskell.org/
May 05 11:41:42 <AndreasK>	DataDrake: O
May 05 11:41:42 <AndreasK>	DataDrake: O
May 05 11:41:44 <Athas>	Today's Cabal/Stack adventure is this error message about "This package indirectly depends on multiple versions of the same package": https://paste.fedoraproject.org/paste/DAD2IvWfeyRRzPfz6MwHmA
May 05 11:41:44 <Athas>	Today's Cabal/Stack adventure is this error message about "This package indirectly depends on multiple versions of the same package": https://paste.fedoraproject.org/paste/DAD2IvWfeyRRzPfz6MwHmA
May 05 11:41:44 <Athas>	However, I cannot see which package has multiple versions.  Can anyone else figure it out?
May 05 11:41:44 <Athas>	However, I cannot see which package has multiple versions.  Can anyone else figure it out?
**** ENDING LOGGING AT Sat May  5 11:41:44 2018

May 05 11:41:45 *	crucify_me has quit (Client Quit)
**** ENDING LOGGING AT Sat May  5 11:42:00 2018

**** BEGIN LOGGING AT Sat May  5 11:42:31 2018

May 05 11:42:31 *	Now talking on #haskell
May 05 11:42:31 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 05 11:42:31 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
May 05 11:42:32 *	Channel #haskell url: http://www.haskell.org/
May 05 11:42:36 <DataDrake>	thank you AndreasK
May 05 11:42:46 *	Tesseraction_u has quit (Remote host closed the connection)
May 05 11:43:13 *	leothrix has quit (Quit: ZNC 1.6.6 - http://znc.in)
May 05 11:43:50 *	LeLa_ has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
May 05 11:44:45 *	conal (~conal@209.58.139.26) has joined
May 05 11:45:16 >lambdabot<	@let subseqs :: [a] -> [[a]]; subseqs [] = [[]]; subseqs (x:xs) = subseqs xs ++ map (x:) (subseqs xs)
May 05 11:45:23 *	snorge2 (~scott@162.243.6.197) has joined
May 05 11:45:38 <glguy>	crucify_me/n_blownapart/crestfallen: It will help continuity if you stuck to one name
May 05 11:45:59 *	baweaver is now known as baweaver_away
May 05 11:46:00 *	baweaver_away is now known as baweaver
May 05 11:46:02 *	Sampuka has quit (Ping timeout: 268 seconds)
May 05 11:46:39 <crestfallen>	glguy thank you I had a complaint about crucify me on a different channel 
May 05 11:47:25 <crestfallen>	also I was trying to configure hexchat and it ran through my nicks sorry
May 05 11:47:35 *	snorge2 has quit (Max SendQ exceeded)
May 05 11:48:21 *	hackage ansi-terminal 0.8.0.3 - Simple ANSI terminal support, with Windows compatibility  http://hackage.haskell.org/package/ansi-terminal-0.8.0.3 (mpilgrem)
May 05 11:48:28 <crestfallen>	I don't know how to use an irc client very well
May 05 11:48:49 *	ian_andrich has quit (Ping timeout: 260 seconds)
May 05 11:48:57 *	paolino_ (~paolino@146-241-53-136.dyn.eolo.it) has joined
May 05 11:49:18 *	cynapse (~chris@d24-141-240-242.home.cgocable.net) has joined
May 05 11:49:19 *	cynapse_ (~chris@d24-141-240-242.home.cgocable.net) has joined
May 05 11:51:39 <crestfallen>	glguy can we agree on crestfallen ? its a pretty word that pertains to both birds and mammals 
May 05 11:51:51 *	wchresta_ has quit (Ping timeout: 240 seconds)
May 05 11:53:38 *	Sonderblade has quit (Quit: Konversation terminated!)
May 05 11:57:37 <crestfallen>	@let subseqs :: [x] -> [[x]]; subseqs [] = [[]]; subseqs (x:xs) = subseqs xs ++ map (x:) (subseqs xs)
May 05 11:57:39 <lambdabot>	 .L.hs:160:1: error:
May 05 11:57:39 <lambdabot>	     Duplicate type signatures for ‘subseqs’
May 05 11:57:39 <lambdabot>	     at .L.hs:158:1-7
May 05 11:58:31 *	snorge2 (~scott@162.243.6.197) has joined
May 05 11:58:45 <crestfallen>	@let subss :: [x] -> [[x]]; subss [] = [[]]; subss (x:xs) = subss xs ++ map (x:) (subss xs)
May 05 11:58:46 <lambdabot>	 Defined.
May 05 11:59:18 <crestfallen>	not a math person.. why is this function called subsequences ?
May 05 11:59:30 <crestfallen>	> subss [1,2,3]
May 05 11:59:32 <lambdabot>	 [[],[3],[2],[2,3],[1],[1,3],[1,2],[1,2,3]]
May 05 11:59:35 *	leafiest has quit (Ping timeout: 265 seconds)
May 05 12:00:03 *	snorge2 has quit (Max SendQ exceeded)
May 05 12:00:24 *	x1ddos_ (~crhym3@2a02:aa12:a682:7500:9b47:4741:23b1:d575) has joined
May 05 12:00:31 *	osa1 (~omer@haskell/developer/osa1) has joined
May 05 12:00:51 <mniip>	crestfallen, it lists all subsequences of the input list
May 05 12:00:55 *	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined
May 05 12:00:58 *	codesoup has quit (Remote host closed the connection)
May 05 12:01:33 *	kefin__ has quit (Ping timeout: 264 seconds)
May 05 12:02:28 <crestfallen>	mniip, the book says subsequences are "given by all possible combinations of excluding or including each element of the list.."
May 05 12:02:36 <mniip>	yes
May 05 12:02:48 *	vertigo__ (uid279024@gateway/web/irccloud.com/x-fckwvygaxqrpvjak) has joined
May 05 12:02:50 *	AndiK (~AndreasK@p238-130.vps.tuwien.ac.at) has joined
May 05 12:02:57 <crestfallen>	so eg how is [1,3] a subsequence of the original list?
May 05 12:03:19 <mniip>	you exclude 2
May 05 12:03:20 *	dan_f has quit (Quit: dan_f)
May 05 12:03:22 <mniip>	but include 1 and 3
May 05 12:03:57 <mniip>	that's what subsequences usually mean in mathematics
May 05 12:03:57 *	guillaume has quit (Disconnected by services)
May 05 12:04:24 <mniip>	the sequence of prime numbers is a subsequence of natural numbers
May 05 12:04:49 <crestfallen>	ok thank you, oh so in other words a subset
May 05 12:04:58 *	jao (~jao@pdpc/supporter/professional/jao) has joined
May 05 12:05:37 *	blankhart has quit (Ping timeout: 248 seconds)
May 05 12:05:43 <mniip>	no, it preserves the order
May 05 12:05:45 *	AndreasK has quit (Ping timeout: 264 seconds)
May 05 12:05:45 *	AndiK is now known as AndreasK
May 05 12:05:56 <mniip>	[3, 1] is not a subsequence
May 05 12:06:06 <crestfallen>	one moment
May 05 12:06:18 *	conal has quit (Quit: Computer has gone to sleep.)
May 05 12:07:07 <crestfallen>	mniip, thanks the meaning/use will become clearer . this is part of a numbers game in a book example. thanks again
May 05 12:07:08 *	conal (~conal@209.58.139.26) has joined
May 05 12:07:10 *	ystael (~ystael@209.6.50.55) has joined
May 05 12:08:18 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 05 12:08:26 *	andrey (~andrey@78-106-21-218.broadband.corbina.ru) has joined
May 05 12:09:10 *	jao has quit (Disconnected by services)
May 05 12:09:30 *	jao (~jao@pdpc/supporter/professional/jao) has joined
May 05 12:09:53 *	caryoscelus has quit (Ping timeout: 248 seconds)
May 05 12:10:11 *	urodna (~urodna@unaffiliated/urodna) has joined
May 05 12:10:27 *	beka has quit (Read error: Connection reset by peer)
May 05 12:10:30 *	conal has quit (Client Quit)
May 05 12:10:38 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 05 12:10:40 *	ctrlsbstr has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 05 12:10:53 *	snorge2 (~scott@162.243.6.197) has joined
May 05 12:11:15 *	codesoup (~codesoup@174.119.180.211) has joined
May 05 12:11:27 <setre>	howd do I use  ghcid --test :main when main is ambiguous --test :Foo.main doesn't work
May 05 12:11:36 *	PLPD-Bot has quit (Remote host closed the connection)
May 05 12:11:46 *	gtomas (~gtomas@2a00:23c4:bc1c:5000:6b68:c787:7636:89bc) has joined
May 05 12:12:42 <setre>	oh doh, dropping the colon work
May 05 12:12:43 *	snorge2 has quit (Max SendQ exceeded)
May 05 12:12:46 <crestfallen>	thanks this made it stick : "the sequence of prime numbers is a subsequence of natural numbers"
May 05 12:12:59 *	kdridi has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 05 12:13:32 *	PLPD-Bot (~matrixirc@plapadoo.de) has joined
May 05 12:14:09 *	gawen has quit (Remote host closed the connection)
May 05 12:14:18 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 05 12:14:35 *	sw1nn_ (~sw1nn@2a00:23c5:c95c:2800:8085:c6f4:4ac3:79ee) has joined
May 05 12:14:38 *	gawen (~gawen@movzbl.root.sx) has joined
May 05 12:15:04 *	beka has quit (Ping timeout: 260 seconds)
May 05 12:15:08 *	robotroll (~robotroll@unaffiliated/robotroll) has joined
May 05 12:16:04 Python interface unloaded
May 05 12:16:04 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sat May  5 12:16:04 2018

**** BEGIN LOGGING AT Sat May  5 13:10:08 2018

May 05 13:10:08 *	Now talking on #haskell
May 05 13:10:08 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 05 13:10:08 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
May 05 13:10:08 *	Channel #haskell url: http://www.haskell.org/
May 05 13:10:29 *	JuanMiguel (~juanmi@90.red-83-50-69.dynamicip.rima-tde.net) has joined
May 05 13:10:54 *	beka (~beka@199.241.201.187) has joined
May 05 13:11:05 *	xcmw (~textual@cpe-69-133-49-123.cinci.res.rr.com) has joined
May 05 13:11:06 <crestfallen>	why does this (and other unix commands?) not work in ghci ' > :! cd .. '  
May 05 13:11:13 *	borkr has quit (Ping timeout: 248 seconds)
May 05 13:11:34 <crestfallen>	whereas ' > :! pwd ' works fine
May 05 13:12:10 <crestfallen>	curious
May 05 13:12:17 <cocreature>	because cd is a shell builtin
May 05 13:12:23 *	doyougnu (~doyougnu@c-71-237-204-135.hsd1.or.comcast.net) has joined
May 05 13:12:36 *	x77686d (~whm@c-107-2-11-38.hsd1.az.comcast.net) has joined
May 05 13:12:37 *	JuanMiguel has quit (Client Quit)
May 05 13:13:13 <crestfallen>	thanks looking up the distinction
May 05 13:13:22 *	jmcarthur (~jmcarthur@69.142.145.138) has joined
May 05 13:13:58 *	pera (~pera@unaffiliated/pera) has joined
May 05 13:14:22 *	snorge2 (~scott@162.243.6.197) has joined
May 05 13:14:57 *	liamd (~textual@c-73-211-115-246.hsd1.il.comcast.net) has joined
May 05 13:15:35 <infinisil>	Hmm, I'm using https://hackage.haskell.org/package/monad-logger-0.3.28.5
May 05 13:15:47 <MarcelineVQ>	cocreature: it is? whacky, I've never thought to actually  man cd
May 05 13:16:05 *	snorge2 has quit (Max SendQ exceeded)
May 05 13:16:07 <infinisil>	It defines some TemplateHaskell functions that take a Text and log it, usable like `$(logDebug) "foobar"`
May 05 13:16:15 *	lnostdal (~lnostdal@85-118-78-184.mtel.net) has joined
May 05 13:16:19 *	GodotMisogi has quit (Ping timeout: 260 seconds)
May 05 13:16:51 <infinisil>	But if I want to log an actual object by `show`ing it, I need to do `$(logDebug) $ "result: " <> pack (show result)`
May 05 13:16:52 <MarcelineVQ>	cocreature: so does ghci use chdir() directly for :cd ?
May 05 13:17:00 <cocreature>	MarcelineVQ: how else is it going to work? you can’t launch a new process and have it change pwd of the one that launched it afaik
May 05 13:17:01 <infinisil>	Isn't there something nicer?
May 05 13:17:07 <cocreature>	probably, never looked at the implementation
May 05 13:17:19 <MarcelineVQ>	cocreature: I've just never even thought of it hehe
May 05 13:21:40 *	pio__ has quit (Quit: pio__)
May 05 13:22:09 *	paolino_ has quit (Ping timeout: 260 seconds)
May 05 13:22:27 *	sdothum has quit (Ping timeout: 240 seconds)
May 05 13:23:09 <thekyriarchy>	when i run GHCI i get this:
May 05 13:23:17 <thekyriarchy>	Prelude> typeOf
May 05 13:23:18 <thekyriarchy>	<interactive>:11:1: error: Variable not in scope: typeOf
May 05 13:23:19 *	asheshambasta has quit (Quit: Leaving.)
May 05 13:23:27 <thekyriarchy>	well, when i try to run typeOf
May 05 13:23:35 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 05 13:24:08 *	vlatkoB has quit (Remote host closed the connection)
May 05 13:24:10 <cocreature>	thekyriarchy: you need to import Data.Typeable (or Type.Reflection)
May 05 13:24:28 <cocreature>	thekyriarchy: you can use hoogle to figure out which modules contain an identifier, e.g., https://hoogle.haskell.org/?hoogle=typeof
May 05 13:25:54 <dyl>	Question for hackage people:
May 05 13:26:08 <dyl>	How much has DuckDuckGo mapping !g to hackage search resulted in query spam?
May 05 13:26:12 <dyl>	!h* sorry
May 05 13:26:19 <dyl>	That’s the point though, easy to type the wrong pattern :p
May 05 13:26:47 <EvanR>	how much go could duckduckdgo if duckduckgo could go
May 05 13:26:56 *	snorge2 (~scott@162.243.6.197) has joined
May 05 13:27:08 *	conal (~conal@209.58.139.26) has joined
May 05 13:27:54 <dyl>	I dunno
May 05 13:28:12 <thekyriarchy>	cocreature: thanks!
May 05 13:28:37 *	snorge2 has quit (Max SendQ exceeded)
May 05 13:28:55 <dyl>	crestfallen: subprocess versus in process stscall.
May 05 13:28:58 <dyl>	Syscall*
May 05 13:29:03 <dyl>	! is a subproc.
May 05 13:29:21 *	rostero (uid236576@gateway/web/irccloud.com/x-vnfhxvtvnuxvnqup) has joined
May 05 13:29:33 <dyl>	It’s spawning a shell and running a command then piping the results back.
May 05 13:29:40 *	oisdk (~textual@104.129.24.147.adsl.inet-telecom.org) has joined
May 05 13:30:04 *	tusj has quit (Quit: Leaving)
May 05 13:30:09 <catern>	hmm
May 05 13:30:22 *	perspectival has quit (Ping timeout: 264 seconds)
May 05 13:30:27 <catern>	I think I've thought of a better interface for delimited continuations
May 05 13:30:42 <catern>	a single function, suspend : Cont B A -> (Cont A B -> B) -> A
May 05 13:31:11 <nisstyre>	catern: I still have not found a single good use for delimited continuations in real code
May 05 13:31:14 *	conal has quit (Client Quit)
May 05 13:31:20 <nisstyre>	there is some kind of use for parsers I think
May 05 13:31:28 <nisstyre>	but other than that I have no idea what to do with them
May 05 13:31:32 *	oish (~charlie@a80-100-188-25.adsl.xs4all.nl) has joined
May 05 13:31:39 <catern>	when statically typed, they are a complete replacement for monads :)
May 05 13:31:42 <nisstyre>	I think I read somewhere that they can be used as a monad
May 05 13:31:48 <nisstyre>	I guess that's how it is in Haskell
May 05 13:31:51 <nisstyre>	yeah
May 05 13:32:02 <nisstyre>	in Racket you have shift and reset or w/e
May 05 13:32:33 *	ctome has quit (Ping timeout: 248 seconds)
May 05 13:32:39 <AndreasK>	dyl: ddg has about 20M queries a day, if one out of every 1k uses a !search thats 20k queries. If half of that are intended to google we are at 10k, and if from these every 1k result in hoogle instead, it's 10 queries a day that are misdirected to hoogle
May 05 13:32:54 *	ctrlsbstr (~ctrlsbstr@174.27.11.20) has joined
May 05 13:33:00 *	coot has quit (Quit: coot)
May 05 13:33:08 <nisstyre>	catern: do you use delimited conts?
May 05 13:33:34 <catern>	not directly, just like talking about them :)
May 05 13:33:51 *	acarrico has quit (Ping timeout: 240 seconds)
May 05 13:34:09 <nisstyre>	catern: I'm assuming you've read http://okmij.org/ftp/continuations/#tutorial and all the other crap on there?
May 05 13:34:09 <dyl>	AndreasK: but !g is probably a disproportionately large number of queries
May 05 13:34:11 *	Stekke_ has quit (Quit: Page closed)
May 05 13:34:13 <dyl>	And !h is an easy typo
May 05 13:34:15 <catern>	ya
May 05 13:36:37 <AndreasK>	dyl: Depends on the keyboard I guess but g/h never seemed like a conmon mistake to me.
May 05 13:36:46 <dyl>	Happens more on mobile
May 05 13:36:49 *	jmcarthur has quit (Ping timeout: 248 seconds)
May 05 13:37:31 <mud>	AndreasK: Depends how you type. It's very common on phones and with hunt-and-peckers and other weird strange styles.
May 05 13:37:56 <AndreasK>	I guess. But even if you increase each factor I used above by 10x, it's still just 1k/day
May 05 13:37:59 <beefjoe>	What does this line mean
May 05 13:37:59 <beefjoe>	zip (x:xs) (y:ys) = (x,y) : zip xs ys
May 05 13:38:31 <beefjoe>	I mean the x:xs
May 05 13:38:35 <beefjoe>	what's the : for
May 05 13:39:11 <mud>	beefjoe: It's the cons constructor for lists, which adds x to the start of a list named xs. Or in this case it's destructuring a list, getting the head of it and the rest
May 05 13:39:22 <DataDrake>	I think it's <first>:<rest>
May 05 13:39:56 <beefjoe>	thx mud
May 05 13:39:57 *	snorge2 (~scott@162.243.6.197) has joined
May 05 13:39:58 <DataDrake>	admittedly been awhile since I've actually written haskell
May 05 13:40:19 *	jkachmar (uid226591@gateway/web/irccloud.com/x-vzvluuelptrpxsud) has joined
May 05 13:40:25 <beefjoe>	hehe
May 05 13:40:33 *	andreabe_ (~andreabed@ip-202-179-130-98.mel.xi.com.au) has joined
May 05 13:41:01 *	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined
May 05 13:41:07 *	DTZUZO has quit (Read error: Connection reset by peer)
May 05 13:41:14 <AndreasK>	dyl: If I remember right hoogle had over 1k unique users/day a year ago. So probably noticeable but not a major deal I would assume
May 05 13:41:34 <dyl>	Hackage search not google
May 05 13:41:41 <dyl>	Hoogle*
May 05 13:41:46 *	andreabedini has quit (Ping timeout: 264 seconds)
May 05 13:41:48 *	snorge2 has quit (Max SendQ exceeded)
May 05 13:41:49 <dyl>	It’s alphabetized and h completes to hav...
May 05 13:41:55 <dyl>	hac...*
May 05 13:42:16 <DataDrake>	I suppose I never even thought to ask if there were limits for the hackages APIs
May 05 13:42:27 <dyl>	!ho does hoogle though
May 05 13:42:59 <AndreasK>	dyl: !h does hoogle for me, weird
May 05 13:44:11 <dyl>	Strange so it does
May 05 13:44:14 <dyl>	That must have changed recently
May 05 13:44:51 *	path[l] has quit (Quit: path[l])
May 05 13:44:56 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 05 13:45:58 *	jfredett_ (~quassel@2601:189:c600:c2e:3c11:b585:4519:4fc7) has joined
May 05 13:47:18 *	mou (~donwillia@37.97.50.103) has joined
May 05 13:48:20 *	jfredett has quit (Ping timeout: 265 seconds)
May 05 13:48:22 *	martingale has quit (Quit: Textual IRC Client: www.textualapp.com)
May 05 13:48:36 <crestfallen>	https://ptpb.pw/mPen   a couple things about the choices func here; how would that look if I didn't use eta reduction ?
May 05 13:49:05 *	simukis has quit (Ping timeout: 248 seconds)
May 05 13:49:25 <AndreasK>	crestfallen: concat . map perms . subseqs $ xs
May 05 13:49:57 *	netheranthem (~netherant@2a02:c7d:bb17:7700:15ba:4a87:9836:adc1) has joined
May 05 13:50:17 <crestfallen>	o k so that's choices (x:xs) =  concat . map perms . subseqs $ xs
May 05 13:50:20 *	hackage exception-transformers 0.4.0.7 - Type classes and monads for unchecked extensible exceptions.  http://hackage.haskell.org/package/exception-transformers-0.4.0.7 (GeoffreyMainland)
May 05 13:50:24 <Zipheir>	Can anyone recommend a book similar to Real World Haskell but ... better? A text working through 'real' problems with the language sounds very useful, but so much of RWH is ugly and badly-presented, imho.
May 05 13:50:41 <AndreasK>	crestfallen: choices xs = but otherwise yes
May 05 13:50:48 *	Major_Biscuit has quit (Ping timeout: 256 seconds)
May 05 13:50:52 *	fmixing (~fmixing@5.18.211.209) has joined
May 05 13:51:04 <crestfallen>	otherwise ? sorry not getting that
May 05 13:51:06 *	kderme (4d9fc13e@gateway/web/freenode/ip.77.159.193.62) has joined
May 05 13:51:19 AndreasK andreabe_ andrew_n_ andrewbanchich[m andrey andreypopp andromeda-galaxy 
May 05 13:51:21 AndreasK andreabe_ andrew_n_ andrewbanchich[m andrey andreypopp 
May 05 13:51:22 <AndreasK>	crestfallen: choices xs =  concat . map perms . subseqs $ xs
May 05 13:51:30 *	Tesseraction (~Tesseract@unaffiliated/tesseraction) has joined
May 05 13:51:54 <AndreasK>	crestfallen: or you would drop the first element in the expanded version
May 05 13:52:14 *	JuanDaugherty (~juan@98.4.124.117) has joined
May 05 13:52:40 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
May 05 13:52:41 *	snorge2 (~scott@162.243.6.197) has joined
May 05 13:52:45 <dyl>	Just remember
May 05 13:52:48 <dyl>	Dot dot goose
May 05 13:52:53 <dyl>	. . . . . $
May 05 13:53:03 *	Welkin (~Welkin@107.147.90.29) has joined
May 05 13:53:08 <dyl>	This is why I pronounce “$” as “goose” instead of “seq”.
May 05 13:53:13 <dyl>	But I’m probably alone here.
May 05 13:53:16 AndreasK andreabe_ andrew_n_ andrewbanchich[m andrey andreypopp andromeda-galaxy 
May 05 13:53:22 <crestfallen>	not (x:xs) since x is not used on the rhs ? sorry a bit confused about what is being passed to perms / subseqs on the rhs AndreasK 
May 05 13:53:26 <mud>	People pronounce $ as seq?
May 05 13:53:28 *	xx00__ (~gort@cpe-66-108-137-140.nyc.res.rr.com) has joined
May 05 13:53:37 <Welkin>	dyl: Top Gun?
May 05 13:53:48 *	ahihi has quit (Quit: despair ahead)
May 05 13:53:48 *	kdridi has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 05 13:53:53 <dyl>	Sorry, apply
May 05 13:53:55 *	Sebbyvawr (~bwahaHAHA@pa49-197-207-71.pa.qld.optusnet.com.au) has joined
May 05 13:53:55 <dyl>	I’m tired haha
May 05 13:54:04 <mud>	Oh okay
May 05 13:54:31 *	snorge2 has quit (Max SendQ exceeded)
May 05 13:54:34 <dyl>	Dot dot goose is an amusing mnemonic though.
May 05 13:54:41 <crestfallen>	Zipheir, I'm really liking Hutton 2nd edition, but its tough (I'm not a programmer)
May 05 13:54:45 <dyl>	<$> <*> <*> is the other way around
May 05 13:54:51 <AndreasK>	crestfallen: You want to pass the whole argument you get to subseqs. If you use (x:xs) then x is the first element of the list and xs the rest of the list without the first element
May 05 13:55:31 *	asheshambasta (~asheshamb@d8d87d1b0.access.telenet.be) has joined
May 05 13:55:41 <Zipheir>	crestfallen: Yeah, I enjoyed Programming in Haskell 2e. Hutton knows his stuff.
May 05 13:56:05 *	asheshambasta has quit (Client Quit)
May 05 13:56:12 *	jsomedon (~jsomedon@222.131.158.129) has joined
May 05 13:56:42 AndreasK andreabe_ andrew_n_ andrewbanchich[m andrey andreypopp andromeda-galaxy 
May 05 13:56:43 *	ahihi (~ahihi@82-181-217-224.bb.dnainternet.fi) has joined
May 05 13:57:22 *	coot (~coot@188.146.196.116.nat.umts.dynamic.t-mobile.pl) has joined
May 05 13:57:36 *	aplainzetakind (~dk@85.100.179.208) has joined
May 05 13:58:16 <crestfallen>	AndreasK, so generally if you don't see x alone on the rhs being passed, you can't use (x:xs) ..? sorry I'm missing a fundamental
May 05 13:58:34 *	logzet has quit (Remote host closed the connection)
May 05 13:59:08 *	acarrico (~acarrico@dhcp-68-142-35-239.greenmountainaccess.net) has joined
May 05 13:59:26 <centril1>	edwardk: re.  whatever = (field3 %~ reverse) . (field2 .~ baz) . (field1 .~ bar)
May 05 13:59:41 <centril1>	does not  .~ bind tighter ?
May 05 13:59:50 <edwardk>	:info (.~)
May 05 14:00:09 <edwardk>	infixr 4 .~
May 05 14:00:10 *	phenoble has quit (Quit: WeeChat 1.9.1)
May 05 14:00:13 <AndreasK>	crestfallen: Are you familiar with how pattern matching in general works?
May 05 14:00:19 <edwardk>	infixr 9 .
May 05 14:00:19 <centril1>	:info (.)
May 05 14:00:31 <centril1>	edwardk: oh; darn :P
May 05 14:00:34 <edwardk>	(.) binds tighter than any other operator can in haskell
May 05 14:00:43 <edwardk>	i have no choice to even try to make .~ bind that tight
May 05 14:00:49 *	Lepidora (~Lepidora@5.151.177.1) has joined
May 05 14:00:54 <centril1>	edwardk: damn; it shows that I havent been used Haskell in a while
May 05 14:01:03 <crestfallen>	yeah but in the dot notation, where things are very terse, I have a harder time following the evaluation AndreasK 
May 05 14:01:27 <edwardk>	getting ... rusty?
May 05 14:01:36 <centril1>	edwardk: hihihi :D
May 05 14:01:50 <AndreasK>	crestfallen: what does "f (x:xs) = xs" do?
May 05 14:02:10 <crestfallen>	it drops the first element
May 05 14:02:18 <dyl>	edwardk: what a swift bit of small talk
May 05 14:02:41 <crestfallen>	the head
May 05 14:02:42 <edwardk>	i'm just trying to be objective, c?
May 05 14:02:58 <Zipheir>	YEAAAAH
May 05 14:03:04 <AndreasK>	crestfallen: and "f  (x:xs) = x:xs"?
May 05 14:03:17 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 05 14:03:19 <crestfallen>	that just returns the same list
May 05 14:03:45 *	tomphp (~tomphp@host31-52-92-22.range31-52.btcentralplus.com) has joined
May 05 14:03:53 <AndreasK>	crestfallen: Last simple questions: "f (x:xs) = 2"?
May 05 14:04:36 *	uptime (alore@wikimania/cagematch/uptime) has joined
May 05 14:04:56 <crestfallen>	thats just f [2], where x = 2
May 05 14:04:59 <dyl>	f = const 2
May 05 14:05:05 <dyl>	More generally
May 05 14:05:25 *	mizu_no_oto_work (~textual@2601:196:4a01:e520:ecef:7f3a:6a7e:7c74) has joined
May 05 14:05:25 <crestfallen>	dyl copy that
May 05 14:05:27 *	snorge2 (~scott@162.243.6.197) has joined
May 05 14:05:30 <spruit11>	Maps a non-empty list to 2.
May 05 14:05:38 <petrolifero[m]>	> that just returns the same list
May 05 14:05:39 <petrolifero[m]>	And receive all list but empty list
May 05 14:05:40 <lambdabot>	 error:
May 05 14:05:41 <lambdabot>	     Variable not in scope: that :: t0 -> t1 -> t2 -> t3 -> t4 -> terror:
May 05 14:05:41 <lambdabot>	     • Variable not in scope: just
May 05 14:05:55 <dyl>	That’s true it doesn’t accept the empty list.
May 05 14:05:59 <dyl>	So I was wrong.
May 05 14:06:00 <nisstyre>	@djinn [a] -> Int
May 05 14:06:00 <lambdabot>	Error: Undefined type []
May 05 14:06:04 <nisstyre>	oh :(
May 05 14:06:16 <dyl>	@free f :: [a] -> Int
May 05 14:06:16 <lambdabot>	f = f . $map g
May 05 14:06:24 <nisstyre>	what does @free do?
May 05 14:06:33 <dyl>	?free f :: [a] -> Int
May 05 14:06:33 <lambdabot>	f = f . $map g
May 05 14:06:33 <centril1>	edwardk: I have a semi-secret plan to make Rust more literally Haskell :P
May 05 14:06:41 <nisstyre>	something to do with free theorems?
May 05 14:06:47 *	martingale (~textual@pool-70-104-128-68.nycmny.fios.verizon.net) has joined
May 05 14:06:58 *	oish has quit (Ping timeout: 264 seconds)
May 05 14:07:01 <dyl>	nisstyre: exactly that
May 05 14:07:06 <nisstyre>	yeah that makes sense
May 05 14:07:08 *	conal (~conal@209.58.139.26) has joined
May 05 14:07:18 <dyl>	?free id :: a -> a
May 05 14:07:18 <lambdabot>	f . id = id . f
May 05 14:07:19 *	davr0s has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
May 05 14:07:20 <edwardk>	it is always good to have moles in other organizations. i'm not sure that announcing your plans in a logged channel full of 1800 people is the best way to maintain opsec however. ;)
May 05 14:07:36 <centril1>	edwardk: :D
May 05 14:07:36 *	carafe has quit (Read error: Connection reset by peer)
May 05 14:07:38 <AndreasK>	crestfallen: When you write f [2] what exactly do you mean?
May 05 14:07:57 *	carafe (~slavedriv@GRD-nat-65.anu.edu.au) has joined
May 05 14:08:01 *	davr0s (~textual@host81-155-64-238.range81-155.btcentralplus.com) has joined
May 05 14:08:02 *	snorge2 has quit (Max SendQ exceeded)
May 05 14:08:20 <dyl>	edwardk: he’s just being referentially transparent :-p
May 05 14:08:31 <AndreasK>	edwardk: IRC logging seems permanantly broken so at least from that side he should be safe :)
May 05 14:08:34 <dyl>	Us zealots must adhere to our dogma.
May 05 14:08:47 <centril1>	AndreasK: yay!
May 05 14:09:10 <spruit11>	Probably 1795 moles.
May 05 14:09:18 <centril1>	dyl: speak of referential transparency, https://github.com/rust-lang/rust/issues/24111
May 05 14:09:20 <dyl>	On that note does anyone have the current figure on the average number of grad student and postdoc blood sacrifices necessary to receive a new GHC extension from the eldritch gods?
May 05 14:09:33 *	tomphp has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 05 14:09:48 <MarcelineVQ>	dyl: it's not so bad, one life per extension
May 05 14:09:57 *	xx00__ has quit (Quit: xx00__)
May 05 14:10:00 <dyl>	Niko is definitely a Haskell mole.
May 05 14:10:08 *	Darwin226 (53b3f17a@gateway/web/freenode/ip.83.179.241.122) has joined
May 05 14:10:11 <MarcelineVQ>	sometimes you get lucky and an ezyang comes along or a goldfire
May 05 14:10:17 <MarcelineVQ>	and lives are saved
May 05 14:10:22 *	kdridi (~kdridi@30.231.82.79.rev.sfr.net) has joined
May 05 14:10:35 <dyl>	I don’t even know how many years I’ve been o the mailing list for the specialization tracking issue...
May 05 14:10:45 <dyl>	I feel like it’s been half a decade.
May 05 14:11:10 *	chaosmasttter (~chaosmast@p54B46902.dip0.t-ipconnect.de) has joined
May 05 14:11:21 <crestfallen>	AndreasK, 2 is x and xs is []
May 05 14:11:24 <dyl>	MarcelineVQ: what about the high volume summer undergrad approach?
May 05 14:11:29 <dyl>	Does it scale?
May 05 14:11:34 *	tomphp (~tomphp@host31-52-92-22.range31-52.btcentralplus.com) has joined
May 05 14:12:26 *	andrey has quit (Remote host closed the connection)
May 05 14:12:56 <MarcelineVQ>	probably, it's webscale
May 05 14:12:57 <AndreasK>	crestfallen: try it in ghci with ["foo"], should still return 2
May 05 14:13:11 *	mizu_no_oto_work has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 05 14:13:25 <dyl>	MarcelineVQ: that would only generate GHCJS compatible extensions though
May 05 14:13:43 <dyl>	But maybe one grad or postdoc soul could be traded to make a half dozen such extensions work with the default backend.
May 05 14:13:49 <Darwin226>	Is there a name for functors f such that for all (a :: f a) and (b :: f b), void a == void b? Examples of those are Identity, (k ->), Pair...
May 05 14:13:53 <MarcelineVQ>	well someone needs to give luite a break
May 05 14:13:58 <Darwin226>	Basically functors that only have a fixed "shape"
May 05 14:14:06 <crestfallen>	AndreasK, if you did choices list = ... that would == (x:xs) or (xs).  one moment pls re: your last post
May 05 14:14:10 <dyl>	:t void
May 05 14:14:11 <lambdabot>	Functor f => f a -> f ()
May 05 14:14:40 <dyl>	Oh ok I see.
May 05 14:14:46 <crestfallen>	sorry that would equate to choices (x:xs) or (xs) ?
May 05 14:15:00 <crestfallen>	(xs) I believe
May 05 14:15:20 <dyl>	Maybe would also work no?
May 05 14:15:46 <dyl>	So, in general, it seems like it would classify “deterministic” functors in some sense.
May 05 14:16:00 <Darwin226>	dyl: It wouldn't because (void (Just True)) is Just () and void Nothing is Nothing
May 05 14:16:13 <dyl>	Oh derp
May 05 14:16:14 <dyl>	Still
May 05 14:16:20 *	mou has quit (Read error: Connection reset by peer)
May 05 14:16:25 <dyl>	Nondeterminism vs determinism seems like what it is.
May 05 14:16:32 <dyl>	All of the ones you mentioned only have one constructor.
May 05 14:17:08 <Darwin226>	dyl: I was hoping there was a typeclass for them
May 05 14:17:14 <AndreasK>	crestfallen: "choices xs" or "choices list" are the same if you ignore the change from xs to list
May 05 14:17:49 <dyl>	Darwin226: i don’t think you can enforce that constraint with a typeclass.
May 05 14:18:04 <Darwin226>	Well, you can't enforce any law really
May 05 14:18:07 <dyl>	It would be empty, and rely on the implementer being careful.
May 05 14:18:09 <AndreasK>	crestfallen: Why did you want to write choices using (x:xs)? because it is a list?
May 05 14:18:35 <dyl>	But I think that just boils down to functors that have one constructor and are not recursive.
May 05 14:18:48 *	beefjoe has quit (Remote host closed the connection)
May 05 14:19:04 *	snorge2 (~scott@162.243.6.197) has joined
May 05 14:19:11 <dpyro>	I'm getting an ambiguous type variable error trying to use servant-client: "Couldn't match type ‘Generics.SOP.Universe.Code ParadexPublicAPI’ with ‘'[xs0]’ but I haven't defined xs0 and I don't know what it's talking about! Code here: https://pastebin.com/NEcWrpR6
May 05 14:19:11 <crestfallen>	sorry AndreasK I'm not getting anywhere right now
May 05 14:19:18 <Darwin226>	dyl: I think `data Stream a = Stream a (Stream a)` also works
May 05 14:19:25 <Darwin226>	so recursive is fine
May 05 14:19:33 <dyl>	Ah, so it’s multiple constructors just not recursive,
May 05 14:19:49 <dyl>	what about rewriting other functors into specializations of Cont?
May 05 14:20:12 <Darwin226>	what do you mean?
May 05 14:20:53 <dyl>	http://blog.sigfpe.com/2008/12/mother-of-all-monads.html?m=1
May 05 14:20:57 *	snorge2 has quit (Max SendQ exceeded)
May 05 14:21:05 <dyl>	(Not all though, bad title, bad!)
May 05 14:21:18 <AndreasK>	crestfallen: I have to leave no too. Maybe look for a beginner tutorial for pattern matching (on lists especially) and try some things with that in ghci
May 05 14:21:42 <crestfallen>	AndreasK, thanks 
May 05 14:22:01 Python interface unloaded
May 05 14:22:01 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sat May  5 14:22:01 2018

**** BEGIN LOGGING AT Sun May  6 13:40:40 2018

May 06 13:40:40 *	Now talking on #haskell
May 06 13:40:40 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 06 13:40:40 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
May 06 13:40:41 *	Channel #haskell url: http://www.haskell.org/
May 06 13:40:53 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 06 13:41:59 *	Lepidora has quit (Quit: Lepidora)
May 06 13:42:07 *	tomsen has quit (Ping timeout: 260 seconds)
May 06 13:42:51 *	tomphp has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 06 13:43:00 <crestfallen>	hi I had a program tautChecker with ' import Propositions ' working fine. Both files are still in the same directory. Now when I try to load tautChecker I get the error ' Failed to load interface for 'Propositions'. what could have suddenly caused that?
May 06 13:43:17 *	dpyro (~dpyro@66-169-160-49.dhcp.ftwo.tx.charter.com) has joined
May 06 13:43:30 *	darjeeling_ (~darjeelin@205.175.107.152) has joined
May 06 13:43:41 *	Sulis (~shannon@host31-49-240-247.range31-49.btcentralplus.com) has joined
May 06 13:44:00 *	acln (sid286356@gateway/web/irccloud.com/x-gllsdexpesqhskbx) has left
May 06 13:44:17 *	agander_ has quit (Ping timeout: 248 seconds)
May 06 13:44:36 <crestfallen>	I started by loading the file headed by 'module Propositions where' . it compiles fine
May 06 13:44:59 *	PinkBash has quit (Quit: Textual IRC Client: www.textualapp.com)
May 06 13:45:25 *	asheshambasta has quit (Quit: Leaving.)
May 06 13:46:15 <hololeap>	is there a way to define default values when writing a data type with record syntax?
May 06 13:46:23 *	tomphp (~tomphp@2a00:23c3:3685:dc00:ca2:7666:5851:3536) has joined
May 06 13:47:29 <jmcarthur>	TFW tests pass but you don't feel like they should...
May 06 13:47:36 *	agander_ (~agander@37.58.58.230) has joined
May 06 13:48:04 <crestfallen>	then in tautChecker I have ' import Propositions '  .. standard right?
May 06 13:48:34 <crestfallen>	It was working fine and I went back to it and its now failing
May 06 13:48:50 <infinisil>	hololeap: I think the convention is to make your data type an instance of Data.Default (Default), then use the `def :: Default a => a`, like `def { foo = overriddenFoo }`
May 06 13:49:02 *	jimmyrcom_ (~fold@71-11-240-211.dhcp.dntn.tx.charter.com) has joined
May 06 13:49:17 <hololeap>	infinisil: ok, that's helpful. thanks
May 06 13:50:08 *	hjdskes has quit (Ping timeout: 256 seconds)
May 06 13:50:19 <crestfallen>	https://ptpb.pw/mWDb   https://ptpb.pw/4le8   these 2 files are in the same directory. what gives?
May 06 13:50:34 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 06 13:51:18 <aarvar>	hololeap infinisil: there's no need to use Default really
May 06 13:51:28 <lyxia>	crestfallen: in what directory are these files and what commands did you run?
May 06 13:51:47 *	tomphp_ (~tomphp@host31-52-92-22.range31-52.btcentralplus.com) has joined
May 06 13:51:52 <aarvar>	plus Default requires you to have a default for every field
May 06 13:52:08 *	rkazak has quit (Quit: Sleep.....ing....)
May 06 13:52:13 *	Average-user (~average-u@pc-118-198-46-190.cm.vtr.net) has joined
May 06 13:52:17 <infinisil>	aarvar: Yeah of course, but having `defaultFoo`, `defaultBar` all over the place isn't very nice
May 06 13:52:29 <aarvar>	infinisil: why not?
May 06 13:52:39 *	Ariakenom has quit (Read error: Connection reset by peer)
May 06 13:52:46 <aarvar>	infinisil: besides, what if you have multiple possible defaults
May 06 13:52:50 *	rkazak (~rkazak@67.170.253.182) has joined
May 06 13:52:56 <infinisil>	Then it's not a default anymore?
May 06 13:53:08 <infinisil>	It's just nicer to not clobber the namespace imo
May 06 13:53:16 <hololeap>	aarvar: what would you recommend?
May 06 13:53:16 <aarvar>	what if you want to encourage a different set of defaults later?
May 06 13:53:17 *	coot_ has quit (Quit: coot_)
May 06 13:53:26 <aarvar>	I would just "clobber the namespace"
May 06 13:53:30 <infinisil>	xmonad previously used the `default<name>` approach, and it had like 50 of those methods
May 06 13:53:42 <aarvar>	rather than use entirely ad-hoc overloading
May 06 13:53:57 *	infinity0 has quit (Ping timeout: 240 seconds)
May 06 13:54:11 <crestfallen>	lyxia they're in a directory called haskell/hutton ...
May 06 13:54:37 <hololeap>	aarvar: do you mean writing a bunch of defaults with the name defaultValueOne, defaultValueTwo, etc?
May 06 13:54:39 <infinisil>	If it doesn't make sense to have a default value, don't make it an instance of Default
May 06 13:54:59 *	tomphp has quit (Ping timeout: 256 seconds)
May 06 13:55:05 <infinisil>	E.g. data Mode = Lazy | Strict
May 06 13:55:06 <crestfallen>	I'm doing > :l propChecker.hs
May 06 13:55:12 <hololeap>	i don't know what "clobber the namespace" is supposed to mean
May 06 13:55:19 <infinisil>	Of course you could do `instance Default Mode where def = Lazy`, but that isn't a reasonable default
May 06 13:55:24 <aarvar>	hololeap: I don't either
May 06 13:55:42 <infinisil>	hololeap: aarvar: Having 50 functions that start with `default...`
May 06 13:55:45 <aarvar>	infinisil: what's a reasonable default?
May 06 13:55:58 <infinisil>	aarvar: 0 for Int, [] for List, that kind of stuff
May 06 13:56:03 *	Rummell has quit (Quit: Sto andando via)
May 06 13:56:06 <aarvar>	infinisil: why are those reasonable?
May 06 13:56:09 <aarvar>	(hint: they're not)
May 06 13:56:31 <aarvar>	why not 1 for Int?
May 06 13:56:43 <hololeap>	because it's the sum monoid, duh :p
May 06 13:56:51 <aarvar>	what about the multiplication monoid?
May 06 13:56:52 <infinisil>	Oh come on, nobody would expect 1 to be the default for an Int
May 06 13:56:58 <lyxia>	crestfallen: it might be more helpful to just paste your directory structure and your command line somewhere
May 06 13:57:08 <aarvar>	infinisil: no one should expect Int to have a "default" at all
May 06 13:57:22 <aarvar>	the concept of a default isn't useful
May 06 13:57:30 <aarvar>	mempty is useful, but only because it comes with mappend
May 06 13:57:31 <hololeap>	well, i think Default will work for me since i have *one* default and it isn't really a monoid... plus i have data-default-class installed for whatever reason
May 06 13:57:40 <crestfallen>	lyxia, thanks its so strange it was working fine. one moment
May 06 13:58:01 *	conal has quit (Quit: Computer has gone to sleep.)
May 06 13:58:34 <aarvar>	hololeap: and later you might have a second default
May 06 13:58:42 <infinisil>	aarvar: Well I find it useful, if only to be able to use `def`
May 06 13:58:44 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 06 13:58:55 <hololeap>	nah, it's just the default options for parsing the command line options
May 06 13:59:32 <hololeap>	in this case there will only be one default... it might change, but there will still only be one
May 06 13:59:41 *	conal (~conal@209.58.139.26) has joined
May 06 14:00:13 <aarvar>	why
May 06 14:00:24 <aarvar>	oh well, doesn't really matter
May 06 14:00:24 *	conal has quit (Client Quit)
May 06 14:00:27 *	kriztw has quit (Ping timeout: 240 seconds)
May 06 14:00:36 <hololeap>	why? why what?
May 06 14:00:41 *	stan973 has quit (Quit: leaving)
May 06 14:02:44 *	kriztw (~kris@132.44.187.35.bc.googleusercontent.com) has joined
May 06 14:04:17 <crestfallen>	what's an alternative to lpaste.net. I'm getting errors there too!
May 06 14:04:35 <lyxia>	crestfallen: gist.github.com
May 06 14:04:35 *	hjdskes has quit (Ping timeout: 240 seconds)
May 06 14:04:42 <jmcarthur>	Is it even feasible to unit test asymptotic complexity? I've been programming for quite a long time and have never come across any attempt to do this before.
May 06 14:04:46 <crestfallen>	thanks
May 06 14:04:56 *	Lepidora (~Lepidora@5.151.177.0) has joined
May 06 14:04:57 *	beka has quit (Remote host closed the connection)
May 06 14:05:21 <jmcarthur>	Performance tests are sometimes a thing, but they tend to be kind of flaky.
May 06 14:05:36 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 06 14:07:31 <crestfallen>	lyxia, here ya go https://gist.github.com/varreli/9a0bde353d0df9e39265a45f2763cafd
May 06 14:07:35 <crestfallen>	and
May 06 14:07:54 *	jimmyrcom_ has quit (Ping timeout: 260 seconds)
May 06 14:09:07 <lyxia>	jmcarthur: counting instructions might be less noisy
May 06 14:09:51 <lyxia>	crestfallen: how did you run ghci
May 06 14:10:25 <crestfallen>	the files in question : 75_taut.hs 75_taut_prop.hs   
May 06 14:10:35 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 06 14:10:39 *	ANON73528 has quit (Quit: Quit)
May 06 14:10:43 <crestfallen>	https://gist.github.com/varreli/8a093a5274d64b1303754fbcfbc27342
May 06 14:11:21 *	Tehnix has quit (Remote host closed the connection)
May 06 14:11:29 *	Tehnix (~Tehnix@ec2-18-197-40-10.eu-central-1.compute.amazonaws.com) has joined
May 06 14:11:30 <crestfallen>	I just use an alias st for stack .sorry not sure what you mena
May 06 14:11:32 <crestfallen>	mean
May 06 14:11:59 *	wonko7 has quit (Ping timeout: 256 seconds)
May 06 14:12:02 <lyxia>	crestfallen: how did you enter the repl
May 06 14:12:05 *	xpycm_ (~chatzilla@178.141.23.210) has joined
May 06 14:12:16 *	slackman has quit (Remote host closed the connection)
May 06 14:12:20 *	ravi has quit (Remote host closed the connection)
May 06 14:12:27 <crestfallen>	-- > :l 75_taut.hs
May 06 14:12:37 *	DustyDin1o has quit (Read error: Connection reset by peer)
May 06 14:12:38 *	slackman (~slackman@91.fe.37a9.ip4.static.sl-reverse.com) has joined
May 06 14:12:39 <lyxia>	that's inside the repl
May 06 14:12:39 *	ravi (~ravi@27.7.85.101) has joined
May 06 14:12:41 <MarcelineVQ>	'what do you type to open ghci'
May 06 14:12:42 *	pavonia has quit (Read error: Connection reset by peer)
May 06 14:12:49 *	pavonia (~user@unaffiliated/siracusa) has joined
May 06 14:12:56 *	DustyDingo (~nonamen@atommuell.mum.jku.at) has joined
May 06 14:13:06 <lyxia>	Anyway, I'm not sure how this could have worked before. The name of the file should be the same as the name of the module.
May 06 14:13:07 *	Natch has quit (Read error: Connection reset by peer)
May 06 14:13:10 *	fmixing (~fmixing@95-27-46-150.broadband.corbina.ru) has joined
May 06 14:13:12 *	fendor has quit (Remote host closed the connection)
May 06 14:13:21 <crestfallen>	I type an alias . it works fine
May 06 14:13:24 <lyxia>	If you don't have a file named Proposition.hs then you can't import it from another file.
May 06 14:13:26 *	fmixing has quit (Remote host closed the connection)
May 06 14:13:27 *	xpycm has quit (Ping timeout: 240 seconds)
May 06 14:13:31 *	xpycm_ is now known as xpycm
May 06 14:13:44 *	ccase has quit (Ping timeout: 260 seconds)
May 06 14:14:22 <crestfallen>	weird. ok its the uppercase. thanks I might have copies with the correct filename w/ uppercase. sorry to bother you lyxia 
May 06 14:14:27 *	Guest81973 has quit (Ping timeout: 240 seconds)
May 06 14:14:35 *	dpyro has quit (Ping timeout: 240 seconds)
May 06 14:15:21 *	beka has quit (Ping timeout: 265 seconds)
May 06 14:15:46 <infinisil>	Hmm.. I'm trying to use gitlib-3.1.1 with stack lts-11.7. I put it in extra-deps because it's not in stackage
May 06 14:15:47 *	ccase (~ccase@147.75.78.5) has joined
May 06 14:15:47 *	_noblegas (uid91066@gateway/web/irccloud.com/x-iqcjtrihomawiaqy) has joined
May 06 14:15:51 *	ck_y (~ck@aipotu.li) has joined
May 06 14:15:56 *	bob_twinkles has quit (Quit: No Ping reply in 180 seconds.)
May 06 14:16:59 <crestfallen>	lyxia, MarcelineVQ thanks its working . so strange how I lost the upcase file.
May 06 14:17:30 *	zdenal_ (~zdenal@89.103.38.66) has joined
May 06 14:18:25 *	toppler has quit (Remote host closed the connection)
May 06 14:18:55 *	elfets (~stefan@ip-178-200-141-84.hsi07.unitymediagroup.de) has joined
May 06 14:19:33 <infinisil>	But I'm getting compilation warnings and errors
May 06 14:19:34 *	bob_twinkles_ (~quassel@ec2-52-37-66-13.us-west-2.compute.amazonaws.com) has joined
May 06 14:19:34 *	ian_andrich (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
May 06 14:19:34 <infinisil>	How would I go about being able to use that package with stack?
May 06 14:19:34 *	conal (~conal@209.58.139.26) has joined
May 06 14:19:35 <infinisil>	Here are the deps in gitlib.cabal: https://github.com/jwiegley/gitlib/blob/master/gitlib/gitlib.cabal#L43-L62
May 06 14:19:35 *	dpyro (~dpyro@66-169-160-49.dhcp.ftwo.tx.charter.com) has joined
May 06 14:19:35 <infinisil>	Specifically I'm getting the error Not in scope: type constructor or class `MonadBaseControl'
May 06 14:19:36 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
May 06 14:19:37 *	hjdskes has quit (Ping timeout: 260 seconds)
May 06 14:19:55 *	Major_Biscuit has quit (Ping timeout: 256 seconds)
May 06 14:19:57 *	ck_y has quit (Ping timeout: 240 seconds)
May 06 14:20:09 *	zdenal has quit (Ping timeout: 260 seconds)
May 06 14:20:11 *	ck_y (~ck@aipotu.li) has joined
May 06 14:20:38 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 06 14:21:38 *	simukis has quit (Remote host closed the connection)
May 06 14:22:14 Python interface unloaded
May 06 14:22:14 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sun May  6 14:22:14 2018

**** BEGIN LOGGING AT Fri May 11 16:07:28 2018

May 11 16:07:28 *	Now talking on #haskell
May 11 16:07:28 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 11 16:07:28 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
May 11 16:07:28 *	Channel #haskell url: http://www.haskell.org/
May 11 16:08:05 *	crobbins has quit (Ping timeout: 265 seconds)
**** ENDING LOGGING AT Fri May 11 16:08:31 2018

**** BEGIN LOGGING AT Fri May 11 16:08:44 2018

May 11 16:08:44 *	Now talking on #haskell
May 11 16:08:44 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 11 16:08:44 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
May 11 16:08:44 *	Channel #haskell url: http://www.haskell.org/
May 11 16:09:38 *	robertot1 has quit (Read error: Connection reset by peer)
May 11 16:11:05 *	DSM has quit (Ping timeout: 246 seconds)
May 11 16:11:19 *	beefjoe has quit (Remote host closed the connection)
May 11 16:12:39 *	getJiggyWMe has quit (Ping timeout: 260 seconds)
May 11 16:13:39 *	zyla_ (~zyla@2a02:a31c:141:d800:217:c4ff:fe1b:28ef) has joined
May 11 16:14:28 *	hjdskes has quit (Ping timeout: 250 seconds)
May 11 16:14:52 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 11 16:16:31 *	sdothum (~znc@108.63.112.213) has joined
May 11 16:17:07 <crestfallen>	hi when you have a list comprehension like beginning on ln 17, you don't call those expressions predicates that are separated by commas, right?
May 11 16:17:08 *	sepp2k1 (~Sepp2k@x4e32c6b9.dyn.telefonica.de) has joined
May 11 16:17:09 <crestfallen>	https://gist.github.com/varreli/eabdbfa6edb6241d101b16280961fef3
May 11 16:17:18 *	energizer has quit (Remote host closed the connection)
May 11 16:17:38 *	energizer (~energizer@unaffiliated/energizer) has joined
May 11 16:18:58 *	zenwan has quit (Ping timeout: 264 seconds)
May 11 16:19:17 <crestfallen>	since there are no (==) operators
May 11 16:19:57 *	sepp2k has quit (Ping timeout: 268 seconds)
May 11 16:20:10 *	WhatisRT (~whatisrt@2a02:8109:8fc0:1485:d08b:7ad8:ed84:dfb0) has joined
May 11 16:20:11 <crestfallen>	what are they called?
May 11 16:20:17 <crestfallen>	conditions?
May 11 16:20:35 <crestfallen>	no never mind sorry I get it
May 11 16:20:50 *	sdothum has quit (Client Quit)
May 11 16:21:08 *	hristijan (~hristijan@unaffiliated/tinnotl) has joined
May 11 16:21:51 *	zmzm (~zmzm@gateway/tor-sasl/zmzm) has joined
May 11 16:22:04 *	hristijan has quit (Remote host closed the connection)
May 11 16:22:05 <crestfallen>	but in this case, do the commas act like ($)  ?
May 11 16:22:07 *	posytron has quit (Remote host closed the connection)
May 11 16:22:14 <EvanR>	no
May 11 16:22:17 *	habolabo has quit (Quit: Lost terminal)
May 11 16:22:42 <EvanR>	the haskell report here refers to the commas separated expressions as the qualifier list
May 11 16:22:44 *	striapach has quit (Ping timeout: 260 seconds)
May 11 16:22:57 *	carlomagno has quit (Ping timeout: 256 seconds)
May 11 16:23:09 <Welkin>	EvanR: you should have stopped at "no"
May 11 16:23:12 <EvanR>	_ <- _ are called generators, and bool expressions are called boolean guards
May 11 16:23:14 <Welkin>	that was the answer to everything
May 11 16:23:29 *	twandy has quit (Remote host closed the connection)
May 11 16:23:32 *	sdothum (~znc@108.63.112.213) has joined
May 11 16:23:44 *	sdothum has quit (Remote host closed the connection)
May 11 16:23:49 *	twandy (~Thunderbi@cas-fw-sta.inet.casair.net) has joined
May 11 16:23:53 <Welkin>	list comprehensions are syntactic sugar for bind and monad guards o.o
May 11 16:24:13 <crestfallen>	qualifiers , thanks but if you had a (==) would that boolean need to go in the first qualifier place at the top (ie the leftmost place) EvanR 
May 11 16:24:36 <crestfallen>	within the ls comprehension
May 11 16:24:48 <EvanR>	if it refers to variables bound with _ <- _, then no
May 11 16:24:52 *	WhatisRT has quit (Ping timeout: 250 seconds)
May 11 16:24:53 <EvanR>	you need to put it after
May 11 16:25:35 *	codesoup has quit (Remote host closed the connection)
May 11 16:25:43 <EvanR>	Welkin: according to this report... it can be desugared to ifthenelse, lets, and concatMap
May 11 16:26:02 <Welkin>	concatMap is bind for lists
May 11 16:26:03 <EvanR>	rather than monads, though it probably isnt because of monad comprehensions
May 11 16:26:43 <crestfallen>	ok when you say variables bound to _ <- _   ...   
May 11 16:26:50 <EvanR>	bound with
May 11 16:26:58 <crestfallen>	right..
May 11 16:27:22 <EvanR>	> [(x,y) | x==y, x<-[1..4], y<-[1..4]]
May 11 16:27:24 <lambdabot>	 []
May 11 16:27:33 <EvanR>	im wrong
May 11 16:27:55 <EvanR>	> [(x,y) | x<-[1..4], y<-[1..4], x==y]
May 11 16:27:57 <lambdabot>	 [(1,1),(2,2),(3,3),(4,4)]
May 11 16:28:01 <EvanR>	how does that even ...
May 11 16:28:08 <Welkin>	I believe the filters come at the end
May 11 16:28:15 <EvanR>	me too, until now
May 11 16:28:15 <Welkin>	but list comprehension syntax is all messed up anyway
May 11 16:28:25 <crestfallen>	oh boy..
May 11 16:28:25 <Welkin>	I avoid it whenever possible
May 11 16:28:34 <EvanR>	it says this
May 11 16:29:02 <EvanR>	[ e | b, Q ] ===> if b then [e | Q] else []
May 11 16:30:04 <EvanR>	> if x==y then [(x,y)|x<-[1..4],y<-[1..4]] else []
May 11 16:30:07 <lambdabot>	 []
May 11 16:30:14 <nshepperd>	in [(x,y) | x==y, x<-[1..4], y<-[1..4]] you are fooled by the fact that x and y are already in scope in lambdabot
May 11 16:30:14 <EvanR>	:t x
May 11 16:30:15 <lambdabot>	Expr
May 11 16:30:17 *	sdothum (~znc@108.63.112.213) has joined
May 11 16:30:21 <EvanR>	;_;
May 11 16:30:22 *	borkr has quit (Ping timeout: 264 seconds)
May 11 16:30:31 <nshepperd>	> x == y
May 11 16:30:33 <lambdabot>	 False
May 11 16:30:41 <EvanR>	> x == x
May 11 16:30:42 <lambdabot>	 True
May 11 16:30:51 <EvanR>	i refudiate this
May 11 16:30:58 *	sepp2k1 has quit (Read error: Connection reset by peer)
May 11 16:31:39 <nshepperd>	> ["yes" | 1+1 == 2]
May 11 16:31:40 <lambdabot>	 ["yes"]
May 11 16:32:26 <EvanR>	I'm sure crestfallen is now completely cleared up
May 11 16:32:48 <crestfallen>	um..
May 11 16:32:55 <nshepperd>	success
May 11 16:33:37 <infinisil>	That [ foo | condition ] trick is very nice
May 11 16:35:00 *	jedws has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 11 16:35:31 <crestfallen>	within the ls comprehension , there is nothing resembling eval order I assume
May 11 16:35:34 *	hjdskes has quit (Ping timeout: 260 seconds)
May 11 16:35:54 *	codesoup (~codesoup@174.119.180.211) has joined
May 11 16:35:57 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 11 16:36:03 *	exarkun has quit (Read error: Connection reset by peer)
May 11 16:36:05 <EvanR>	> [(x,y) | x<-[1..4], y<-[4..1], x==y]
May 11 16:36:07 <lambdabot>	 []
May 11 16:36:15 <EvanR>	> [(x,y) | x<-[1..4], y<-[4..1]]
May 11 16:36:17 <lambdabot>	 []
May 11 16:36:28 <nshepperd>	> [4..1]
May 11 16:36:29 <lambdabot>	 []
May 11 16:36:34 <EvanR>	i cant continue
May 11 16:36:40 <nshepperd>	> [4,3..1]
May 11 16:36:42 <lambdabot>	 [4,3,2,1]
May 11 16:37:01 <infinisil>	> reverse [1..4]
May 11 16:37:03 <lambdabot>	 [4,3,2,1]
May 11 16:37:04 <EvanR>	> [(x,y) | x<-[1..4], y<-[4,3..1], x==y]
May 11 16:37:06 <lambdabot>	 [(1,1),(2,2),(3,3),(4,4)]
May 11 16:37:08 *	WhatisRT (~whatisrt@2a02:8109:8fc0:1485:2942:a535:5458:6346) has joined
May 11 16:37:14 <EvanR>	> [(x,y) | y<-[1..4], x<-[4,3..1], x==y]
May 11 16:37:16 <lambdabot>	 [(1,1),(2,2),(3,3),(4,4)]
May 11 16:37:35 *	orphean has quit (Quit: Leaving)
May 11 16:37:35 <EvanR>	bogus proof that order does not matter
May 11 16:37:54 *	carlomagno (~cararell@inet-hqmc02-o.oracle.com) has joined
May 11 16:38:01 <crestfallen>	working on that..
May 11 16:38:26 <infinisil>	> [(x, y) | x<-[1..2], y<-[3..4]]
May 11 16:38:27 <lambdabot>	 [(1,3),(1,4),(2,3),(2,4)]
May 11 16:38:28 <EvanR>	crestfallen: check out this "translation" window here https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-420003.11
May 11 16:38:37 <infinisil>	> [(x, y) | y<-[3..4], x<-[1..2]]
May 11 16:38:39 <lambdabot>	 [(1,3),(2,3),(1,4),(2,4)]
May 11 16:38:42 *	posytron (~posytron@201.6.231.240) has joined
May 11 16:38:44 <infinisil>	But it does!
May 11 16:39:07 <EvanR>	thats what i was going for but i ran out of lambdabot credits
May 11 16:39:17 <crestfallen>	thanks kindly ALL a bit confused esp by this one  [(x,y) | y<-[1..4], x<-[4,3..1], x==y]
May 11 16:39:20 <infinisil>	lambdabot has credits? :O
May 11 16:39:36 <crestfallen>	> [(x,y) | y<-[1..4], x<-[4,3..1], x==y]
May 11 16:39:38 <lambdabot>	 [(1,1),(2,2),(3,3),(4,4)]
May 11 16:39:41 <EvanR>	isnt that were all getting paid in?
May 11 16:39:47 *	posytron has quit (Remote host closed the connection)
May 11 16:40:31 *	posytron (~posytron@201.6.131.240) has joined
May 11 16:40:42 *	dogweather has quit (Remote host closed the connection)
May 11 16:40:56 *	dogweather (~dogweathe@ip98-160-160-3.lv.lv.cox.net) has joined
May 11 16:41:04 <EvanR>	crestfallen: thats simply [(x,y)|y<-[1..4],x<-[4,3..1]] followed by a filter
May 11 16:41:46 *	WhatisRT has quit (Ping timeout: 256 seconds)
May 11 16:42:13 <crestfallen>	a filter? I would have expected that to return a Bool. Is that like forcing it?
May 11 16:42:37 <EvanR>	its filtering by the condition x==y
May 11 16:42:39 *	sdothum has quit (Quit: ZNC 1.7.0 - https://znc.in)
May 11 16:43:07 <EvanR>	> filter (\(x,y) -> x==y) [(4,1),(3,1),(2,1),(1,1)]
May 11 16:43:09 <lambdabot>	 [(1,1)]
May 11 16:43:27 <crestfallen>	interesting
May 11 16:43:34 *	sdothum (~znc@108.63.112.213) has joined
May 11 16:45:12 *	exarkun (~exarkun@vtelinet-66-220-238-253.vermontel.net) has joined
May 11 16:45:22 *	posytron has quit (Ping timeout: 264 seconds)
May 11 16:45:36 *	eschnett (~eschnett@ktnron0916w-lp140-03-70-29-74-56.dsl.bell.ca) has joined
May 11 16:47:30 *	zachk has quit (Quit: Leaving)
May 11 16:48:57 *	justan0theruser has quit (Ping timeout: 240 seconds)
May 11 16:49:33 *	lykrysh has quit (Ping timeout: 268 seconds)
May 11 16:50:09 *	emilypi has quit (Ping timeout: 260 seconds)
May 11 16:51:18 *	x1ddos_ has quit (Ping timeout: 250 seconds)
May 11 16:51:46 *	athan (~athan@96.76.160.206) has joined
May 11 16:51:52 *	sdothum has quit (Quit: ZNC 1.7.0 - https://znc.in)
May 11 16:51:53 *	oisdk (~textual@104.129.24.147.adsl.inet-telecom.org) has joined
May 11 16:52:32 *	sdothum (~znc@108.63.112.213) has joined
May 11 16:53:02 *	m4lvin has quit (Ping timeout: 250 seconds)
May 11 16:53:09 *	m4lvin (~m4lvin@w4eg.de) has joined
May 11 16:53:37 *	amiri has quit (Ping timeout: 248 seconds)
May 11 16:54:26 *	dented42 has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 11 16:54:27 *	raichoo has quit (Ping timeout: 240 seconds)
May 11 16:55:05 *	mleone (ceae2469@gateway/web/freenode/ip.206.174.36.105) has joined
May 11 16:56:34 *	replay has quit (Ping timeout: 260 seconds)
May 11 16:59:19 <athan>	If a GADT alters its resulting type via a phantom variable or something (i.e. `data Foo x where; Foo :: Foo Int; Bar :: Foo Bool`), does it become impossible to case-match polymorphically for any `x`, because you can't skolemize the right scope?
May 11 17:01:16 Python interface unloaded
May 11 17:01:16 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri May 11 17:01:16 2018

**** BEGIN LOGGING AT Fri May 11 19:49:38 2018

May 11 19:49:38 *	Now talking on #haskell
May 11 19:49:38 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 11 19:49:38 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
May 11 19:49:38 *	Channel #haskell url: http://www.haskell.org/
May 11 19:50:09 *	beka has quit (Remote host closed the connection)
May 11 19:50:14 *	rkazak (~rkazak@67.170.253.182) has joined
May 11 19:50:40 *	plugin has quit (Remote host closed the connection)
May 11 19:50:51 *	beka (~beka@noisebridge130.static.monkeybrains.net) has joined
May 11 19:51:16 <anon136>	hey guys, I feel like there should be a way to define the functionality of zip using nothing but either a standard list comprehension or nested list comprehensions but if it's possible I just can't figure it out.
May 11 19:51:35 *	andreabedini has quit (Quit: The Lounge - https://thelounge.github.io)
May 11 19:51:43 <glguy>	anon136: No, that's not possible
May 11 19:51:50 <anon136>	well that makes me feel better!
May 11 19:52:12 <crestfallen>	hi is there a -02 flag for optimization in stack? ' > stack ghc -02 filename.hs ' I get 'invalid option ' running this
May 11 19:52:16 <anon136>	bad that my intuition was wrong but atleast I didn't fail in the inability to produce it.
May 11 19:52:26 *	jfredett (~quassel@c-24-63-187-248.hsd1.ma.comcast.net) has joined
May 11 19:52:34 <anon136>	thanks
May 11 19:52:59 *	cschneid_ has quit (Ping timeout: 256 seconds)
May 11 19:53:01 *	Calledine has quit (Quit: Leaving)
May 11 19:53:26 <crestfallen>	the textbook is not featuring stack: ' > ghc -02 filename.hs '
May 11 19:53:27 *	mkoenig (~mkoenig@85.203.15.9) has joined
May 11 19:54:01 <glguy>	You can add ghc-options: -O2 to your .cabal file
May 11 19:54:10 <glguy>	and it's -O2 Oh, not Zero
May 11 19:54:15 <crestfallen>	great thanks glguy
May 11 19:54:37 <crestfallen>	oh ok thanks
May 11 19:54:44 *	jfredett_ has quit (Ping timeout: 246 seconds)
May 11 19:54:53 *	son0p has quit (Quit: leaving)
May 11 19:54:59 *	plugin (~plugin@2604:2000:8101:3500:68c4:8e85:f1b5:8564) has joined
May 11 19:55:34 *	leafiest has quit (Ping timeout: 264 seconds)
May 11 19:55:39 *	beka has quit (Ping timeout: 260 seconds)
May 11 19:55:48 *	xuanrui (~xuanrui@209.6.192.227) has joined
May 11 19:55:48 *	cemerick (~cemerick@c-73-47-112-232.hsd1.ma.comcast.net) has joined
May 11 19:56:57 *	Gurkenglas has quit (Ping timeout: 240 seconds)
May 11 19:58:26 Python interface unloaded
May 11 19:58:26 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri May 11 19:58:26 2018

**** BEGIN LOGGING AT Sat May 12 12:11:43 2018

May 12 12:11:43 *	Now talking on #haskell
May 12 12:11:43 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 12 12:11:43 *	Topic for #haskell set by geekosaur (Sat Feb  3 00:04:44 2018)
May 12 12:11:43 *	Channel #haskell url: http://www.haskell.org/
May 12 12:12:04 *	hololeap has quit (Quit: Bye)
May 12 12:12:32 <philzook>	I had kind of a neat idea that I'm not sure how to achieve and was looking for some help.
May 12 12:12:41 <philzook>	Is there a way to write a typeclass instance that matches only on sort of the Rank 2 (forall a. a -> a) (only id) rather than (Int -> Int) for example? Or is there a way to get a value-level type representation for a function like (id, const, swap, fst, etc) that is polymorphic?
May 12 12:12:53 <crestfallen>	hi where is my .cabal file within stack or do I need to create one somewhere? my system doesn't recognize cabal commands.
May 12 12:13:20 *	hackage word 0.1.0.0 - Words of arbitrary size  http://hackage.haskell.org/package/word-0.1.0.0 (MatthewFarkasDyck)
May 12 12:13:39 *	raingloom (~raingloom@C2267141.catv.pool.telekom.hu) has joined
May 12 12:13:51 *	cynapse has quit (Ping timeout: 240 seconds)
May 12 12:14:00 *	knupfer has quit (Ping timeout: 265 seconds)
May 12 12:14:04 *	kmurphy4_ has quit (Quit: kmurphy4_)
May 12 12:14:22 *	zachk (~zachk@pool-108-26-33-131.syrcny.east.verizon.net) has joined
May 12 12:14:38 *	zachk has quit (Changing host)
May 12 12:14:38 *	zachk (~zachk@unaffiliated/zachk) has joined
May 12 12:14:47 *	urodna has quit (Ping timeout: 276 seconds)
May 12 12:14:51 <crestfallen>	it doesn't appear that I have one
May 12 12:15:17 *	robertot1 (~robertoth@2605:e000:858a:c700:c81f:c900:5fb4:ae6) has joined
May 12 12:15:20 *	t7 has quit (Remote host closed the connection)
May 12 12:15:27 <dmwit>	dpyro: https://stackoverflow.com/q/4119730/791604 has more ways to skin your cat
May 12 12:15:33 *	robotroll has quit (Read error: Connection reset by peer)
May 12 12:15:39 <dmwit>	Of course, mine is the only valuable one. ;-)
May 12 12:16:12 <dmwit>	philzook: Doesn't sound super possible to me, though I may be misunderstanding.
May 12 12:16:13 *	gehmehgeh (~ircuser1@gateway/tor-sasl/gehmehgeh) has joined
May 12 12:16:14 *	tomphp (~tomphp@host31-52-92-154.range31-52.btcentralplus.com) has joined
May 12 12:16:43 *	benzrf| (d1c64206@gateway/web/freenode/ip.209.198.66.6) has joined
May 12 12:16:44 *	gehmehgeh (~ircuser1@gateway/tor-sasl/gehmehgeh) has left
May 12 12:16:46 <benzrf|>	hello!
May 12 12:16:52 <sclv>	crestfallen: do you have a package.yaml file?
May 12 12:17:05 *	rkazak (~rkazak@67.170.253.182) has joined
May 12 12:17:07 <sclv>	in your project?
May 12 12:17:12 <simon>	if I have a Writer monad with output of type w, how does it output multiple things? does it assume that w is a Monoid?
May 12 12:17:26 *	t7 (~tommo@2a00:23c5:12a8:1400:4dd7:cd6:e6fb:4ae) has joined
May 12 12:17:30 <sclv>	simon: yes, there's a constraint to force that
May 12 12:17:58 <benzrf|>	Is it possible to do something like  "class (forall a b. (Foo a, Foo b) => Foo (p a b)) => Bar p"
May 12 12:18:25 <simon>	so if I am outputting three different things in lists, I could collect them under one newtype and add a Monoid instance for mappend'ing them threeway?
May 12 12:18:30 <benzrf|>	that is: can i have a class Bar where having "Bar p" allows deduction of "Foo (p a b)" if we also have "Foo a" and "Foo b"
May 12 12:19:04 <dmwit>	?tell aarvar My other answer does exactly what you suggest (no GADT, and just have `mkFilter :: FilterType -> IO Filter`). The accepted answer mentions why that's less desirable: it means code duplication, in that every constructor of `Filter` has to have a corresponding constructor in `FilterType`. The GADT has no such duplication -- there is a *single* constructor that promotes any `FilterType` to a
May 12 12:19:04 <lambdabot>	Consider it noted.
May 12 12:19:10 <dmwit>	`Filter`.
May 12 12:19:12 <dmwit>	oh no
May 12 12:19:13 <dmwit>	?tell arvar `Filter`.
May 12 12:19:14 <lambdabot>	Consider it noted.
May 12 12:19:24 <dmwit>	oh double no, poor arvar
May 12 12:19:46 <aarvar>	...
May 12 12:19:51 <benzrf|>	ahaha
May 12 12:20:21 <benzrf|>	In particular: I'm doing some really garbage typeclass tomfoolery for fun, and i have my own Category class which is "Category cat k" and then the methods all have a "k" constraint - that is, it lets me put a constraint on the objects of the category
May 12 12:20:21 *	Sose has quit (Read error: Connection reset by peer)
May 12 12:20:26 *	dmwit waves at aarvar
May 12 12:20:34 *	hphuoc25 has quit (Remote host closed the connection)
May 12 12:20:41 *	Sose (~Joni@2a0c:5500:2::80) has joined
May 12 12:20:50 <benzrf|>	but then i want a class for bifunctors, but i want it to be possible to deduce that the bifunctor preserves the constraint
May 12 12:20:58 <aarvar>	dmwit: I don't see how :/
May 12 12:21:06 <aarvar>	but whatever, would need a larger example probably
May 12 12:21:19 *	kmurphy4_ (~kmurphy4@host158.181-10-57.telecom.net.ar) has joined
May 12 12:21:21 <dmwit>	aarvar: You don't see how what? How it avoids code duplication?
May 12 12:21:29 <dpyro>	dmwit oooh list comprehensions! forgot that was a thing
May 12 12:21:35 <crestfallen>	sclv, yeah I do .. thanks for responding
May 12 12:21:54 <crestfallen>	I think I do I saw it yesterday
May 12 12:22:15 <aarvar>	dmwit: right
May 12 12:22:18 <sclv>	saw it yesterday1?
May 12 12:22:39 <dmwit>	aarvar: Sure. Without GADTs, I have `Owner` and `OwnerT`; `Product` and `ProductT`; and `ReportProduct` and `ReportProductT`.
May 12 12:22:48 <sclv>	like, are you at your console now? you can just look into your project directory and see if it has a project.yaml
May 12 12:22:58 <sclv>	if it does, that's an "hpack" format file
May 12 12:23:05 *	emilypi has quit (Ping timeout: 240 seconds)
May 12 12:23:09 <dmwit>	aarvar: With GADTs, I have just `Owner`, `Product`, `ReportProduct`, and a "T" combinator.
May 12 12:23:13 <aarvar>	dmwit: do you have the link? I lost it
May 12 12:23:17 <sclv>	if you do a stack command like "sdist" or "build" it should also generate a cabal file for your project
May 12 12:23:18 <crestfallen>	one moment thanks sclv yes I'm on my machine
May 12 12:23:19 <sclv>	that you can use cabal with
May 12 12:23:23 <dmwit>	aarvar: https://stackoverflow.com/q/49946389/791604
May 12 12:23:44 <sclv>	(assuming your question is just about a missing cabal file, and not a missing cabal binary)
May 12 12:23:47 *	cynapse (~chris@d24-141-240-242.home.cgocable.net) has joined
May 12 12:23:50 *	chaosmasttter has quit (Ping timeout: 246 seconds)
May 12 12:24:03 <aarvar>	dmwit: what is "OwnerT"
May 12 12:24:07 <crestfallen>	I have the executable, and the filename.hs but I deleted .o and .hi
May 12 12:24:15 <dmwit>	(Well, with some name fiddling, what I actually have is `OwnerT`, `ProductT`, and `ReportProductT`, together with a "T-removing" combinator.)
May 12 12:24:19 <crestfallen>	sclv, ^
May 12 12:24:20 <sclv>	(if there's no command named 'cabal' on your system, then you need to install it, from a package manager, or just by downloading the binary from https://www.haskell.org/cabal/download.html)
May 12 12:24:20 *	seanparsons has quit (Read error: Connection reset by peer)
May 12 12:24:35 <sclv>	its fine to delete .o and .hi
May 12 12:24:38 <aarvar>	dmwit: oh, your second answer isn't what I was suggesting
May 12 12:24:42 <dmwit>	aarvar: It is the argumentless constructor that you pass to `mkFilter` to tell it that you want to make a filter whose constructor is `Owner`.
May 12 12:24:51 <aarvar>	dmwit: I was suggesting not having the Fitler type at all
May 12 12:25:00 <aarvar>	and defining Filter to just be the function which does the filter
May 12 12:25:10 <aarvar>	assuming that's all that's actually done with the value
May 12 12:25:17 <dmwit>	Ah, right.
May 12 12:25:20 <crestfallen>	I thought cabal was essential to stack and was included
May 12 12:25:31 <sclv>	stack makes use of cabal under the hood, yes
May 12 12:25:35 <aarvar>	so you just have FilterType -> ReportId -> IO (Record -> Bool), or whatever
May 12 12:25:36 <sclv>	but it doesn't put it on your path iirc
May 12 12:25:43 <dmwit>	aarvar: Well, in that case, since the question doesn't mention any consumers of filters at all, we may as well use () for that, right? ;-)
May 12 12:25:51 <crestfallen>	ok thanks working...
May 12 12:25:59 <aarvar>	right, needs more context
May 12 12:26:08 <aarvar>	probably an instance of the xy problem
May 12 12:26:08 <dmwit>	aarvar: It's not at all clear to me what the collection of consumers is. So better to represent the data explicitly as requested, then any consumers you want to write that work with that data can be written.
May 12 12:26:28 <dmwit>	aarvar: e.g. maybe they want to display filters to the user somehow, or sort them, or store them in a database, or...
May 12 12:26:44 <aarvar>	just seems like much of the time when I think I may need a GADT, I don't need a GADT
May 12 12:26:48 *	DrAwesomeCraws (~DrAwesome@c-67-189-254-80.hsd1.ct.comcast.net) has joined
May 12 12:26:58 *	dmwit nods agreeably
May 12 12:27:07 *	benzrf| has quit (Quit: Page closed)
May 12 12:28:19 *	dtornabene (~daniel@68-116-133-238.dhcp.ftwo.tx.charter.com) has joined
May 12 12:29:02 *	rkazak has quit (Quit: Sleep.....ing....)
May 12 12:29:39 *	DrAwesomeClaws has quit (Ping timeout: 260 seconds)
May 12 12:29:57 *	BasDirks (~textual@546AAE3B.cm-12-3c.dynamic.ziggo.nl) has joined
May 12 12:31:17 *	johnvonneumann (~johnvonne@c-67-170-231-178.hsd1.ca.comcast.net) has joined
May 12 12:31:27 *	sepp2k has quit (Ping timeout: 240 seconds)
May 12 12:31:29 *	sepp2k1 (~Sepp2k@x4e32c6b9.dyn.telefonica.de) has joined
May 12 12:31:40 *	johnvonneumann is now known as Guest97812
May 12 12:31:43 *	sepp2k1 has quit (Client Quit)
May 12 12:32:53 <crestfallen>	sclv, it worries me to have both on the system. one doesn't supersede the other would it? it looks like it's installing ghc
May 12 12:33:23 <sclv>	wait, what are you running that's installing ghc? the apt-get?
May 12 12:33:38 <sclv>	they can live both on the same system just fine fwiw
May 12 12:33:51 <sclv>	stack manages things independently of the system ghc
May 12 12:34:06 <crestfallen>	yeah debian stretch  ' $ sudo apt-get install cabal-install '
May 12 12:34:18 *	dhil has quit (Ping timeout: 265 seconds)
May 12 12:34:35 <crestfallen>	ok cool so looking at my project dir
May 12 12:34:47 <sclv>	they're two independent ecosystems, basically
May 12 12:35:35 <noan>	crestfallen, I recommend personally to install via the "generic" haskell platform
May 12 12:35:47 <noan>	https://www.haskell.org/platform/
May 12 12:35:57 <noan>	in terms of having a system install
May 12 12:36:09 <sclv>	the distro managed one is often not the most recent
May 12 12:36:15 <sclv>	but depending on what you want, that may be fine, or not :-)
May 12 12:36:31 <noan>	on debian I fear it may be ancient
May 12 12:36:39 <noan>	on ubuntu 16.04 it was still far too old
May 12 12:36:40 <crestfallen>	thanks this is just for going through a textbook
May 12 12:36:41 *	knupfer (~Thunderbi@200116b82cf36700f69634fffef0b45f.dip.versatel-1u1.de) has joined
May 12 12:36:49 <sclv>	ok that should be fine then
May 12 12:37:04 <sclv>	if anything lol an older cabal and ghc are probably closer to what the textbook was targeting :-)
May 12 12:37:28 <crestfallen>	textbook copyright 2016
May 12 12:37:31 *	seanparsons (~sean@cpc89558-gill19-2-0-cust21.20-1.cable.virginm.net) has joined
May 12 12:37:54 <sclv>	for real dev purposes in the future you might want something newer, but cross that bridge when you come to it
May 12 12:38:39 <crestfallen>	yeah thanks. so how do I get the yaml / .cabal files in my project? should I compile again? 
May 12 12:38:46 *	netheranthem (~netherant@2a02:c7d:bb2b:b100:9932:9048:a995:204e) has joined
May 12 12:38:55 *	knupfer has quit (Remote host closed the connection)
May 12 12:38:59 <sclv>	erm
May 12 12:39:13 <sclv>	if you don't have yaml files i'm surprised you have a "project"?
May 12 12:39:23 <sclv>	it sounds more like its just... some files :-P
May 12 12:39:52 *	epsilonhalbe (~epsilonha@84-113-106-42.cable.dynamic.surfer.at) has joined
May 12 12:39:58 <sclv>	to create a cabal project from scratch you run `cabal init`
May 12 12:40:21 <sclv>	to do textbook exercises you don't need a project, you can just use ghc --make on files directly
May 12 12:40:55 <sclv>	if you had an existing stack project, which i thought you did, you'd have a "stack.yaml" and "project.yaml" already, and the project.yaml would be auto-converted to the cabal file
May 12 12:41:26 <crestfallen>	I was trying to add ghc-options: -O2 to the .cabal file for optimization of the file , as per a member's suggestion yesterday
May 12 12:41:31 *	n-osborne (~Adium@2a01:e35:2e14:82b0:59d3:32b2:cda3:6c59) has joined
May 12 12:41:35 <sclv>	oh
May 12 12:41:44 <sclv>	you can just compile with ghc --make -O2 :-)
May 12 12:41:51 *	robertot1 has quit (Quit: WeeChat 2.1)
May 12 12:41:51 *	bendo (~bendo@aftr-62-216-207-62.dynamic.mnet-online.de) has joined
May 12 12:41:52 <johnw>	also, -O2 rarely actually helps
May 12 12:41:56 <sclv>	all this runaround lol
May 12 12:42:00 <johnw>	I've never yet seen it help me over -O
May 12 12:42:06 *	Sose_ (~Joni@85-23-66-76.bb.dnainternet.fi) has joined
May 12 12:42:07 <johnw>	and it can hurt
May 12 12:42:18 <crestfallen>	--make   ok that was what I was missing earllier
May 12 12:42:21 <sclv>	i've seen it in rare cases, but yeah, just like in gcc it is only sometimes better
May 12 12:42:27 <geekosaur>	uh
May 12 12:42:32 *	robertothais (~robertoth@2605:e000:858a:c700:c81f:c900:5fb4:ae6) has joined
May 12 12:42:33 <geekosaur>	--make shouldn;t be needed these days
May 12 12:42:35 <sclv>	the main thing that i've seen that helps, is raising the unfolding threshold
May 12 12:42:41 <sclv>	geekosaur: o_O
May 12 12:42:45 *	Kundry_Wag has quit (Remote host closed the connection)
May 12 12:42:50 <sclv>	i guess depends on the compiler version?
May 12 12:42:56 <geekosaur>	from ghc7.0 on\
May 12 12:42:59 <sclv>	(i never learned we didn't need it because its muscle memory)
May 12 12:43:19 *	Kundry_Wag (~Kundry_Wa@179.209.56.154) has joined
May 12 12:43:29 <sclv>	wow thats a long time for me to never learn that i didn't need it!
May 12 12:43:56 <wollw>	Hmm... Maybe I should be asking in #math but maybe someone can help me here.  I'm struggling to think about the proper way to construct, I suppose, a higher order graph of sets of vertices in a graph and a little confused where to begin.  The end result would be a randomized polygonal mesh with nodes attached to each polygon where each polygon is has links to the vertices that make it up, as well as links to
May 12 12:43:58 <wollw>	the polygonal neighbors.  I probably need more theory at this point.  Any reading suggestions?
May 12 12:44:54 <sclv>	what makes it "higher order"
May 12 12:44:57 *	cynapse has quit (Ping timeout: 240 seconds)
May 12 12:45:05 <johnw>	edges can be vertices?
May 12 12:45:25 *	Sose has quit (Ping timeout: 265 seconds)
May 12 12:45:34 <wollw>	johnw: pretty much my thought
May 12 12:45:50 *	WhatisRT (~whatisrt@2a02:8109:8fc0:1485:54cb:d498:e755:5a92) has joined
May 12 12:45:50 <wollw>	shared vertices would be edges too though
May 12 12:46:10 <johnw>	this is starting to sound like a closed category
May 12 12:46:10 *	danso has quit (Read error: Connection reset by peer)
May 12 12:46:18 *	sdothum has quit (Quit: ZNC 1.7.0 - https://znc.in)
May 12 12:46:35 *	danso (~dan@modemcable078.123-81-70.mc.videotron.ca) has joined
May 12 12:47:02 <sclv>	wollw: i would think higher-order meant edges could have 2-cells between them, etc?
May 12 12:47:12 <sclv>	not that edges are literally vertices?
May 12 12:47:14 *	acidjnk (~acid@mue-88-130-58-098.dsl.tropolys.de) has joined
May 12 12:47:32 <sclv>	i.e. can you have an edge between an edge and a vertex? or just between verticies, and then 2-edges between edges, etc?
May 12 12:47:35 *	Kundry_Wag has quit (Ping timeout: 240 seconds)
May 12 12:47:52 <sclv>	and can you have edges between 2-edges
May 12 12:48:13 *	BasDirks has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 12 12:48:20 <sclv>	for an n-graph you typically want something like a simplicial complex, i think
May 12 12:49:04 <sclv>	but you really can just represent it as a set of nodes, a set of edges between nodes, a set of edges between edges, etc.
May 12 12:49:45 <wollw>	that's likely the way I'll be going
May 12 12:49:48 <sclv>	so a potentially infinite list where at each level you have an indexed collection of things that each have two "endpoints" that point into the prior collection of indexes
May 12 12:49:57 *	Kundry_Wag (~Kundry_Wa@177.32.202.236) has joined
May 12 12:49:57 *	ph88 has quit (Ping timeout: 240 seconds)
May 12 12:50:16 *	sdothum (~znc@dsl-173-206-71-70.tor.primus.ca) has joined
May 12 12:50:51 *	fr33domlover has quit (Quit: fr33domlover)
May 12 12:51:11 *	n-osborne has quit (Quit: Leaving.)
May 12 12:51:17 *	Welkin (~Welkin@107.147.90.29) has joined
May 12 12:51:40 <crestfallen>	so yeah stack ghc --make -O2 file.hs  (and that w/o --make) .. -O2  (that's oh not zero) is an 'invalid option' fwiw
May 12 12:51:54 <wollw>	Pretty sure Simplicial Complex was the concept I was looking for.
May 12 12:52:01 <sclv>	wollw: https://hal.inria.fr/hal-00707901v1/document
May 12 12:52:23 <sclv>	flag complexes, mentioned there, are a simpler version that often suffices
May 12 12:52:28 <wollw>	Thank you.
May 12 12:52:51 *	Sose_ is now known as Sose
May 12 12:54:10 *	ecx86 is now known as ecx
May 12 12:54:36 *	humanoyd has quit (Quit: WeeChat 2.1)
May 12 12:54:49 <sclv>	crestfallen: `stack ghc` doesn't pass flags directly i think
May 12 12:55:05 *	jakehehrlich has quit (Ping timeout: 265 seconds)
May 12 12:56:02 *	sdothum has quit (Quit: ZNC 1.7.0 - https://znc.in)
May 12 12:56:24 *	revprez_atlanta has quit (Ping timeout: 250 seconds)
May 12 12:56:37 *	dan_f has quit (Quit: dan_f)
May 12 12:57:05 *	netheranthem has quit (Quit: Leaving)
May 12 12:57:13 *	sdothum (~znc@dsl-173-206-71-70.tor.primus.ca) has joined
May 12 12:58:14 <sclv>	i think its something like `stack  ghc -- Bar.hs -O2` but i can't promise that
May 12 12:58:20 *	sclv is not a heavy stack user
May 12 12:58:21 *	revprez_atlanta (~revprez_a@96-89-233-50-static.hfc.comcastbusiness.net) has joined
May 12 12:58:42 <Welkin>	die stack
May 12 12:59:10 *	lumm (~lumm@249.14.136.77.rev.sfr.net) has joined
May 12 12:59:39 <crestfallen>	thanks I use an old 32bit machine anyway. its fun waiting for the 35? second evaluation.  sclv   die stack? I thought it was the standard .. I'm just learning basic haskell what a rough undertaking
May 12 12:59:50 *	dtornabene has quit (Quit: Leaving)
May 12 13:00:04 *	BasDirks (~textual@546AAE3B.cm-12-3c.dynamic.ziggo.nl) has joined
May 12 13:00:08 <Welkin>	stack is not standard in any way
May 12 13:00:25 <Welkin>	it is relatively new (came out around 2013/14)
May 12 13:00:41 <Welkin>	cabal is the build system
May 12 13:00:45 <Welkin>	and now package manager
May 12 13:00:59 *	TorkMattar has quit (Ping timeout: 260 seconds)
May 12 13:01:00 <Welkin>	oh no, stack came out in 2015
May 12 13:01:03 <Welkin>	so very new
May 12 13:01:26 <crestfallen>	well I'm not splitting hairs about it. as long as stack is stable enough to get me through a textbook, right?
May 12 13:01:50 <Welkin>	stack was once great
May 12 13:01:52 <sclv>	all its doing in this config is reinvoking the ghc it installed
May 12 13:01:57 <Welkin>	but the new cabal makes it obsolete
May 12 13:02:07 <sclv>	and passing the arguments past the `--` directly to it
May 12 13:02:07 <Welkin>	a lot have moved on to using nix as well
May 12 13:02:15 <sclv>	so its just a passthrough for a ghc installation at this point
May 12 13:02:22 <sclv>	and i mean... its fine for that
May 12 13:02:29 <sclv>	if it works for you and you're learning
May 12 13:02:35 <sclv>	imho the most important thing is to stay learning
May 12 13:02:41 <sclv>	and not get bogged down in build tool minutae
May 12 13:02:42 <crestfallen>	yeah good call
May 12 13:03:05 *	ph88 (~ph88@a95-93-143-227.cpe.netcabo.pt) has joined
May 12 13:03:09 <Welkin>	however, you will need to learn how to use cabal
May 12 13:03:10 <crestfallen>	yeah its how I got haskell on my system. it seems fine for now. 
May 12 13:03:20 <Welkin>	and stack doesn't even hide that from you, because you still use a .cabal file anyway
May 12 13:03:23 <Welkin>	so it's pretty pointless
May 12 13:03:26 <Welkin>	like pointer chasing
May 12 13:03:39 <crestfallen>	what do you mean pointer chasing
May 12 13:04:18 <Welkin>	a waste of time and resources; extra overhead for no benefit
May 12 13:04:25 <crestfallen>	I want to learn more math. I found a math student at uc berkeley who wants to learn haskell. so we are starting a club
May 12 13:04:32 <Welkin>	extra abstraction
May 12 13:04:33 <Boarders>	I tend to find writing the cabal file is much nicer anyway even if you are using stack
May 12 13:04:46 *	SenasOzys has quit (Remote host closed the connection)
May 12 13:05:13 *	SenasOzys (~Ozys@user208.77-105-199.netatonce.net) has joined
May 12 13:05:18 <crestfallen>	ok thanks I'll keep it in mind that the new cabal is more pure, if I understand correctly
May 12 13:05:28 <Welkin>	more pure?
May 12 13:05:32 <Welkin>	no idea what you mean by that
May 12 13:05:45 <crestfallen>	just cleaner idk
May 12 13:05:53 *	n-osborne (~Adium@2a01:e35:2e14:82b0:3472:8176:9b44:5c0c) has joined
May 12 13:05:59 <crestfallen>	I have no idea what I mean by it either
May 12 13:06:28 *	sdothum_ (~znc@dsl-173-206-71-70.tor.primus.ca) has joined
May 12 13:06:48 *	robertothais has quit (Ping timeout: 255 seconds)
May 12 13:06:57 *	sdothum has quit (Ping timeout: 240 seconds)
May 12 13:07:21 <crestfallen>	so if I run $ ghc that is the system ghc and is using cabal right? 
May 12 13:07:26 *	vukasink (~vukasink@lak-31-205.wohnheime.ruhr-uni-bochum.de) has joined
May 12 13:07:42 <crestfallen>	now that I installed it
May 12 13:07:52 <wollw>	cabal uses ghc, not the other way around
May 12 13:08:20 <Welkin>	cabal gives you complete control over what you are doing
May 12 13:08:20 *	hackage animate-sdl2 0.0.0 - sdl2 + animate auxiliary library  http://hackage.haskell.org/package/animate-sdl2-0.0.0 (jxv)
May 12 13:08:33 <Welkin>	you can use multiple vrsions of ghc for different projects
May 12 13:08:42 <crestfallen>	btw its $ cabal --version cabal-install version 1.24.0.1
May 12 13:08:50 *	siiky (~siiky@bl6-174-56.dsl.telepac.pt) has joined
May 12 13:08:53 <Welkin>	wow
May 12 13:08:55 <Welkin>	that is OLD
May 12 13:09:00 <sclv>	for learning its fine imho
May 12 13:09:03 <Welkin>	we are on cabal 2.2.x
May 12 13:09:22 <sclv>	like just stay learning, and learn about tools and stuff only as you get blocked
May 12 13:09:28 <Welkin>	you can at least upgrade it
May 12 13:09:35 <Welkin>	cabal install cabal-install
May 12 13:09:46 <crestfallen>	ok cool will do
May 12 13:10:09 *	[exa] likes the cabal mantras
May 12 13:10:58 <crestfallen>	I use nam myoho renge kyo .. lotus sutra
May 12 13:10:59 <aarvar>	Welkin: weren't people using nix before stack?
May 12 13:11:05 <Welkin>	aarvar: probably
May 12 13:11:13 <Welkin>	I just didn't know about it until later
May 12 13:11:15 *	freeman42x]NixOS (~freeman42@37.228.238.213) has joined
May 12 13:11:23 <[exa]>	nix is that old?
May 12 13:11:36 <aarvar>	yes
May 12 13:11:54 <[exa]>	lol 2003 according to wiki
May 12 13:12:29 <aarvar>	I think I first tried nixos in 2014 or 15, before going back to arch for a while
May 12 13:12:35 <[exa]>	it wasn't getting much coverage until around 2016 tbh
May 12 13:12:35 <aarvar>	now back on nixos
May 12 13:12:52 <[exa]>	(arch is a mess)
May 12 13:13:01 <aarvar>	so I've heard
May 12 13:13:07 <noan>	syntactically speaking, what's the "nice" way to compose nested Monad stuff?
May 12 13:13:21 <aarvar>	noan: depends really
May 12 13:13:26 <noan>	Basically, I have a function that I need to perform some IO and then produce some Non-run Managed resources.
May 12 13:13:29 <aarvar>	but mtl and classy optics is a start
May 12 13:13:31 <noan>	Ie, I need IO Managed a
May 12 13:13:33 <Welkin>	compose what exactly?
May 12 13:13:40 <Welkin>	what is nested monad "stuff"?
May 12 13:13:44 <Welkin>	monad transformers?
May 12 13:14:00 <aarvar>	noan: Managed has an instance of MonadIO
May 12 13:14:05 <Welkin>	liftIO
May 12 13:14:07 <[exa]>	noan: I always make a tiny class just for surviving the one nesting I need
May 12 13:15:27 <noan>	I don't entirely understand. Like, my function will start by performing simple IO, basically I need a bunch of things that are just IO FilePath
May 12 13:15:37 <aarvar>	:t liftIO
May 12 13:15:38 <lambdabot>	MonadIO m => IO a -> m a
May 12 13:15:39 <noan>	then I need to use the FilePath values to create managed
May 12 13:15:46 <aarvar>	liftIO :: IO a -> Managed a
May 12 13:15:47 *	chaosmasttter (~chaosmast@p200300EB7BC7AC5989054489C73C61C1.dip0.t-ipconnect.de) has joined
May 12 13:15:54 <noan>	oh, I can lift an IO -> TO a managed?
May 12 13:16:07 <aarvar>	yes
May 12 13:16:34 <noan>	so then I can just basically liftIO $ getFileName "Blah" and I end up here with Managed a
May 12 13:16:35 *	ni291187 (~u931732@82.77.245.227) has joined
May 12 13:16:37 <Welkin>	you can use explicit `lift` as many times as you need to unwrap any layers of your monad stack
May 12 13:16:38 <noan>	right?
May 12 13:16:44 <aarvar>	yes
May 12 13:16:46 <Welkin>	liftIO is nice because it automates that for you
May 12 13:16:50 <noan>	thanks
May 12 13:16:59 <crestfallen>	slightly off topic..
May 12 13:17:00 <noan>	I was like "But lifting my Managed to IO isn't what I want at all"
May 12 13:17:29 <ni291187>	hey
May 12 13:17:41 <aarvar>	getFileName and such should really be generalized to MonadIO in the first place though
May 12 13:17:47 <crestfallen>	I work at a major cs university ucBerkeley. why has it been so hard for me to find haskell people? I've even put up flyers... :)
May 12 13:17:50 *	conal has quit (Ping timeout: 276 seconds)
May 12 13:18:10 <aarvar>	because cs education is mostly bs?
May 12 13:18:14 <aarvar>	(random guess)
May 12 13:18:18 *	Bare- (~Bare@73.96.114.216) has joined
May 12 13:18:34 <wollw>	crestfallen: try UCSD?
May 12 13:18:34 <[exa]>	crestfallen: don't worry it's the same everywhere
May 12 13:18:41 <Welkin>	I would never study CS at university
May 12 13:18:50 *	wollw still needs to finish a degree there...
May 12 13:18:55 <aarvar>	lol, I tried to tell my classmates to try haskell and they were like "but all the jobs are in Java"
May 12 13:19:10 *	ni291187 (~u931732@82.77.245.227) has left
May 12 13:19:14 <wollw>	in VisArts, funny enough
May 12 13:19:17 <crestfallen>	wow, actually that is encouraging aarvar  !  I don't study cs I work for an unrelated science dept
May 12 13:19:28 <Welkin>	yes, most cs curriculum is all java and oop and outdated crap that has nothing to do with actual computer science
May 12 13:19:34 <aarvar>	crestfallen: granted, this was at a community college
May 12 13:19:38 *	pavonia (~user@unaffiliated/siracusa) has joined
May 12 13:19:45 *	emilypi (~emilypi@pool-100-33-104-88.nycmny.fios.verizon.net) has joined
May 12 13:19:46 <[exa]>	crestfallen: from the 20% of the students that are able to pass the whole bachelor course here, around 5% are willing to think outside their current favourite programming language, and 0.5% can survive trying to wrap around the monads
May 12 13:19:53 <sclv>	crestfallen: berkeley's cs department is very not-fp compared to other departments
May 12 13:19:58 <aarvar>	but we learned how C++ and Java are the only languages used in industry
May 12 13:20:11 <sclv>	its really much more electrical engineering oriented, or it was years ago at least
May 12 13:20:16 <sclv>	i don't think it evolved that much
May 12 13:20:18 <[exa]>	aarvar: you mean c# and java? :]
May 12 13:20:26 <aarvar>	no, I mean C++
May 12 13:20:28 <sclv>	its a systems department :-)
May 12 13:20:48 <Welkin>	even engineering is a terrible course to study in university
May 12 13:20:48 <aarvar>	[exa]: C++ is for the good programmers, while Java is for the ones that aren't good enough to write C++
May 12 13:20:51 <aarvar>	is what we learned
May 12 13:20:56 <[exa]>	wow.
May 12 13:21:01 <crestfallen>	anyway dang, its all above me. I love learning haskell and a little math here and there
May 12 13:21:02 <aarvar>	wow indeed
May 12 13:21:06 <Welkin>	it's mostly focused on made-up/outdated "industry"
May 12 13:21:16 <Welkin>	and I did study electrical/computer engineering
May 12 13:21:18 <Welkin>	o.o
May 12 13:21:23 <Welkin>	should have gone for pure physics
May 12 13:21:25 <aarvar>	[exa]: also, haskell is really slow and terrible, so don't mention it
May 12 13:21:25 <Welkin>	or something else
May 12 13:21:33 <crestfallen>	I studied English
May 12 13:21:35 *	pera has quit (Ping timeout: 240 seconds)
May 12 13:21:39 <aarvar>	definitely don't mention that you could do all the assignments in a fraction of the time in it
May 12 13:21:44 *	Bare has quit (Ping timeout: 276 seconds)
May 12 13:21:47 <wollw>	C++ and Java is even what UCSD's Computing and the Arts program introduces.
May 12 13:21:54 <aarvar>	that would be comparing apples to oranges, because C++ is really fast
May 12 13:22:06 *	ctrlsbstr (~ctrlsbstr@174.27.121.44) has joined
May 12 13:22:22 <Welkin>	your programs run really fast, it just takes forever to write them, and they are wrong
May 12 13:22:26 *	amar_ (~amar@cpc110667-lewi19-2-0-cust794.2-4.cable.virginm.net) has joined
May 12 13:22:26 <Welkin>	in c++
May 12 13:22:29 <aarvar>	and the C++ compiler writers are geniuses, and the haskell ones not so much
May 12 13:22:53 <[exa]>	yes, c++ compiler writers do black magicks without publishing
May 12 13:22:55 <Welkin>	slow c++ is easy to write too though, lol
May 12 13:23:14 <aarvar>	well, they never mention that high level C++ is going to be slower than high level haskell
May 12 13:23:20 <Welkin>	have you see nthe terrible standard library?
May 12 13:23:23 <aarvar>	because of course they think their super fast C++ is already high level
May 12 13:23:32 <edwardk>	fwiw- my college experience also had that c and java feel. and my math degree was done at a university that didnt believe in category theory
May 12 13:23:37 <crestfallen>	I have this idea. to master haskell and some discrete math, even if it takes me years, and not worry about jobs and such
May 12 13:23:55 <aarvar>	edwardk: like, believed it was abstract nonsense?
May 12 13:24:00 <[exa]>	edwardk: so they were into homotopy?
May 12 13:24:02 <edwardk>	yep
May 12 13:24:04 <aarvar>	lol
May 12 13:24:25 *	sytherax (~swoorup@27-33-100-182.static.tpgi.com.au) has joined
May 12 13:24:32 *	elfets_ has quit (Quit: Leaving)
May 12 13:24:37 *	howdoi has quit (Quit: Connection closed for inactivity)
May 12 13:24:43 <edwardk>	nah more into teaching high school teachers -- who needed to have a masters in order to comply with the new laws at the time
May 12 13:24:46 <aarvar>	edwardk: how did you survive?
May 12 13:25:09 <monochrom>	Oh so yesterday I came up with this ridiculous theory of why these inferior languages are so popular and so many jobs.
May 12 13:25:18 <edwardk>	graduated fast enough that they didnt know what to make of it and then let me do whatever i wanted
May 12 13:25:22 <aarvar>	edwardk: the community college requires masters degrees...but not in the same subject
May 12 13:25:24 <[exa]>	monochrom: please elaborate. :D
May 12 13:25:26 <Welkin>	worse is better, popular things are popular because they are popular
May 12 13:25:36 *	cur8or (~cur8or@cerberus.courtney.org.za) has joined
May 12 13:25:41 <Welkin>	just like the rich get richer, the poor get poorer
May 12 13:25:49 <aarvar>	I had two cs teachers with masters in education, and one with a masters in psychology
May 12 13:25:54 <aarvar>	lol
May 12 13:26:09 *	amar has quit (Ping timeout: 248 seconds)
May 12 13:26:09 *	elfets (~stefan@ip-178-200-141-84.hsi07.unitymediagroup.de) has joined
May 12 13:26:21 <[exa]>	ok regarding the language choice
May 12 13:26:23 <aarvar>	Welkin: no, the rich are succesful because they're geniuses. Haven't you heard?
May 12 13:26:27 <monochrom>	Precisely because they're horrible, the companies that chose them now have to hire more people to fix the problems and get it to work. Employment opportunities balloon.
May 12 13:26:47 <aarvar>	monochrom: pretty sure I've said that before
May 12 13:26:51 *	Sampuka (~Sampuka@188-182-61-22-cable.dk.customer.tdc.net) has joined
May 12 13:26:53 <edwardk>	to be fair i taught in the cs department with a masters in math while i was getting my masters in cs. they could let me teach because i had that random piece of paper
May 12 13:26:53 <Welkin>	"opportunities" is an interesting way to phrase it
May 12 13:27:03 <Welkin>	more like they need more dumb slaves
May 12 13:27:10 <aarvar>	edwardk: I'd rather have someone with a degree in math than cs
May 12 13:27:28 <aarvar>	but yes, the whole credentials thing is generally silly
May 12 13:27:55 <aarvar>	I should add that these teachers also couldnt program :)
May 12 13:27:59 *	oish has quit (Ping timeout: 260 seconds)
May 12 13:28:01 <Welkin>	or teach?
May 12 13:28:15 <aarvar>	or teach
May 12 13:28:33 <aarvar>	well, they were okay at teaching completely incorrect things
May 12 13:28:46 *	piffle (~jj@121-73-9-217.cable.telstraclear.net) has joined
May 12 13:28:55 <edwardk>	meh i think there is a real bar to clear when it comes to teaching proper computer science. so many folks who come in from outside (or even inside the discipline frankly) really couldn't use the master theorem to save their life.
May 12 13:28:58 <aarvar>	like, catch every exception immediately and then print an error or something
May 12 13:29:07 <[exa]>	last time on c++ class I was hating how java stuff needs a check before almost each access to variables, and one student asked if haskell checks whether the value is a thunk everytime
May 12 13:29:11 <aarvar>	make sure to wrap every new statement in a try/catch to catch out of memory exceptions!
May 12 13:29:41 <[exa]>	and kindof pointed out that strictness analysis is a bit more complicated than nullability analysis
May 12 13:30:01 <Welkin>	have lil wayne teach computer science
May 12 13:30:08 <monochrom>	I can't use the master theorem to save my life. OTOH I think the master theorem is pretty weak in the first place, it isn't adequate to save anyone's life.
May 12 13:30:34 *	robertothais (~robertoth@2605:e000:858a:c700:c81f:c900:5fb4:ae6) has joined
May 12 13:30:53 <[exa]>	monochrom: no one can even remember the master theorem, the stuff is usually easier to prove on the spot
May 12 13:30:57 <crestfallen>	what about my ^ plan ? more and more, even with excellent help here, I'm worried I can't learn this stuff alone
May 12 13:31:07 *	alex`` (~alex@2a01cb000bb31000acb4ba6271f0f193.ipv6.abo.wanadoo.fr) has joined
May 12 13:31:18 <wollw>	Not caring about the master theorem is I think what lead me away from CS and more toward Math in the first place.  Haskell only sealed the deal.
May 12 13:31:18 <monochrom>	Yeah, ad hoc techniques actually work better for this.
May 12 13:31:19 <edwardk>	i mention it mostly because so many people get through a cs degree with no more an understanding of complexity theory than 'searching costs a log, right?'
May 12 13:31:42 <monochrom>	Heh
May 12 13:31:50 <Welkin>	that's because it's not really computer science
May 12 13:31:54 <aarvar>	lol, we also learned that O(n/2) is faster than O(n)
May 12 13:31:59 <Welkin>	there are at most 2 classes in computer science
May 12 13:32:05 <Welkin>	everything else is programming or software engineering
May 12 13:32:16 <[exa]>	aarvar: lol
May 12 13:32:21 <edwardk>	aarvar that is a professor worth firing
May 12 13:32:32 <aarvar>	average case for linear search is O(n/2) while worst case is O(n)
May 12 13:32:33 <[exa]>	the O is the same don't you see? :D
May 12 13:32:41 <sclv>	crestfallen: I and many others learned it alone, with some occasional help from irc :-)
May 12 13:32:42 <aarvar>	edwardk: to be fair, he was an adjunct, at a community college
May 12 13:32:44 <aarvar>	not a professor
May 12 13:32:47 *	ctrlsbstr has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 12 13:32:53 <aarvar>	that was the one with the masters in psychology
May 12 13:33:05 <Welkin>	big O is pretty useless anyway
May 12 13:33:15 <Welkin>	it doesn't take into account the actual hardware
May 12 13:33:21 *	armyriad has quit (Quit: Leaving)
May 12 13:33:21 <[exa]>	Welkin: it's a great way of communication
May 12 13:33:21 *	danvet has quit (Ping timeout: 255 seconds)
May 12 13:33:43 <edwardk>	aarvar daying the expected number of elements visited is n/2 is valid. talking about O(n/2) is sloppy thinking
May 12 13:33:50 <edwardk>	er saying
May 12 13:33:53 <[exa]>	Welkin: and getting the actual "best speed on hardware X" is reducible to NP
May 12 13:34:05 <Welkin>	not at all
May 12 13:34:11 <Welkin>	just design for the hardware
May 12 13:34:12 *	beefjoe (~beefjoe@unaffiliated/beefjoe) has joined
May 12 13:34:14 <EvanR>	so uh
May 12 13:34:15 <aarvar>	edwardk: right
May 12 13:34:16 <Welkin>	use the cache efficiently
May 12 13:34:43 <sclv>	so thinking O(n) is diffrerent than O(n/2) is a great example of why mathematics should be more explicit about scoping and variable binding
May 12 13:34:44 <EvanR>	ExceptT (RWS vs RWST (Either...
May 12 13:34:44 <aarvar>	he had O(n/2) on the slide, and was supposedly explaining big-O
May 12 13:35:00 <aarvar>	sclv: yes, what the heck is n
May 12 13:35:01 <edwardk>	welkin: which cache? i do plenty of stuff cache obliviously because optimizing for one cache necessarily suboptimizes for all the others
May 12 13:35:03 <aarvar>	where is it bound
May 12 13:35:08 <aarvar>	x^2 is not a function
May 12 13:35:10 <aarvar>	etc
May 12 13:35:14 *	robertothais has quit (Ping timeout: 246 seconds)
May 12 13:35:16 *	conal (~conal@104.255.240.10) has joined
May 12 13:35:22 <[exa]>	Welkin: the question is "how can you know your cache optimization is optimal"
May 12 13:35:28 <Welkin>	I guess you can't
May 12 13:35:31 <Welkin>	it's all empirical
May 12 13:35:34 <[exa]>	Welkin: also "didn't you forget about the magic instruction X"
May 12 13:35:35 *	amirpro (~amirpro@41.236.128.79) has joined
May 12 13:36:11 <edwardk>	big o notation is quite useful when problems get large or to tease apart behavior as they tend in that direction
May 12 13:36:12 *	robotroll (~robotroll@unaffiliated/robotroll) has joined
May 12 13:36:14 <aarvar>	why don't we write integral (\x -> 2 * x)
May 12 13:36:15 <[exa]>	what I wanted to say is that there are people working on getting rid of the O notation by something more hardware-related, but they failed
May 12 13:36:19 <[exa]>	(so far)
May 12 13:36:40 <sclv>	integral when written longhand at least explicitly binds the variable somewhere
May 12 13:36:45 *	pera (~pera@unaffiliated/pera) has joined
May 12 13:36:50 *	hackage plot-light 0.4 - A lightweight plotting library, exporting to SVG  http://hackage.haskell.org/package/plot-light-0.4 (ocramz)
May 12 13:36:53 <noan>	on the topic of uni
May 12 13:36:56 <aarvar>	sclv: the dx right?
May 12 13:37:01 <aarvar>	but then you throw that away when you compute it!
May 12 13:37:07 <monochrom>	Mathematicians are using a convention started 300 years ago when math and physics were very close (like, Newton would both a mathematician and a physicist), and these "y is a depedent variable, meaning it is a function of the independent variable x" makes more sense in physics, because y also depends on a million other variables but they are not your focus right now.
May 12 13:37:10 <aarvar>	and now somehow you have an expression rather than a function
May 12 13:37:18 <edwardk>	exa: you can teach -calculus- through big O notation instead of the usual limits. Knuth is a big fan of that approach, btw
May 12 13:37:21 <opqdonut>	EvanR: ExceptT RWS a is r -> s -> (s,w,Either err a)
May 12 13:37:30 *	amirpro has quit (Client Quit)
May 12 13:37:34 <aarvar>	dependent variables are nonsense
May 12 13:37:34 <noan>	here's some comedy for you all. I live in Göteborg. The city where this guy teaches: https://en.wikipedia.org/wiki/John_Hughes_(computer_scientist)
May 12 13:37:39 <aarvar>	death to dependent variables
May 12 13:37:40 <monochrom>	But evidently now that we have nailed predicate logic, it is no longer very logical.
May 12 13:37:40 <[exa]>	edwardk: like replacing limits by O ?
May 12 13:37:43 <crestfallen>	sclv, I have zero experience as a programmer
May 12 13:37:54 *	amirpro (~amirpro@41.236.128.79) has joined
May 12 13:37:56 <noan>	Haskell is basically a mandatory component of CS in uni here. There are I believe 0 haskell jobs.
May 12 13:37:58 <edwardk>	exa yeah
May 12 13:38:02 <aarvar>	My calc homework was full of let y = f(x)
May 12 13:38:08 <opqdonut>	EvanR: RWST Either a is r -> s -> Either err (a, s, w)
May 12 13:38:10 <edwardk>	drops in for the epsilon delta proofs etc
May 12 13:38:20 <noan>	Everyone I talk to about it seem completely put off about it and irritated by things like purity
May 12 13:38:20 <sclv>	crestfallen: you got frustrated by confusing ways to invoke a compiler. that's like the canonical programmer experience!
May 12 13:38:23 <noan>	"I JUST WANT MY LOOPS"
May 12 13:38:27 <opqdonut>	EvanR: so in the former fail doesn't update state, while in the latter it does
May 12 13:38:30 <Welkin>	noan: toucan sam?
May 12 13:38:30 <[exa]>	edwardk: that sounds brutal, going to show students next year to see what will their faces look like
May 12 13:38:32 <monochrom>	I do the reverse of Knuth's. I teach big O through limits :)
May 12 13:38:35 <opqdonut>	EvanR: errrr except the other way around...
May 12 13:38:41 <EvanR>	opqdonut: .....
May 12 13:38:43 <EvanR>	;_;
May 12 13:38:43 <aarvar>	noan: great, fail them all
May 12 13:38:49 <Welkin>	isn't that also a name for a drug?
May 12 13:38:53 <aarvar>	it's like physics majors complaining about calculus
May 12 13:39:14 <edwardk>	exa; i took an entire nonstandard analysis class that was taught this way. the professor had always wanted to try
May 12 13:39:22 <noan>	aarvar, the thing is, the do the bare minimum to get through the course, but in the real world they're just like LOL NO HASKELL
May 12 13:39:30 <noan>	I live in a city of c# and java.
May 12 13:39:35 *	conal has quit (Ping timeout: 240 seconds)
May 12 13:39:38 *	epsilonhalbe (~epsilonha@84-113-106-42.cable.dynamic.surfer.at) has left
May 12 13:39:41 <Welkin>	why would you want haskell jobs?
May 12 13:39:43 <EvanR>	opqdonut: yeah i'd like fail to not update state
May 12 13:39:44 sclv SCHAPiE scinawa sclv[m] Scorchin scrypso[m] 
May 12 13:39:46 <aarvar>	noan: dont all cs majors do the bare minimum?
May 12 13:39:49 <Welkin>	imagine if haskell was as popular as javascript
May 12 13:39:49 <noan>	Welkin, because I want to write haskell
May 12 13:39:50 <aarvar>	that's what cs is for right?
May 12 13:39:56 <Welkin>	then by definition it would be a terrible language
May 12 13:40:00 <Welkin>	because to be popular, it has to be bad
May 12 13:40:09 <edwardk>	noan: i live in the real world and write quite a bit of haskell out here
May 12 13:40:10 <noan>	aarvar, I dunno, I never studied it
May 12 13:40:15 <Welkin>	noan: writing haskell for someone else is not as fun as writing it for yourself
May 12 13:40:19 <aarvar>	edwardk: but you're special!
May 12 13:40:22 <Welkin>	any time something becomes work, the fun is gone
May 12 13:40:26 <noan>	Welkin, I might be more fun that writing scala for them.
May 12 13:40:32 <aarvar>	(and if you're not, find me a haskell job plz)
May 12 13:40:32 <noan>	it*
May 12 13:40:33 *	zdenal has quit (Ping timeout: 255 seconds)
May 12 13:40:49 <noan>	edwardk, okay, but how many require me to not relocate?
May 12 13:40:56 <edwardk>	aarvar; shoot me a resume in email
May 12 13:40:58 <[exa]>	edwardk: do you have some slides or material from the class?
May 12 13:41:13 <edwardk>	exa: i might have a folder full of class notes
May 12 13:41:17 <aarvar>	edwardk: oh, forgot to mention, it's blank xd
May 12 13:41:42 <noan>	edwardk, aarvar's CV is just a piece of paper with a mathematical proof on it and the words "Just read the type signature."
May 12 13:41:47 <edwardk>	aarvar: write some more open source stuff -then- swnd me a resume then ;)
May 12 13:41:52 <[exa]>	edwardk: or maybe possibly some links to definitions/theorem lists if they are already on the web
May 12 13:41:56 <crestfallen>	sclv, I wasn't frustrated really. I just had it wrong as usual. I have a mental problem. I always think the actual code is way more difficult/complex than it is. As if I superimpose complexity on stuff and cannot see it for what it is
May 12 13:42:04 <edwardk>	typing on my phone. apologies for all the typos
May 12 13:42:04 <noan>	edwardk, you have remote haskell positions open possible?
May 12 13:42:05 *	lumm has quit (Read error: Connection reset by peer)
May 12 13:42:23 <sclv>	crestfallen: it was just a joke about the amount of programming that is wrangling with getting things to work or reading docs, as compared to writing code
May 12 13:42:23 <aarvar>	edwardk: can I just write "understands a reasonable amount of type theory and FP and mathy shit" on it?
May 12 13:42:27 <aarvar>	I guess not
May 12 13:42:43 <[exa]>	aarvar: "can work with simple symbolic logic"
May 12 13:42:48 <aarvar>	lol
May 12 13:42:50 <aarvar>	ew, logic
May 12 13:42:57 <aarvar>	just a degenerate form of type theory
May 12 13:43:07 <[exa]>	don't scare the workers! :D
May 12 13:43:09 <edwardk>	noan: frankly, i don't believe in hiring for more junior positions remotely. it's really hard to teach someone when they aren't in the office with you.
May 12 13:43:11 <wollw>	Doesn't it take logic to evaluate types?
May 12 13:43:23 <edwardk>	noan: i've just never seen it work out well
May 12 13:43:25 <Welkin>	"expert in Microsoft Word, Excel, and Powerpoint"
May 12 13:43:26 *	kmurphy4_ has quit (Quit: kmurphy4_)
May 12 13:43:29 <aarvar>	wollw: na
May 12 13:43:34 *	zero_byte has quit (Ping timeout: 264 seconds)
May 12 13:43:43 <[exa]>	Welkin: heck, excel can run neural nets
May 12 13:43:48 <sclv>	right. the more senior the dev, typically the more independent you can expect them to be
May 12 13:43:52 <wollw>	Maybe I'm using an overbroad definition of logic.
May 12 13:43:53 *	um1b0zu (~jalil@2601:197:701:9f6:c014:e552:1c6c:e727) has joined
May 12 13:44:07 <Welkin>	https://en.wikipedia.org/wiki/Logic_(musician)
May 12 13:44:09 <Welkin>	the rapper?
May 12 13:44:09 *	piffle (~jj@121-73-9-217.cable.telstraclear.net) has left ("Leaving")
May 12 13:44:12 <wollw>	I hope not.
May 12 13:44:14 <edwardk>	its hard enough when you're hiring the king of their field remotely, to try to get them to integrate with the rest of their team
May 12 13:44:15 <noan>	edwardk, fair enough. I have a lot of haskell to learn, although I would consider myself an otherwise competent developer :3
May 12 13:44:17 <aarvar>	a proposition is just a type of homotopy level 1 (or -1, depending on how you want to count), what's the problem?
May 12 13:44:27 <monochrom>	No! Logic is a degenerate form of probability theory!
May 12 13:44:28 <crestfallen>	sclv, yes thanks I really appreciate your insight. I waste a hell of a lot of time with that. I am a master procrastinator. how do you really hunker down and focus? I've never gained that discipline except in athletics
May 12 13:44:36 <aarvar>	(it is 1 right?)
May 12 13:44:42 <wollw>	monochrom: what if i don't believe in random chance?
May 12 13:44:49 *	crissava (~crissava@2a02:2f0b:4090:13bd:e3c:8fe2:bb9:8597) has joined
May 12 13:44:57 <Welkin>	wollw: the universe doesn't care
May 12 13:45:02 *	conal (~conal@104.255.240.10) has joined
May 12 13:45:04 <Welkin>	the universe don't give a shit
May 12 13:45:05 <aarvar>	everything is degenerate category theory!
May 12 13:45:06 <wollw>	agreed
May 12 13:45:14 *	tomphp has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 12 13:45:17 <Boarders>	aarvar: if you want to get into doing stuff professionally then for your first gig you probably shouldn't worry too much about how hip your colleagues are to haskell and dependent types and infinity,1 categories
May 12 13:45:26 <monochrom>	You can go Bayesian. It's a theory. You apply it to whatever that fits the axioms.
May 12 13:45:28 *	pinewood (~johnnie@cpe-74-67-10-180.nycap.res.rr.com) has joined
May 12 13:45:33 <aarvar>	Boarders: but then I'll die
May 12 13:45:50 <aarvar>	don't make me write scala
May 12 13:45:56 *	sdothum_ has quit (Quit: ZNC 1.7.0 - https://znc.in)
May 12 13:45:59 <noan>	aarvar, DO YOU WANT JOB OR NOT
May 12 13:45:59 <[exa]>	lol scala
May 12 13:46:00 *	robotroll has quit (Read error: Connection reset by peer)
May 12 13:46:03 <noan>	I CAN GIEB YOU SCALA JOB NOW
May 12 13:46:04 <wollw>	monochrom: thanks
May 12 13:46:05 <noan>	PLS TAKE
May 12 13:46:07 <Boarders>	it is hell but just aim for an escape path after 3-6 months once you've learnt what there is to learn from the setting
May 12 13:46:07 <edwardk>	aarvar: where are you located?
May 12 13:46:12 <Cale>	aarvar: Category theory is degenerate everything?
May 12 13:46:19 *	jb55 (~jb55@2605:8d80:4c4:680f:a2af:bdff:fef0:c102) has joined
May 12 13:46:21 <aarvar>	edwardk: seattle-ish
May 12 13:46:28 *	wollw falls back on the four humors.
May 12 13:47:00 <edwardk>	try to talk tony into getting you down to QFPL in brisbane or something. you guys see eye to eye on a lot of stuff
May 12 13:47:05 <Welkin>	black bile, yellow, blood, and phlegm?
May 12 13:47:07 *	calloc has quit (Quit: WeeChat 2.1)
May 12 13:47:29 <aarvar>	edwardk: do I want to move to australia?
May 12 13:47:34 <[exa]>	noan: anyway, the trick with haskell jobs is that you can write haskellish in any language
May 12 13:47:44 <edwardk>	then i got nothing
May 12 13:47:51 <aarvar>	but maybe I should
May 12 13:47:59 *	BasDirks has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 12 13:48:05 <crestfallen>	that is a dismal set of 4 humours
May 12 13:48:13 *	Welkin has quit (Quit: leaving)
May 12 13:48:20 <aarvar>	edwardk: a lot of stuff like what? "Don't make me write scala"?
May 12 13:48:43 <edwardk>	i gave in and moved to boston to make the employment thing work. its hard to say "hey i want to work in this narrow niche, but i dont want to move and have no work experience" something has to give
May 12 13:48:52 <noan>	[exa], yeah, we write pretty pure scala where I work
May 12 13:48:57 <aarvar>	edwardk: fair enough
May 12 13:49:05 <noan>	recently I had to write some javascript, but it's all pure too
May 12 13:49:10 <noan>	just not type checked statically :(
May 12 13:49:19 *	sedeki (~textual@unaffiliated/sedeki) has joined
May 12 13:49:31 <[exa]>	noan: it's possible to write javascript that typechecks itself before execution
May 12 13:49:50 <[exa]>	noan: there's a toolkit for that somewhere
May 12 13:49:54 <Sose>	noan: look into flowtype
May 12 13:49:57 *	agander has quit (Ping timeout: 240 seconds)
May 12 13:49:58 <maerwald>	from facebook afair
May 12 13:49:59 <edwardk>	exa: i call that "purescript" ;)
May 12 13:50:07 *	noan shrugs
May 12 13:50:17 <[exa]>	no, purescript is external
May 12 13:50:20 <aarvar>	edwardk: but otherwise QFPL sounds awesome
May 12 13:50:21 <maerwald>	https://github.com/facebook/flow
May 12 13:50:23 <noan>	it was specifically requested to be javascript to be approachable to our ops team
May 12 13:50:31 <Cale>	exa, edwardk: I call that "Haskell" :)
May 12 13:50:31 <noan>	since they'll take ownership of it once complete
May 12 13:50:42 <edwardk>	cale: :)
May 12 13:50:46 <noan>	so I just wrote it really carefully with promises as my """""monad"""""
May 12 13:50:57 <[exa]>	:D
May 12 13:51:14 *	Yuras has quit (Ping timeout: 256 seconds)
May 12 13:51:51 *	Destol (~Destol@67-213-103-77.eastlink.ca) has joined
May 12 13:52:26 <aarvar>	edwardk: give me some ideas for libraries to write
May 12 13:53:24 Python interface unloaded
May 12 13:53:24 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sat May 12 13:53:24 2018

**** BEGIN LOGGING AT Thu May 17 10:58:11 2018

May 17 10:58:11 *	Now talking on #haskell
May 17 10:58:12 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 17 10:58:12 *	Topic for #haskell set by geekosaur!allbery@dreamshell.ttuttle.net (Thu May 17 06:28:53 2018)
May 17 10:58:12 *	Channel #haskell url: http://www.haskell.org/
May 17 10:58:14 *	codesoup (~codesoup@174.119.180.211) has joined
May 17 10:58:23 <wz1000>	it is supposed to be the unicode hieroglphics block
May 17 10:58:33 <wz1000>	> text $ enumFromTo '𓀀' '𓐮'
May 17 10:58:35 <lambdabot>	 𓀀𓀁𓀂𓀃𓀄𓀅𓀆𓀇𓀈𓀉𓀊𓀋𓀌𓀍𓀎𓀏𓀐𓀑𓀒𓀓𓀔𓀕𓀖𓀗𓀘𓀙𓀚𓀛𓀜𓀝𓀞𓀟𓀠𓀡𓀢𓀣𓀤𓀥𓀦𓀧𓀨𓀩𓀪𓀫𓀬𓀭𓀮𓀯𓀰
May 17 10:58:35 <lambdabot>	��𓀲𓀳𓀴𓀵𓀶𓀷𓀸𓀹𓀺𓀻𓀼𓀽𓀾𓀿𓁀𓁁𓁂𓁃𓁄𓁅𓁆𓁇𓁈𓁉𓁊𓁋...
May 17 10:58:50 <wz1000>	lambdabot is screwing up
May 17 10:59:00 <KernelBloomer>	l0000l
May 17 10:59:04 <EvanR>	https://www.reddit.com/r/ProgrammerHumor/comments/7gztuf/%F0%93%82%80%F0%93%81%9F%F0%93%8C%8Dhs/ (lol hieroglyphs in the url)
May 17 10:59:22 <EvanR>	𓂀𓁟𓌍.hs
May 17 10:59:45 *	lykrysh has quit (Ping timeout: 264 seconds)
May 17 10:59:51 <wz1000>	reminds me of "those aren't angle brackets"
May 17 10:59:59 *	danza (~francesco@dynamic-adsl-78-15-11-72.clienti.tiscali.it) has joined
May 17 11:00:24 *	BasDirks (~textual@546AAE3B.cm-12-3c.dynamic.ziggo.nl) has joined
May 17 11:00:36 <wz1000>	"they're actually characters from the australian aborignal block"
May 17 11:02:32 *	Deide (~Deide@90.255.103.198) has joined
May 17 11:02:49 <wz1000>	https://www.reddit.com/r/rust/comments/5penft/parallelizing_enjarify_in_go_and_rust/dcsgk7n/
May 17 11:02:50 *	Sonderblade has quit (Ping timeout: 255 seconds)
May 17 11:03:00 <wz1000>	*canadian
May 17 11:03:06 *	davr0s has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
May 17 11:03:07 *	sigmundv has quit (Ping timeout: 256 seconds)
May 17 11:03:09 *	vidlew (~vid@c-24-15-66-118.hsd1.il.comcast.net) has joined
May 17 11:04:02 *	Sonderblade (~bjourne@n163-p180.eduroam.kth.se) has joined
May 17 11:04:12 *	gillesmajor (~gm@46.253.169.253) has joined
May 17 11:04:52 *	BasDirks has quit (Client Quit)
May 17 11:05:42 *	lastmanstanding has quit (Ping timeout: 256 seconds)
May 17 11:05:45 *	navy_seal9614 (~navy_seal@cpe-74-130-11-236.kya.res.rr.com) has joined
May 17 11:07:08 <`Guest00000>	how to define instances for "type family Map (x :: (Int, Int)) :: Cell", where "data Cell = X | Y | Z" ?
May 17 11:07:16 *	LKoen has quit (Remote host closed the connection)
May 17 11:07:35 *	cpup (~cpup@24-151-32-148.dhcp.nwtn.ct.charter.com) has joined
May 17 11:07:57 *	`Guest00000 rolls eyes at "expected kind (Int, Int), but (0, 0) has kind *"
May 17 11:08:10 *	LKoen (~LKoen@vbo91-1-82-238-218-67.fbx.proxad.net) has joined
May 17 11:09:10 <`Guest00000>	how to specify a promoted Int at type level?
May 17 11:09:13 *	eli (84a1bc97@gateway/web/freenode/ip.132.161.188.151) has joined
May 17 11:09:45 <`Guest00000>	and (,)
May 17 11:09:48 <hexagoxel>	does '(0, 0) work?
May 17 11:10:10 <wz1000>	do you have DataKinds enabled?
May 17 11:10:12 *	raichoo (~raichoo@dslb-084-062-123-162.084.062.pools.vodafone-ip.de) has joined
May 17 11:10:17 <`Guest00000>	nice
May 17 11:10:31 <`Guest00000>	hexagoxel: it shows a different error now, it seems this worked
May 17 11:10:47 <`Guest00000>	wz1000: of course
May 17 11:12:19 *	Linter (~linter@98.200.9.163) has joined
May 17 11:14:28 *	ixti has quit (Quit: WeeChat 2.1)
May 17 11:14:42 *	hackage pure-zlib 0.6.3 - A Haskell-only implementation of zlib / DEFLATE  http://hackage.haskell.org/package/pure-zlib-0.6.3 (AdamWick)
May 17 11:15:23 *	subfactorial (4815c440@gateway/web/freenode/ip.72.21.196.64) has joined
May 17 11:17:05 *	pilne (~pilne@75-132-212-62.dhcp.stls.mo.charter.com) has joined
May 17 11:17:10 <subfactorial>	got a problem with KnownNat constraints.  Can someone check out https://lpaste.net/4592523420540862464 I'm trying to express the sum of two KnownNats being greater than a constant but not getting the results I'm expecting
May 17 11:18:42 <`Guest00000>	can an equation/case for a type family "shadow" another equation/case just like function definitions?
May 17 11:18:56 <subfactorial>	that is to say: what I want to do doesn't typecheck
May 17 11:19:41 <crestfallen>	little confused about why perms doesn't terminate here if I run say, > perms [2,3]      https://gist.github.com/varreli/13eb5adcddc52ae87847156389b0f5e1
May 17 11:19:45 *	epsilonhalbe (~epsilonha@84-114-240-202.cable.dynamic.surfer.at) has joined
May 17 11:20:02 <crestfallen>	read: permutations
May 17 11:20:18 *	obihann (~obihann@156.34.187.30) has joined
May 17 11:21:04 <wz1000>	subfactorial: you're options are using a typechecker plugin or using unsafeCoerce (Refl :: (i+f) >=2)
May 17 11:21:14 *	davr0s (~textual@host86-149-134-190.range86-149.btcentralplus.com) has joined
May 17 11:21:19 <wz1000>	see https://github.com/wz1000/HMat/blob/master/src/Proofs.hs#L15
May 17 11:21:23 *	obihann has quit (Client Quit)
May 17 11:22:35 <wz1000>	or https://hackage.haskell.org/package/typelits-witnesses
May 17 11:22:47 *	sigmundv (~sigmundv@80.233.32.85) has joined
May 17 11:23:38 <subfactorial>	wz1000: Thanks.  I'll check those out.  All this type level manipulation is still pretty deep magic to me
May 17 11:24:14 *	connrs has quit (Ping timeout: 276 seconds)
May 17 11:24:14 <awesomeaniruddh>	Sooo, I want a function that does something similar to "iterate"
May 17 11:24:40 <awesomeaniruddh>	I want the first iteration to drop 0 items from a list, the second iteration to drop 2, the third to drop 4 and so on
May 17 11:24:57 *	hjdskes has quit (Ping timeout: 240 seconds)
May 17 11:25:06 *	Linter has quit (Ping timeout: 256 seconds)
May 17 11:25:18 *	streblo has quit (Quit: streblo)
May 17 11:25:23 <`Guest00000>	awesomeaniruddh: iterate (drop 2 .) id
May 17 11:25:53 <`Guest00000>	"elegant", but not efficient
May 17 11:25:57 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 17 11:26:20 <awesomeaniruddh>	`Guest00000: are you sure there isn't a syntax error there?
May 17 11:26:29 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 17 11:26:36 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
May 17 11:26:39 <`Guest00000>	yes
May 17 11:26:41 *	wollw (~rshere@108-208-193-216.lightspeed.sntcca.sbcglobal.net) has joined
May 17 11:26:42 <crestfallen>	it has a base case perms [[]] = []  so I can't see why there isn't termination
May 17 11:26:44 *	mizu_no_oto has quit (Ping timeout: 276 seconds)
May 17 11:26:56 <`Guest00000>	it's a section of (.)
May 17 11:27:21 <awesomeaniruddh>	`Guest00000: I'm not sure how to call that :/
May 17 11:27:25 <`Guest00000>	> zipWith ($) (iterate (drop 2 .) id) "Hello World"
May 17 11:27:27 <lambdabot>	 error:
May 17 11:27:27 <lambdabot>	     • Couldn't match type ‘Char’ with ‘[a]’
May 17 11:27:27 <lambdabot>	       Expected type: [[a]]
May 17 11:27:44 <`Guest00000>	> ($ "Hello World") <$> (iterate (drop 2 .) id)
May 17 11:27:47 <lambdabot>	 ["Hello World","llo World","o World","World","rld","d","","","","","","","",...
May 17 11:27:48 *	x1ddos_ has quit (Ping timeout: 256 seconds)
May 17 11:27:59 *	RGamma_ (~RGamma@2a03:8600:1001:4000::1e70) has joined
May 17 11:28:33 *	acidjnk (~acid@mue-88-130-58-128.dsl.tropolys.de) has joined
May 17 11:28:57 *	pyrho has quit (Ping timeout: 260 seconds)
May 17 11:29:25 <mniip>	:t iterate (drop 2)
May 17 11:29:30 <lambdabot>	[a] -> [[a]]
May 17 11:29:31 <mniip>	why not this
May 17 11:30:01 *	OnkelTem (~onkeltem@unaffiliated/fantomas) has joined
May 17 11:30:03 <johnw>	> takeWhile (not . null) $ zipWith drop [0,2..] (cycle ["Hello World"])
May 17 11:30:06 <lambdabot>	 ["Hello World","llo World","o World","World","rld","d"]
May 17 11:30:26 <crestfallen>	also why people dislike using list comprehensions (see two editions of choices    https://gist.github.com/varreli/13eb5adcddc52ae87847156389b0f5e1
May 17 11:30:43 *	RGamma has quit (Ping timeout: 265 seconds)
May 17 11:31:12 <johnw>	i don't dislike them, I just think in terms of composition first
May 17 11:31:12 *	oisdk (~textual@107.150.22.75.adsl.inet-telecom.org) has joined
May 17 11:31:24 *	pyrho (~damien@164.46.71.37.rev.sfr.net) has joined
May 17 11:31:45 <crestfallen>	johnw, really cool thanks I've heard varying degrees of dislike
May 17 11:32:04 *	cpup has quit (Quit: Breaking stuff)
May 17 11:32:12 <johnw>	I usually have to remind myself, "Oh yeah, this would be really simple and compact to say as a list comprehension"
May 17 11:32:24 *	streblo (~streblo@65.204.128.202) has joined
May 17 11:32:33 <crestfallen>	but anything that is composed can be expressed in a list comprehension and visa versa?
May 17 11:32:35 *	gillesmajor has quit (Ping timeout: 256 seconds)
May 17 11:32:41 *	lumm has quit (Remote host closed the connection)
May 17 11:33:01 *	lumm (~lumm@2a01:e35:2f0f:b480:1233:2a3b:100:9b4e) has joined
May 17 11:33:11 <johnw>	if you think of a list comprehension as sugar for the list monad, then the Wadler paper shows the connection
May 17 11:33:26 <johnw>	they aren't really separate constructions
May 17 11:33:44 *	phenoble has quit (Ping timeout: 260 seconds)
May 17 11:33:59 <awesomeaniruddh>	Also, is there a nice way of unwrapping Just's from a list of Justs?
May 17 11:34:06 <johnw>	catMaybes
May 17 11:34:19 *	RGamma (~RGamma@2a02:908:4c0:93dc:ba27:ebff:fe25:1e35) has joined
May 17 11:34:37 <crestfallen>	that's interesting johnw also plenty over my head
May 17 11:34:56 <johnw>	crestfallen: just consider me as confirming your intuition then :)
May 17 11:35:10 <crestfallen>	good call much appreciated
May 17 11:35:23 <`Guest00000>	hmmmm
May 17 11:35:27 *	Yuras has quit (Ping timeout: 240 seconds)
May 17 11:35:38 <crestfallen>	but johnw ..
May 17 11:35:41 *	phenoble (~phenoble@ip-88-153-104-135.hsi04.unitymediagroup.de) has joined
May 17 11:35:45 <`Guest00000>	sequence multiplies/binds elements
May 17 11:35:58 <`Guest00000>	but can there be a msum-like sequence?
May 17 11:36:13 <crestfallen>	my initial question re: that paste is why perms won't terminate if you run it alone such > perms [3,4]
May 17 11:37:01 <crestfallen>	since it has a base case
May 17 11:37:14 <crestfallen>	or is that a base case...
May 17 11:37:21 *	ctrlsbstr has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 17 11:37:27 *	vidlew has quit (Ping timeout: 240 seconds)
May 17 11:37:32 <`Guest00000>	simultaneously  [Just 5, Nothing, Just 6, Nothing, Just 7] === Just [5, 6, 7]
May 17 11:37:34 *	RGamma_ has quit (Ping timeout: 256 seconds)
May 17 11:37:41 <johnw>	add tracing
May 17 11:38:13 <johnw>	> Just (catMaybes [Just 5, Nothing, Just 6, Nothing, Just 7])
May 17 11:38:15 <lambdabot>	 Just [5,6,7]
May 17 11:38:28 *	wroathe (~wroathe@68.235.104.10) has joined
May 17 11:38:55 <`Guest00000>	noo, that's cheating, i meant that as a general function
May 17 11:39:04 <crestfallen>	add tracing is advice to me johnw ?
May 17 11:39:11 <johnw>	crestfallen: yes, Debug.Trace
May 17 11:39:43 <`Guest00000>	mplus can't do anything to "wrapped values" of a monad
May 17 11:39:49 <crestfallen>	I never no where to add it or how. it seems to always be different
May 17 11:39:52 <`Guest00000>	but what if it could mappend them
May 17 11:39:56 *	altjsus has quit (Quit: altjsus)
May 17 11:39:59 <crestfallen>	know*
May 17 11:40:02 <johnw>	`Guest00000: so, LogitT Maybe would do the trick
May 17 11:40:09 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 17 11:40:26 <johnw>	> observeAllT $ select [pure 5, mzero, pure 6, mzero, pure 7]
May 17 11:40:28 <lambdabot>	 error:
May 17 11:40:28 <lambdabot>	     Variable not in scope: observeAllT :: t0 -> terror:
May 17 11:40:28 <lambdabot>	     Variable not in scope: select :: [f0 Integer] -> t0
May 17 11:40:34 <johnw>	where select = msum . map pure
May 17 11:40:35 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 17 11:40:42 *	sz0 has quit (Quit: Connection closed for inactivity)
May 17 11:40:46 <johnw>	oh, sorry, not select there
May 17 11:40:50 <johnw>	just msum
May 17 11:40:57 *	rdark has quit (Ping timeout: 240 seconds)
May 17 11:41:05 <johnw>	but LogicT isn't in scope for lambdabot
May 17 11:41:18 <johnw>	anyway, if you simply use MonadPlus
May 17 11:41:33 <johnw>	then most of the major streaming library can be chosen as the monad, as you'll get a "stream" of all the non-mzero results
May 17 11:41:38 *	rdark (~darkr@77.75.111.121) has joined
May 17 11:41:55 <johnw>	`Guest00000: see http://www.haskellforall.com/2014/11/how-to-build-library-agnostic-streaming.html
May 17 11:42:14 <johnw>	where LogicT is just one such choice of MonadPlus
May 17 11:42:26 *	hjdskes has quit (Ping timeout: 255 seconds)
May 17 11:42:39 *	pyrho has quit (Ping timeout: 255 seconds)
May 17 11:42:52 *	ctrlsbstr (~ctrlsbstr@174.27.15.3) has joined
May 17 11:43:03 <awesomeaniruddh>	https://pastebin.com/raw/RFiUi5nw
May 17 11:43:04 *	emilypi has quit (Ping timeout: 260 seconds)
May 17 11:43:08 <awesomeaniruddh>	http://www.cis.upenn.edu/~cis194/spring13/hw/03-rec-poly.pdf
May 17 11:43:13 <awesomeaniruddh>	^ That's my solution to exercise 1 above
May 17 11:43:16 <awesomeaniruddh>	Any way to make it shorter?
May 17 11:43:21 *	mrkgnao has quit (Ping timeout: 240 seconds)
May 17 11:43:25 *	gxt has quit (Quit: WeeChat 2.0.1)
May 17 11:43:42 <johnw>	you can use listToMaybe
May 17 11:43:45 <johnw>	instead of writing 'sh'
May 17 11:44:03 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 17 11:45:02 *	hphuoc25 has quit (Remote host closed the connection)
May 17 11:45:10 <crestfallen>	so far I have Debug.Trace at the top level johnw
May 17 11:45:20 *	BasDirks (~textual@546AAE3B.cm-12-3c.dynamic.ziggo.nl) has joined
May 17 11:45:22 <johnw>	now use trace "got here" (....)
May 17 11:45:34 <johnw>	and put lots of those (with more descriptive text) throughout your code
May 17 11:45:47 <johnw>	this will let you watch the evaluation, basically
May 17 11:46:01 <johnw>	though, because of laziness, you'll be watching in the order of demand, not the order of construction of thunks
May 17 11:46:16 <johnw>	(which takes getting used to)
May 17 11:46:19 <benzrf>	i wanna write a template haskell widget that automatically generates wrapping cases for extracting necessary instances from (:-) values
May 17 11:46:37 <benzrf>	is there any way i can probe a quoted argument to see what constraints itll need :\
May 17 11:46:41 <awesomeaniruddh>	Any other tips?
May 17 11:46:50 *	infinisil has quit (Quit: Configuring ZNC, sorry for the joins/quits!)
May 17 11:46:52 *	Emi2000RND has quit (Read error: Connection reset by peer)
May 17 11:47:07 *	infinisil (~infinisil@mail.infinisil.com) has joined
May 17 11:47:30 <johnw>	awesomeaniruddh: skips+e feels like it could be done with inits instead
May 17 11:47:39 <johnw>	or tails
May 17 11:47:50 *	Destol has quit (Quit: leaving)
May 17 11:48:33 <johnw>	and monad-loops contains a whileJust function
May 17 11:48:37 <awesomeaniruddh>	I'm not sure, they're both quite similar to what I want
May 17 11:49:12 <johnw>	i have a sense that a list comprehension + tails would make what you're doing here much clearer
May 17 11:49:15 *	BartAdv has quit (Quit: Connection closed for inactivity)
May 17 11:49:24 <johnw>	i can't tell just from reading what the intention is
May 17 11:49:35 *	ian_andrich (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
May 17 11:49:38 *	emilypi (~emilypi@63.116.222.225) has joined
May 17 11:51:06 *	alex`` has quit (Quit: WeeChat 2.1)
May 17 11:51:06 *	carafe has quit (Read error: Connection reset by peer)
May 17 11:51:12 *	hackage katip 0.5.5.0 - A structured logging framework.  http://hackage.haskell.org/package/katip-0.5.5.0 (MichaelXavier)
May 17 11:52:43 <EvanR>	"kat IP"? "kaytip"? "Kati P"?
May 17 11:52:51 <johnw>	K atip!
May 17 11:53:16 *	preyalone has quit (Quit: Connection closed for inactivity)
May 17 11:53:45 *	awesomeaniruddh has quit (Ping timeout: 264 seconds)
May 17 11:54:34 *	x1ddos (~crhym3@2a02:aa12:a682:7500:9b47:4741:23b1:d575) has joined
May 17 11:55:19 *	hjdskes has quit (Ping timeout: 260 seconds)
May 17 11:55:30 <crestfallen>	johnw trace is not showing as a keyword . still have no clue where I put trace phrases ?
May 17 11:55:40 <johnw>	import Debug.Trace
May 17 11:55:44 *	fishythefish (~fishythef@2620:10d:c090:180::1:4cfe) has joined
May 17 11:55:45 *	eli has quit (Ping timeout: 260 seconds)
May 17 11:55:46 <johnw>	later, trace STRING EXPR
May 17 11:56:00 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 17 11:56:00 *	milanj has quit (Quit: This computer has gone to sleep)
May 17 11:56:22 <johnw>	foo x = trace ("foo:x = " ++ show) (... what you were doing before ...)
May 17 11:56:32 <johnw>	show x, I meant
May 17 11:56:38 *	carafe (~slavedriv@150.203.68.101) has joined
May 17 11:57:05 *	dispanser has quit (Remote host closed the connection)
May 17 11:57:26 *	oisdk (~textual@104.129.24.147.adsl.inet-telecom.org) has joined
May 17 11:57:27 *	oisdk has quit (Client Quit)
May 17 11:58:46 *	davr0s has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
May 17 11:59:06 *	sigmundv has quit (Ping timeout: 255 seconds)
May 17 11:59:06 *	wollw has quit (Ping timeout: 256 seconds)
May 17 11:59:17 <crestfallen>	johnw working.. thanks kindly
May 17 12:00:01 *	mizu_no_oto (~textual@2604:6000:1012:4098:0:cc10:6e66:f4df) has joined
May 17 12:00:21 *	hjdskes has quit (Ping timeout: 240 seconds)
May 17 12:00:40 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 17 12:00:41 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 17 12:01:10 *	kittykitty (~kittykitt@191.60.143.150.dyn.plus.net) has joined
May 17 12:01:38 <EvanR>	cool msg x = trace (msg ++ ": " ++ show x) x
May 17 12:01:40 <EvanR>	sometimes works
May 17 12:01:41 *	amirpro has quit (Quit: amirpro)
May 17 12:02:31 *	chaosmasttter (~chaosmast@p54B46D96.dip0.t-ipconnect.de) has joined
May 17 12:03:34 <Ariakenom>	Any nice way to change a list into groups of 3 [a]->[[a]] ?
May 17 12:03:48 <EvanR>	> chunksOf 3 [0..]
May 17 12:03:49 <johnw>	in the 'split' package there is
May 17 12:03:51 <lambdabot>	 [[0,1,2],[3,4,5],[6,7,8],[9,10,11],[12,13,14],[15,16,17],[18,19,20],[21,22,2...
May 17 12:04:02 <EvanR>	> chunksOf 3 [0..3]
May 17 12:04:04 <lambdabot>	 [[0,1,2],[3]]
May 17 12:04:09 <johnw>	that's where chunksOf is defined
May 17 12:04:19 *	amirpro (~amirpro@41.234.234.130) has joined
May 17 12:04:20 <EvanR>	if that were in prelude
May 17 12:04:23 <EvanR>	omg
May 17 12:04:28 *	jxv has quit (Quit: string can snapped)
May 17 12:04:33 *	Synthetica has quit (Quit: Connection closed for inactivity)
May 17 12:04:46 <johnw>	i think it's just that no one has ever created a pull request to put that function in Data.List
May 17 12:04:51 *	hjdskes has quit (Ping timeout: 240 seconds)
May 17 12:04:57 <EvanR>	haskell extension... -XUsable
May 17 12:05:31 *	gestone has quit (Ping timeout: 265 seconds)
May 17 12:05:39 <Ariakenom>	no packages
May 17 12:05:57 *	hphuoc25 (~hphuoc25@132.147.71.104) has joined
May 17 12:06:19 <EvanR>	in the next programming language after haskell, packages will contain 1 function each
May 17 12:06:24 *	bafain has quit (Ping timeout: 260 seconds)
May 17 12:06:32 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 17 12:06:46 <crestfallen>	i.e. I was working on it not that it was working .. :) 
May 17 12:07:22 <Ariakenom>	can't install on target machine
May 17 12:07:31 *	camsbury (~camsbury@cpe-74-73-148-96.nyc.res.rr.com) has joined
May 17 12:07:50 *	KernelBloomer has quit (Remote host closed the connection)
May 17 12:08:07 *	bafain (kLId6NXjHU@auriga.uberspace.de) has joined
May 17 12:08:18 <crestfallen>	this is what I did. still don't get it though it does terminate. how would you change this johnw :   https://gist.github.com/varreli/13eb5adcddc52ae87847156389b0f5e1
May 17 12:08:23 *	epsilonhalbe has quit (Quit: Leaving.)
May 17 12:08:31 *	Linter (~linter@98.200.9.163) has joined
May 17 12:08:31 *	bafain is now known as Guest29231
May 17 12:08:46 <johnw>	add tracing within the expression, not just at the end
May 17 12:08:46 *	camsbury has quit (Read error: Connection reset by peer)
May 17 12:08:51 *	DSM has quit (Ping timeout: 256 seconds)
May 17 12:08:56 <johnw>	also, you need to parenthize the expression
May 17 12:09:03 <johnw>	otherwise, you're just tracing the evaluation of "concat" itself
May 17 12:09:20 *	whaletechno has quit (Quit: ha det bra)
May 17 12:09:21 *	camsbury (~camsbury@cpe-74-73-148-96.nyc.res.rr.com) has joined
May 17 12:09:30 <crestfallen>	ok trying that...
May 17 12:09:37 <johnw>	add it everywhere
May 17 12:09:41 <johnw>	that's what I would do
May 17 12:09:53 <crestfallen>	hmm
May 17 12:10:05 *	hphuoc25 has quit (Ping timeout: 240 seconds)
May 17 12:10:25 *	hellozee has quit (Quit: Leaving)
May 17 12:10:59 *	epsilonhalbe (~epsilonha@84-114-240-202.cable.dynamic.surfer.at) has joined
May 17 12:12:38 *	jimmyrcom_ has quit (Quit: Leaving)
May 17 12:13:26 *	davr0s (~textual@host86-149-134-190.range86-149.btcentralplus.com) has joined
May 17 12:13:42 *	camsbury has quit (Ping timeout: 256 seconds)
May 17 12:13:53 *	zdenal (~zdenal@ip-89-103-38-66.net.upcbroadband.cz) has joined
May 17 12:14:36 *	borkr (~borkr@static130-244.mimer.net) has joined
May 17 12:15:18 <crestfallen>	johnw sorry very confused. why does trace allow the prog to terminate and give a result?
May 17 12:15:39 <johnw>	hmm... that's interesting
May 17 12:15:57 *	hjdskes has quit (Ping timeout: 240 seconds)
May 17 12:16:03 <johnw>	i don't know, I'm only paying fractional attention here
May 17 12:16:16 *	camsbury (~camsbury@cpe-74-73-148-96.nyc.res.rr.com) has joined
May 17 12:16:27 <EvanR>	% trace "hmm" (2 + 2)
May 17 12:16:28 <yahb>	EvanR: hmm; 4
May 17 12:16:28 <kittykitty>	anyone know anything about yesod? Their channel seems to not be very active
May 17 12:16:36 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 17 12:16:47 <EvanR>	% trace (error "fruitcakes") (2 + 2)
May 17 12:16:48 <yahb>	EvanR: *** Exception: fruitcakes; CallStack (from HasCallStack):; error, called at <interactive>:18:8 in interactive:Ghci8
May 17 12:17:06 *	Linter has quit (Ping timeout: 256 seconds)
May 17 12:17:30 *	son0p_ (~ff@adsl201-232-238-252.epm.net.co) has joined
May 17 12:17:35 *	iAmerika1 (~dwshrewt@unaffiliated/iamerikan) has joined
May 17 12:17:40 <crestfallen>	johnw would you mind taking a ny minute and editing that the way you would do it? https://gist.github.com/varreli/13eb5adcddc52ae87847156389b0f5e1 
May 17 12:18:09 <johnw>	sorry, crestfallen, I'm up against a deadline here, and so probably leave IRC altogether rather than tease you. Hopefully someone else can help.
May 17 12:18:23 <crestfallen>	excellent thanks johnw
May 17 12:18:45 Python interface unloaded
May 17 12:18:45 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu May 17 12:18:45 2018

**** BEGIN LOGGING AT Thu May 17 19:40:31 2018

May 17 19:40:31 *	Now talking on #haskell
May 17 19:40:31 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 17 19:40:31 *	Topic for #haskell set by geekosaur!allbery@dreamshell.ttuttle.net (Thu May 17 06:28:53 2018)
May 17 19:40:31 *	Channel #haskell url: http://www.haskell.org/
May 17 19:41:18 *	hjdskes has quit (Ping timeout: 265 seconds)
May 17 19:41:33 <crestfallen>	hi if you run ghc stack ./executable is there a unix command to copy the output to the next cl ?
May 17 19:41:38 *	mizu_no_oto (~textual@cpe-66-66-222-181.rochester.res.rr.com) has joined
May 17 19:41:43 *	freeman42x]NixOS has quit (Ping timeout: 268 seconds)
May 17 19:41:45 *	dddddd has quit (Remote host closed the connection)
May 17 19:41:53 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 17 19:41:57 <crestfallen>	sorry stack ghc ./executable
May 17 19:42:53 <crestfallen>	or would you just manually cut and paste
May 17 19:43:01 <crestfallen>	copy/paste
May 17 19:43:28 *	mizu_no_oto has quit (Client Quit)
May 17 19:43:35 *	pilne has quit (Quit: Leaving)
May 17 19:44:16 *	amirpro has quit (Quit: amirpro)
May 17 19:45:03 *	mizu_no_oto_work (~textual@2604:6000:1012:4098:0:4ab1:4648:4083) has joined
May 17 19:45:57 *	hjdskes has quit (Ping timeout: 240 seconds)
May 17 19:46:31 <sm>	rszibele[m]: not me, but it sounded great
May 17 19:46:35 *	mrlemon has quit (Ping timeout: 276 seconds)
May 17 19:46:41 *	djtyml (~djtyml@110-27-67-237.adsl.fetnet.net) has joined
May 17 19:46:48 <sm>	crestfallen: cl ?
May 17 19:46:54 *	jkachmar_ has quit (Quit: Connection closed for inactivity)
May 17 19:47:26 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 17 19:48:30 <crestfallen>	scratch that sm just a unix command that will copy the output of the prior command onto the command line
May 17 19:49:39 <sm>	like cmd2 `cmd` ?
May 17 19:50:09 <sm>	though I'm wondering how useful the output of stack ghc could be
May 17 19:50:48 <sm>	but that's none of my business :)
May 17 19:51:05 <glguy>	Kermits the best
May 17 19:51:16 *	Wuzzy has quit (Quit: Wuzzy)
May 17 19:51:42 *	hjdskes has quit (Ping timeout: 256 seconds)
May 17 19:52:03 <crestfallen>	sm its a function that results in a long output, so I was tinkering and thought I could run a unix command that copies the output, onto the clipboard or preferably to the cursor sm
May 17 19:52:43 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 17 19:52:51 *	TipsyMe (~TipsyMe@50-50-236-26.waus.wi.frontiernet.net) has joined
May 17 19:53:07 *	tzemanovic (~tzemanovi@210.8.214.110) has joined
May 17 19:54:35 *	Arcaelyx (~Arcaelyx@2604:2000:f14a:2500:e81c:4527:d51d:16fc) has joined
**** ENDING LOGGING AT Thu May 17 19:55:27 2018

**** BEGIN LOGGING AT Sat May 19 12:19:34 2018

May 19 12:19:34 *	Now talking on #haskell
May 19 12:19:34 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 19 12:19:34 *	Topic for #haskell set by geekosaur!allbery@dreamshell.ttuttle.net (Thu May 17 06:28:53 2018)
May 19 12:19:34 *	Channel #haskell url: http://www.haskell.org/
May 19 12:20:17 *	mkoenig (~mkoenig@46.165.203.45) has joined
May 19 12:20:45 *	hjdskes has quit (Ping timeout: 256 seconds)
May 19 12:21:04 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 19 12:21:31 *	Sonderblade (~bjourne@n184-p189.eduroam.kth.se) has joined
May 19 12:22:27 <biglambda>	Ok, got it compiling with these ghc-options https://lpaste.net/1874918980376854528
May 19 12:22:34 <biglambda>	Still no profiling output
May 19 12:23:08 *	machined1od has quit (Ping timeout: 256 seconds)
May 19 12:23:35 *	blankhart has quit (Ping timeout: 256 seconds)
May 19 12:24:35 *	loli (~loli@2600:1700:3b80:b90:dad7:fbf7:dc5c:65c) has joined
May 19 12:25:06 <biglambda>	Switching back to old style building for now.
May 19 12:25:19 *	blankhart (~blankhart@pool-100-38-242-183.nycmny.fios.verizon.net) has joined
May 19 12:25:21 *	hjdskes has quit (Ping timeout: 248 seconds)
May 19 12:25:26 <crestfallen>	hi please see textbook question on line 29. I'm having trouble seeing how my guess - commenting out line 34 - causes 'solve' to not terminate. https://gist.github.com/varreli/07fcc841c73f59e308a603082a75558f
May 19 12:26:37 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 19 12:26:54 <crestfallen>	Is that even the right solution or is it a coincidence that without line 34 we have the same behavior?
May 19 12:30:57 *	hjdskes has quit (Ping timeout: 256 seconds)
May 19 12:31:00 <crestfallen>	this program is getting too large for me to keep track of.
May 19 12:31:04 *	revprez_atlanta (~revprez_a@pool-72-93-97-41.bstnma.fios.verizon.net) has joined
May 19 12:31:24 *	pera has quit (Ping timeout: 260 seconds)
May 19 12:31:29 *	milanj (~milan@87.116.181.232) has joined
May 19 12:31:54 <crestfallen>	module ShowExpression is here https://ptpb.pw/8RFE
May 19 12:32:07 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 19 12:33:29 *	ccomb (~ccomb@46.191.24.93.rev.sfr.net) has joined
May 19 12:35:05 <HaskellLord69>	You you run this through ghci?
May 19 12:35:11 *	octobanana (~weechat@207.228.78.151) has joined
May 19 12:35:14 <HaskellLord69>	Have you*
May 19 12:36:38 <crestfallen>	you talkin to me ?  :) 
May 19 12:36:50 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 19 12:36:53 *	milanj has quit (Read error: Connection reset by peer)
May 19 12:36:55 <crestfallen>	taxi driver HaskellLord69 
May 19 12:37:32 <crestfallen>	I ran this through ghci its slow but does run
May 19 12:38:09 <crestfallen>	ie before the commenting out of line 34
May 19 12:39:43 *	mrlemon (~lemon@unaffiliated/mrlemon) has joined
May 19 12:40:00 *	milanj (~milan@87.116.176.35) has joined
May 19 12:40:01 *	mrlemon has quit (Client Quit)
May 19 12:40:46 *	dispanser (~pi@p200300E06F2FE20056E1ADFFFE52E4E2.dip0.t-ipconnect.de) has joined
May 19 12:40:48 *	abhn has quit (Quit: abhn)
May 19 12:40:54 *	Welkin has quit (Quit: leaving)
May 19 12:41:02 *	ijks (~ijks@52D99F1C.cm-11-1c.dynamic.ziggo.nl) has joined
May 19 12:41:09 *	hjdskes has quit (Ping timeout: 256 seconds)
May 19 12:41:27 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 19 12:41:35 *	TCZ (~Johnny@ip-91.189.219.171.skyware.pl) has joined
May 19 12:41:38 *	beka has quit (Ping timeout: 276 seconds)
May 19 12:41:52 *	skeet70 has quit (Quit: My computer has gone to sleep. ZZZzzz…)
May 19 12:43:08 *	Guest96211 (~toby@2601:281:c400:f7ad:1ce7:4e8d:7f38:a3f9) has joined
May 19 12:43:46 <Guest96211>	hey
May 19 12:44:27 *	alex`` has quit (Ping timeout: 240 seconds)
May 19 12:44:30 Guest96211 Guest1573[m] Guest21907 Guest21928 guest3rzghbmr[m] Guest5068 Guest59221 Guest69320 Guest72348 Guest74900 Guest82928_ Guest93904 Guest94427 
May 19 12:44:41 <crestfallen>	Guest96211, ping
May 19 12:45:04 <crestfallen>	quiet here I'm a beginner
May 19 12:45:34 <infinisil>	crestfallen: You're being rude
May 19 12:45:45 <Guest96211>	Why ping me cresfallen
May 19 12:45:53 *	mrlemon (~lemon@217.151.98.69) has joined
May 19 12:45:54 *	mrlemon has quit (Changing host)
May 19 12:45:54 *	mrlemon (~lemon@unaffiliated/mrlemon) has joined
May 19 12:46:23 <crestfallen>	infinisil, why ? really I was just saying hey back to them. please don't think I'm rude
May 19 12:46:33 *	alex`` (~alex@APuteaux-651-1-327-59.w86-249.abo.wanadoo.fr) has joined
May 19 12:46:47 <infinisil>	"quiet here I'm a beginner" <- That sounds rude
May 19 12:47:17 Guest96211 Guest1573[m] Guest21907 Guest21928 guest3rzghbmr[m] Guest5068 Guest59221 Guest69320 Guest72348 Guest74900 Guest82928_ Guest93904 Guest94427 
May 19 12:47:56 *	nickolay_ (~quassel@213.138.83.130) has joined
May 19 12:48:18 <crestfallen>	infinisil, why I said I'm a beginner because I didn't want Guest96211 to think I would be able to help. why do you think that's rude? I'm very sorry. 
May 19 12:48:21 *	Guest96211 has quit (Remote host closed the connection)
May 19 12:48:48 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 19 12:49:50 *	Deide has quit (Read error: Connection reset by peer)
May 19 12:50:05 *	mrkgnao has quit (Ping timeout: 240 seconds)
May 19 12:50:07 <crestfallen>	It was a misunderstanding. I was hoping to get a response to my question and I thought someone had asked me something "did you run that through ghci?" then I didn't hear back so I said it was quiet. do you see infinisil 
May 19 12:50:16 *	Deide (~Deide@90.255.104.193) has joined
May 19 12:50:30 <crestfallen>	very sorry
May 19 12:50:33 <infinisil>	Ah I see
May 19 12:50:35 *	hjdskes has quit (Ping timeout: 240 seconds)
May 19 12:50:45 <iron_houzi>	I could really need some help with my design to understand how to utilize haskell in the best possible way. I am parsing latin strings to Tibetan unicode: https://github.com/ironhouzi/hstib/blob/typing/src/Main.hs. The "lexer" parses the string to a [Letter] and I was hoping to use pattern matching on [Letter] to derive correct generation of unicode. Say matching [Ka, Ya, A, Nga] as [Subscribed, Subscriber,
May 19 12:50:47 <iron_houzi>	Vowel, Suffix], would be perfect, but I don't know it its possible to do in Haskell..
May 19 12:50:49 <iron_houzi>	..what's even more complicated is that there are 4 different letters that can be classified as Subscriber, but there are different sets of Subscribed for each of the four Letters in the Subscriber set..
May 19 12:50:58 <infinisil>	Yeah it sounded like "You be quiet here, I'm a beginner, people should reply to me"
May 19 12:51:15 <infinisil>	crestfallen: All cool now, misunderstanding :)
May 19 12:51:18 *	alex`` has quit (Remote host closed the connection)
May 19 12:51:26 <iron_houzi>	I'm porting this from Python and I see that I'm quickly departing from what I feel is idiomatic Haskell, so I could really use som input to understand how to solve this idiomatically
May 19 12:51:38 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 19 12:52:22 *	alex`` (~alex@APuteaux-651-1-327-59.w86-249.abo.wanadoo.fr) has joined
May 19 12:53:14 <crestfallen>	sorry yeah I was lazy in the way I posted that. typically I'm careful to write well.
May 19 12:53:33 *	dddddd (~dddddd@unaffiliated/dddddd) has joined
May 19 12:54:38 *	zdenal has quit (Ping timeout: 276 seconds)
May 19 12:54:41 *	redrapscallion (640e1e0c@gateway/web/freenode/ip.100.14.30.12) has joined
May 19 12:55:45 <infinisil>	iron_houzi: Can you maybe write down a detailed description of how it would work? It's hard to help just by your short description
May 19 12:55:54 *	paidnode (~tom@2a02:c7f:6429:500:8998:250d:2f7c:80bc) has joined
May 19 12:56:51 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 19 12:56:57 *	ijks has quit (Quit: ijks)
May 19 12:57:48 *	ijks (~ijks@52D99F1C.cm-11-1c.dynamic.ziggo.nl) has joined
May 19 12:57:54 *	Jeanne-Kamikaze has quit (Quit: Leaving)
May 19 12:58:08 *	epsilonhalbe has quit (Quit: Leaving.)
May 19 12:58:27 *	verement has quit (Ping timeout: 240 seconds)
May 19 13:00:11 <redrapscallion>	so I'm looking at this snippet : https://lpaste.net/7650346178864742400 and I'm not sure why that ++ is valid between two Just monads
May 19 13:00:35 Python interface unloaded
May 19 13:00:35 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sat May 19 13:00:35 2018

**** BEGIN LOGGING AT Sat May 19 13:15:27 2018

May 19 13:15:27 *	Now talking on #haskell
May 19 13:15:27 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 19 13:15:27 *	Topic for #haskell set by geekosaur!allbery@dreamshell.ttuttle.net (Thu May 17 06:28:53 2018)
May 19 13:15:27 *	Channel #haskell url: http://www.haskell.org/
May 19 13:15:33 *	pio_ has quit (Quit: pio_)
May 19 13:16:17 *	exarkun (~exarkun@vtelinet-66-220-238-253.vermontel.net) has joined
May 19 13:16:33 *	sytherax has quit (Ping timeout: 248 seconds)
May 19 13:17:00 *	vlatkoB has quit (Remote host closed the connection)
May 19 13:18:20 *	merijn (~merijn@a212-238-239-156.adsl.xs4all.nl) has joined
May 19 13:19:43 <hpc>	> (++) <$> Just "hello" <*> Just "world"
May 19 13:19:45 <lambdabot>	 Just "helloworld"
May 19 13:21:03 *	lambda-11235 has quit (Quit: WeeChat 2.1)
May 19 13:21:34 *	hjdskes has quit (Ping timeout: 260 seconds)
May 19 13:21:56 *	mrlemon has quit (Quit: (∪｡∪)｡｡｡zzZ)
May 19 13:22:14 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 19 13:22:53 *	slevin (~slevin@83-92-97-235-cable.dk.customer.tdc.net) has left ("Leaving.")
May 19 13:23:00 *	DrAwesomeCraws is now known as DrAwesomeClaws
May 19 13:23:44 <marvin3>	another way:
May 19 13:23:50 <marvin3>	> liftA2 (++) (Just "hello") (Just "world")
May 19 13:23:52 <lambdabot>	 Just "helloworld"
May 19 13:23:59 *	ertes has quit (Ping timeout: 276 seconds)
May 19 13:26:29 *	emilypi has quit (Ping timeout: 256 seconds)
May 19 13:26:44 *	robstr has quit (Quit: WeeChat 1.9.1)
May 19 13:27:32 *	juliagoda (~juliagoda@ip-195.42.99.16.ekolping.pl) has joined
May 19 13:28:01 *	Guest21907 has quit (Read error: Connection reset by peer)
May 19 13:28:28 *	mizu_no_oto_work has quit (Ping timeout: 268 seconds)
May 19 13:28:38 *	sudden has quit (Quit: Reconnecting)
May 19 13:28:50 *	sudden (~lax@unaffiliated/laxask) has joined
May 19 13:29:05 *	hjdskes has quit (Ping timeout: 240 seconds)
May 19 13:29:31 *	ccomb has quit (Quit: Leaving.)
May 19 13:29:39 *	mizu_no_oto_work (~textual@cpe-72-228-188-76.buffalo.res.rr.com) has joined
May 19 13:29:45 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 19 13:29:48 *	conal (~conal@50.34.173.225) has joined
May 19 13:30:17 *	jakov has quit (Remote host closed the connection)
May 19 13:30:35 *	mstruebing1 (~mstruebin@2a00-1dc0-cafe--298f-12e7.static.as43289.net) has joined
May 19 13:31:58 <crestfallen>	hi again my question regards lines 83 to 89. I'm not sure how removing the wildcard list [_] causes non-termination in the main function solve. So far I can only see that there would be more pairs. I also don't know if removing line 88 is the correct solution or if its a coincidence that its non-terminating. I became overwhelmed with this program and can't think straight. https://gist.github.com/varreli/07fcc841c73f59e308a603082a75558f
May 19 13:33:03 *	camsbury (~camsbury@pool-98-116-99-205.nycmny.fios.verizon.net) has joined
May 19 13:35:05 <noan>	Is there something severely wrong with me if I'm tempted to write my own damn abstraction over SDL2 instead of helm?
May 19 13:36:41 *	hjdskes has quit (Ping timeout: 256 seconds)
May 19 13:37:28 <crestfallen>	better paste here: https://lpaste.net/3517523630684635136
May 19 13:37:37 *	sytherax (~sytherax@27-33-100-182.static.tpgi.com.au) has joined
May 19 13:38:05 <crestfallen>	I can't load lpaste sometimes
May 19 13:38:14 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 19 13:39:00 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
May 19 13:41:24 *	dinkarg[m] (dinkargmat@gateway/shell/matrix.org/x-nnzwyiwjbwbwepmg) has joined
May 19 13:41:45 *	verement (~anonymous@cpe-76-167-227-46.san.res.rr.com) has joined
May 19 13:41:49 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 19 13:41:57 *	woodson (~quassel@135-23-231-228.cpe.pppoe.ca) has joined
May 19 13:43:11 *	juliagoda has quit (Quit: juliagoda)
May 19 13:43:38 *	camsbury has quit (Remote host closed the connection)
May 19 13:43:48 *	ctrlsbstr (~ctrlsbstr@174.27.15.3) has joined
May 19 13:44:00 *	tsaka__ has quit (Quit: Konversation terminated!)
May 19 13:44:14 *	camsbury (~camsbury@pool-98-116-99-205.nycmny.fios.verizon.net) has joined
May 19 13:44:19 *	tsaka__ (~torstein@84-52-234.108.3p.ntebredband.no) has joined
May 19 13:44:27 *	aarvar (~foewfoiew@50.34.135.50) has joined
May 19 13:45:05 *	hjdskes has quit (Ping timeout: 240 seconds)
May 19 13:46:29 *	redrapscallion has quit (Quit: Page closed)
May 19 13:46:37 *	oisdk (~textual@c-174-63-80-5.hsd1.ma.comcast.net) has joined
May 19 13:46:43 *	zariuq has quit (Ping timeout: 265 seconds)
May 19 13:47:02 *	son0p_ (~ff@adsl201-232-238-252.epm.net.co) has joined
May 19 13:47:07 Python interface unloaded
May 19 13:47:07 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sat May 19 13:47:07 2018

**** BEGIN LOGGING AT Mon May 21 16:14:16 2018

May 21 16:14:16 *	Now talking on #haskell
May 21 16:14:16 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 21 16:14:16 *	Topic for #haskell set by geekosaur!allbery@dreamshell.ttuttle.net (Thu May 17 06:28:53 2018)
May 21 16:14:16 *	Channel #haskell url: http://www.haskell.org/
May 21 16:14:19 *	mnoonan_ (~mnoonan@cpe-69-201-46-148.twcny.res.rr.com) has joined
May 21 16:15:02 *	dxld[work] has quit (Ping timeout: 260 seconds)
May 21 16:15:43 *	andyhoang (~andyhoang@14.187.140.215) has joined
May 21 16:15:44 *	tzemanovic has quit (Ping timeout: 252 seconds)
May 21 16:16:45 <iqubic>	What release of GHC are we on?
May 21 16:16:51 *	ctrlsbstr (~ctrlsbstr@174.27.15.3) has joined
May 21 16:16:53 <c_wraith>	gobby, hmm. I don't know enough about stack to be of much help, then. I can tell you for certain that when ghc starts including package names and versions in types, the problem is that you have multiple packages offering the same types and you're trying to mix them in incompatible ways.
May 21 16:16:54 *	reactormonk has quit (Ping timeout: 260 seconds)
May 21 16:17:04 *	djtyml has quit (Ping timeout: 260 seconds)
May 21 16:17:07 *	dxld[work] (~dxld@80-109-145-16.cable.dynamic.surfer.at) has joined
May 21 16:17:13 *	fmixing (~fmixing@5.18.211.209) has joined
May 21 16:17:21 *	t7 has quit (Quit: Leaving)
May 21 16:17:32 <gobby>	c_wraith: fair enough, thanks!
May 21 16:18:17 *	davesq (uid1884@gateway/web/irccloud.com/x-fdupkzdmliennovd) has joined
May 21 16:18:21 *	hjdskes has quit (Ping timeout: 256 seconds)
May 21 16:18:32 *	tromp has quit (Ping timeout: 245 seconds)
May 21 16:18:56 *	mizu_no_oto_work has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 21 16:19:06 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 21 16:20:08 *	andyhoang has quit (Ping timeout: 252 seconds)
May 21 16:21:45 *	fmixing has quit (Ping timeout: 256 seconds)
May 21 16:23:36 <crestfallen>	https://lpaste.net/8863788149243904000      hi this function should return 4,672,540 with totalSuccessful, according to the textbook. I am getting the result 235,644. (see line 75 and 100). any ideas?
May 21 16:24:27 <mniip>	is lpaste missing CSS or just a redesign...
May 21 16:24:45 *	Wuzzy has quit (Remote host closed the connection)
May 21 16:25:07 <mniip>	ah, both, both is good
May 21 16:25:18 *	alexteves_ has quit (Ping timeout: 260 seconds)
May 21 16:25:21 <lyxia>	nice indeed
May 21 16:26:07 <crestfallen>	clueless here. I'm working with an online solution... 
May 21 16:26:54 *	`Guest00000 has quit (Ping timeout: 245 seconds)
May 21 16:27:09 *	DSM has quit (Ping timeout: 260 seconds)
May 21 16:27:18 <crestfallen>	Ive lost track of this exercise.
May 21 16:27:21 <lyxia>	crestfallen: is this code that was given to you
May 21 16:27:33 *	habolabo_ has quit (Quit: Lost terminal)
May 21 16:27:49 <crestfallen>	the textbook provides the solution as it goes along lyxia 
May 21 16:28:33 *	hjdskes has quit (Ping timeout: 260 seconds)
May 21 16:28:35 *	energizer has quit (Quit: Leaving)
May 21 16:28:54 <crestfallen>	though the 4 functions at the very bottom were added by someone online going through the book
May 21 16:30:06 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 21 16:30:49 *	jonh (walrus@2600:3c03::f03c:91ff:fe96:7c03) has left ("WeeChat 1.4")
May 21 16:31:42 *	danso has quit (Read error: Connection reset by peer)
May 21 16:31:49 *	fenedor has quit (Read error: Connection reset by peer)
May 21 16:31:52 <lyxia>	Try going through the book slowly and check that the code does what the textbook says it does, try some small inputs and see whether the outputs make sense...
May 21 16:31:58 *	DrAwesomeClaws has quit (Quit: Leaving)
May 21 16:32:46 <crestfallen>	this is too much the book is super dry and doesn't explain much. eg "Modify the final program to produce the nearest solutions if no exact solution is possible". I just have no clue how to even think about that. .. lyxia  well no the textbook says I should have a result in the millions...
May 21 16:32:55 *	danso (~dan@modemcable078.123-81-70.mc.videotron.ca) has joined
May 21 16:34:04 <crestfallen>	super dry like japanese beer
May 21 16:34:45 <crestfallen>	lyxia, thanks can't deal with it...
May 21 16:36:07 Python interface unloaded
May 21 16:36:07 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Mon May 21 16:36:07 2018

**** BEGIN LOGGING AT Mon May 21 19:46:04 2018

May 21 19:46:04 *	Now talking on #haskell
May 21 19:46:04 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 21 19:46:04 *	Topic for #haskell set by geekosaur!allbery@dreamshell.ttuttle.net (Thu May 17 06:28:53 2018)
May 21 19:46:04 *	Channel #haskell url: http://www.haskell.org/
May 21 19:46:43 <crestfallen>	hi would someone mind critiquing the evaluation order on this function? thanks:   https://ptpb.pw/Xaq_
May 21 19:47:57 <crestfallen>	I don't like the looks of the first line of evaluation..
May 21 19:48:01 *	enterprisey has quit (Ping timeout: 248 seconds)
May 21 19:48:34 <c_wraith>	crestfallen: I don't see what *order* has to do with the comment there
May 21 19:49:23 <crestfallen>	only that the lines represent each recursion.. how would you write that c_wraith ?
May 21 19:49:42 <crestfallen>	each* line represents each recursion
May 21 19:49:50 *	hjdskes has quit (Ping timeout: 245 seconds)
May 21 19:49:50 <c_wraith>	I think your base case is off.  I think you need split [] = [[]]
May 21 19:50:07 <c_wraith>	Oh, that doesn't type check.
May 21 19:50:24 <rotaerk>	[([],[])] ?
May 21 19:50:44 <c_wraith>	I'm not really sure what this function is supposed to be doing, but that looks more right
May 21 19:51:07 *	glguy is inspired with confidence
May 21 19:51:12 <rotaerk>	lol
May 21 19:51:45 <crestfallen>	the [_] = [] prevents an infinite recursion, in the context of the whole program .. let me paste
May 21 19:51:52 <crestfallen>	apparently 
May 21 19:52:01 <crestfallen>	one moment pls
May 21 19:52:02 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 21 19:52:04 <c_wraith>	just make this function right.
May 21 19:52:20 <c_wraith>	And now I see.  I probably would have named it "splits"
May 21 19:52:55 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 21 19:52:58 <c_wraith>	and yeah, rotaerk nailed the base case
May 21 19:53:42 <crestfallen>	please see here. very confused. this is a graham hutton book example. see the split function.
May 21 19:53:45 <crestfallen>	https://ptpb.pw/0SvM
May 21 19:55:09 *	tomsen (~tom@ip-95-222-212-85.hsi15.unitymediagroup.de) has joined
May 21 19:56:00 <rotaerk>	I guess with (split [1,2,3]), ([1,2,3],[]) isn't considered one of the splits
May 21 19:56:13 <rotaerk>	err wait, ([], [1,2,3])
May 21 19:56:21 <rotaerk>	but perhaps it should be
May 21 19:56:30 *	hjdskes has quit (Ping timeout: 245 seconds)
May 21 19:57:08 *	joomy (~joomy@c-73-238-168-185.hsd1.ct.comcast.net) has joined
May 21 19:57:20 *	gestone has quit (Ping timeout: 245 seconds)
May 21 19:57:26 <rotaerk>	actually, your split [] seems fine
May 21 19:57:32 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 21 19:57:35 <crestfallen>	its from a book. sorry again I'm green to the gills with this exercise. I need to study it further.
May 21 19:57:51 <glguy>	crestfallen: What's your question?
May 21 19:57:53 *	brool has quit (Quit: Nettalk6 - www.ntalk.de)
May 21 19:58:13 <crestfallen>	It was re: my evaluation order in comments
May 21 19:58:19 *	korans (~korans@5.42.131.31) has joined
May 21 19:58:23 <crestfallen>	is it correct, how to make it more clear?
May 21 19:58:34 <c_wraith>	there is no evaluation order in the comments
May 21 19:59:02 <crestfallen>	very sorry disregard it please
May 21 19:59:02 *	kapil___ (uid36151@gateway/web/irccloud.com/x-ekhvkefqwsuitglw) has joined
May 21 19:59:10 <rotaerk>	based on the example output, I would think split [] = []; split [a] = [([a], [])]
May 21 19:59:21 <crestfallen>	I was attempting to express the evaluation order
May 21 19:59:32 <crestfallen>	with the arg [1,2,3]
May 21 19:59:34 <c_wraith>	evaluation order depends on the demand order
May 21 19:59:42 *	blarney (~blarney@207.244.109.182) has joined
May 21 19:59:44 <c_wraith>	that's sort of Haskell's whole thing
May 21 19:59:50 *	DrAwesomeClaws has quit (Ping timeout: 245 seconds)
May 21 20:00:07 <crestfallen>	sorry. peace out. please let me ask again in about an hour...
May 21 20:00:13 Python interface unloaded
May 21 20:00:13 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Mon May 21 20:00:13 2018

**** BEGIN LOGGING AT Fri May 25 12:04:55 2018

May 25 12:04:55 *	Now talking on #haskell
May 25 12:04:55 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 25 12:04:55 *	Topic for #haskell set by geekosaur (Thu May 17 06:28:54 2018)
May 25 12:04:56 *	Channel #haskell url: http://www.haskell.org/
May 25 12:05:01 *	keepLearning512 has quit ()
May 25 12:05:19 *	lgas has quit (Remote host closed the connection)
May 25 12:05:38 *	lgas (~user@2601:281:8080:4ac0:7455:1f2d:ddb9:88e4) has joined
May 25 12:05:47 *	fendor_ has quit (Ping timeout: 256 seconds)
May 25 12:06:58 *	tomsen has quit (Ping timeout: 264 seconds)
May 25 12:07:18 *	fishythefish has quit (Ping timeout: 260 seconds)
May 25 12:07:50 *	hjdskes has quit (Ping timeout: 260 seconds)
May 25 12:08:17 *	iAmerikan has quit (Ping timeout: 248 seconds)
May 25 12:08:29 *	albertus1 (~seb@x4db1de09.dyn.telefonica.de) has joined
May 25 12:08:32 *	albertus1 has quit (Max SendQ exceeded)
May 25 12:08:50 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
May 25 12:09:00 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 25 12:09:11 *	enterprisey has quit (Remote host closed the connection)
May 25 12:09:13 *	albertus1 (~seb@x4db1de09.dyn.telefonica.de) has joined
May 25 12:09:37 *	lgas has quit (Remote host closed the connection)
May 25 12:09:51 *	lgas (~user@2601:281:8080:4ac0:7455:1f2d:ddb9:88e4) has joined
May 25 12:11:36 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
May 25 12:11:36 *	carafe has quit (Read error: Connection reset by peer)
May 25 12:12:07 *	blankhart (~blankhart@c-73-215-244-181.hsd1.nj.comcast.net) has joined
May 25 12:12:44 *	nickolay_ has quit (Ping timeout: 268 seconds)
May 25 12:12:54 *	Linter has quit (Ping timeout: 260 seconds)
May 25 12:12:59 *	simukis (~simukis_@62.212.110.84) has joined
May 25 12:13:20 <mupf>	Haskell is still a bit confusing. Still waiting for that enlightening moment
May 25 12:13:29 *	lgas has quit (Remote host closed the connection)
May 25 12:13:29 *	w1n5t0n has quit (Ping timeout: 260 seconds)
May 25 12:13:46 *	lgas (~user@2601:281:8080:4ac0:7455:1f2d:ddb9:88e4) has joined
May 25 12:13:58 *	hjdskes has quit (Ping timeout: 268 seconds)
May 25 12:13:59 *	enterprisey has quit (Client Quit)
May 25 12:14:11 *	rcdilorenzo has quit (Quit: rcdilorenzo)
May 25 12:14:37 *	rcdilorenzo (~rcdiloren@cpe-2606-A000-1118-8285-C0C6-45AB-28BA-45C.dyn6.twc.com) has joined
May 25 12:14:46 *	iAmerikan has quit (Ping timeout: 264 seconds)
May 25 12:14:55 *	Deide (~Deide@90.255.104.193) has joined
May 25 12:15:01 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 25 12:15:01 <benzrf>	hehe
May 25 12:15:06 <benzrf>	mupf: what's the latest confusoin?
May 25 12:15:40 *	rcdilorenzo has quit (Client Quit)
May 25 12:15:50 *	altjsus has quit (Quit: altjsus)
May 25 12:16:07 *	carafe (~slavedriv@150.203.68.101) has joined
May 25 12:16:10 *	rcdilorenzo (~rcdiloren@cpe-2606-A000-1118-8285-C0C6-45AB-28BA-45C.dyn6.twc.com) has joined
May 25 12:16:11 <EvanR>	that moment when you feel compelled to write a monad tutorial
May 25 12:16:41 *	alexshendi (~yaaic@ip2505f737.dynamic.kabel-deutschland.de) has joined
May 25 12:16:41 <mupf>	I just started with cis194 because graham huttons book confused me a little. so, guess I'm just struggling getting used to this kind of language. nothing in particular.
May 25 12:16:43 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
May 25 12:17:15 <machinedgod>	EvanR: That moment when you fail at a tech interview because you used a monad (in Java), and your interviewer doesn't know what a monad is
May 25 12:17:20 <mupf>	I had literally no problem learning C. It felt straight forward.
May 25 12:17:49 <EvanR>	if you had learned haskell first, and never heard of C, maybe the it would be the opposite
May 25 12:17:56 <EvanR>	because honestly C makes no sense in some cases
May 25 12:18:39 <mupf>	e.g.?
May 25 12:18:49 *	blankhart has quit (Ping timeout: 256 seconds)
May 25 12:18:54 <EvanR>	however there are elements that C programmer haskell students can draw correlaries to
May 25 12:19:05 <EvanR>	sum types correspond to tagged unions in C
May 25 12:19:56 *	atchoum (~david@81-65-125-105.rev.numericable.fr) has joined
May 25 12:19:58 <EvanR>	lets not get into some vagaries of C semantics
May 25 12:20:30 <ddellacosta>	mupf: FWIW I think your experience is pretty common (reminds me of mine, certainly). Stick it out and I promise you'll have not just one but multiple enlightening moments which will make up for the confusion you're feeling now.
May 25 12:20:31 *	pera has quit (Ping timeout: 256 seconds)
May 25 12:20:53 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
May 25 12:21:02 *	dmiles has quit (Ping timeout: 245 seconds)
May 25 12:21:16 *	tomsen (~tom@ip-95-222-212-85.hsi15.unitymediagroup.de) has joined
May 25 12:21:25 <ddellacosta>	there's a lot of generality to get comfortable with in Haskell, which I personally think is the biggest challenge--C and most other languages tend to be a lot more concrete right out of the gate
May 25 12:21:27 *	hjdskes has quit (Ping timeout: 245 seconds)
May 25 12:21:40 *	altjsus (~altjsus@213.87.157.171) has joined
May 25 12:22:07 <ddellacosta>	(not to dismiss EvanR's point about "what if you learned Haskell first?")
May 25 12:22:18 *	simukis has quit (Quit: simukis)
May 25 12:22:22 <mupf>	ddellacosta: thanks. I will stick it out for sure
May 25 12:22:31 <EvanR>	my point is purely hypothetical, everyone and their dog has learned C or similar first, and then has to unlearn it to learn haskell
May 25 12:22:43 *	simukis (~simukis_@62.212.110.84) has joined
May 25 12:22:58 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 25 12:23:02 <ddellacosta>	yeah, EvanR, I definitely think that's a valid point to make
May 25 12:23:05 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 25 12:23:08 *	oish (~charlie@159.22.169.217.in-addr.arpa) has joined
May 25 12:23:27 *	canaria has quit (Remote host closed the connection)
May 25 12:24:08 <ddellacosta>	what's embarrassing is how much better at Haskell my dog is compared to me
May 25 12:24:29 <EvanR>	http://www.indiana.edu/~jkkteach/Q550/Pennings2003.pdf
May 25 12:24:45 <ddellacosta>	haha, nice
May 25 12:24:59 *	skeuomorf (~skeuomorf@unaffiliated/skeuomorf) has joined
May 25 12:25:21 <ddellacosta>	"Now, back to Elvis. I noticed when playing fetch with Elvis that he uses the third strategy of jumping into the lake at D. It also seemed that his y values were roughly proportional to the x values."
May 25 12:25:24 <ddellacosta>	I love this
May 25 12:25:37 *	canaria (~canaria@49.206.119.53) has joined
May 25 12:25:43 <EvanR>	i know
May 25 12:26:28 *	oisdk (~textual@64.237.40.140) has joined
May 25 12:27:00 *	simukis has quit (Read error: Connection reset by peer)
May 25 12:27:16 *	gestone has quit (Ping timeout: 252 seconds)
May 25 12:27:20 *	simukis (~simukis_@62.212.110.84) has joined
May 25 12:27:38 *	hjdskes has quit (Ping timeout: 252 seconds)
May 25 12:27:59 *	amirpro has quit (Quit: amirpro)
May 25 12:28:06 *	altjsus has quit (Remote host closed the connection)
May 25 12:28:39 *	marvin2 (~marvin@cpe-188-129-32-224.dynamic.amis.hr) has joined
May 25 12:28:54 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 25 12:29:08 *	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined
May 25 12:29:17 *	nohzer (~nohzer@p5B25AD88.dip0.t-ipconnect.de) has joined
May 25 12:29:39 *	sword_smith (sword_smit@bitcoinfundamentals.org) has joined
May 25 12:29:48 *	baboum (~flupe@92.177.234.61) has joined
May 25 12:30:37 *	carafe has quit (Ping timeout: 245 seconds)
May 25 12:30:52 <EvanR>	looking for study into dogs doing haskell
May 25 12:31:02 *	marvin3 has quit (Ping timeout: 245 seconds)
May 25 12:31:12 *	canaria has quit (Remote host closed the connection)
May 25 12:31:27 *	replay has quit (Ping timeout: 240 seconds)
May 25 12:31:52 *	enterprisey has quit (Remote host closed the connection)
May 25 12:32:05 <sword_smith>	Hi, I have an expression which I don't know how to write. It does not seem to work with nested where subexpressions. In the 1st where there are two definitions that share specific values. How do I declare values that are in scope of both these definitions?
May 25 12:32:25 *	simukis has quit (Read error: Connection reset by peer)
May 25 12:32:25 <Rembane>	sword_smith: A where expression might help you there.
May 25 12:32:28 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
May 25 12:32:29 <Rembane>	sword_smith: Or a let ... in.
May 25 12:32:36 *	carafe (~slavedriv@150.203.68.101) has joined
May 25 12:32:59 <__monty__>	sword_smith: You can only have one where clause that applies to all the equations.
May 25 12:33:03 <cocreature>	sword_smith: use a "case" expression instead of pattern matching on the lhs of the equal sign and then you can share the definition using a "where"
May 25 12:33:09 <ddellacosta>	sword_smith: can you give us an lpaste or gist or something?
May 25 12:33:28 <sword_smith>	ddellacosta: Yes.
May 25 12:33:41 *	enterprisey has quit (Remote host closed the connection)
May 25 12:33:43 <__monty__>	So I'm completely wrong? Where am I getting my where understanding from?
May 25 12:34:06 *	otulp (~otulp@124.113.45.31.customer.cdi.no) has joined
May 25 12:34:12 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
May 25 12:34:33 *	fishythefish (~fishythef@2620:10d:c090:200::5:76d8) has joined
May 25 12:34:41 *	sim590 has quit (Ping timeout: 256 seconds)
May 25 12:34:47 *	youtmon (~yout@c-98-242-250-233.hsd1.fl.comcast.net) has joined
May 25 12:36:12 <EvanR>	where is not an expression
May 25 12:36:18 *	my_mom_hot (~fgh@151.54.20.221) has joined
May 25 12:36:19 <EvanR>	unlike let x = _ in _
May 25 12:36:22 <sword_smith>	EvanR: What is it then? :)
May 25 12:36:27 <sword_smith>	https://pastebin.com/qCg8m9C1
May 25 12:36:44 <__monty__>	A syntactic construct.
May 25 12:36:45 <EvanR>	its a container of expressions you can attach to a declaration, or a case alternative
May 25 12:36:54 *	pera (~pera@unaffiliated/pera) has joined
May 25 12:37:17 <EvanR>	a limitation which can cause confusion
May 25 12:37:43 *	quobo (uid178934@gateway/web/irccloud.com/x-ipzhalxvnwxpdmpj) has joined
May 25 12:37:50 <ddellacosta>	sword_smith: can you simply put all of these in the same where term? I don't see why you want the nesting
May 25 12:37:50 *	ccomb has quit (Read error: Connection reset by peer)
May 25 12:37:57 *	hjdskes has quit (Ping timeout: 240 seconds)
May 25 12:38:08 *	enterprisey has quit (Remote host closed the connection)
May 25 12:38:11 <ddellacosta>	this still looks like pseudo-code, may be helpful to see what you're actually trying to do here
May 25 12:38:35 *	jkarni has quit (Ping timeout: 240 seconds)
May 25 12:38:39 <sword_smith>	ddellacosta: I am putting together opcodes for a compiler.
May 25 12:38:41 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
May 25 12:38:56 <sword_smith>	concatenating them
May 25 12:39:10 *	vlatkoB has quit (Remote host closed the connection)
May 25 12:39:34 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 25 12:39:58 <cocreature>	sword_smith: why are you nesting the definition of valueA instead of defining it on the same level as value0?
May 25 12:40:15 *	dmiles (dmiles@c-24-20-102-245.hsd1.wa.comcast.net) has joined
May 25 12:40:25 <sword_smith>	ddellacosta: I see what you mean by not nesting them. I will try to put them all on the same level and see how that works. Thank you.
May 25 12:40:46 <ddellacosta>	sure thing
May 25 12:40:58 *	KeyJoo (~KeyJoo@46.249.10.218) has joined
May 25 12:41:00 *	paidnode (~tom@2a02:c7f:6429:500:8998:250d:2f7c:80bc) has joined
May 25 12:41:19 *	canaria (~canaria@49.206.119.53) has joined
May 25 12:41:48 *	blankhart (~blankhart@2601:8a:4100:18dd:7d7c:3d77:a5b3:1316) has joined
May 25 12:43:58 *	etleine90 (25d4cc16@gateway/web/cgi-irc/kiwiirc.com/ip.37.212.204.22) has joined
May 25 12:44:29 <crestfallen>	hi any interesting and illustrative examples of this ? :
May 25 12:44:31 *	etleine90 is now known as evanin91
May 25 12:44:35 <crestfallen>	:t map map
May 25 12:44:36 <lambdabot>	[a -> b] -> [[a] -> [b]]
May 25 12:44:55 *	sagax (~sagax_nb@213.138.71.146) has joined
May 25 12:44:58 <EvanR>	:t fmap fmap
May 25 12:45:00 <lambdabot>	(Functor f2, Functor f1) => f1 (a -> b) -> f1 (f2 a -> f2 b)
May 25 12:45:11 <EvanR>	:t fmap . fmap
May 25 12:45:12 <lambdabot>	(Functor f2, Functor f1) => (a -> b) -> f1 (f2 a) -> f1 (f2 b)
May 25 12:45:18 <ddellacosta>	crestfallen: more generally https://github.com/ekmett/lens/wiki/Derivation ?
May 25 12:45:20 <crestfallen>	no capice
May 25 12:45:36 *	canaria has quit (Ping timeout: 252 seconds)
May 25 12:45:45 <crestfallen>	capiche
May 25 12:45:53 *	evanin91 is now known as steamdoodta92
May 25 12:45:56 *	khilan has quit (Quit: Connection closed for inactivity)
May 25 12:46:06 <crestfallen>	read: no capiche
May 25 12:46:07 *	path[l] (~vsi@199.201.64.136) has joined
May 25 12:46:15 <ddellacosta>	crestfallen: what were you looking for exactly when asking that question?
May 25 12:46:20 *	hjdskes has quit (Ping timeout: 252 seconds)
May 25 12:47:09 <crestfallen>	it was an example of determining unification  https://stackoverflow.com/questions/17148385/unifying-types-in-haskell    I wanted to see how it works
May 25 12:47:15 *	steamdoodta92 is now known as herfeket91
May 25 12:47:40 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 25 12:47:49 *	sim590 (~sim590@cable-192.222.210.73.electronicbox.net) has joined
May 25 12:48:00 *	oldnborg (~Oldenborg@200116b8664836000216eafffeed22c2.dip.versatel-1u1.de) has joined
May 25 12:48:03 *	fragamus (~textual@lib-07-subnet-39.rdns.cenic.net) has joined
May 25 12:48:03 <crestfallen>	or inferring one type as per Evan*R 's preferred term.
May 25 12:48:25 <ddellacosta>	ah okay
May 25 12:48:35 *	vilu has quit (Ping timeout: 245 seconds)
May 25 12:48:37 *	herfeket91 is now known as cricikop92
May 25 12:48:59 <EvanR>	infer the type of map map (\x -> x >>= (\y -> y))
May 25 12:49:23 <crestfallen>	ddellacosta, thanks for that link . a wider menagerie of types I will certainly read that
May 25 12:49:50 <crestfallen>	>  map map (\x -> x >>= (\y -> y))
May 25 12:49:51 <ddellacosta>	crestfallen: yeah sorry, after seeing that SO I think I was kind of coming out of left field there...probably because my mind is on lens lately. But glad if you find it useful!
May 25 12:49:53 <lambdabot>	 error:
May 25 12:49:53 <lambdabot>	     • Couldn't match expected type ‘[a -> b]’
May 25 12:49:53 <lambdabot>	                   with actual type ‘m0 (m0 b0) -> m0 b0’
May 25 12:49:58 *	cricikop92 is now known as goodwreagir92
May 25 12:50:08 *	enterprisey has quit (Remote host closed the connection)
May 25 12:50:26 <crestfallen>	it'll prolly confused me but thanks :)
May 25 12:50:34 <crestfallen>	confuse*
May 25 12:50:43 <ddellacosta>	crestfallen: bookmark it and ignore it for now if so!
May 25 12:50:53 <crestfallen>	EvanR what's that? 
May 25 12:51:01 <EvanR>	what
May 25 12:51:19 *	goodwreagir92 is now known as slurimac88
May 25 12:51:21 <crestfallen>	I don't know the notation >>=
May 25 12:51:28 <fishythefish>	:t (>>=)
May 25 12:51:29 <lambdabot>	Monad m => m a -> (a -> m b) -> m b
May 25 12:51:56 <crestfallen>	sorry not there yet. Is there a way to see map map in use that I could understand?
May 25 12:52:17 <crestfallen>	or should I forego it
May 25 12:52:27 *	absence (kAhfZrQBsQ@hildring.pvv.ntnu.no) has joined
May 25 12:52:38 *	slurimac88 is now known as quidaha90
May 25 12:52:48 <EvanR>	the exactly problem is whats asked in that SO post
May 25 12:52:50 <EvanR>	exact*
May 25 12:52:59 <EvanR>	so, back to "understand the question"
May 25 12:53:21 *	octobanana (~weechat@207.228.78.39) has joined
May 25 12:53:38 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
May 25 12:53:47 <fishythefish>	> zipWith ($) (map map [(+1), (*2)]) [[1, 2], [3, 4]]
May 25 12:53:49 <lambdabot>	 [[2,3],[6,8]]
May 25 12:53:59 *	quidaha90 is now known as drophportra94
May 25 12:54:05 *	bartcopp (~bartcopp@vpn.bartcoppens.be) has joined
May 25 12:54:05 *	bartcopp is now known as bcoppens
May 25 12:54:05 *	bcoppens has quit (Changing host)
May 25 12:54:05 *	bcoppens (~bartcopp@kde/coppens) has joined
May 25 12:54:05 <oisdk>	Hey, so if I want to use a CPP macro to conditionally use some new function in base (oneShot, in my case), how do I know what conditions to use in the macro?
May 25 12:54:25 *	conal has quit (Quit: Computer has gone to sleep.)
May 25 12:54:50 <oisdk>	Should it be MIN_VERSION_base(...) or __GLASGOW_HASKELL__(...)? Where can I find the point where that particular function was first included?
May 25 12:55:21 *	drophportra94 is now known as zantrentfa95
May 25 12:55:23 <crestfallen>	fishythefish, thanks you're a patient person
May 25 12:55:37 *	floryst (~floryst@cpe-45-37-110-36.nc.res.rr.com) has joined
May 25 12:55:56 *	ccomb (~ccomb@46.191.24.93.rev.sfr.net) has joined
May 25 12:56:24 *	halogenandtoast (~mmongeau@132.69.30.125.dy.iij4u.or.jp) has joined
May 25 12:56:45 *	zantrentfa95 is now known as abmitef98
May 25 12:57:41 <noan>	crestfallen, many in the haskell community generally are
May 25 12:58:05 *	abmitef98 is now known as urinchil89
May 25 12:58:09 <crestfallen>	cool. Everyone is supercool
May 25 12:58:20 <fishythefish>	the `map map` bit is pretty straightforward when you expand it: map map [(+1), (*2)] = [map (+1), map (*2)], but since functions don't have a Show instance, you may want to play around with applying it to different arguments
May 25 12:58:23 <fishythefish>	> zipWith ($) (map map [(+1), (*2)]) (repeat [1..4])
May 25 12:58:25 <lambdabot>	 [[2,3,4,5],[2,4,6,8]]
May 25 12:59:07 <crestfallen>	excellent
May 25 12:59:24 *	urinchil89 is now known as acstephis93
May 25 12:59:52 <crestfallen>	so the second map only applies (*2)
May 25 13:00:06 <crestfallen>	in the first example
May 25 13:00:06 *	ixxie has quit (Quit: Lost terminal)
May 25 13:00:20 <fishythefish>	in both examples
May 25 13:00:27 *	ixxie (~ixxie@88-115-5-96.elisa-laajakaista.fi) has joined
May 25 13:00:27 *	halogenandtoast has quit (Ping timeout: 240 seconds)
May 25 13:00:30 *	tomsen has quit (Ping timeout: 260 seconds)
May 25 13:00:42 <fishythefish>	assuming you mean the second map in `[map (+1), map (*2)]`
May 25 13:00:50 *	acstephis93 is now known as ermatur96
May 25 13:01:00 *	hjdskes has quit (Ping timeout: 252 seconds)
May 25 13:01:28 *	blonkhart (~blankhart@2601:8a:4100:18dd:68d4:e849:305a:eb5b) has joined
May 25 13:01:38 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 25 13:02:09 *	ermatur96 is now known as teilatsfo90
May 25 13:02:31 *	unK_ has quit (Quit: KVIrc 4.9.3 Aria http://www.kvirc.net/)
May 25 13:02:50 *	emilypi has quit (Ping timeout: 260 seconds)
May 25 13:03:00 <crestfallen>	fishythefish, is map map commonly used?
May 25 13:03:26 <my_mom_hot>	hi
May 25 13:03:28 *	teilatsfo90 is now known as quipreser91
May 25 13:03:55 <fishythefish>	I wouldn't consider it a common idiom, no, but only because I have never needed a function to do what `map map` does
May 25 13:04:10 *	ali_bush has quit (Quit: No Ping reply in 180 seconds.)
May 25 13:04:35 <fishythefish>	there's nothing intrinsically wrong with it, though; you're making appropriate use of higher order functions
May 25 13:04:35 <crestfallen>	my_mom__hot, < that is ...provocative :)
May 25 13:04:40 *	ian_andrich has quit (Ping timeout: 252 seconds)
May 25 13:04:48 *	quipreser91 is now known as fronrabwoe94
May 25 13:04:53 <dyl>	:t (.).(.)
May 25 13:04:54 <lambdabot>	(b -> c) -> (a1 -> a2 -> b) -> a1 -> a2 -> c
May 25 13:05:29 <ddellacosta>	dyl: that is so weird I was just poking at that myself, this very moment
May 25 13:05:31 *	emilypi (~emilypi@pool-100-33-104-88.nycmny.fios.verizon.net) has joined
May 25 13:05:37 <dyl>	:t (`fmap`).(`fmap`)
May 25 13:05:38 <lambdabot>	error: parse error on input ‘)’
May 25 13:05:39 <ddellacosta>	I'm trying to understand how that works
May 25 13:05:42 *	blankhart has quit (Ping timeout: 265 seconds)
May 25 13:05:44 <dyl>	:t fmap . fmap
May 25 13:05:45 <lambdabot>	(Functor f2, Functor f1) => (a -> b) -> f1 (f2 a) -> f1 (f2 b)
May 25 13:06:04 <dyl>	Now substitute in the functor instance for (-> r)
May 25 13:06:10 *	fronrabwoe94 is now known as suppnocam98
May 25 13:06:11 <crestfallen>	yeah I think it was for illustrative purposes. actually EvanR I didn't understand the initial SO question but at least I can follow the inferred type
May 25 13:06:12 <fishythefish>	-1
May 25 13:06:15 <dyl>	Or whatever it was.
May 25 13:06:35 <dyl>	fmap . fmap is just fmap one layer deeper in a stack of functors.
May 25 13:06:46 <dyl>	:t fmap . fmap . fmap --we can go deeper
May 25 13:06:47 <lambdabot>	(Functor f3, Functor f2, Functor f1) => (a -> b) -> f1 (f2 (f3 a)) -> f1 (f2 (f3 b))
May 25 13:06:52 <fishythefish>	ddellacosta: are you trying to work out what (.) . (.) does or just how the type is derived?
May 25 13:07:05 <ddellacosta>	fmap . fmap seems more obvious to me, for whatever reason, than `(.) . (.)`
May 25 13:07:11 <ddellacosta>	fishythefish: yeah, let's say both, haha
May 25 13:07:15 <crestfallen>	what *does* that do?
May 25 13:07:27 <fishythefish>	what it does is relatively straightforward from the types
May 25 13:07:29 *	suppnocam98 is now known as poulgejar88
May 25 13:07:30 <ddellacosta>	the fact is that I can't really understand what it does until I understand how the type is derived
May 25 13:07:35 <__monty__>	:t fmap fmap fmap
May 25 13:07:37 <lambdabot>	(Functor f2, Functor f1) => (a -> b) -> f1 (f2 a) -> f1 (f2 b)
May 25 13:07:44 <kaol>	:t fmap `fmap` fmap
May 25 13:07:46 <lambdabot>	(Functor f2, Functor f1) => (a -> b) -> f1 (f2 a) -> f1 (f2 b)
May 25 13:07:49 <ddellacosta>	fishythefish: I mean, sure, on that level yeah, but I don't have an intuition for it yet
May 25 13:07:53 *	conal (~conal@38.132.115.221) has joined
May 25 13:08:03 <ddellacosta>	doing some dumb manual substitution now to wrap my head around it
May 25 13:08:05 <dyl>	fmap . fmap . fmap === fmap `fmap` fmap `fmap` fmap
May 25 13:08:09 <dyl>	> fmap `fmap` fmap `fmap` fmap
May 25 13:08:11 <lambdabot>	 error:
May 25 13:08:12 <lambdabot>	     • No instance for (Typeable f2)
May 25 13:08:12 <lambdabot>	         arising from a use of ‘show_M885580131854924185230160’
May 25 13:08:14 *	woodson (~quassel@135-23-231-228.cpe.pppoe.ca) has joined
May 25 13:08:16 <dyl>	Oh come on...
May 25 13:08:17 <fishythefish>	crestfallen: you have a b -> c and an a1 -> a2 -> b, so you can get a function a1 -> a2 -> c by supplying the a1 and a2 to your second argument to get a b, then applying your first argument to get a c
May 25 13:08:20 <dyl>	:t fmap `fmap` fmap `fmap` fmap
May 25 13:08:21 <lambdabot>	(Functor f3, Functor f2, Functor f1) => (a -> b) -> f1 (f2 (f3 a)) -> f1 (f2 (f3 b))
May 25 13:08:22 *	ali_bush (~ali_bush@unaffiliated/ali-bush-laptop/x-4076082) has joined
May 25 13:08:46 <dyl>	ddellacosta It became more intuitive to me when I started thinking in terms of fmap = (.) :p
May 25 13:08:47 <__monty__>	ddellacosta: ... Is just function composition for functions that take 2 arguments. Is how I look at it at least.
May 25 13:08:50 *	poulgejar88 is now known as pansibi96
May 25 13:09:02 <dyl>	It's way easier to see in terms of fmap than in terms of . with the infix arrow type constructors.
May 25 13:09:07 <ddellacosta>	dyl, __monty__: yeah, I dunno why I have the block on (.) but not fmap
May 25 13:09:11 <dyl>	If you rewrite a -> b as (-> b) a it's also easier.
May 25 13:09:25 <ddellacosta>	dyl: ah that's helpful, let me try that
May 25 13:09:27 <dyl>	(then it becomes clear f is (-> b))
May 25 13:09:37 <dyl>	Yeah, undo the infix and it will become much easier.
May 25 13:09:46 <crestfallen>	fishythefish, that's regarding the SO question?
May 25 13:09:57 *	atondwal has quit (Remote host closed the connection)
May 25 13:09:59 <fishythefish>	crestfallen: no, that's re: your question about what (.) . (.) does
May 25 13:10:10 *	pansibi96 is now known as lauprocov96
May 25 13:10:17 *	atondwal (~atondwal@2606:6000:cdc0:ab00:b05d:6180:fd5c:8586) has joined
May 25 13:10:24 <dyl>	Not *all* of them btw, just the important ones :)
May 25 13:10:39 <crestfallen>	thanks friend . one day I'll get it fishythefish 
May 25 13:10:55 <dyl>	(a -> b) -> f1 (f2 a) -> f1 (f2 b) ⇒ (a -> b) -> (-> c) ((-> d) a) -> (-> c) ((-> d) b)
May 25 13:11:09 *	my_mom_hot has quit (Quit: Leaving)
May 25 13:11:14 *	ian_andrich (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
May 25 13:11:19 <dyl>	etc
May 25 13:11:33 <dyl>	f1 = (-> c), f2 = (-> d)
May 25 13:11:37 *	lauprocov96 is now known as acmodons96
May 25 13:11:40 <dyl>	then expand it out into infix and you'll find (.).(.)
May 25 13:12:33 <atchoum>	I have a dissertation topic
May 25 13:12:39 *	shadowdaemon has quit (Ping timeout: 256 seconds)
May 25 13:12:53 *	hiredman has quit (Quit: Changing server)
May 25 13:12:57 *	acmodons96 is now known as conrenoord95
May 25 13:13:03 <atchoum>	« Is automatic code generation equivalent to evil » ?
May 25 13:13:15 *	hiredman (~hiredman@volyova.ec2.thelastcitadel.com) has joined
May 25 13:13:35 <atchoum>	I was wondering actually if any « automatically generated code » couldn't be replaced by an equivalent well thought concept.
May 25 13:13:49 <Tuplanolla>	Man reinvents compilers.
May 25 13:13:58 *	tzemanovic (~tzemanovi@131.10.168.125.sta.wbroadband.net.au) has joined
May 25 13:14:07 <dyl>	:t (fmap flip) . (flip fmap)
May 25 13:14:09 <lambdabot>	(a1 -> a2) -> (a2 -> b -> c) -> b -> a1 -> c
May 25 13:14:12 <dyl>	Where did the Functor go .___.?
May 25 13:14:18 *	conrenoord95 is now known as katheto92
May 25 13:14:19 <dyl>	?free floop :: (fmap flip) . (flip fmap)
May 25 13:14:19 <lambdabot>	Plugin `free' failed with: src/Lambdabot/Plugin/Haskell/Free/Type.hs:(152,17)-(160,45): Non-exhaustive patterns in case
May 25 13:14:23 <dyl>	Eyy
May 25 13:14:27 *	milanj (~milan@87.116.182.161) has joined
May 25 13:14:35 Python interface unloaded
May 25 13:14:35 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri May 25 13:14:35 2018

**** BEGIN LOGGING AT Tue May 29 10:53:11 2018

May 29 10:53:11 *	Now talking on #haskell
May 29 10:53:11 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 29 10:53:11 *	Topic for #haskell set by geekosaur (Thu May 17 06:28:54 2018)
May 29 10:53:11 *	Channel #haskell url: http://www.haskell.org/
May 29 10:53:21 *	xpycm (~chatzilla@178.141.55.104) has joined
May 29 10:54:00 *	vukasink (~vukasink@lak-31-55.wohnheime.ruhr-uni-bochum.de) has joined
May 29 10:54:14 *	lumm has quit (Quit: lumm)
May 29 10:54:24 *	setsid (cffcad0a@gateway/web/freenode/ip.207.252.173.10) has joined
May 29 10:54:28 <crestfallen>	hi I changed line 94's   <-   to a   <=   . I'm assuming that is a typo. how should this line look? thanks   https://github.com/evturn/programming-in-haskell/blob/master/09-the-countdown-problem/09.11-exercises.hs
May 29 10:54:40 <tabaqui1>	where can I read about mock unit-testing?
May 29 10:54:53 <tabaqui1>	I found one article on Pusher blog, but it is too specific
May 29 10:55:10 <tabaqui1>	I do not want to write new monad for each IO library
May 29 10:55:27 *	sytherax has quit (Read error: No route to host)
May 29 10:55:30 *	Joeyo133 (~joeyo133@2601:243:200:c610:1999:b39e:5969:3989) has joined
May 29 10:55:33 *	cschneid (~cschneid@c-73-78-144-189.hsd1.co.comcast.net) has joined
May 29 10:56:28 *	hphuoc25_ has quit (Remote host closed the connection)
May 29 10:56:41 *	jao (~jao@pdpc/supporter/professional/jao) has joined
May 29 10:56:54 *	lnostdal has quit (Read error: Connection reset by peer)
May 29 10:57:01 *	jedws has quit (Ping timeout: 265 seconds)
May 29 10:57:14 <crestfallen>	with my edit, the program compiles but on running it returns brief error: divide by zero
May 29 10:57:21 *	beefjoe has quit (Ping timeout: 248 seconds)
May 29 10:57:42 *	hackage git-annex 6.20180529 - manage files with git, without checking their contents into git  http://hackage.haskell.org/package/git-annex-6.20180529 (JoeyHess)
May 29 10:57:53 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 29 10:59:08 <__monty__>	EvanR: : o ^ ; )
May 29 10:59:14 <dminuoso>	> 1 `div` 0
May 29 10:59:16 <lambdabot>	 *Exception: divide by zero
May 29 10:59:17 <dminuoso>	crestfallen: ^-
May 29 10:59:25 *	connrs has quit (Ping timeout: 260 seconds)
May 29 10:59:32 <dminuoso>	crestfallen: So something causes an expression to be evaluated, where you are trying to divide by zero.
May 29 10:59:37 *	lnostdal (~lnostdal@213.226.59.203) has joined
May 29 10:59:52 *	sytherax (~sytherax@27-33-100-182.static.tpgi.com.au) has joined
May 29 11:00:00 <crestfallen>	thanks yeah no clue. this program is in a beginning haskell book. fully overwhelmed by it
May 29 11:00:03 <crestfallen>	dminuoso, 
May 29 11:00:37 <crestfallen>	just git pulled all these solutions.
May 29 11:00:39 <dminuoso>	crestfallen: That's just some other readers attempted solutions to the book.
May 29 11:00:46 <crestfallen>	yeah
May 29 11:00:59 <dminuoso>	crestfallen: As you have discovered, first there's syntax bugs, then there's logic bugs..
May 29 11:01:11 <dminuoso>	That's kind of bound to happen if you refer to examples written by other readers. =)
May 29 11:01:27 *	jao has quit (Ping timeout: 240 seconds)
May 29 11:01:48 <crestfallen>	my edit is incorrect though it compiles. yeah no chance I could even *dream* of solving these exercises
May 29 11:01:55 *	zdenal has quit (Ping timeout: 256 seconds)
May 29 11:02:09 *	beka has quit (Ping timeout: 248 seconds)
May 29 11:02:30 <dminuoso>	crestfallen: Did you do the previous excercises?
May 29 11:02:54 *	SenasOzys has quit (Ping timeout: 252 seconds)
May 29 11:03:26 <crestfallen>	let's put it this way: in the entire first chapter of the sicp book, I solved pascal's triangle alone. aside from that, I pinched all the solutions
May 29 11:03:29 *	altjsus (~altjsus@213.87.157.171) has joined
May 29 11:03:30 *	bbrodriguez has quit (Ping timeout: 260 seconds)
May 29 11:03:35 <crestfallen>	in scheme
May 29 11:03:49 *	johnvonneumann (~johnvonne@c-67-170-231-178.hsd1.ca.comcast.net) has joined
May 29 11:03:50 *	xafizoff (364d7724@gateway/web/freenode/ip.54.77.119.36) has joined
May 29 11:04:02 *	freeman42x]NixOS (~freeman42@37.228.238.21) has joined
May 29 11:04:13 *	johnvonneumann is now known as Guest10566
May 29 11:04:42 <dminuoso>	crestfallen: The point of excercises is not to have a solution. The point is let you engage yourself with it.
May 29 11:04:49 <dminuoso>	So there's little value in pinching solutions.
May 29 11:05:06 *	bbrodriguez (~Bender_Be@189.207.190.200) has joined
May 29 11:05:42 <xafizoff>	@help
May 29 11:05:42 <lambdabot>	help <command>. Ask for help for <command>. Try 'list' for all commands
May 29 11:05:45 <crestfallen>	word
May 29 11:06:11 <xafizoff>	?src Maybe
May 29 11:06:11 <lambdabot>	data Maybe a = Nothing | Just a
May 29 11:06:30 <xafizoff>	?wiki Maybe
May 29 11:06:30 <lambdabot>	https://wiki.haskell.org/Maybe
May 29 11:06:47 *	xafizoff (364d7724@gateway/web/freenode/ip.54.77.119.36) has left
May 29 11:06:53 *	SenasOzys (~Ozys@194.47.90.42) has joined
May 29 11:07:35 <__monty__>	crestfallen: Debugging solutions is harder than writing them in the first place.
May 29 11:08:27 *	sytherax has quit (Ping timeout: 240 seconds)
May 29 11:08:33 <crestfallen>	I am making progress with type inferring / type unifying. also by studying the evaluation order (writing out by hand) . I'm getting some of the mathy stuff but I don't know if I will get this stuff from a book ..  dminuoso 
May 29 11:08:37 <crestfallen>	word __monty__ 
May 29 11:09:26 <dminuoso>	crestfallen: Well if you effectively skip out on excercises..
May 29 11:10:22 *	oisdk_ (~textual@rle-eecs-mtl-dhcp-19-81.mit.edu) has joined
May 29 11:10:44 <__monty__>	crestfallen: I didn't mean it's harder so you'll learn more, more the opposite. You said you couldn't *dream* of solving the exercises. Then how do you expect to succeed at debugging someone else's solutions? : )
May 29 11:10:59 *	oisdk has quit (Read error: Connection reset by peer)
May 29 11:11:05 *	sinetek__ has quit (Ping timeout: 260 seconds)
May 29 11:11:37 <dminuoso>	crestfallen: Excercises are crucial to learning. It's when you approach a problem that's barely beyond your horizon and force yourself to solve it that you can learn the most.
May 29 11:12:01 *	hellozee has quit (Quit: Leaving)
May 29 11:12:06 <dminuoso>	So when you progress from excercise 1 to 2 and things seem harder, that's because a problem will only engage you if you dont know how to solve it yet.
May 29 11:12:22 <crestfallen>	this is not barely beyond my horizon.
May 29 11:12:55 *	sytherax (~sytherax@27-33-100-182.static.tpgi.com.au) has joined
May 29 11:13:06 <dminuoso>	crestfallen: Like you said, you started skipping out on excercises in chapter 1.
May 29 11:13:12 <dminuoso>	You're staring at some excercises in chapter 9.
May 29 11:13:13 *	amirpro has quit (Quit: amirpro)
May 29 11:13:14 <monochrom>	OK, so backtrack, re-start the previous chapter.
May 29 11:13:15 *	lnostdal has quit (Ping timeout: 256 seconds)
May 29 11:13:27 *	nyberg has quit (Ping timeout: 240 seconds)
May 29 11:13:40 *	amirpro (~amirpro@41.235.0.35) has joined
May 29 11:14:05 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
May 29 11:14:25 *	sytherax has quit (Remote host closed the connection)
May 29 11:14:40 *	lortabac (~lortabac@tpt25-1-88-183-165-187.fbx.proxad.net) has joined
May 29 11:14:41 *	sytherax (~sytherax@27-33-100-182.static.tpgi.com.au) has joined
May 29 11:15:04 *	beefjoe (~beefjoe@unaffiliated/beefjoe) has joined
May 29 11:15:23 *	nyberg (~pi@185-113-99-69.cust.bredband2.com) has joined
May 29 11:16:02 *	seveg has quit (Quit: WeeChat 2.1)
May 29 11:16:06 *	amiri has quit (Quit: leaving)
May 29 11:16:31 *	jfredett (~quassel@2601:189:c600:c2e:b0b5:aa0a:90da:823) has joined
May 29 11:16:32 *	amiri (~amiri@cpe-45-48-101-136.socal.res.rr.com) has joined
May 29 11:16:41 *	canaria (~canaria@49.206.119.53) has joined
May 29 11:17:06 <noan>	So I have a bit of a mental puzzle. It basically works out to this situation.. Obviously the haskell compiler can check to a reasonable degree if a function definition is non-total. But lets say what I want is essentially a total map between an ADT and resultant values, at run time. I can construct this relatively easy as a function, but this means re-evaluation. It's a bit computationally expensive and I was thinking I'd like to use a
May 29 11:17:06 <noan>	Map, but Map wouldn't guarantee at a type level the totality. Is there a map type that enforces totality at construction time, or am I chasing a red herring and being stupid?
May 29 11:17:44 *	amirpro has quit (Client Quit)
May 29 11:18:07 *	amirpro (~amirpro@41.235.0.35) has joined
May 29 11:18:13 <monochrom>	Lazy evaluation learning order: let {studyChapter i = if understand i then done else studyChapter (i-1)} in studyChapter (maximum :: ChapterNumber)
May 29 11:18:18 *	reactormonk (~tass@185.85.220.254) has joined
May 29 11:18:26 *	oish (~charlie@159.22.169.217.in-addr.arpa) has joined
May 29 11:18:51 *	lortabac has quit (Ping timeout: 240 seconds)
May 29 11:19:22 *	oisdk_ has quit (Ping timeout: 268 seconds)
May 29 11:19:29 *	mnoonan has quit (Remote host closed the connection)
May 29 11:19:51 *	mnoonan (~mnoonan@cpe-69-201-46-148.twcny.res.rr.com) has joined
May 29 11:20:15 *	JimmyRcom_ (~JimmyRcom@2607:fb90:1cd4:a2d0:448a:b850:cf3c:8b46) has joined
May 29 11:20:22 <[exa]>	noan: if it's total, I guess there is a finite number of "cases" right?
May 29 11:20:39 <dminuoso>	noan: What do you mean by "reevaluation"
May 29 11:21:22 <crestfallen>	how would a beginning be expected to comprehend the error I got after guessing the operator should be >=    ?    https://lpaste.net/73864881916346368
May 29 11:21:31 *	oisdk (~textual@23.226.128.22.adsl.inet-telecom.org) has joined
May 29 11:22:16 <monochrom>	Gosh, by Chapter 9 you would not call yourself a beginner.
May 29 11:22:31 <[exa]>	crestfallen: this shounds like libc being linked twice to the program
May 29 11:22:36 *	connrs (~connrs@conners.plus.com) has joined
May 29 11:22:48 *	dave24 has quit (Quit: rirc v0.1)
May 29 11:22:53 *	oish has quit (Ping timeout: 256 seconds)
May 29 11:22:58 <crestfallen>	no clue [exa] what that means
May 29 11:23:25 <monochrom>	And this sounds like a stack bug.
May 29 11:23:44 <dminuoso>	[exa]: not the libc, rather the crt1/crti
May 29 11:23:46 *	Saukk has quit (Remote host closed the connection)
May 29 11:23:56 <[exa]>	yeah.
May 29 11:23:57 <monochrom>	Why is stack involved in the first place?
May 29 11:23:59 <dminuoso>	And that's definitely a compiler issue
May 29 11:24:13 <dminuoso>	(because you'd have a really hard time taking control of this)
May 29 11:24:19 <mnoonan>	is that asking ghc to use the final executable as an input to the linker? what is going on there?
May 29 11:24:27 *	Deide (~Deide@90.255.104.193) has joined
May 29 11:24:35 <dminuoso>	monochrom: if you install ghc through stack...
May 29 11:24:41 *	oish (~charlie@5.101.149.9) has joined
May 29 11:24:48 <glguy>	"stack ghc 09.11-exercises" this command doesn't look like a normal way to build a project with stack in the first place
May 29 11:24:57 <monochrom>	Then either "it works out of the box" or it's a stack bug.
May 29 11:25:20 <dminuoso>	Im guessing that 09.11-exercises _somehow_ gets interpreted as flags?
May 29 11:25:21 <glguy>	You probably don't need to involve stack in the first place for just working through exercises. That's a much heavier weight tool
May 29 11:25:28 *	ikitat (~ikitat@dyn-128-104-18-212.doit.wisc.edu) has joined
May 29 11:25:32 *	iAmerikan has quit (Ping timeout: 268 seconds)
May 29 11:25:40 <dminuoso>	But yes, if you rename the file with a .hs suffix and then compile it, it will work "fine", crestfallen.
May 29 11:25:48 <dminuoso>	But boy thats quite surprising
May 29 11:26:15 *	canaria has quit (Remote host closed the connection)
May 29 11:26:46 *	danso has quit (Read error: Connection reset by peer)
May 29 11:27:13 *	connrs has quit (Ping timeout: 248 seconds)
May 29 11:27:13 <mnoonan>	indeed, something weird like that. i have no problem if I do "stack ghc test.hs" and then "stack ghc test", but if I rename test to 09.11-exercises, I get a linker error
May 29 11:27:40 *	danso (~dan@modemcable078.123-81-70.mc.videotron.ca) has joined
May 29 11:27:43 *	Corwinoid (anan@c-73-206-139-111.hsd1.tx.comcast.net) has joined
May 29 11:27:45 <mnoonan>	crestfallen: anyway, the point is you're not compiling the right file (or possibly even have overwritten your input file?)
May 29 11:28:07 <dminuoso>	Ah..
May 29 11:28:11 *	connrs (~connrs@conners.plus.com) has joined
May 29 11:28:18 <dminuoso>	so it seens like for some reason ld is accepting the file as linker input
May 29 11:28:21 *	phreedom has quit (Remote host closed the connection)
May 29 11:28:27 *	refold (~refold@88.98.207.160) has joined
May 29 11:28:53 *	phreedom (~quassel@gateway/tor-sasl/phreedom) has joined
May 29 11:28:56 *	fishythefish (~fishythef@2620:10d:c090:200::7:91c1) has joined
May 29 11:29:08 *	JimmyRcom_ has quit (Quit: Leaving)
May 29 11:29:24 <crestfallen>	ok , trying to follow that. not sure good people. let me work on that and if I may change the subject.. a member told me not to think of "handwriting" two types and unifying them into a single type, but to infer a single type. I'm making some headway and looking at examples online. I enjoy it too. but when there is no constraint inferred by ghci, do you have a unification of types, or what should the terminology be?
May 29 11:29:38 *	baweaver is now known as lemur
May 29 11:29:46 *	reactormonk has quit (Ping timeout: 264 seconds)
May 29 11:29:54 *	lemur is now known as baweaver
May 29 11:30:36 <fishythefish>	sounds like what they're saying is not to think of the result as a new type generated from "adding" the two types you already have
May 29 11:30:45 <fishythefish>	rather, it's a single type which is equal to the two simultaneously
May 29 11:31:47 <crestfallen>	but barring a need for a constraint , there are still other elements that influence your way of going about it, right?
May 29 11:31:55 <tsahyt>	I found bhoogle yesterday and thought it'd be nice to have a GTK version. So here's some shameless self-promotion: https://github.com/tsahyt/hoogle-gtk
May 29 11:32:08 <dminuoso>	crestfallen: Do you have a concrete example to talk about?
May 29 11:32:19 *	tsaka_ has quit (Ping timeout: 268 seconds)
May 29 11:32:26 <fishythefish>	crestfallen: a concrete example would be nice, and would also clarify what you mean by "constraint"
May 29 11:32:28 *	keepLearning512 (~keepLearn@49.207.53.176) has joined
May 29 11:32:30 <mnoonan>	(btw, this seems to be a ghc issue rather than a stack issue. I see the same behavior when invoking ghc directly)
May 29 11:32:30 *	mnoonan has quit (Remote host closed the connection)
May 29 11:32:44 <dminuoso>	And apparently the bug is so extreme, it crashes IRC clients.
May 29 11:32:48 *	canaria (~canaria@49.206.119.53) has joined
May 29 11:32:51 *	mnoonan (~mnoonan@cpe-69-201-46-148.twcny.res.rr.com) has joined
May 29 11:33:05 *	epsilonhalbe (~epsilonha@84-114-240-202.cable.dynamic.surfer.at) has joined
May 29 11:33:06 <crestfallen>	really appreciate it mnoonan ... seriously crashes your client?
May 29 11:33:20 *	cschneid has quit (Ping timeout: 252 seconds)
May 29 11:33:25 *	zdenal (~zdenal@ip-89-103-38-66.net.upcbroadband.cz) has joined
May 29 11:33:38 <dminuoso>	mnoonan: I tried it, and Im getting similar but different issues.
May 29 11:33:41 <dminuoso>	mnoonan: I think its a non-bug.
May 29 11:33:51 *	ian_andrich (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
May 29 11:33:53 *	tg has quit (Ping timeout: 255 seconds)
May 29 11:33:57 <dminuoso>	If the linker is, for whatever obscure reasons, happy to accept it as input - well..
May 29 11:34:03 *	mizu_no__ (~textual@cpe-66-66-222-181.rochester.res.rr.com) has joined
May 29 11:34:10 <crestfallen>	please don't look monochro*m
May 29 11:34:15 <dminuoso>	mnoonan: https://gist.github.com/dminuoso/b0a115fac5987e894f4a2b7dc02fc1d4
May 29 11:34:17 <mnoonan>	crestfallen: similar enough that I'm sure it's the same issue: https://lpaste.net/1321234572788105216
May 29 11:34:47 <dminuoso>	So it's just that the linker receives your haskell file as an object file input
May 29 11:35:05 <dminuoso>	which apparently ld silently accepts.
May 29 11:35:05 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 29 11:35:06 <crestfallen>	@let gg :: (a -> b) -> a -> c -> b; f a c = f a
May 29 11:35:07 *	kaol has quit (Quit: leaving)
May 29 11:35:07 <lambdabot>	 .L.hs:179:1: error:
May 29 11:35:08 <lambdabot>	     The type signature for ‘gg’ lacks an accompanying binding
May 29 11:35:08 <lambdabot>	     |
May 29 11:35:16 *	kaol (~kaol@piperka.net) has joined
May 29 11:35:22 <crestfallen>	@let gg :: (a -> b) -> a -> c -> b; gg f a c = f a
May 29 11:35:24 <lambdabot>	 Defined.
May 29 11:35:42 <crestfallen>	> gg (+) 1 "t" 4
May 29 11:35:44 <lambdabot>	 5
May 29 11:35:52 <crestfallen>	:t gg (+)
May 29 11:35:53 <lambdabot>	Num a => a -> c -> a -> a
May 29 11:36:13 <crestfallen>	so the machine works out the constraint
May 29 11:36:29 *	tsoernes (~torstein@84-52-234.108.3p.ntebredband.no) has joined
May 29 11:36:31 <mnoonan>	dminuoso: yeah, basically the same except I'm on ld.gold
May 29 11:36:34 <fishythefish>	:t 5
May 29 11:36:35 <lambdabot>	Num p => p
May 29 11:36:49 *	keepLearning512 has quit (Ping timeout: 248 seconds)
May 29 11:36:55 <dminuoso>	mnoonan: right, they use GNU ld though
May 29 11:37:03 <fishythefish>	ignoring defaulting right now, the Num constraint is still there
May 29 11:37:04 <dminuoso>	might even be a gcc bug
May 29 11:37:43 *	tsaka_ (~torstein@84-52-234.108.3p.ntebredband.no) has joined
May 29 11:38:04 <crestfallen>	> gg const id 5 "t"
May 29 11:38:06 <lambdabot>	 error:
May 29 11:38:06 <lambdabot>	     • No instance for (Typeable a0)
May 29 11:38:06 <lambdabot>	         arising from a use of ‘show_M274021919512569318324479’
May 29 11:38:23 Usage: MSG <nick> <message>, sends a private message, message "." to send to last nick or prefix with "=" for dcc chat
May 29 11:39:12 >lambdabot<	@let gg :: (a -> b) -> a -> c -> b; gg f a c = f a
May 29 11:39:47 *	cschneid (~cschneid@c-73-78-144-189.hsd1.co.comcast.net) has joined
May 29 11:39:50 <dminuoso>	> gg (+) 1 "t" 4 -- crestfallen
May 29 11:39:51 <crestfallen>	gg (+) 4 "t" 1
May 29 11:39:52 <dmwit>	> gg const id 5 "t" 4
May 29 11:39:53 <lambdabot>	 5
May 29 11:39:55 <lambdabot>	 4
May 29 11:39:55 <dminuoso>	:t gg (+) 1 "t" 4 -- crestfallen
May 29 11:39:57 <lambdabot>	Num a => a
May 29 11:40:04 <crestfallen>	oops 
May 29 11:40:27 *	SenasOzys has quit (Ping timeout: 256 seconds)
May 29 11:40:40 *	emilypi has quit (Ping timeout: 252 seconds)
May 29 11:40:52 *	skeet70 is now known as skeet70_away
May 29 11:41:02 <dminuoso>	mnoonan: so the only question is why does GCC with GNU ld try to link crt1/crtl twice..
May 29 11:41:04 <crestfallen>	> :t gg const id
May 29 11:41:06 <lambdabot>	 <hint>:1:1: error: parse error on input ‘:’
May 29 11:41:12 <crestfallen>	:t gg const id
May 29 11:41:14 <lambdabot>	c -> b -> a -> a
May 29 11:41:31 <dminuoso>	:t const . $ const id
May 29 11:41:32 <lambdabot>	error:
May 29 11:41:32 <lambdabot>	    parse error on input ‘$’
May 29 11:41:32 <lambdabot>	    Perhaps you intended to use TemplateHaskell
May 29 11:41:38 <dminuoso>	:t (const .) $ const id
May 29 11:41:39 <lambdabot>	b1 -> b2 -> a -> a
May 29 11:41:48 <crestfallen>	fishythefish, sorry reading your comments now
May 29 11:41:51 *	zdenal has quit (Ping timeout: 240 seconds)
May 29 11:42:10 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
May 29 11:42:12 <Gurkenglas>	Using the quantum computer simulator QIO, "main = print $ sim $ and <$> replicateM 2 randBit" prints "[(True,0.25),(False,0.25),(False,0.25),(False,0.25)]". Shouldn't equal states be thrown together?
May 29 11:42:15 *	Linter (~linter@2601:2c6:4480:550:35d1:3bda:6b0f:b4ea) has joined
May 29 11:42:22 <dmwit>	"Google for Haskell" -> "hoogle"; "Hoogle UI in Brick" -> "bhoogle". The Haskell community really needs to work on its imagination.
May 29 11:42:27 *	Khisanth has quit (Ping timeout: 260 seconds)
May 29 11:42:28 *	Noldorin (~noldorin@unaffiliated/noldorin) has joined
May 29 11:42:48 <glguy>	himagination
May 29 11:43:56 *	Disconnected ()
**** ENDING LOGGING AT Tue May 29 11:43:56 2018

**** BEGIN LOGGING AT Tue May 29 11:44:25 2018

May 29 11:44:25 *	Now talking on #haskell
May 29 11:44:25 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 29 11:44:25 *	Topic for #haskell set by geekosaur (Thu May 17 06:28:54 2018)
May 29 11:44:25 *	Channel #haskell url: http://www.haskell.org/
May 29 11:44:26 *	camsbury_ (~camsbury@static-96-239-100-245.nycmny.fios.verizon.net) has joined
May 29 11:44:30 *	sgraf812 (~sgraf@i44pc1.info.uni-karlsruhe.de) has joined
May 29 11:44:35 *	pfurla_ (~textual@38.86.167.91) has joined
May 29 11:44:39 *	capisce (srodal@rs5.risingnet.net) has joined
May 29 11:44:51 *	tromp_ (~tromp@ip-217-103-3-94.ip.prioritytelecom.net) has joined
May 29 11:45:11 *	fizbin has quit (Quit: Leaving.)
May 29 11:45:26 <dmwit>	Gurkenglas: "Should" questions are v tricky to answer.
May 29 11:45:29 *	twandy1 (~Thunderbi@cas-fw-sta.inet.casair.net) has joined
May 29 11:45:57 *	tau (rh6K0OR25v@gateway/shell/uberspace.de/x-zbuffamkvnegkuou) has joined
May 29 11:46:05 *	pierrot_ (~pi@vmi95795.contabo.host) has joined
May 29 11:46:13 *	a3f_ (~a3f@irc.a3f.at) has joined
May 29 11:46:20 *	tau is now known as Guest2523
May 29 11:46:22 *	hucksy (~hucksy@p4FF435F6.dip0.t-ipconnect.de) has joined
May 29 11:46:26 *	Digitteknohippie (~user@fsf/member/digit) has joined
May 29 11:46:31 *	sigmundv (~sigmundv@178.62.72.87) has joined
May 29 11:46:37 *	jmnk_ (~jmnk@125.16.97.117) has joined
May 29 11:46:39 <tsahyt>	dmwit: I plead guilty
May 29 11:46:42 *	skeet70_away is now known as skeet70
May 29 11:46:46 <tsahyt>	but at least I didn't name it ghoogle
May 29 11:46:55 *	kmurphy4_ (~kmurphy4@181.93.229.43) has joined
May 29 11:46:59 *	emilypi (~emilypi@63.116.222.225) has joined
May 29 11:47:05 <crucify_me>	anyway that is the sort of exercise I like doing. but fishythefish could you reword this please ? :     ignoring defaulting right now, the Num constraint is still there
May 29 11:47:05 *	grumblr (~grumble@freenode/staff/grumble) has joined
May 29 11:47:28 *	ian_andrich_ (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
May 29 11:47:33 *	chessai_ (~quassel@12.150.97.130) has joined
May 29 11:48:13 *	amirpro has quit (Quit: amirpro)
May 29 11:48:18 *	robstr_ (~rsoeldner@ip1f12f907.dynamic.kabel-deutschland.de) has joined
May 29 11:48:25 *	hiredman_ (~hiredman@volyova.ec2.thelastcitadel.com) has joined
May 29 11:48:33 *	aleator_ (~aleator@ciao.it.jyu.fi) has joined
May 29 11:48:34 *	sword_sm1th (sword_smit@bitcoinfundamentals.org) has joined
May 29 11:48:40 *	amirpro (~amirpro@41.235.0.35) has joined
May 29 11:48:41 *	sektor_ (~sektor@95.87.234.241) has joined
May 29 11:48:42 *	boj_ (~bojo@p1831231-ipbf1807souka.saitama.ocn.ne.jp) has joined
May 29 11:48:51 *	kav_ (~kari@dsl-hkibng42-567330-153.dhcp.inet.fi) has joined
May 29 11:48:53 *	ps-auxw has quit (Disconnected by services)
May 29 11:48:57 *	XMunkki_ (xm@hilla.kapsi.fi) has joined
May 29 11:48:58 *	nnplv_ (~nnplv@141.30.212.5) has joined
May 29 11:49:01 *	raingloo1 (~raingloom@C2267141.catv.pool.telekom.hu) has joined
May 29 11:49:02 *	ps-auxw (~arneb@p5B0FB167.dip0.t-ipconnect.de) has joined
May 29 11:49:03 *	sevcsik2 (~sevcsik@catv-176-63-32-3.catv.broadband.hu) has joined
May 29 11:49:05 *	ByronJohnson has quit (Ping timeout: 240 seconds)
May 29 11:49:09 *	fragamus (~fragamus@201.195-93-216-nokia-dsl.dynamic.surewest.net) has joined
May 29 11:49:17 *	ikitat has quit (Remote host closed the connection)
May 29 11:49:22 *	lnostdal (~lnostdal@77.70.119.51) has joined
May 29 11:49:50 <fragamus>	Hi I need some help with a recursive function in the list monad
May 29 11:49:51 <crucify_me>	sorry how did my nick change
May 29 11:50:08 <fragamus>	f xs = do {return xs;x<-[1,2,3]; if sum (x:xs) < 10 then do {f (x:xs)} else return () }
May 29 11:50:31 *	ikitat (~ikitat@dyn-128-104-18-212.doit.wisc.edu) has joined
May 29 11:50:33 <fragamus>	The part I don’t want is the return in the else clause
May 29 11:50:45 *	hphuoc25 (~hphuoc25@132.147.71.104) has joined
May 29 11:50:46 *	Folkol (~Folkol@h-14-233.A328.priv.bahnhof.se) has joined
May 29 11:50:53 <tsahyt>	what do you want it to do if the sum is >= 10?
May 29 11:51:15 <fragamus>	Not generate that permutation
May 29 11:51:31 -SaslServ-	n_blownapart!~crestfall@96.74.79.25 has just authenticated as you (n_blownapart)
**** BEGIN LOGGING AT Tue May 29 11:51:37 2018

May 29 11:51:37 *	Now talking on #haskell
May 29 11:51:37 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 29 11:51:37 *	Topic for #haskell set by geekosaur (Thu May 17 06:28:54 2018)
May 29 11:51:37 *	n_blownapart (~crestfall@96.74.79.25) has joined
May 29 11:51:37 *	Channel #haskell url: http://www.haskell.org/
May 29 11:51:41 *	halogenandtoast (~mmongeau@132.69.30.125.dy.iij4u.or.jp) has joined
May 29 11:51:41 *	halogenandtoast (~mmongeau@132.69.30.125.dy.iij4u.or.jp) has joined
May 29 11:51:42 <tsahyt>	:t guard
May 29 11:51:42 <tsahyt>	:t guard
May 29 11:51:43 <lambdabot>	Alternative f => Bool -> f ()
May 29 11:51:43 <lambdabot>	Alternative f => Bool -> f ()
May 29 11:51:48 *	hackage ccast 0.1.0.0 - typesafe c-style casts; useful for FFI  http://hackage.haskell.org/package/ccast-0.1.0.0 (chessai)
May 29 11:51:48 *	hackage ccast 0.1.0.0 - typesafe c-style casts; useful for FFI  http://hackage.haskell.org/package/ccast-0.1.0.0 (chessai)
May 29 11:51:57 *	sqrt2_ (~ben@unaffiliated/sqrt2) has joined
May 29 11:51:57 *	sqrt2_ (~ben@unaffiliated/sqrt2) has joined
May 29 11:51:58 *	monochrm (trebla@216.138.220.146) has joined
May 29 11:51:58 *	monochrm (trebla@216.138.220.146) has joined
May 29 11:52:00 *	cetchmoh_ (~ike@thymoeides.stuko.uni-weimar.de) has joined
May 29 11:52:00 *	cetchmoh_ (~ike@thymoeides.stuko.uni-weimar.de) has joined
May 29 11:52:03 <tsahyt>	fragamus: this is probably what you want instead of the if
May 29 11:52:03 <tsahyt>	fragamus: this is probably what you want instead of the if
May 29 11:52:04 *	jdt_ (~jdt@208.85.233.130) has joined
May 29 11:52:04 *	jdt_ (~jdt@208.85.233.130) has joined
May 29 11:52:07 *	le_jonge (jonge@kofferbomber.org) has joined
May 29 11:52:07 *	le_jonge (jonge@kofferbomber.org) has joined
**** ENDING LOGGING AT Tue May 29 11:52:08 2018

**** BEGIN LOGGING AT Tue May 29 11:52:08 2018

**** ENDING LOGGING AT Tue May 29 11:52:08 2018

**** BEGIN LOGGING AT Tue May 29 11:52:08 2018

May 29 11:52:19 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
May 29 11:52:19 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
May 29 11:52:32 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 29 11:52:32 *	beka (~beka@199-241-201-187.PUBLIC.monkeybrains.net) has joined
May 29 11:52:55 <fragamus>	Ok tsahyt thanks
May 29 11:52:55 <fragamus>	Ok tsahyt thanks
May 29 11:52:59 *	crestfallen has quit (*.net *.split)
May 29 11:52:59 *	crestfallen has quit (*.net *.split)
May 29 11:52:59 *	chessai has quit (*.net *.split)
May 29 11:52:59 *	hiptobecubic has quit (*.net *.split)
May 29 11:52:59 *	abhiroop has quit (*.net *.split)
May 29 11:52:59 *	Sonderblade has quit (*.net *.split)
May 29 11:52:59 *	twandy has quit (*.net *.split)
May 29 11:52:59 *	camsbury has quit (*.net *.split)
May 29 11:52:59 *	pfurla has quit (*.net *.split)
May 29 11:52:59 *	_bo has quit (*.net *.split)
May 29 11:52:59 *	kmurphy4 has quit (*.net *.split)
May 29 11:52:59 *	petermw has quit (*.net *.split)
May 29 11:52:59 *	shadowdaemon has quit (*.net *.split)
May 29 11:52:59 *	aleator has quit (*.net *.split)
May 29 11:52:59 *	jeltsch has quit (*.net *.split)
May 29 11:52:59 *	Wuzzy has quit (*.net *.split)
May 29 11:52:59 *	raingloom has quit (*.net *.split)
May 29 11:52:59 *	tromp has quit (*.net *.split)
May 29 11:52:59 *	sektor has quit (*.net *.split)
May 29 11:52:59 *	robstr has quit (*.net *.split)
May 29 11:52:59 *	capisce_ has quit (*.net *.split)
May 29 11:52:59 *	hucksy_ has quit (*.net *.split)
May 29 11:52:59 *	sgraf1337 has quit (*.net *.split)
May 29 11:52:59 *	chessai has quit (*.net *.split)
May 29 11:52:59 *	hiptobecubic has quit (*.net *.split)
May 29 11:52:59 *	abhiroop has quit (*.net *.split)
May 29 11:52:59 *	Sonderblade has quit (*.net *.split)
May 29 11:52:59 *	twandy has quit (*.net *.split)
May 29 11:52:59 *	camsbury has quit (*.net *.split)
May 29 11:52:59 *	pfurla has quit (*.net *.split)
May 29 11:52:59 *	_bo has quit (*.net *.split)
May 29 11:52:59 *	kmurphy4 has quit (*.net *.split)
May 29 11:52:59 *	petermw has quit (*.net *.split)
May 29 11:52:59 *	shadowdaemon has quit (*.net *.split)
May 29 11:52:59 *	aleator has quit (*.net *.split)
May 29 11:52:59 *	jeltsch has quit (*.net *.split)
May 29 11:52:59 *	Wuzzy has quit (*.net *.split)
May 29 11:52:59 *	raingloom has quit (*.net *.split)
May 29 11:52:59 *	tromp has quit (*.net *.split)
May 29 11:52:59 *	sektor has quit (*.net *.split)
May 29 11:52:59 *	robstr has quit (*.net *.split)
May 29 11:52:59 *	capisce_ has quit (*.net *.split)
May 29 11:52:59 *	hucksy_ has quit (*.net *.split)
May 29 11:52:59 *	sgraf1337 has quit (*.net *.split)
May 29 11:52:59 *	Guest80598 has quit (*.net *.split)
May 29 11:52:59 *	infinity0 has quit (*.net *.split)
May 29 11:52:59 *	dolio has quit (*.net *.split)
May 29 11:52:59 *	jmnk has quit (*.net *.split)
May 29 11:52:59 *	cic has quit (*.net *.split)
May 29 11:52:59 *	Digit has quit (*.net *.split)
May 29 11:52:59 *	webstrand has quit (*.net *.split)
May 29 11:52:59 *	monochrom has quit (*.net *.split)
May 29 11:52:59 *	linuxdaemon has quit (*.net *.split)
May 29 11:52:59 *	cetchmoh has quit (*.net *.split)
May 29 11:52:59 *	erikd has quit (*.net *.split)
May 29 11:52:59 *	jdt has quit (*.net *.split)
May 29 11:52:59 *	yazmir8azyr has quit (*.net *.split)
May 29 11:52:59 *	XMunkki has quit (*.net *.split)
May 29 11:52:59 *	boj has quit (*.net *.split)
May 29 11:52:59 *	hiredman has quit (*.net *.split)
May 29 11:52:59 *	jimmyrcom has quit (*.net *.split)
May 29 11:52:59 *	alexbiehl has quit (*.net *.split)
May 29 11:52:59 *	Guest80598 has quit (*.net *.split)
May 29 11:52:59 *	infinity0 has quit (*.net *.split)
May 29 11:52:59 *	dolio has quit (*.net *.split)
May 29 11:52:59 *	jmnk has quit (*.net *.split)
May 29 11:52:59 *	cic has quit (*.net *.split)
May 29 11:52:59 *	Digit has quit (*.net *.split)
May 29 11:52:59 *	webstrand has quit (*.net *.split)
May 29 11:52:59 *	monochrom has quit (*.net *.split)
May 29 11:52:59 *	linuxdaemon has quit (*.net *.split)
May 29 11:52:59 *	cetchmoh has quit (*.net *.split)
May 29 11:52:59 *	erikd has quit (*.net *.split)
May 29 11:52:59 *	jdt has quit (*.net *.split)
May 29 11:52:59 *	yazmir8azyr has quit (*.net *.split)
May 29 11:52:59 *	XMunkki has quit (*.net *.split)
May 29 11:52:59 *	boj has quit (*.net *.split)
May 29 11:52:59 *	hiredman has quit (*.net *.split)
May 29 11:52:59 *	jimmyrcom has quit (*.net *.split)
May 29 11:52:59 *	jchia has quit (*.net *.split)
May 29 11:52:59 *	jcjf has quit (*.net *.split)
May 29 11:52:59 *	mlen has quit (*.net *.split)
May 29 11:52:59 *	jonge has quit (*.net *.split)
May 29 11:52:59 *	revprez_anz has quit (*.net *.split)
May 29 11:52:59 *	Guest42448 has quit (*.net *.split)
May 29 11:52:59 *	grumble has quit (*.net *.split)
May 29 11:52:59 *	sigmundv_ has quit (*.net *.split)
May 29 11:52:59 *	nnplv has quit (*.net *.split)
May 29 11:52:59 *	shoogz has quit (*.net *.split)
May 29 11:52:59 *	wonko77 has quit (*.net *.split)
May 29 11:52:59 *	sqrt2 has quit (*.net *.split)
May 29 11:52:59 *	pierrot has quit (*.net *.split)
May 29 11:52:59 *	sword_smith has quit (*.net *.split)
May 29 11:52:59 *	pacak has quit (*.net *.split)
May 29 11:52:59 *	sevcsik1 has quit (*.net *.split)
May 29 11:52:59 *	tv has quit (*.net *.split)
May 29 11:53:00 *	jchia_ has quit (*.net *.split)
May 29 11:53:00 *	divVerent has quit (*.net *.split)
May 29 11:53:00 *	kav has quit (*.net *.split)
May 29 11:53:00 *	aananev has quit (*.net *.split)
May 29 11:53:00 *	a3f has quit (*.net *.split)
May 29 11:53:00 *	kmurphy4_ is now known as kmurphy4
May 29 11:53:00 *	alexbiehl has quit (*.net *.split)
May 29 11:53:00 *	jchia has quit (*.net *.split)
May 29 11:53:00 *	jcjf has quit (*.net *.split)
May 29 11:53:00 *	mlen has quit (*.net *.split)
May 29 11:53:00 *	jonge has quit (*.net *.split)
May 29 11:53:00 *	revprez_anz has quit (*.net *.split)
May 29 11:53:00 *	Guest42448 has quit (*.net *.split)
May 29 11:53:00 *	grumble has quit (*.net *.split)
May 29 11:53:00 *	sigmundv_ has quit (*.net *.split)
May 29 11:53:00 *	nnplv has quit (*.net *.split)
May 29 11:53:00 *	shoogz has quit (*.net *.split)
May 29 11:53:00 *	wonko77 has quit (*.net *.split)
May 29 11:53:00 *	sqrt2 has quit (*.net *.split)
May 29 11:53:00 *	pierrot has quit (*.net *.split)
May 29 11:53:00 *	sword_smith has quit (*.net *.split)
May 29 11:53:00 *	pacak has quit (*.net *.split)
May 29 11:53:00 *	sevcsik1 has quit (*.net *.split)
May 29 11:53:00 *	tv has quit (*.net *.split)
May 29 11:53:00 *	jchia_ has quit (*.net *.split)
May 29 11:53:00 *	divVerent has quit (*.net *.split)
May 29 11:53:00 *	kav has quit (*.net *.split)
May 29 11:53:00 *	aananev has quit (*.net *.split)
May 29 11:53:00 *	a3f has quit (*.net *.split)
May 29 11:53:00 *	monochrm is now known as monochrom
May 29 11:53:00 *	kmurphy4_ is now known as kmurphy4
May 29 11:53:00 *	monochrm is now known as monochrom
May 29 11:53:00 *	jdt_ is now known as jdt
May 29 11:53:00 *	jdt_ is now known as jdt
May 29 11:53:00 *	twandy1 is now known as twandy
May 29 11:53:00 *	twandy1 is now known as twandy
May 29 11:53:12 *	alexbiehl (alexbiehl@server2.shellfire.net) has joined
May 29 11:53:12 *	alexbiehl (alexbiehl@server2.shellfire.net) has joined
May 29 11:53:13 <tsahyt>	fragamus: also the first return doesn't do anything
May 29 11:53:14 <tsahyt>	fragamus: also the first return doesn't do anything
May 29 11:53:15 *	jcjf_ is now known as jcjf
May 29 11:53:15 *	jcjf_ is now known as jcjf
May 29 11:53:18 *	grumblr is now known as grumble
May 29 11:53:18 *	grumblr is now known as grumble
May 29 11:53:31 <tsahyt>	so there's probably something else wrong
May 29 11:53:31 <tsahyt>	so there's probably something else wrong
May 29 11:53:47 *	shoogz (~shoogz@unaffiliated/shoogz) has joined
May 29 11:53:47 *	shoogz (~shoogz@unaffiliated/shoogz) has joined
May 29 11:53:57 -SaslServ-	crestfallen!~crestfall@96.74.79.25 has just authenticated as you (n_blownapart)
May 29 11:53:57 -SaslServ-	crestfallen!~crestfall@96.74.79.25 has just authenticated as you (n_blownapart)
May 29 11:53:57 *	dolio (~dolio@haskell/developer/dolio) has joined
May 29 11:53:57 *	dolio (~dolio@haskell/developer/dolio) has joined
**** BEGIN LOGGING AT Tue May 29 11:54:02 2018

May 29 11:54:02 *	Now talking on #haskell
May 29 11:54:02 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
May 29 11:54:02 *	Topic for #haskell set by geekosaur (Thu May 17 06:28:54 2018)
May 29 11:54:03 *	Channel #haskell url: http://www.haskell.org/
May 29 11:54:03 *	crestfallen (~crestfall@96.74.79.25) has joined
May 29 11:54:03 *	crestfallen (~crestfall@96.74.79.25) has joined
May 29 11:54:29 *	ixxie_ (~ixxie@88-115-5-96.elisa-laajakaista.fi) has joined
May 29 11:54:29 *	ixxie_ (~ixxie@88-115-5-96.elisa-laajakaista.fi) has joined
May 29 11:54:29 *	ixxie_ (~ixxie@88-115-5-96.elisa-laajakaista.fi) has joined
May 29 11:54:34 <crestfallen>	sorry fishythefish I stepped away and my nick changed
May 29 11:54:34 *	giraffe (skarn@gateway/shell/firrre/x-muldadzsmfmblbqb) has joined
May 29 11:54:34 *	giraffe (skarn@gateway/shell/firrre/x-muldadzsmfmblbqb) has joined
May 29 11:54:34 *	giraffe (skarn@gateway/shell/firrre/x-muldadzsmfmblbqb) has joined
May 29 11:54:35 <crestfallen>	sorry fishythefish I stepped away and my nick changed
May 29 11:54:35 <crestfallen>	sorry fishythefish I stepped away and my nick changed
May 29 11:54:40 *	webstrand (~webstrand@23.94.139.105) has joined
May 29 11:54:40 *	webstrand (~webstrand@23.94.139.105) has joined
May 29 11:54:40 *	webstrand (~webstrand@23.94.139.105) has joined
May 29 11:54:41 *	giraffe is now known as Guest23105
May 29 11:54:41 *	giraffe is now known as Guest23105
May 29 11:54:41 *	giraffe is now known as Guest23105
May 29 11:54:49 *	amirpro has quit (Quit: amirpro)
May 29 11:54:49 *	amirpro has quit (Quit: amirpro)
May 29 11:54:49 *	amirpro has quit (Quit: amirpro)
May 29 11:54:56 <crestfallen>	why would that happen
May 29 11:54:56 <crestfallen>	why would that happen
May 29 11:54:56 <crestfallen>	why would that happen
May 29 11:55:12 *	infinity0 (~infinity0@freenet/developer/infinity0) has joined
May 29 11:55:12 *	infinity0 (~infinity0@freenet/developer/infinity0) has joined
May 29 11:55:12 *	infinity0 (~infinity0@freenet/developer/infinity0) has joined
May 29 11:55:25 *	colescott has quit (Ping timeout: 260 seconds)
May 29 11:55:25 *	colescott has quit (Ping timeout: 260 seconds)
May 29 11:55:25 *	kadoban has quit (Ping timeout: 260 seconds)
May 29 11:55:25 *	colescott has quit (Ping timeout: 260 seconds)
May 29 11:55:25 *	kadoban has quit (Ping timeout: 260 seconds)
May 29 11:55:25 *	kadoban has quit (Ping timeout: 260 seconds)
May 29 11:55:35 <fishythefish>	:t 1 + 1
May 29 11:55:35 <fishythefish>	:t 1 + 1
May 29 11:55:35 <fishythefish>	:t 1 + 1
May 29 11:55:37 <lambdabot>	Num a => a
May 29 11:55:37 <lambdabot>	Num a => a
May 29 11:55:37 <lambdabot>	Num a => a
May 29 11:55:38 *	ByronJohnson (~bairyn@unaffiliated/bob0) has joined
May 29 11:55:38 *	ByronJohnson (~bairyn@unaffiliated/bob0) has joined
May 29 11:55:38 *	ByronJohnson (~bairyn@unaffiliated/bob0) has joined
May 29 11:55:39 <fishythefish>	:t 1 + (1 :: Int)
May 29 11:55:39 <fishythefish>	:t 1 + (1 :: Int)
May 29 11:55:39 <fishythefish>	:t 1 + (1 :: Int)
May 29 11:55:40 <lambdabot>	Int
May 29 11:55:40 <lambdabot>	Int
May 29 11:55:40 <lambdabot>	Int
May 29 11:55:52 *	cschneid has quit (Ping timeout: 260 seconds)
May 29 11:55:52 *	cschneid has quit (Ping timeout: 260 seconds)
May 29 11:55:52 *	cschneid has quit (Ping timeout: 260 seconds)
May 29 11:55:56 *	aananev (~aananev@77.246.159.64) has joined
May 29 11:55:57 *	aananev (~aananev@77.246.159.64) has joined
May 29 11:55:57 *	aananev (~aananev@77.246.159.64) has joined
May 29 11:55:57 *	halogenandtoast has quit (Ping timeout: 240 seconds)
May 29 11:55:57 *	halogenandtoast has quit (Ping timeout: 240 seconds)
May 29 11:55:57 *	halogenandtoast has quit (Ping timeout: 240 seconds)
May 29 11:55:57 *	Mattias has quit (Ping timeout: 240 seconds)
May 29 11:55:57 *	Mattias has quit (Ping timeout: 240 seconds)
May 29 11:55:57 *	Mattias has quit (Ping timeout: 240 seconds)
May 29 11:55:59 *	dpyro has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 29 11:55:59 *	dpyro has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 29 11:55:59 *	dpyro has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 29 11:56:07 <crestfallen>	anyway that is the sort of exercise I like doing. but could you reword this please ? :     ignoring defaulting right now, the Num constraint is still there
May 29 11:56:07 <crestfallen>	anyway that is the sort of exercise I like doing. but could you reword this please ? :     ignoring defaulting right now, the Num constraint is still there
May 29 11:56:07 <crestfallen>	anyway that is the sort of exercise I like doing. but could you reword this please ? :     ignoring defaulting right now, the Num constraint is still there
May 29 11:56:08 *	paidnode (~tom@2a02:c7f:6429:500:8998:250d:2f7c:80bc) has joined
May 29 11:56:08 *	paidnode (~tom@2a02:c7f:6429:500:8998:250d:2f7c:80bc) has joined
May 29 11:56:08 *	paidnode (~tom@2a02:c7f:6429:500:8998:250d:2f7c:80bc) has joined
May 29 11:56:08 <byorgey>	crestfallen: because of a netsplit
May 29 11:56:08 <byorgey>	crestfallen: because of a netsplit
May 29 11:56:08 <byorgey>	crestfallen: because of a netsplit
May 29 11:56:09 *	linuxdaemon (linuxdemon@unaffiliated/linuxdaemon) has joined
May 29 11:56:09 *	linuxdaemon (linuxdemon@unaffiliated/linuxdaemon) has joined
May 29 11:56:09 *	linuxdaemon (linuxdemon@unaffiliated/linuxdaemon) has joined
May 29 11:56:16 *	vlatkoB has quit (Remote host closed the connection)
May 29 11:56:16 *	vlatkoB has quit (Remote host closed the connection)
May 29 11:56:16 *	vlatkoB has quit (Remote host closed the connection)
May 29 11:56:18 *	eelster has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 29 11:56:18 *	eelster has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 29 11:56:18 *	eelster has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
May 29 11:56:27 *	hjdskes has quit (Ping timeout: 240 seconds)
May 29 11:56:27 *	hjdskes has quit (Ping timeout: 240 seconds)
May 29 11:56:27 *	hjdskes has quit (Ping timeout: 240 seconds)
May 29 11:56:36 *	dented42 (~dented42@144.35.80.224) has joined
May 29 11:56:36 *	dented42 (~dented42@144.35.80.224) has joined
May 29 11:56:36 *	dented42 (~dented42@144.35.80.224) has joined
May 29 11:56:37 *	sdemos has quit (Quit: ZNC 1.6.5 - http://znc.in)
May 29 11:56:37 *	sdemos has quit (Quit: ZNC 1.6.5 - http://znc.in)
May 29 11:56:37 *	sdemos has quit (Quit: ZNC 1.6.5 - http://znc.in)
May 29 11:57:02 *	SenasOzys has quit (Ping timeout: 260 seconds)
May 29 11:57:02 *	SenasOzys has quit (Ping timeout: 260 seconds)
May 29 11:57:02 *	SenasOzys has quit (Ping timeout: 260 seconds)
May 29 11:57:21 *	beka has quit (Ping timeout: 264 seconds)
May 29 11:57:22 *	beka has quit (Ping timeout: 264 seconds)
May 29 11:57:22 *	beka has quit (Ping timeout: 264 seconds)
May 29 11:57:31 *	vlatkoB (~IRC_clien@unaffiliated/vlatkob) has joined
May 29 11:57:31 *	vlatkoB (~IRC_clien@unaffiliated/vlatkob) has joined
May 29 11:57:31 *	vlatkoB (~IRC_clien@unaffiliated/vlatkob) has joined
May 29 11:57:38 *	petercommand has quit (Changing host)
May 29 11:57:38 *	petercommand (~peter@unaffiliated/petercommand) has joined
May 29 11:57:38 *	petercommand has quit (Changing host)
May 29 11:57:38 *	petercommand (~peter@unaffiliated/petercommand) has joined
May 29 11:57:38 *	petercommand has quit (Changing host)
May 29 11:57:38 *	petercommand (~peter@unaffiliated/petercommand) has joined
May 29 11:57:45 <fishythefish>	crestfallen: you were talking about a constraint being "worked out" during unification
May 29 11:57:45 <fishythefish>	crestfallen: you were talking about a constraint being "worked out" during unification
May 29 11:57:45 <fishythefish>	crestfallen: you were talking about a constraint being "worked out" during unification
May 29 11:57:56 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 29 11:57:56 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 29 11:57:56 *	hjdskes (~hjdskes@ip-213-127-12-91.ip.prioritytelecom.net) has joined
May 29 11:58:08 *	mizu_no__ has quit (Quit: Computer has gone to sleep.)
May 29 11:58:08 *	mizu_no__ has quit (Quit: Computer has gone to sleep.)
May 29 11:58:08 *	mizu_no__ has quit (Quit: Computer has gone to sleep.)
May 29 11:58:15 <fishythefish>	I'm still not sure whether you specifically mean a typeclass constraint or if you're talking about something more general, but I'm demonstrating that the typeclass constraint can persist
May 29 11:58:15 <fishythefish>	I'm still not sure whether you specifically mean a typeclass constraint or if you're talking about something more general, but I'm demonstrating that the typeclass constraint can persist
May 29 11:58:15 <fishythefish>	I'm still not sure whether you specifically mean a typeclass constraint or if you're talking about something more general, but I'm demonstrating that the typeclass constraint can persist
May 29 11:58:16 *	kadoban (~kadoban@unaffiliated/kadoban) has joined
May 29 11:58:16 *	kadoban (~kadoban@unaffiliated/kadoban) has joined
May 29 11:58:16 *	kadoban (~kadoban@unaffiliated/kadoban) has joined
May 29 11:58:26 *	Mattias (~mattias@unaffiliated/mattias) has joined
May 29 11:58:26 *	Mattias (~mattias@unaffiliated/mattias) has joined
May 29 11:58:26 *	Mattias (~mattias@unaffiliated/mattias) has joined
May 29 11:58:27 *	ixxie has quit (Ping timeout: 240 seconds)
May 29 11:58:27 *	ixxie has quit (Ping timeout: 240 seconds)
May 29 11:58:27 *	ixxie has quit (Ping timeout: 240 seconds)
May 29 11:58:58 *	cschneid (~cschneid@c-73-78-144-189.hsd1.co.comcast.net) has joined
May 29 11:58:58 *	cschneid (~cschneid@c-73-78-144-189.hsd1.co.comcast.net) has joined
May 29 11:58:58 *	cschneid (~cschneid@c-73-78-144-189.hsd1.co.comcast.net) has joined
May 29 11:59:03 *	erikd (~erikd@hendrix.mega-nerd.net) has joined
May 29 11:59:03 *	erikd (~erikd@hendrix.mega-nerd.net) has joined
May 29 11:59:03 *	erikd (~erikd@hendrix.mega-nerd.net) has joined
May 29 11:59:06 <crestfallen>	but before unifying (+) it's polymorphic, so I don't quite see this
May 29 11:59:06 <crestfallen>	but before unifying (+) it's polymorphic, so I don't quite see this
May 29 11:59:06 <crestfallen>	but before unifying (+) it's polymorphic, so I don't quite see this
May 29 11:59:28 <fishythefish>	it's polymorphic after too
May 29 11:59:28 <fishythefish>	it's polymorphic after too
May 29 11:59:28 <fishythefish>	it's polymorphic after too
May 29 11:59:39 *	tg (~x@unaffiliated/tg) has joined
May 29 11:59:39 *	tg (~x@unaffiliated/tg) has joined
May 29 11:59:39 *	tg (~x@unaffiliated/tg) has joined
May 29 11:59:47 *	fragamus has quit (Quit: Colloquy for iPhone - http://colloquy.mobi)
May 29 11:59:47 *	fragamus has quit (Quit: Colloquy for iPhone - http://colloquy.mobi)
May 29 11:59:47 *	fragamus has quit (Quit: Colloquy for iPhone - http://colloquy.mobi)
May 29 11:59:47 *	petermw (~pw410@global-185-15.nat-2.net.cam.ac.uk) has joined
May 29 11:59:47 *	petermw (~pw410@global-185-15.nat-2.net.cam.ac.uk) has joined
May 29 11:59:47 *	petermw (~pw410@global-185-15.nat-2.net.cam.ac.uk) has joined
May 29 11:59:51 *	jimmyrcom (~fold@71-11-240-211.dhcp.dntn.tx.charter.com) has joined
May 29 11:59:51 *	jimmyrcom (~fold@71-11-240-211.dhcp.dntn.tx.charter.com) has joined
May 29 11:59:51 *	jimmyrcom (~fold@71-11-240-211.dhcp.dntn.tx.charter.com) has joined
May 29 12:00:23 *	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined
May 29 12:00:23 *	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined
May 29 12:00:23 *	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined
May 29 12:00:31 <crestfallen>	but the constraint looked at alone is not polymorphic, that's what a constraint is ii understand correctly
May 29 12:00:31 <crestfallen>	but the constraint looked at alone is not polymorphic, that's what a constraint is ii understand correctly
May 29 12:00:31 <crestfallen>	but the constraint looked at alone is not polymorphic, that's what a constraint is ii understand correctly
May 29 12:00:42 *	jchia_ (~jchia@45.32.62.73) has joined
May 29 12:00:42 *	jchia_ (~jchia@45.32.62.73) has joined
May 29 12:00:42 *	jchia_ (~jchia@45.32.62.73) has joined
May 29 12:00:43 *	wonko77 (~wonko7@175.205.24.109.rev.sfr.net) has joined
May 29 12:00:43 *	wonko77 (~wonko7@175.205.24.109.rev.sfr.net) has joined
May 29 12:00:43 *	wonko77 (~wonko7@175.205.24.109.rev.sfr.net) has joined
May 29 12:01:00 *	sytherax has quit (Remote host closed the connection)
May 29 12:01:00 *	sytherax has quit (Remote host closed the connection)
May 29 12:01:00 *	sytherax has quit (Remote host closed the connection)
May 29 12:01:02 *	cic (~cic@c83-252-130-163.bredband.comhem.se) has joined
May 29 12:01:02 *	cic (~cic@c83-252-130-163.bredband.comhem.se) has joined
May 29 12:01:02 *	cic (~cic@c83-252-130-163.bredband.comhem.se) has joined
May 29 12:01:10 *	tv (~tv@37.120.36.64) has joined
May 29 12:01:10 *	tv (~tv@37.120.36.64) has joined
May 29 12:01:10 *	tv has quit (Changing host)
May 29 12:01:10 *	tv (~tv@37.120.36.64) has joined
May 29 12:01:10 *	tv has quit (Changing host)
May 29 12:01:10 *	tv (~tv@unaffiliated/tv) has joined
May 29 12:01:10 *	tv (~tv@unaffiliated/tv) has joined
May 29 12:01:10 *	tv has quit (Changing host)
May 29 12:01:10 *	tv (~tv@unaffiliated/tv) has joined
May 29 12:01:16 *	the_2nd (~the_2nd@2a02:8070:41b9:bf00:e43f:7a11:1a27:3d42) has joined
May 29 12:01:16 *	the_2nd (~the_2nd@2a02:8070:41b9:bf00:e43f:7a11:1a27:3d42) has joined
May 29 12:01:16 *	the_2nd (~the_2nd@2a02:8070:41b9:bf00:e43f:7a11:1a27:3d42) has joined
May 29 12:01:17 *	SenasOzys (~Ozys@194.47.90.42) has joined
May 29 12:01:17 *	SenasOzys (~Ozys@194.47.90.42) has joined
May 29 12:01:17 *	SenasOzys (~Ozys@194.47.90.42) has joined
May 29 12:01:21 *	jchia (~jchia@58.32.35.237) has joined
May 29 12:01:21 *	jchia (~jchia@58.32.35.237) has joined
May 29 12:01:21 *	jchia (~jchia@58.32.35.237) has joined
May 29 12:01:26 *	Wuzzy (~Wuzzy@p549C98F1.dip0.t-ipconnect.de) has joined
May 29 12:01:26 *	Wuzzy (~Wuzzy@p549C98F1.dip0.t-ipconnect.de) has joined
May 29 12:01:26 *	Wuzzy (~Wuzzy@p549C98F1.dip0.t-ipconnect.de) has joined
May 29 12:01:33 *	ikitat has quit (Ping timeout: 264 seconds)
May 29 12:01:33 *	ikitat has quit (Ping timeout: 264 seconds)
May 29 12:01:33 *	ikitat has quit (Ping timeout: 264 seconds)
May 29 12:01:34 *	Khisanth (~Khisanth@pool-108-46-7-243.nycmny.east.verizon.net) has joined
May 29 12:01:34 *	Khisanth (~Khisanth@pool-108-46-7-243.nycmny.east.verizon.net) has joined
May 29 12:01:34 *	Khisanth (~Khisanth@pool-108-46-7-243.nycmny.east.verizon.net) has joined
May 29 12:01:36 <the_2nd>	if I have a functioned defined which is never used, will it end up somewhere in the binary?
May 29 12:01:36 <the_2nd>	if I have a functioned defined which is never used, will it end up somewhere in the binary?
May 29 12:01:36 <the_2nd>	if I have a functioned defined which is never used, will it end up somewhere in the binary?
May 29 12:01:38 *	pacak (~pacak@bb116-14-220-217.singnet.com.sg) has joined
May 29 12:01:38 *	pacak (~pacak@bb116-14-220-217.singnet.com.sg) has joined
May 29 12:01:38 *	pacak (~pacak@bb116-14-220-217.singnet.com.sg) has joined
May 29 12:01:43 <the_2nd>	*function
May 29 12:01:43 <the_2nd>	*function
May 29 12:01:43 <the_2nd>	*function
May 29 12:01:43 <crestfallen>	sorry I don't get your point
May 29 12:01:44 <crestfallen>	sorry I don't get your point
May 29 12:01:44 <crestfallen>	sorry I don't get your point
May 29 12:01:47 <dminuoso>	crestfallen: strictly speaking no
May 29 12:01:47 <dminuoso>	crestfallen: strictly speaking no
May 29 12:01:47 <dminuoso>	crestfallen: strictly speaking no
May 29 12:02:04 <fishythefish>	a constraint alone is not a value, so the question of polymorphism in the usual sense is moot
May 29 12:02:04 <fishythefish>	a constraint alone is not a value, so the question of polymorphism in the usual sense is moot
May 29 12:02:05 <fishythefish>	a constraint alone is not a value, so the question of polymorphism in the usual sense is moot
May 29 12:02:07 <dminuoso>	crestfallen: It's not the context that makes something polymorphic. Think about a context as "reducing" possible choices.
May 29 12:02:07 <dminuoso>	crestfallen: It's not the context that makes something polymorphic. Think about a context as "reducing" possible choices.
May 29 12:02:07 <dminuoso>	crestfallen: It's not the context that makes something polymorphic. Think about a context as "reducing" possible choices.
May 29 12:02:10 *	canaria has quit (Remote host closed the connection)
May 29 12:02:10 *	canaria has quit (Remote host closed the connection)
May 29 12:02:10 *	canaria has quit (Remote host closed the connection)
May 29 12:02:26 <dminuoso>	`Num a => a` is actually short for: `forall a. Num a => a`
May 29 12:02:26 <dminuoso>	`Num a => a` is actually short for: `forall a. Num a => a`
May 29 12:02:26 <dminuoso>	`Num a => a` is actually short for: `forall a. Num a => a`
May 29 12:02:41 *	mlen (~mlen@jay.aquila.re) has joined
May 29 12:02:42 *	mlen (~mlen@jay.aquila.re) has joined
May 29 12:02:42 *	mlen (~mlen@jay.aquila.re) has joined
May 29 12:02:45 *	harindu_ has quit (Remote host closed the connection)
May 29 12:02:45 *	harindu_ has quit (Remote host closed the connection)
May 29 12:02:45 *	harindu_ has quit (Remote host closed the connection)
May 29 12:02:51 <crestfallen>	ok yeah so Num a =>   is describing 2 or 3 possibilities
May 29 12:02:51 <crestfallen>	ok yeah so Num a =>   is describing 2 or 3 possibilities
May 29 12:02:51 <crestfallen>	ok yeah so Num a =>   is describing 2 or 3 possibilities
May 29 12:02:59 <fishythefish>	no
May 29 12:02:59 <fishythefish>	no
May 29 12:02:59 <fishythefish>	no
May 29 12:03:08 *	harindu_ (~harindu@S0106602ad07f63d4.cg.shawcable.net) has joined
May 29 12:03:08 *	harindu_ (~harindu@S0106602ad07f63d4.cg.shawcable.net) has joined
May 29 12:03:08 *	harindu_ (~harindu@S0106602ad07f63d4.cg.shawcable.net) has joined
May 29 12:03:44 <crestfallen>	> gg (+) (4 :: Int) "t" 5
May 29 12:03:44 <crestfallen>	> gg (+) (4 :: Int) "t" 5
May 29 12:03:44 <crestfallen>	> gg (+) (4 :: Int) "t" 5
May 29 12:03:47 <lambdabot>	 9
May 29 12:03:47 <lambdabot>	 9
May 29 12:03:47 <lambdabot>	 9
May 29 12:03:48 <dmwit>	the_2nd: Could do. I've sometimes found `strip` can cut my executable size by a factor of 3 or more.
May 29 12:03:48 <dmwit>	the_2nd: Could do. I've sometimes found `strip` can cut my executable size by a factor of 3 or more.
May 29 12:03:49 <dmwit>	the_2nd: Could do. I've sometimes found `strip` can cut my executable size by a factor of 3 or more.
May 29 12:03:49 *	robstr_ has quit (Quit: WeeChat 1.9.1)
May 29 12:03:49 *	robstr_ has quit (Quit: WeeChat 1.9.1)
May 29 12:03:49 *	robstr_ has quit (Quit: WeeChat 1.9.1)
May 29 12:03:53 <fishythefish>	even with the (Num a) constraint, there are certainly more than 2 or 3 possibilities for what a is, and potentially infinitely many possibilities for a value of a
May 29 12:03:53 <fishythefish>	even with the (Num a) constraint, there are certainly more than 2 or 3 possibilities for what a is, and potentially infinitely many possibilities for a value of a
May 29 12:03:53 <fishythefish>	even with the (Num a) constraint, there are certainly more than 2 or 3 possibilities for what a is, and potentially infinitely many possibilities for a value of a
May 29 12:04:28 <dminuoso>	:t head
May 29 12:04:28 <dminuoso>	:t head
May 29 12:04:28 <dminuoso>	:t head
May 29 12:04:29 <lambdabot>	[a] -> a
May 29 12:04:29 <lambdabot>	[a] -> a
May 29 12:04:29 <lambdabot>	[a] -> a
May 29 12:04:32 *	alicemaz has quit (Quit: WeeChat 1.4)
May 29 12:04:32 *	alicemaz has quit (Quit: WeeChat 1.4)
May 29 12:04:32 *	alicemaz has quit (Quit: WeeChat 1.4)
May 29 12:04:51 <dminuoso>	crestfallen: Consider this example. It's a polymorphic function (because it abstracts over some type named `a`)
May 29 12:04:51 <dminuoso>	crestfallen: Consider this example. It's a polymorphic function (because it abstracts over some type named `a`)
May 29 12:04:51 <dminuoso>	crestfallen: Consider this example. It's a polymorphic function (because it abstracts over some type named `a`)
May 29 12:05:18 <crestfallen>	> gg (+) (4 :: Int) "t" (5 :: Integral)
May 29 12:05:19 <crestfallen>	> gg (+) (4 :: Int) "t" (5 :: Integral)
May 29 12:05:19 <crestfallen>	> gg (+) (4 :: Int) "t" (5 :: Integral)
May 29 12:05:20 *	yazmir8azyr (~yazmir8az@unaffiliated/yazmir8azyr) has joined
May 29 12:05:20 *	yazmir8azyr (~yazmir8az@unaffiliated/yazmir8azyr) has joined
May 29 12:05:20 *	yazmir8azyr (~yazmir8az@unaffiliated/yazmir8azyr) has joined
May 29 12:05:21 <lambdabot>	 error:
May 29 12:05:21 <lambdabot>	 error:
May 29 12:05:21 <lambdabot>	 error:
May 29 12:05:21 <lambdabot>	     • Expecting one more argument to ‘Integral’
May 29 12:05:21 <lambdabot>	       Expected a type, but ‘Integral’ has kind ‘* -> Constraint’
May 29 12:05:21 <lambdabot>	     • Expecting one more argument to ‘Integral’
May 29 12:05:21 <lambdabot>	       Expected a type, but ‘Integral’ has kind ‘* -> Constraint’
May 29 12:05:21 <lambdabot>	     • Expecting one more argument to ‘Integral’
May 29 12:05:21 <lambdabot>	       Expected a type, but ‘Integral’ has kind ‘* -> Constraint’
May 29 12:05:44 <fishythefish>	> gg (+) (4 :: Int) "t" (5 :: Int)
May 29 12:05:44 <fishythefish>	> gg (+) (4 :: Int) "t" (5 :: Int)
May 29 12:05:44 <fishythefish>	> gg (+) (4 :: Int) "t" (5 :: Int)
May 29 12:05:46 <lambdabot>	 9
May 29 12:05:46 <lambdabot>	 9
May 29 12:05:46 <lambdabot>	 9
May 29 12:05:52 <mnoonan>	dmwit: doesn't that only remove symbols and debug information, or are there some magic arguments to strip that I want to know about immediately? :)
May 29 12:05:52 <mnoonan>	dmwit: doesn't that only remove symbols and debug information, or are there some magic arguments to strip that I want to know about immediately? :)
May 29 12:05:52 <mnoonan>	dmwit: doesn't that only remove symbols and debug information, or are there some magic arguments to strip that I want to know about immediately? :)
May 29 12:06:07 <dmwit>	% :t head @Char -- head has no constraint, so this is okay
May 29 12:06:07 <dmwit>	% :t head @Char -- head has no constraint, so this is okay
May 29 12:06:08 <dmwit>	% :t head @Char -- head has no constraint, so this is okay
May 29 12:06:08 <yahb>	dmwit: [Char] -> Char
May 29 12:06:08 <yahb>	dmwit: [Char] -> Char
May 29 12:06:08 <yahb>	dmwit: [Char] -> Char
May 29 12:06:09 *	Corwinoid has quit (Ping timeout: 248 seconds)
May 29 12:06:09 *	Corwinoid has quit (Ping timeout: 248 seconds)
May 29 12:06:09 *	Corwinoid has quit (Ping timeout: 248 seconds)
May 29 12:06:23 <dmwit>	% :t (+) @Char -- (+) has constraints that Char doesn't satisfy, so this is not
May 29 12:06:23 <dmwit>	% :t (+) @Char -- (+) has constraints that Char doesn't satisfy, so this is not
May 29 12:06:23 <dmwit>	% :t (+) @Char -- (+) has constraints that Char doesn't satisfy, so this is not
May 29 12:06:23 <yahb>	dmwit: ; <interactive>:1:1: error: No instance for (Num Char) arising from a use of `+'
May 29 12:06:23 <yahb>	dmwit: ; <interactive>:1:1: error: No instance for (Num Char) arising from a use of `+'
May 29 12:06:23 <yahb>	dmwit: ; <interactive>:1:1: error: No instance for (Num Char) arising from a use of `+'
May 29 12:06:34 <crestfallen>	dminuoso, that I do see
May 29 12:06:34 <crestfallen>	dminuoso, that I do see
May 29 12:06:34 <crestfallen>	dminuoso, that I do see
May 29 12:06:38 <dminuoso>	crestfallen: the user of `head` can freely choose what `a` is going to. You can pick _any_ type whatsoever
May 29 12:06:39 <dminuoso>	crestfallen: the user of `head` can freely choose what `a` is going to. You can pick _any_ type whatsoever
May 29 12:06:39 <dminuoso>	crestfallen: the user of `head` can freely choose what `a` is going to. You can pick _any_ type whatsoever
May 29 12:06:45 <dminuoso>	With no constraints.
May 29 12:06:45 <dminuoso>	With no constraints.
May 29 12:06:45 <dminuoso>	With no constraints.
May 29 12:06:51 <crestfallen>	copy that
May 29 12:06:51 <crestfallen>	copy that
May 29 12:06:51 <crestfallen>	copy that
May 29 12:06:55 <dmwit>	mnoonan: Dunno. `strip` is a black box to me, and I haven't been passing it any special arguments as far as I know, unless Fedora chooses some unusual defaults or something.
May 29 12:06:55 <dmwit>	mnoonan: Dunno. `strip` is a black box to me, and I haven't been passing it any special arguments as far as I know, unless Fedora chooses some unusual defaults or something.
May 29 12:06:55 <dmwit>	mnoonan: Dunno. `strip` is a black box to me, and I haven't been passing it any special arguments as far as I know, unless Fedora chooses some unusual defaults or something.
May 29 12:07:06 <dminuoso>	:t maximum
May 29 12:07:06 <dminuoso>	:t maximum
May 29 12:07:06 <dminuoso>	:t maximum
May 29 12:07:07 <lambdabot>	(Ord a, Foldable t) => t a -> a
May 29 12:07:07 <lambdabot>	(Ord a, Foldable t) => t a -> a
May 29 12:07:07 <lambdabot>	(Ord a, Foldable t) => t a -> a
May 29 12:07:08 *	conal (~conal@c-76-22-39-250.hsd1.wa.comcast.net) has joined
May 29 12:07:08 *	conal (~conal@c-76-22-39-250.hsd1.wa.comcast.net) has joined
May 29 12:07:08 *	conal (~conal@c-76-22-39-250.hsd1.wa.comcast.net) has joined
May 29 12:07:14 <crestfallen>	but I'm not clear about Num a => a having infinite possibilities
May 29 12:07:14 <crestfallen>	but I'm not clear about Num a => a having infinite possibilities
May 29 12:07:14 <crestfallen>	but I'm not clear about Num a => a having infinite possibilities
May 29 12:07:15 *	amirpro (~amirpro@41.235.0.35) has joined
May 29 12:07:15 *	amirpro (~amirpro@41.235.0.35) has joined
May 29 12:07:15 *	amirpro (~amirpro@41.235.0.35) has joined
May 29 12:07:33 <dminuoso>	:t GHC.OldList.maximum
May 29 12:07:33 <dminuoso>	:t GHC.OldList.maximum
May 29 12:07:33 <dminuoso>	:t GHC.OldList.maximum
May 29 12:07:35 <lambdabot>	Ord a => [a] -> a
May 29 12:07:35 <lambdabot>	Ord a => [a] -> a
May 29 12:07:35 <lambdabot>	Ord a => [a] -> a
May 29 12:07:35 *	DSM has quit (Ping timeout: 265 seconds)
May 29 12:07:35 *	DSM has quit (Ping timeout: 265 seconds)
May 29 12:07:35 *	DSM has quit (Ping timeout: 265 seconds)
May 29 12:07:40 <geekosaur>	Num is something *we* attach meaning to. ghc has no clue about such
May 29 12:07:40 <geekosaur>	Num is something *we* attach meaning to. ghc has no clue about such
May 29 12:07:40 <geekosaur>	Num is something *we* attach meaning to. ghc has no clue about such
May 29 12:07:50 <geekosaur>	it's not like it has a built-in notion of "number"
May 29 12:07:50 <geekosaur>	it's not like it has a built-in notion of "number"
May 29 12:07:50 <geekosaur>	it's not like it has a built-in notion of "number"
May 29 12:07:55 <dminuoso>	crestfallen: Consider this now. The consumer of maximum can still pick `a` but you no longer have the complete freedom of any type.
May 29 12:07:55 <dminuoso>	crestfallen: Consider this now. The consumer of maximum can still pick `a` but you no longer have the complete freedom of any type.
May 29 12:07:55 <dminuoso>	crestfallen: Consider this now. The consumer of maximum can still pick `a` but you no longer have the complete freedom of any type.
May 29 12:08:10 <dminuoso>	That is, your choice for a has been limited to any type that has an instance Ord.
May 29 12:08:10 <dminuoso>	That is, your choice for a has been limited to any type that has an instance Ord.
May 29 12:08:10 <dminuoso>	That is, your choice for a has been limited to any type that has an instance Ord.
May 29 12:08:27 *	ixxie_ has quit (Ping timeout: 240 seconds)
May 29 12:08:27 *	ixxie_ has quit (Ping timeout: 240 seconds)
May 29 12:08:27 *	ixxie_ has quit (Ping timeout: 240 seconds)
May 29 12:08:42 *	rzp has quit (Ping timeout: 260 seconds)
May 29 12:08:42 *	rzp has quit (Ping timeout: 260 seconds)
May 29 12:08:42 *	rzp has quit (Ping timeout: 260 seconds)
May 29 12:08:47 <crestfallen>	copy that but not what geekosaur posted :/
May 29 12:08:47 <crestfallen>	copy that but not what geekosaur posted :/
May 29 12:08:47 <crestfallen>	copy that but not what geekosaur posted :/
May 29 12:08:58 <geekosaur>	[29 19:07:14] <crestfallen> but I'm not clear about Num a => a having infinite possibilities
May 29 12:08:58 <geekosaur>	[29 19:07:14] <crestfallen> but I'm not clear about Num a => a having infinite possibilities
May 29 12:08:58 <geekosaur>	[29 19:07:14] <crestfallen> but I'm not clear about Num a => a having infinite possibilities
May 29 12:09:06 *	canaria (~canaria@49.206.119.53) has joined
May 29 12:09:06 *	canaria (~canaria@49.206.119.53) has joined
May 29 12:09:06 *	canaria (~canaria@49.206.119.53) has joined
May 29 12:09:09 <mnoonan>	dmwit: ah, I see. afaik it can only remove symbols and debug info, but I also know those can be surprisingly large.
May 29 12:09:09 <mnoonan>	dmwit: ah, I see. afaik it can only remove symbols and debug info, but I also know those can be surprisingly large.
May 29 12:09:09 <mnoonan>	dmwit: ah, I see. afaik it can only remove symbols and debug info, but I also know those can be surprisingly large.
May 29 12:09:16 <crestfallen>	sorry did I misquote member there?
May 29 12:09:16 <crestfallen>	sorry did I misquote member there?
May 29 12:09:16 <crestfallen>	sorry did I misquote member there?
May 29 12:09:21 <geekosaur>	ghc doesn't get to say "there's a specific idea that pins this down". it has to assume anything could potentially be "a"
May 29 12:09:21 <geekosaur>	ghc doesn't get to say "there's a specific idea that pins this down". it has to assume anything could potentially be "a"
May 29 12:09:21 <geekosaur>	ghc doesn't get to say "there's a specific idea that pins this down". it has to assume anything could potentially be "a"
May 29 12:09:27 <fishythefish>	crestfallen: what do you think the possibilities for Num a => a are?
May 29 12:09:27 <fishythefish>	crestfallen: what do you think the possibilities for Num a => a are?
May 29 12:09:27 <fishythefish>	crestfallen: what do you think the possibilities for Num a => a are?
May 29 12:09:31 *	amirpro has quit (Client Quit)
May 29 12:09:31 *	amirpro has quit (Client Quit)
May 29 12:09:31 *	amirpro has quit (Client Quit)
May 29 12:09:51 *	twandy has quit (Ping timeout: 240 seconds)
May 29 12:09:51 *	twandy has quit (Ping timeout: 240 seconds)
May 29 12:09:51 *	twandy has quit (Ping timeout: 240 seconds)
May 29 12:09:55 *	amirpro (~amirpro@41.235.0.35) has joined
May 29 12:09:55 *	amirpro (~amirpro@41.235.0.35) has joined
May 29 12:09:55 *	amirpro (~amirpro@41.235.0.35) has joined
May 29 12:10:13 <crestfallen>	in terms of types, not actual numbers like 6776 right?
May 29 12:10:13 <crestfallen>	in terms of types, not actual numbers like 6776 right?
May 29 12:10:13 <crestfallen>	in terms of types, not actual numbers like 6776 right?
May 29 12:10:20 *	reactormonk (~tass@p54B96F96.dip0.t-ipconnect.de) has joined
May 29 12:10:20 *	reactormonk (~tass@p54B96F96.dip0.t-ipconnect.de) has joined
May 29 12:10:20 *	reactormonk (~tass@p54B96F96.dip0.t-ipconnect.de) has joined
May 29 12:10:24 <fishythefish>	tbh, I don't know, it's your terminology
May 29 12:10:24 <fishythefish>	tbh, I don't know, it's your terminology
May 29 12:10:24 <fishythefish>	tbh, I don't know, it's your terminology
May 29 12:10:28 <fishythefish>	I'm trying to figure that out
May 29 12:10:28 <fishythefish>	I'm trying to figure that out
May 29 12:10:28 <fishythefish>	I'm trying to figure that out
May 29 12:11:17 *	dolio has quit (Read error: Connection reset by peer)
May 29 12:11:17 *	dolio has quit (Read error: Connection reset by peer)
May 29 12:11:17 *	dolio has quit (Read error: Connection reset by peer)
May 29 12:11:22 <crestfallen>	ghc sees the (+) operator and I thought there would only be a handful of possible types, like < 10
May 29 12:11:22 <crestfallen>	ghc sees the (+) operator and I thought there would only be a handful of possible types, like < 10
May 29 12:11:22 <crestfallen>	ghc sees the (+) operator and I thought there would only be a handful of possible types, like < 10
May 29 12:11:35 <fishythefish>	no, the type could be anything which has a Num instance
May 29 12:11:35 <fishythefish>	no, the type could be anything which has a Num instance
May 29 12:11:35 <fishythefish>	no, the type could be anything which has a Num instance
May 29 12:11:35 *	conal has quit (Ping timeout: 240 seconds)
May 29 12:11:35 *	conal has quit (Ping timeout: 240 seconds)
May 29 12:11:35 *	conal has quit (Ping timeout: 240 seconds)
May 29 12:11:38 <dminuoso>	crestfallen: In order to do type unification well you have to juggle a few concepts. Ideally you need know where universal quantifications exist and when to use fresh type variables. I think you're overreaching your capabilities for now.
May 29 12:11:38 <dminuoso>	crestfallen: In order to do type unification well you have to juggle a few concepts. Ideally you need know where universal quantifications exist and when to use fresh type variables. I think you're overreaching your capabilities for now.
May 29 12:11:38 <dminuoso>	crestfallen: In order to do type unification well you have to juggle a few concepts. Ideally you need know where universal quantifications exist and when to use fresh type variables. I think you're overreaching your capabilities for now.
May 29 12:11:38 *	Corwinoid (anan@c-73-206-139-111.hsd1.tx.comcast.net) has joined
May 29 12:11:38 *	Corwinoid (anan@c-73-206-139-111.hsd1.tx.comcast.net) has joined
May 29 12:11:38 *	Corwinoid (anan@c-73-206-139-111.hsd1.tx.comcast.net) has joined
May 29 12:11:50 <fishythefish>	this depends on what modules you have loaded
May 29 12:11:50 <fishythefish>	this depends on what modules you have loaded
May 29 12:11:50 <fishythefish>	this depends on what modules you have loaded
May 29 12:12:07 <geekosaur>	crestfallen, (a) open world assumption. Anyone can add a new instance *at any time* including months or years after you compiled the code
May 29 12:12:07 <geekosaur>	crestfallen, (a) open world assumption. Anyone can add a new instance *at any time* including months or years after you compiled the code
May 29 12:12:07 <geekosaur>	crestfallen, (a) open world assumption. Anyone can add a new instance *at any time* including months or years after you compiled the code
May 29 12:12:21 <geekosaur>	then they link to the library that has that and it has to be able to deal
May 29 12:12:21 <geekosaur>	then they link to the library that has that and it has to be able to deal
May 29 12:12:21 <geekosaur>	then they link to the library that has that and it has to be able to deal
May 29 12:12:25 <fishythefish>	ghc doesn't see the (+) operator as special and recognize a special list of types
May 29 12:12:25 <fishythefish>	ghc doesn't see the (+) operator as special and recognize a special list of types
May 29 12:12:25 <fishythefish>	ghc doesn't see the (+) operator as special and recognize a special list of types
May 29 12:12:28 *	dolio (~dolio@haskell/developer/dolio) has joined
May 29 12:12:28 *	dolio (~dolio@haskell/developer/dolio) has joined
May 29 12:12:28 *	dolio (~dolio@haskell/developer/dolio) has joined
May 29 12:12:45 <crestfallen>	weird I was completely on the wrong track
May 29 12:12:45 <crestfallen>	weird I was completely on the wrong track
May 29 12:12:45 <crestfallen>	weird I was completely on the wrong track
May 29 12:12:52 <geekosaur>	(b) ghc still cannot know that "Num a" means something special. it means something to *people*. it's exactly the same as "Flublyxk a => a" to ghc
May 29 12:12:52 <geekosaur>	(b) ghc still cannot know that "Num a" means something special. it means something to *people*. it's exactly the same as "Flublyxk a => a" to ghc
May 29 12:12:52 <geekosaur>	(b) ghc still cannot know that "Num a" means something special. it means something to *people*. it's exactly the same as "Flublyxk a => a" to ghc
May 29 12:13:07 *	dminuoso names his next typeclass Flublyxk
May 29 12:13:07 *	dminuoso names his next typeclass Flublyxk
May 29 12:13:07 *	dminuoso names his next typeclass Flublyxk
May 29 12:13:16 <exarkun>	pls no
May 29 12:13:16 <exarkun>	pls no
May 29 12:13:17 <exarkun>	pls no
May 29 12:13:28 *	the_2nd has quit (Quit: Leaving)
May 29 12:13:28 *	the_2nd has quit (Quit: Leaving)
May 29 12:13:28 *	the_2nd has quit (Quit: Leaving)
May 29 12:13:53 <dmwit>	I write `instance Num a => Num (ZipList a)`. Now there are infinitely many `Num` instances.
May 29 12:13:53 <dmwit>	I write `instance Num a => Num (ZipList a)`. Now there are infinitely many `Num` instances.
May 29 12:13:53 <dmwit>	I write `instance Num a => Num (ZipList a)`. Now there are infinitely many `Num` instances.
May 29 12:14:00 <crestfallen>	well, the book certainly hasn't covered this.
May 29 12:14:01 <crestfallen>	well, the book certainly hasn't covered this.
May 29 12:14:01 <crestfallen>	well, the book certainly hasn't covered this.
May 29 12:14:04 *	al-damiri (uid142631@gateway/web/irccloud.com/x-rovqzzytpiymstqp) has joined
May 29 12:14:04 *	al-damiri (uid142631@gateway/web/irccloud.com/x-rovqzzytpiymstqp) has joined
May 29 12:14:04 *	al-damiri (uid142631@gateway/web/irccloud.com/x-rovqzzytpiymstqp) has joined
May 29 12:14:07 <dminuoso>	exarkun: It cant be worse than zonking
May 29 12:14:07 <dminuoso>	exarkun: It cant be worse than zonking
May 29 12:14:07 <dminuoso>	exarkun: It cant be worse than zonking
May 29 12:14:21 <mnoonan>	crestfallen, what book are you using?
May 29 12:14:21 <mnoonan>	crestfallen, what book are you using?
May 29 12:14:21 <mnoonan>	crestfallen, what book are you using?
May 29 12:14:27 *	thegreatpink[m] (thegreatpi@gateway/shell/matrix.org/x-uzwuokupuopcglzm) has left ("User left")
May 29 12:14:27 *	thegreatpink[m] (thegreatpi@gateway/shell/matrix.org/x-uzwuokupuopcglzm) has left ("User left")
May 29 12:14:27 *	thegreatpink[m] (thegreatpi@gateway/shell/matrix.org/x-uzwuokupuopcglzm) has left ("User left")
May 29 12:14:30 <dmwit>	At least zonking has a whopping long comment explaining what it is and why it's needed.
May 29 12:14:30 <dmwit>	At least zonking has a whopping long comment explaining what it is and why it's needed.
May 29 12:14:30 <dmwit>	At least zonking has a whopping long comment explaining what it is and why it's needed.
May 29 12:14:32 *	mquin has quit (Ping timeout: 615 seconds)
May 29 12:14:32 *	mquin has quit (Ping timeout: 615 seconds)
May 29 12:14:32 *	mquin has quit (Ping timeout: 615 seconds)
May 29 12:14:36 <fishythefish>	I'm kinda skeptical that the book you're following has you doing type unification by hand
May 29 12:14:36 <fishythefish>	I'm kinda skeptical that the book you're following has you doing type unification by hand
May 29 12:14:36 <fishythefish>	I'm kinda skeptical that the book you're following has you doing type unification by hand
May 29 12:15:04 <crestfallen>	hutton 2nd edition. I'm sure its a great book, it's very sparse though, and the examples are huge
May 29 12:15:04 <crestfallen>	hutton 2nd edition. I'm sure its a great book, it's very sparse though, and the examples are huge
May 29 12:15:04 <crestfallen>	hutton 2nd edition. I'm sure its a great book, it's very sparse though, and the examples are huge
May 29 12:15:05 *	Linter has quit (Ping timeout: 276 seconds)
May 29 12:15:05 *	Linter has quit (Ping timeout: 276 seconds)
May 29 12:15:05 *	Linter has quit (Ping timeout: 276 seconds)
May 29 12:15:06 *	twandy (~Thunderbi@cas-fw-sta.inet.casair.net) has joined
May 29 12:15:06 *	twandy (~Thunderbi@cas-fw-sta.inet.casair.net) has joined
May 29 12:15:06 *	twandy (~Thunderbi@cas-fw-sta.inet.casair.net) has joined
May 29 12:15:09 *	conal (~conal@38.132.115.186) has joined
May 29 12:15:09 *	conal (~conal@38.132.115.186) has joined
May 29 12:15:09 *	conal (~conal@38.132.115.186) has joined
May 29 12:15:44 <crestfallen>	its just something I thought I was getting. A guy has to have a angle :)
May 29 12:15:44 <crestfallen>	its just something I thought I was getting. A guy has to have a angle :)
May 29 12:15:44 <crestfallen>	its just something I thought I was getting. A guy has to have a angle :)
May 29 12:15:47 <dminuoso>	And yet you pinch solutions to your examples...
May 29 12:15:47 <dminuoso>	And yet you pinch solutions to your examples...
May 29 12:15:47 <dminuoso>	And yet you pinch solutions to your examples...
May 29 12:15:57 <mnoonan>	fishythefish: as long as there are folks writing "zipWith id" out there, it might not hurt to do some hand-unifying :)
May 29 12:15:57 <mnoonan>	fishythefish: as long as there are folks writing "zipWith id" out there, it might not hurt to do some hand-unifying :)
May 29 12:15:57 <mnoonan>	fishythefish: as long as there are folks writing "zipWith id" out there, it might not hurt to do some hand-unifying :)
May 29 12:16:00 <dminuoso>	The whole discussion is a bit confusing.
May 29 12:16:00 <dminuoso>	The whole discussion is a bit confusing.
May 29 12:16:00 <dminuoso>	The whole discussion is a bit confusing.
May 29 12:16:12 <crestfallen>	wtf should I do then
May 29 12:16:12 <crestfallen>	wtf should I do then
May 29 12:16:12 <crestfallen>	wtf should I do then
May 29 12:16:30 <dminuoso>	Solve excercises perhaps?
May 29 12:16:30 <dminuoso>	Solve excercises perhaps?
May 29 12:16:30 <dminuoso>	Solve excercises perhaps?
May 29 12:16:49 <fishythefish>	mnoonan: certainly, I'm just commenting that progressing up to point X in book Y doesn't say anything about whether you're ready to grok type unification
May 29 12:16:49 <fishythefish>	mnoonan: certainly, I'm just commenting that progressing up to point X in book Y doesn't say anything about whether you're ready to grok type unification
May 29 12:16:49 <fishythefish>	mnoonan: certainly, I'm just commenting that progressing up to point X in book Y doesn't say anything about whether you're ready to grok type unification
May 29 12:16:59 *	portnov has quit (Remote host closed the connection)
May 29 12:16:59 *	portnov has quit (Remote host closed the connection)
May 29 12:16:59 *	portnov has quit (Remote host closed the connection)
May 29 12:17:10 *	cschneid has quit (Ping timeout: 256 seconds)
May 29 12:17:10 *	cschneid has quit (Ping timeout: 256 seconds)
May 29 12:17:10 *	cschneid has quit (Ping timeout: 256 seconds)
May 29 12:17:11 <mnoonan>	fair point
May 29 12:17:11 <mnoonan>	fair point
May 29 12:17:11 <mnoonan>	fair point
May 29 12:17:15 <crestfallen>	word
May 29 12:17:15 <crestfallen>	word
May 29 12:17:15 <crestfallen>	word
May 29 12:17:25 <crestfallen>	its way more complicated than I thought
May 29 12:17:25 <mnoonan>	crestfallen: so typeclasses are covered in ch 3 according to the toc
May 29 12:17:25 <mnoonan>	crestfallen: so typeclasses are covered in ch 3 according to the toc
May 29 12:17:25 <mnoonan>	crestfallen: so typeclasses are covered in ch 3 according to the toc
May 29 12:17:26 <crestfallen>	its way more complicated than I thought
May 29 12:17:26 <crestfallen>	its way more complicated than I thought
May 29 12:17:40 <fishythefish>	fwiw, this isn't the first conversation we've had with crestfallen about type unification and each time the fundamentals seem to be lacking
May 29 12:17:40 <fishythefish>	fwiw, this isn't the first conversation we've had with crestfallen about type unification and each time the fundamentals seem to be lacking
May 29 12:17:40 <fishythefish>	fwiw, this isn't the first conversation we've had with crestfallen about type unification and each time the fundamentals seem to be lacking
May 29 12:17:43 <mnoonan>	you're going to keep having a bad time if you don't put in labor on the fundamentals
May 29 12:17:43 <mnoonan>	you're going to keep having a bad time if you don't put in labor on the fundamentals
May 29 12:17:43 <mnoonan>	you're going to keep having a bad time if you don't put in labor on the fundamentals
May 29 12:17:44 <fishythefish>	so I agree with dminuoso here
May 29 12:17:44 <fishythefish>	so I agree with dminuoso here
May 29 12:17:44 <fishythefish>	so I agree with dminuoso here
May 29 12:17:44 <dminuoso>	crestfallen: Its not that complicated, but I think you are just lacking too much foundation for now.
May 29 12:17:44 <dminuoso>	crestfallen: Its not that complicated, but I think you are just lacking too much foundation for now.
May 29 12:17:45 <dminuoso>	crestfallen: Its not that complicated, but I think you are just lacking too much foundation for now.
May 29 12:18:14 *	pio_ has quit (Quit: pio_)
May 29 12:18:14 *	pio_ has quit (Quit: pio_)
May 29 12:18:14 *	pio_ has quit (Quit: pio_)
May 29 12:18:23 <crestfallen>	<< aka crucify_me
May 29 12:18:23 <crestfallen>	<< aka crucify_me
May 29 12:18:23 <crestfallen>	<< aka crucify_me
May 29 12:18:29 *	asheshambasta has quit (Quit: Leaving.)
May 29 12:18:29 *	asheshambasta has quit (Quit: Leaving.)
May 29 12:18:29 *	asheshambasta has quit (Quit: Leaving.)
May 29 12:19:03 <crestfallen>	one moment pls
May 29 12:19:03 <crestfallen>	one moment pls
May 29 12:19:03 <crestfallen>	one moment pls
May 29 12:19:42 *	dolio has quit (Read error: Connection reset by peer)
May 29 12:19:42 *	dolio has quit (Read error: Connection reset by peer)
May 29 12:19:42 *	dolio has quit (Read error: Connection reset by peer)
May 29 12:20:56 <geekosaur>	the problem with "lacking too much foundation" is they've been doing this for some 3 years now
May 29 12:20:56 <geekosaur>	the problem with "lacking too much foundation" is they've been doing this for some 3 years now
May 29 12:20:56 <geekosaur>	the problem with "lacking too much foundation" is they've been doing this for some 3 years now
May 29 12:20:56 *	nickolay_ has quit (Ping timeout: 276 seconds)
May 29 12:20:56 *	nickolay_ has quit (Ping timeout: 276 seconds)
May 29 12:20:56 *	nickolay_ has quit (Ping timeout: 276 seconds)
May 29 12:20:58 *	zdenal (~zdenal@ip-89-103-38-66.net.upcbroadband.cz) has joined
May 29 12:20:58 *	zdenal (~zdenal@ip-89-103-38-66.net.upcbroadband.cz) has joined
May 29 12:20:58 *	zdenal (~zdenal@ip-89-103-38-66.net.upcbroadband.cz) has joined
May 29 12:21:00 *	dolio (~dolio@haskell/developer/dolio) has joined
May 29 12:21:00 *	dolio (~dolio@haskell/developer/dolio) has joined
May 29 12:21:00 *	dolio (~dolio@haskell/developer/dolio) has joined
May 29 12:21:14 <geekosaur>	some aspect of the foundation isn't making it through
May 29 12:21:14 <geekosaur>	some aspect of the foundation isn't making it through
May 29 12:21:14 <geekosaur>	some aspect of the foundation isn't making it through
May 29 12:21:14 *	keepLearning512 (~keepLearn@49.207.53.176) has joined
May 29 12:21:14 *	keepLearning512 (~keepLearn@49.207.53.176) has joined
May 29 12:21:14 *	keepLearning512 (~keepLearn@49.207.53.176) has joined
May 29 12:21:39 <fishythefish>	 /shrug in many cases, floundering for 3 years won't get you as far as following a more rigorous process for 3 months
May 29 12:21:39 <fishythefish>	 /shrug in many cases, floundering for 3 years won't get you as far as following a more rigorous process for 3 months
May 29 12:21:40 <fishythefish>	 /shrug in many cases, floundering for 3 years won't get you as far as following a more rigorous process for 3 months
May 29 12:21:43 *	xaxaac (~xaxaac@66.62.151.221) has joined
May 29 12:21:43 *	xaxaac (~xaxaac@66.62.151.221) has joined
May 29 12:21:43 *	xaxaac (~xaxaac@66.62.151.221) has joined
May 29 12:21:54 *	karlguy (~karlguy@ool-4a5a3082.dyn.optonline.net) has joined
May 29 12:21:54 *	karlguy (~karlguy@ool-4a5a3082.dyn.optonline.net) has joined
May 29 12:21:54 *	karlguy (~karlguy@ool-4a5a3082.dyn.optonline.net) has joined
May 29 12:21:55 *	rzp (~christoph@dslb-088-073-077-029.088.073.pools.vodafone-ip.de) has joined
May 29 12:21:55 *	rzp (~christoph@dslb-088-073-077-029.088.073.pools.vodafone-ip.de) has joined
May 29 12:21:55 *	rzp (~christoph@dslb-088-073-077-029.088.073.pools.vodafone-ip.de) has joined
May 29 12:22:29 <crestfallen>	3 years ?
May 29 12:22:29 <crestfallen>	3 years ?
May 29 12:22:29 <crestfallen>	3 years ?
May 29 12:22:38 *	epsilonhalbe (~epsilonha@84-114-240-202.cable.dynamic.surfer.at) has left
May 29 12:22:38 *	epsilonhalbe (~epsilonha@84-114-240-202.cable.dynamic.surfer.at) has left
May 29 12:22:38 *	epsilonhalbe (~epsilonha@84-114-240-202.cable.dynamic.surfer.at) has left
May 29 12:22:54 *	dddddd (~dddddd@unaffiliated/dddddd) has joined
May 29 12:22:54 *	dddddd (~dddddd@unaffiliated/dddddd) has joined
May 29 12:22:54 *	dddddd (~dddddd@unaffiliated/dddddd) has joined
May 29 12:23:24 <mnoonan>	seriously! trying a faulty method of learning isn't just a slower version of following a good method of learning.
May 29 12:23:24 <mnoonan>	seriously! trying a faulty method of learning isn't just a slower version of following a good method of learning.
May 29 12:23:25 <mnoonan>	seriously! trying a faulty method of learning isn't just a slower version of following a good method of learning.
May 29 12:23:43 <maerwald>	learning is great!
May 29 12:23:43 <maerwald>	learning is great!
May 29 12:23:43 <maerwald>	learning is great!
May 29 12:23:58 <maerwald>	you just have to forget about *teaching*
May 29 12:23:58 <maerwald>	you just have to forget about *teaching*
May 29 12:23:58 <maerwald>	you just have to forget about *teaching*
May 29 12:24:36 <crestfallen>	:t map map
May 29 12:24:36 <crestfallen>	:t map map
May 29 12:24:36 <crestfallen>	:t map map
May 29 12:24:37 <lambdabot>	[a -> b] -> [[a] -> [b]]
May 29 12:24:37 <lambdabot>	[a -> b] -> [[a] -> [b]]
May 29 12:24:37 <lambdabot>	[a -> b] -> [[a] -> [b]]
May 29 12:25:29 <crestfallen>	geekosaur, why do you say 3 years .. 
May 29 12:25:30 <crestfallen>	geekosaur, why do you say 3 years ..
May 29 12:25:30 <crestfallen>	geekosaur, why do you say 3 years ..
May 29 12:25:46 *	jkarni (~jkarni@dslb-002-206-111-038.002.206.pools.vodafone-ip.de) has joined
May 29 12:25:46 *	jkarni (~jkarni@dslb-002-206-111-038.002.206.pools.vodafone-ip.de) has joined
May 29 12:25:46 *	jkarni (~jkarni@dslb-002-206-111-038.002.206.pools.vodafone-ip.de) has joined
May 29 12:26:01 *	Hexagenic (~Hexagenic@81-237-140-201-no71.tbcn.telia.com) has joined
May 29 12:26:01 *	Hexagenic (~Hexagenic@81-237-140-201-no71.tbcn.telia.com) has joined
May 29 12:26:01 *	Hexagenic (~Hexagenic@81-237-140-201-no71.tbcn.telia.com) has joined
May 29 12:26:10 <geekosaur>	2018 May 22 03:02:12 <glguy>	Well, we're just about to start year 3 of n_blownapart/crucify_me/crestfallen trying to learn Haskell. They do say that third time is a charm
May 29 12:26:10 <geekosaur>	2018 May 22 03:02:12 <glguy>	Well, we're just about to start year 3 of n_blownapart/crucify_me/crestfallen trying to learn Haskell. They do say that third time is a charm
May 29 12:26:10 <geekosaur>	2018 May 22 03:02:12 <glguy>	Well, we're just about to start year 3 of n_blownapart/crucify_me/crestfallen trying to learn Haskell. They do say that third time is a charm
May 29 12:26:18 *	sword_sm1th is now known as sword_smith
May 29 12:26:18 *	sword_sm1th is now known as sword_smith
May 29 12:26:19 *	sword_sm1th is now known as sword_smith
May 29 12:26:35 <geekosaur>	it's kinda noticeable when the same person's basically going over the eexact same things for this long
May 29 12:26:35 <geekosaur>	it's kinda noticeable when the same person's basically going over the eexact same things for this long
May 29 12:26:35 <geekosaur>	it's kinda noticeable when the same person's basically going over the eexact same things for this long
May 29 12:27:08 <geekosaur>	at least if you keep an eye on channel activity
May 29 12:27:08 <geekosaur>	at least if you keep an eye on channel activity
May 29 12:27:08 <geekosaur>	at least if you keep an eye on channel activity
May 29 12:27:17 <crestfallen>	no I started before I left for colombia in June 2017. to be fair I had a poor outcome with trying to learn scheme though
May 29 12:27:18 <crestfallen>	no I started before I left for colombia in June 2017. to be fair I had a poor outcome with trying to learn scheme though
May 29 12:27:18 <crestfallen>	no I started before I left for colombia in June 2017. to be fair I had a poor outcome with trying to learn scheme though
May 29 12:27:32 *	lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net) has joined
May 29 12:27:32 *	lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net) has joined
May 29 12:27:32 *	lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net) has joined
May 29 12:28:15 <__monty__>	I have a type: [I] -> I -> (I -> Maybe a) -> Maybe a that doesn't typecheck without the Maybe's anything obviously wrong with my thinking it should?
May 29 12:28:15 <__monty__>	I have a type: [I] -> I -> (I -> Maybe a) -> Maybe a that doesn't typecheck without the Maybe's anything obviously wrong with my thinking it should?
May 29 12:28:15 <__monty__>	I have a type: [I] -> I -> (I -> Maybe a) -> Maybe a that doesn't typecheck without the Maybe's anything obviously wrong with my thinking it should?
May 29 12:28:15 <crestfallen>	..before that
May 29 12:28:15 <crestfallen>	..before that
May 29 12:28:15 <crestfallen>	..before that
May 29 12:28:28 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 29 12:28:28 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 29 12:28:28 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
May 29 12:28:39 <dminuoso>	__monty__: Have to see the implementation.
May 29 12:28:39 <dminuoso>	__monty__: Have to see the implementation.
May 29 12:28:39 <dminuoso>	__monty__: Have to see the implementation.
May 29 12:29:11 <crestfallen>	so I won't use this channel any longer. what a drag
May 29 12:29:11 <crestfallen>	so I won't use this channel any longer. what a drag
May 29 12:29:11 <crestfallen>	so I won't use this channel any longer. what a drag
May 29 12:29:23 *	abhiroop_ has quit (Remote host closed the connection)
May 29 12:29:24 *	abhiroop_ has quit (Remote host closed the connection)
May 29 12:29:24 *	abhiroop_ has quit (Remote host closed the connection)
May 29 12:29:57 <mnoonan>	a better idea is to not take it personally, but listen when people are telling you why what you are doing is not going to go well for you.
May 29 12:29:57 <mnoonan>	a better idea is to not take it personally, but listen when people are telling you why what you are doing is not going to go well for you.
May 29 12:29:57 <mnoonan>	a better idea is to not take it personally, but listen when people are telling you why what you are doing is not going to go well for you.
May 29 12:30:00 *	abhiroop (~abhiroop@2a01:388:211:150::1:3af) has joined
May 29 12:30:00 *	abhiroop (~abhiroop@2a01:388:211:150::1:3af) has joined
May 29 12:30:00 *	abhiroop (~abhiroop@2a01:388:211:150::1:3af) has joined
May 29 12:30:16 *	DSM (~dmackenzi@67.207.37.26) has joined
May 29 12:30:16 *	DSM (~dmackenzi@67.207.37.26) has joined
May 29 12:30:16 *	DSM (~dmackenzi@67.207.37.26) has joined
May 29 12:30:35 <noan>	[exa], yes, finite. dminuoso the function each time its result is needed would fully evaluate. Whereas a full data structure once needed would evaluate that structure only once.
May 29 12:30:35 <noan>	[exa], yes, finite. dminuoso the function each time its result is needed would fully evaluate. Whereas a full data structure once needed would evaluate that structure only once.
May 29 12:30:35 <noan>	[exa], yes, finite. dminuoso the function each time its result is needed would fully evaluate. Whereas a full data structure once needed would evaluate that structure only once.
May 29 12:30:45 <noan>	if I understand right
May 29 12:30:45 <noan>	if I understand right
May 29 12:30:45 <noan>	if I understand right
May 29 12:30:50 *	_bo (~Bo@195.39.233.28) has joined
May 29 12:30:50 *	_bo (~Bo@195.39.233.28) has joined
May 29 12:30:50 *	_bo (~Bo@195.39.233.28) has joined
May 29 12:30:57 *	wollw has quit (Ping timeout: 264 seconds)
May 29 12:30:57 *	wollw has quit (Ping timeout: 264 seconds)
May 29 12:30:57 *	wollw has quit (Ping timeout: 264 seconds)
May 29 12:31:26 <Tehnix3>	Anyone have experience with building a project with stack inside a docker container, and "saving" the progress of the builds, without having to commit the container?
May 29 12:31:26 <Tehnix3>	Anyone have experience with building a project with stack inside a docker container, and "saving" the progress of the builds, without having to commit the container?
May 29 12:31:26 <Tehnix3>	Anyone have experience with building a project with stack inside a docker container, and "saving" the progress of the builds, without having to commit the container?
May 29 12:31:40 *	_bo has quit (*.net *.split)
May 29 12:31:40 *	_bo has quit (*.net *.split)
May 29 12:31:40 *	_bo has quit (*.net *.split)
May 29 12:31:45 *	_bo (~Bo@195.39.233.28) has joined
May 29 12:31:45 *	_bo (~Bo@195.39.233.28) has joined
May 29 12:31:45 *	_bo (~Bo@195.39.233.28) has joined
May 29 12:31:56 <Tehnix3>	some combination of --work-dir and maybe --stack-root, but not sure what is necessary
May 29 12:31:56 <Tehnix3>	some combination of --work-dir and maybe --stack-root, but not sure what is necessary
May 29 12:31:56 <Tehnix3>	some combination of --work-dir and maybe --stack-root, but not sure what is necessary
May 29 12:32:02 <dminuoso>	Tehnix3: That happens by default already
May 29 12:32:02 <dminuoso>	Tehnix3: That happens by default already
May 29 12:32:02 <dminuoso>	Tehnix3: That happens by default already
May 29 12:32:02 *	wollw (~rshere@108-208-193-216.lightspeed.sntcca.sbcglobal.net) has joined
May 29 12:32:02 *	wollw (~rshere@108-208-193-216.lightspeed.sntcca.sbcglobal.net) has joined
May 29 12:32:02 *	wollw (~rshere@108-208-193-216.lightspeed.sntcca.sbcglobal.net) has joined
May 29 12:32:13 <dminuoso>	Tehnix3: Docker stores each intermediate layer
May 29 12:32:13 <dminuoso>	Tehnix3: Docker stores each intermediate layer
May 29 12:32:13 <dminuoso>	Tehnix3: Docker stores each intermediate layer
May 29 12:32:23 *	XorSwap (~XorSwap@kite.riseup.net) has joined
May 29 12:32:23 *	XorSwap (~XorSwap@kite.riseup.net) has joined
May 29 12:32:23 *	XorSwap (~XorSwap@kite.riseup.net) has joined
May 29 12:32:26 <Tehnix3>	Ah, i mean from a docker run
May 29 12:32:26 <Tehnix3>	Ah, i mean from a docker run
May 29 12:32:26 <Tehnix3>	Ah, i mean from a docker run
May 29 12:32:54 *	gestone has quit (Ping timeout: 256 seconds)
May 29 12:32:54 *	gestone has quit (Ping timeout: 256 seconds)
May 29 12:32:54 *	gestone has quit (Ping timeout: 256 seconds)
May 29 12:33:15 <Tehnix3>	e.g. `docker run -v $(pwd):/src -it ghcjs:lts-9.21 stack build`
May 29 12:33:15 <Tehnix3>	e.g. `docker run -v $(pwd):/src -it ghcjs:lts-9.21 stack build`
May 29 12:33:15 <Tehnix3>	e.g. `docker run -v $(pwd):/src -it ghcjs:lts-9.21 stack build`
May 29 12:33:37 <dminuoso>	noan: Im guessing the mapping of values is not known at compile time but decided at some point during runtime?
May 29 12:33:37 <dminuoso>	noan: Im guessing the mapping of values is not known at compile time but decided at some point during runtime?
May 29 12:33:37 <dminuoso>	noan: Im guessing the mapping of values is not known at compile time but decided at some point during runtime?
May 29 12:33:47 *	emilypi has quit (Ping timeout: 260 seconds)
May 29 12:33:47 *	emilypi has quit (Ping timeout: 260 seconds)
May 29 12:33:47 *	emilypi has quit (Ping timeout: 260 seconds)
May 29 12:34:19 *	bo (~Bo@195.39.233.28) has joined
May 29 12:34:19 *	bo (~Bo@195.39.233.28) has joined
May 29 12:34:19 *	bo (~Bo@195.39.233.28) has joined
May 29 12:34:22 *	__bo has quit (Ping timeout: 260 seconds)
May 29 12:34:22 *	__bo has quit (Ping timeout: 260 seconds)
May 29 12:34:22 *	__bo has quit (Ping timeout: 260 seconds)
May 29 12:34:27 *	zdenal has quit (Ping timeout: 240 seconds)
May 29 12:34:27 *	zdenal has quit (Ping timeout: 240 seconds)
May 29 12:34:27 *	zdenal has quit (Ping timeout: 240 seconds)
May 29 12:34:44 *	abhiroop has quit (Ping timeout: 256 seconds)
May 29 12:34:44 *	abhiroop has quit (Ping timeout: 256 seconds)
May 29 12:34:44 *	abhiroop has quit (Ping timeout: 256 seconds)
May 29 12:35:33 <crestfallen>	mnoonan, how would a person not take that personally. "listening" on an irc channel is not the same as how one is raised to listen.
May 29 12:35:33 <crestfallen>	mnoonan, how would a person not take that personally. "listening" on an irc channel is not the same as how one is raised to listen.
May 29 12:35:33 <crestfallen>	mnoonan, how would a person not take that personally. "listening" on an irc channel is not the same as how one is raised to listen.
May 29 12:36:18 <fishythefish>	crestfallen: we're not saying Haskell isn't for you, just that the way you seem to be going about learning it doesn't seem to be that effective
May 29 12:36:18 <fishythefish>	crestfallen: we're not saying Haskell isn't for you, just that the way you seem to be going about learning it doesn't seem to be that effective
May 29 12:36:18 <fishythefish>	crestfallen: we're not saying Haskell isn't for you, just that the way you seem to be going about learning it doesn't seem to be that effective
May 29 12:36:30 <__monty__>	dminuoso: http://ix.io/1bKD
May 29 12:36:30 <__monty__>	dminuoso: http://ix.io/1bKD
May 29 12:36:30 <__monty__>	dminuoso: http://ix.io/1bKD
May 29 12:36:32 *	altjsus has quit (Quit: altjsus)
May 29 12:36:32 *	altjsus has quit (Quit: altjsus)
May 29 12:36:32 *	altjsus has quit (Quit: altjsus)
May 29 12:36:35 *	ian_andrich has quit (Ping timeout: 240 seconds)
May 29 12:36:35 *	ian_andrich has quit (Ping timeout: 240 seconds)
May 29 12:36:35 *	ian_andrich has quit (Ping timeout: 240 seconds)
May 29 12:36:50 *	dan_f has quit (Ping timeout: 260 seconds)
May 29 12:36:50 *	dan_f has quit (Ping timeout: 260 seconds)
May 29 12:36:50 *	dan_f has quit (Ping timeout: 260 seconds)
May 29 12:36:58 <fishythefish>	__monty__: what would a version without the Maybes do?
May 29 12:36:58 <fishythefish>	__monty__: what would a version without the Maybes do?
May 29 12:36:58 <fishythefish>	__monty__: what would a version without the Maybes do?
May 29 12:37:05 <crestfallen>	<< see moniker
May 29 12:37:05 <crestfallen>	<< see moniker
May 29 12:37:05 <crestfallen>	<< see moniker
May 29 12:37:11 *	ian_andrich_ has quit (Ping timeout: 276 seconds)
May 29 12:37:11 *	ian_andrich_ has quit (Ping timeout: 276 seconds)
May 29 12:37:11 *	ian_andrich_ has quit (Ping timeout: 276 seconds)
May 29 12:37:13 *	jao (~jao@pdpc/supporter/professional/jao) has joined
May 29 12:37:13 *	jao (~jao@pdpc/supporter/professional/jao) has joined
May 29 12:37:13 *	jao (~jao@pdpc/supporter/professional/jao) has joined
May 29 12:37:31 *	_bo has quit (Ping timeout: 244 seconds)
May 29 12:37:31 *	_bo has quit (Ping timeout: 244 seconds)
May 29 12:37:31 *	_bo has quit (Ping timeout: 244 seconds)
May 29 12:37:52 <mnoonan>	You have to separate your actions from your identity. You're doing the wrong thing, and people are trying to help you succeed. That's not a judgment against you as a person.
May 29 12:37:52 <mnoonan>	You have to separate your actions from your identity. You're doing the wrong thing, and people are trying to help you succeed. That's not a judgment against you as a person.
May 29 12:37:53 <mnoonan>	You have to separate your actions from your identity. You're doing the wrong thing, and people are trying to help you succeed. That's not a judgment against you as a person.
May 29 12:37:54 <__monty__>	fishythefish: Exact same function. Just a type variable that represents "Maybe something" instead of Maybe a type variable that represents "something".
May 29 12:37:54 <__monty__>	fishythefish: Exact same function. Just a type variable that represents "Maybe something" instead of Maybe a type variable that represents "something".
May 29 12:37:54 <__monty__>	fishythefish: Exact same function. Just a type variable that represents "Maybe something" instead of Maybe a type variable that represents "something".
May 29 12:38:09 *	pfurla_ is now known as pfurla
May 29 12:38:09 *	pfurla_ is now known as pfurla
May 29 12:38:09 *	pfurla_ is now known as pfurla
May 29 12:38:24 <fishythefish>	__monty__: can't be the exact same function; you're pattern matching on the Maybe constructors and producing Maybe values
May 29 12:38:24 <fishythefish>	__monty__: can't be the exact same function; you're pattern matching on the Maybe constructors and producing Maybe values
May 29 12:38:24 <fishythefish>	__monty__: can't be the exact same function; you're pattern matching on the Maybe constructors and producing Maybe values
May 29 12:38:34 <dminuoso>	__monty__: If case (mb_parent x) produces Nothing, what should the whole thing do?
May 29 12:38:34 <dminuoso>	__monty__: If case (mb_parent x) produces Nothing, what should the whole thing do?
May 29 12:38:34 <dminuoso>	__monty__: If case (mb_parent x) produces Nothing, what should the whole thing do?
May 29 12:39:14 <__monty__>	Ah, type variables don't abstract over levels?
May 29 12:39:14 <__monty__>	Ah, type variables don't abstract over levels?
May 29 12:39:14 <__monty__>	Ah, type variables don't abstract over levels?
May 29 12:39:25 <fishythefish>	what do you mean by "levels"?
May 29 12:39:25 <fishythefish>	what do you mean by "levels"?
May 29 12:39:25 <fishythefish>	what do you mean by "levels"?
May 29 12:39:33 <dmwit>	__monty__: I don't understand the question. In particular I don't understand what it would mean to typecheck a type (or at least, I can't connect what I would think it meant to what you said).
May 29 12:39:33 <dmwit>	__monty__: I don't understand the question. In particular I don't understand what it would mean to typecheck a type (or at least, I can't connect what I would think it meant to what you said).
May 29 12:39:33 <dmwit>	__monty__: I don't understand the question. In particular I don't understand what it would mean to typecheck a type (or at least, I can't connect what I would think it meant to what you said).
May 29 12:39:40 <dminuoso>	21:37     __monty__ | fishythefish: Exact same function. Just a type variable that represents "Maybe something" instead of Maybe a type variable that represents "something".
May 29 12:39:40 <dminuoso>	21:37     __monty__ | fishythefish: Exact same function. Just a type variable that represents "Maybe something" instead of Maybe a type variable that represents "something".
May 29 12:39:40 <dminuoso>	21:37     __monty__ | fishythefish: Exact same function. Just a type variable that represents "Maybe something" instead of Maybe a type variable that represents "something".
May 29 12:39:44 <dminuoso>	I cant make sense of that statement
May 29 12:39:44 <dminuoso>	I cant make sense of that statement
May 29 12:39:44 <dminuoso>	I cant make sense of that statement
May 29 12:40:05 <dmwit>	Typechecking happens on computations.
May 29 12:40:05 <dmwit>	Typechecking happens on computations.
May 29 12:40:05 <dmwit>	Typechecking happens on computations.
May 29 12:40:09 <dmwit>	(Kind checking happens on types.)
May 29 12:40:09 <dmwit>	(Kind checking happens on types.)
May 29 12:40:09 <dmwit>	(Kind checking happens on types.)
May 29 12:40:26 <__monty__>	dmwit: I meant typechecking the function.
May 29 12:40:26 <__monty__>	dmwit: I meant typechecking the function.
May 29 12:40:26 <__monty__>	dmwit: I meant typechecking the function.
May 29 12:40:27 *	skeet70 is now known as skeet70_away
May 29 12:40:27 *	skeet70 is now known as skeet70_away
May 29 12:40:27 *	skeet70 is now known as skeet70_away
May 29 12:40:29 <fishythefish>	__monty__: if you want a type that represents the possibilities of Maybe Int, Maybe Char, Maybe Bool, etc. then you want Maybe a
May 29 12:40:29 <fishythefish>	__monty__: if you want a type that represents the possibilities of Maybe Int, Maybe Char, Maybe Bool, etc. then you want Maybe a
May 29 12:40:29 <fishythefish>	__monty__: if you want a type that represents the possibilities of Maybe Int, Maybe Char, Maybe Bool, etc. then you want Maybe a
May 29 12:40:29 *	skeet70_away is now known as skeet70
May 29 12:40:29 *	skeet70_away is now known as skeet70
May 29 12:40:29 *	skeet70_away is now known as skeet70
May 29 12:40:49 *	connrs has quit (Ping timeout: 248 seconds)
May 29 12:40:49 *	connrs has quit (Ping timeout: 248 seconds)
May 29 12:40:49 *	connrs has quit (Ping timeout: 248 seconds)
May 29 12:40:50 <crestfallen>	mnoonan, thanks I really appreciate that. also fishythefish has helped me with a saint's patience and I appreciate it. At least I'm getting familiar with some of it.
May 29 12:40:50 <crestfallen>	mnoonan, thanks I really appreciate that. also fishythefish has helped me with a saint's patience and I appreciate it. At least I'm getting familiar with some of it.
May 29 12:40:50 <crestfallen>	mnoonan, thanks I really appreciate that. also fishythefish has helped me with a saint's patience and I appreciate it. At least I'm getting familiar with some of it.
May 29 12:41:07 *	hphuoc25 has quit (Remote host closed the connection)
May 29 12:41:07 *	hphuoc25 has quit (Remote host closed the connection)
May 29 12:41:07 *	hphuoc25 has quit (Remote host closed the connection)
May 29 12:41:18 <__monty__>	At it's simplest my question is why can't `forall a. a` equal `forall b. Maybe b`?
May 29 12:41:19 <__monty__>	At it's simplest my question is why can't `forall a. a` equal `forall b. Maybe b`?
May 29 12:41:19 <__monty__>	At it's simplest my question is why can't `forall a. a` equal `forall b. Maybe b`?
May 29 12:41:23 *	Tehnix3 has quit (Remote host closed the connection)
May 29 12:41:23 *	Tehnix3 has quit (Remote host closed the connection)
May 29 12:41:23 *	Tehnix3 has quit (Remote host closed the connection)
May 29 12:41:25 *	Hexagenic has quit (Quit: Leaving)
May 29 12:41:25 *	Hexagenic has quit (Quit: Leaving)
May 29 12:41:25 *	Hexagenic has quit (Quit: Leaving)
May 29 12:41:30 *	jcjf_ (AdiIRC@58-7-167-151.dyn.iinet.net.au) has joined
May 29 12:41:30 *	jcjf_ (AdiIRC@58-7-167-151.dyn.iinet.net.au) has joined
May 29 12:41:30 *	jcjf_ (AdiIRC@58-7-167-151.dyn.iinet.net.au) has joined
May 29 12:41:35 <fishythefish>	__monty__: because I could pick an a that isn't a Maybe b
May 29 12:41:35 <fishythefish>	__monty__: because I could pick an a that isn't a Maybe b
May 29 12:41:35 <fishythefish>	__monty__: because I could pick an a that isn't a Maybe b
May 29 12:41:36 <dminuoso>	__monty__: Because that's not the same thing?
May 29 12:41:36 <dminuoso>	__monty__: Because that's not the same thing?
May 29 12:41:36 <dminuoso>	__monty__: Because that's not the same thing?
May 29 12:41:51 <dminuoso>	__monty__: polymorphism means _the consumer_ gets to decide.
May 29 12:41:51 <dminuoso>	__monty__: polymorphism means _the consumer_ gets to decide.
May 29 12:41:51 <dminuoso>	__monty__: polymorphism means _the consumer_ gets to decide.
May 29 12:42:13 <fishythefish>	forall a. a is only inhabited by _|_, but Nothing inhabits forall b. Maybe b
May 29 12:42:13 <fishythefish>	forall a. a is only inhabited by _|_, but Nothing inhabits forall b. Maybe b
May 29 12:42:13 <fishythefish>	forall a. a is only inhabited by _|_, but Nothing inhabits forall b. Maybe b
May 29 12:42:16 <__monty__>	Ah, right. /duh
May 29 12:42:16 <__monty__>	Ah, right. /duh
May 29 12:42:16 <__monty__>	Ah, right. /duh
May 29 12:42:52 *	Darkyen has quit (Quit: (null))
May 29 12:42:52 *	Darkyen has quit (Quit: (null))
May 29 12:42:52 *	Darkyen has quit (Quit: (null))
May 29 12:43:10 *	telser has quit (Ping timeout: 245 seconds)
May 29 12:43:10 *	telser has quit (Ping timeout: 245 seconds)
May 29 12:43:10 *	telser has quit (Ping timeout: 245 seconds)
May 29 12:43:11 <fishythefish>	crestfallen: my advice is to set aside the type unification and other advanced topics until you have a strong enough grasp of the foundations to really understand our discussions about them
May 29 12:43:11 <fishythefish>	crestfallen: my advice is to set aside the type unification and other advanced topics until you have a strong enough grasp of the foundations to really understand our discussions about them
May 29 12:43:11 <fishythefish>	crestfallen: my advice is to set aside the type unification and other advanced topics until you have a strong enough grasp of the foundations to really understand our discussions about them
May 29 12:43:20 <dminuoso>	__monty__: I think what you were hoping for is a typed hole _
May 29 12:43:20 <dminuoso>	__monty__: I think what you were hoping for is a typed hole _
May 29 12:43:20 <dminuoso>	__monty__: I think what you were hoping for is a typed hole _
May 29 12:43:35 <dminuoso>	__monty__: Which is the equivalent of "something goes in here, but I dont want to name it - you figure it out with type inference"
May 29 12:43:35 <dminuoso>	__monty__: Which is the equivalent of "something goes in here, but I dont want to name it - you figure it out with type inference"
May 29 12:43:35 <dminuoso>	__monty__: Which is the equivalent of "something goes in here, but I dont want to name it - you figure it out with type inference"
May 29 12:43:36 <fishythefish>	hutton's book is a good one to follow, but rather than trying to get through it as quickly as possible, do all of the exercises yourself and don't look at others' solutions
May 29 12:43:36 <fishythefish>	hutton's book is a good one to follow, but rather than trying to get through it as quickly as possible, do all of the exercises yourself and don't look at others' solutions
May 29 12:43:36 <fishythefish>	hutton's book is a good one to follow, but rather than trying to get through it as quickly as possible, do all of the exercises yourself and don't look at others' solutions
May 29 12:43:42 *	cynick (~worm@ec2-52-206-86-1.compute-1.amazonaws.com) has joined
May 29 12:43:42 *	cynick (~worm@ec2-52-206-86-1.compute-1.amazonaws.com) has joined
May 29 12:43:42 *	cynick (~worm@ec2-52-206-86-1.compute-1.amazonaws.com) has joined
May 29 12:43:51 <__monty__>	Thanks. Time to stop I guess when you start making such silly mistakes. I was using the knowledge that all the functions passed would return a Maybe but that's not true in the general (polymorphic) case.
May 29 12:43:51 <__monty__>	Thanks. Time to stop I guess when you start making such silly mistakes. I was using the knowledge that all the functions passed would return a Maybe but that's not true in the general (polymorphic) case.
May 29 12:43:51 <__monty__>	Thanks. Time to stop I guess when you start making such silly mistakes. I was using the knowledge that all the functions passed would return a Maybe but that's not true in the general (polymorphic) case.
May 29 12:43:54 <dminuoso>	__monty__: (but I dont know whether thats truly useful for you)
May 29 12:43:54 <dminuoso>	__monty__: (but I dont know whether thats truly useful for you)
May 29 12:43:54 <dminuoso>	__monty__: (but I dont know whether thats truly useful for you)
May 29 12:44:17 *	Tehnix (~Tehnix@ec2-18-197-40-10.eu-central-1.compute.amazonaws.com) has joined
May 29 12:44:17 *	Tehnix (~Tehnix@ec2-18-197-40-10.eu-central-1.compute.amazonaws.com) has joined
May 29 12:44:17 *	Tehnix (~Tehnix@ec2-18-197-40-10.eu-central-1.compute.amazonaws.com) has joined
May 29 12:44:29 *	jcjf has quit (Ping timeout: 256 seconds)
May 29 12:44:29 *	jcjf has quit (Ping timeout: 256 seconds)
May 29 12:44:29 *	jcjf has quit (Ping timeout: 256 seconds)
May 29 12:44:32 *	jcjf_ is now known as jcjf
May 29 12:44:32 *	jcjf_ is now known as jcjf
May 29 12:44:32 *	jcjf_ is now known as jcjf
May 29 12:44:40 *	ian_andrich_ (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
May 29 12:44:40 *	ian_andrich_ (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
May 29 12:44:40 *	ian_andrich_ (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
May 29 12:44:40 *	ian_andrich (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
May 29 12:44:40 *	ian_andrich (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
May 29 12:44:41 *	ian_andrich (~ian_andri@c-73-223-61-224.hsd1.ca.comcast.net) has joined
May 29 12:44:47 <__monty__>	dminuoso: Not in this case but I'm sure it'll come in handy.
May 29 12:44:47 <__monty__>	dminuoso: Not in this case but I'm sure it'll come in handy.
May 29 12:44:47 <__monty__>	dminuoso: Not in this case but I'm sure it'll come in handy.
May 29 12:44:59 *	Tehnix has quit (Remote host closed the connection)
May 29 12:44:59 *	Tehnix has quit (Remote host closed the connection)
May 29 12:44:59 *	Tehnix has quit (Remote host closed the connection)
May 29 12:45:30 *	jao has quit (Ping timeout: 256 seconds)
May 29 12:45:30 *	jao has quit (Ping timeout: 256 seconds)
May 29 12:45:30 *	jao has quit (Ping timeout: 256 seconds)
May 29 12:46:15 *	dolio has quit (Read error: Connection reset by peer)
May 29 12:46:15 *	dolio has quit (Read error: Connection reset by peer)
May 29 12:46:15 *	dolio has quit (Read error: Connection reset by peer)
May 29 12:46:38 Python interface unloaded
May 29 12:46:38 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue May 29 12:46:38 2018

**** ENDING LOGGING AT Tue May 29 12:46:38 2018

**** ENDING LOGGING AT Tue May 29 12:46:38 2018

**** BEGIN LOGGING AT Sat Jun  2 11:52:50 2018

Jun 02 11:52:50 *	Now talking on #haskell
Jun 02 11:52:50 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Jun 02 11:52:50 *	Topic for #haskell set by geekosaur (Thu May 17 06:28:54 2018)
Jun 02 11:52:51 *	Channel #haskell url: http://www.haskell.org/
Jun 02 11:52:51 *	ralu has quit (Read error: Connection reset by peer)
Jun 02 11:52:57 <robo>	how can i use monoid instance for two custom data types ?
Jun 02 11:52:58 *	ZeuPiark has quit (Ping timeout: 265 seconds)
Jun 02 11:53:41 *	t7 has quit (Remote host closed the connection)
Jun 02 11:53:51 <monochrom>	What kind of "use" do you have in mind? Mock code?
Jun 02 11:54:55 <robo>	monochrom connect a list of data mylist a and another data type
Jun 02 11:54:57 *	avidela has quit (Remote host closed the connection)
Jun 02 11:55:26 *	xpycm (~chatzilla@178.141.15.71) has joined
Jun 02 11:55:42 <monochrom>	I don't understand "connect". Hell I don't understand the whole sentence.
Jun 02 11:55:50 <robo>	instance Monoid (MyList a) where   mappend (Element x xs) (Element y ys) = ...
Jun 02 11:55:52 *	tomphp has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jun 02 11:56:22 <geekosaur>	haskell_noob1, nix tends to be all or nbothing and requires you to do things considerably differently. it can be worth learning but it's a somewhat steep learning curve
Jun 02 11:56:24 <monochrom>	That is just one custom type, not two.
Jun 02 11:56:30 <robo>	now this would work but how to make the second argument another type than MyList a
Jun 02 11:56:43 <monochrom>	But you know how standard ++ is done and you can steal its idea.
Jun 02 11:57:02 <monochrom>	Cannot. Study the type of mappend.
Jun 02 11:57:44 *	Destol (~Destol@public-252-184.nat.utoronto.ca) has joined
Jun 02 11:57:46 *	ralu (~ralu@188-230-215-47.static.t-2.net) has joined
Jun 02 11:57:52 *	taumuon has quit (Ping timeout: 240 seconds)
Jun 02 11:57:57 <monochrom>	*Respect* that if the same type variable name is used three times in a type, it means all three times they refer to the same type.
Jun 02 11:58:01 <robo>	the second argument should be from data Unit =  Player String Double | Test Int | Custom String
Jun 02 11:58:11 *	Hannibal_Smith has quit (Quit: Leaving)
Jun 02 11:58:28 <[exa]>	robo: why not convert the Unit to MyElem first before pushing that to mappend?
Jun 02 11:58:46 <monochrom>	Hell, respect types, period.
Jun 02 11:58:46 <[exa]>	err.. to MyList
Jun 02 11:59:42 <robo>	exa myElem is a list while Unit is not
Jun 02 12:00:15 <[exa]>	robo: also I suspect you'd like the behavior of 1:[2,3], in your case that could probably be constructed similarly with: (Player .. ..) `Element` restOfTheList
Jun 02 12:00:21 <haskell_noob1>	geekosaur, thanks for the tip. I will probably pick it up sometime later..once i am comfortable enough to take the noob out of my handle :).
Jun 02 12:00:24 <robo>	also how would you convert one custom data type to another ?
Jun 02 12:00:59 <[exa]>	robo: anyway, mappend is not the way to go here, it requires both args to be monoid (i.e. list in your case)
Jun 02 12:01:16 <[exa]>	robo: what about making an empty list with one Unit ?
Jun 02 12:01:30 <[exa]>	s/empty/size-1/ :D sorry
Jun 02 12:02:27 <robo>	exa would it work somehow like his : instance Monoid (MyList a, Unit) where mappend (Element x xs) (Unit a) = xs ++ a ?
Jun 02 12:02:41 <[exa]>	can you paste 2 units together to form a new _single_ unit?
Jun 02 12:02:59 <robo>	then use:  list `mappend` unit
Jun 02 12:03:38 <monochrom>	What would be the type of xs ++ a ?
Jun 02 12:03:50 <robo>	unit stores a player name and a number thats it kike :  "playerX" 2.0
Jun 02 12:04:12 *	Franciman has quit (Quit: Leaving)
Jun 02 12:04:18 <[exa]>	robo: the questions we're writing need answers :]
Jun 02 12:04:23 *	Nd-69-m (~nend@109.72.55.120) has joined
Jun 02 12:04:37 <robo>	monochrom nylist a
Jun 02 12:04:47 <monochrom>	@type (++)
Jun 02 12:04:48 <lambdabot>	[a] -> [a] -> [a]
Jun 02 12:04:52 <monochrom>	Do you respect that?
Jun 02 12:05:04 <[exa]>	robo: translated: if you can't squash 2 players together to one, they are not a monoid and mappend is not going to work on them
Jun 02 12:05:46 *	avidela (~avidela@bbcs-103-168.pub.wingo.ch) has joined
Jun 02 12:05:58 *	chessai (~quassel@2601:c9:c001:9ffc:189c:879:b1af:53d8) has joined
Jun 02 12:06:08 <[exa]>	(even when the other type is different, in which case mappend will refuse to work for a valid reason)
Jun 02 12:06:16 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sat Jun  2 12:06:16 2018

**** BEGIN LOGGING AT Wed Jun  6 19:08:58 2018

Jun 06 19:08:58 *	Now talking on #haskell
Jun 06 19:08:58 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Jun 06 19:08:58 *	Topic for #haskell set by geekosaur (Thu May 17 06:28:54 2018)
Jun 06 19:08:58 *	Channel #haskell url: http://www.haskell.org/
Jun 06 19:09:15 <crestfallen>	jle`, mind if I pm you?
Jun 06 19:11:03 *	revprez_stg (~revprez_s@pool-72-93-97-41.bstnma.fios.verizon.net) has joined
Jun 06 19:11:17 *	MP2E has quit (Remote host closed the connection)
Jun 06 19:12:04 *	pfurla_ (~textual@146.88.193.102) has joined
Jun 06 19:12:11 *	edmundnoble has quit (Quit: Connection closed for inactivity)
Jun 06 19:13:49 <crestfallen>	<< skittish about posting questions
Jun 06 19:14:40 *	AetherWind (~AetherWin@unaffiliated/aetherwind) has joined
Jun 06 19:14:50 *	nksegos (uid279024@gateway/web/irccloud.com/x-imhjyuflyyyfddkg) has joined
Jun 06 19:15:16 *	woodson_ (~quassel@135-23-231-228.cpe.pppoe.ca) has joined
Jun 06 19:15:35 *	pfurla has quit (Ping timeout: 276 seconds)
Jun 06 19:15:46 *	hololeap has quit (Quit: Bye)
Jun 06 19:16:31 <Axman6>	crestfallen: We're very friendly here, just ask
Jun 06 19:17:34 *	nshepperd (~nshepperd@198.144.156.49) has joined
Jun 06 19:18:27 *	banc (~master@82.145.37.203) has joined
Jun 06 19:18:27 *	swalladge_ has quit (Ping timeout: 240 seconds)
Jun 06 19:19:46 *	ddellacosta (~ddellacos@cpe-74-66-236-159.nyc.res.rr.com) has joined
Jun 06 19:20:02 *	ddellaco_ (~ddellacos@2604:2000:7006:b500:b4bd:c8d8:b2dc:77c1) has joined
Jun 06 19:23:57 *	ddellacosta has quit (Ping timeout: 245 seconds)
Jun 06 19:26:09 *	twandy has quit (Ping timeout: 264 seconds)
Jun 06 19:26:56 <crestfallen>	Axman6 thanks   https://ptpb.pw/jYzV    j*le suggested I write this out manually with factorial 3, but I have no clue how. this is a lambda using 'fixpoint' 
Jun 06 19:27:57 <crestfallen>	I have a vague sense of how to visualize it but I don't know where the crux of the recursion is, or what it looks hand-written
Jun 06 19:28:07 *	harfangk has quit (Remote host closed the connection)
Jun 06 19:28:08 <crestfallen>	*like
Jun 06 19:28:33 *	harfangk (~harfangk_@59.9.219.9) has joined
Jun 06 19:29:03 *	emilypi (~emilypi@h197.198.141.40.ip.windstream.net) has joined
Jun 06 19:29:36 *	lanelet has quit (Ping timeout: 265 seconds)
Jun 06 19:31:19 *	louispan (~textual@203.38.203.134) has joined
Jun 06 19:31:52 *	lanelet (~lanelet@cpe-174-109-244-56.nc.res.rr.com) has joined
Jun 06 19:31:57 *	swalladge_ (~swalladge@unaffiliated/swalladge) has joined
Jun 06 19:32:29 *	buffersandbeer has quit (Ping timeout: 276 seconds)
Jun 06 19:33:46 <dmwit>	glguy: There's `pretty :: Value a -> Doc` that ignores the annotations; is there something of type `Value Position -> Doc`?
Jun 06 19:34:15 <dmwit>	Oh, I guess comments would get lost in such a roundtrip anyway. Okay, never mind.
Jun 06 19:34:30 *	fpGuest123 has quit (Quit: leaving)
Jun 06 19:35:52 *	lortabac (~lortabac@tpt25-1-88-183-165-187.fbx.proxad.net) has joined
Jun 06 19:37:26 *	Synthetica has quit (Quit: Connection closed for inactivity)
Jun 06 19:38:06 *	hrk (~hrk@ip-89-176-4-80.net.upcbroadband.cz) has joined
Jun 06 19:39:09 *	louispan has quit (Quit: louispan)
Jun 06 19:39:56 <dmwit>	crestfallen: There are two basic rules to apply. The first is to replace names with their definition until you get the application of a lambda to a term. The second is to substitute that term for the first argument of the lambda everywhere in its body.
Jun 06 19:40:04 <hrk>	The monoid instance of lists uses (<>) = (++). Isn't this terribly inefficient (like O(n^2) in the number of lists being mappended)?
Jun 06 19:40:11 *	blasen has quit (Ping timeout: 256 seconds)
Jun 06 19:40:12 *	lortabac has quit (Ping timeout: 245 seconds)
Jun 06 19:40:14 *	buffersandbeer (~buffersan@c-71-194-252-179.hsd1.il.comcast.net) has joined
Jun 06 19:40:15 <dmwit>	crestfallen: For `factorial 3`: are we currently looking at an application of a lambda to a term?
Jun 06 19:40:26 <dmwit>	hrk: What alternative do you propose?
Jun 06 19:40:41 *	louispan (~textual@203.38.203.134) has joined
Jun 06 19:41:01 <glguy>	dmwit: preserving comments is a good idea, I just haven't done it yet
Jun 06 19:41:16 *	preyalone has quit (Quit: Connection closed for inactivity)
Jun 06 19:41:45 <hrk>	d,wit: I don't have any, just asking if that's the real complexity that I should be aware of and use something else if I have 1000 one-element lists..
Jun 06 19:41:49 <dmwit>	glguy: Sure. It's not really an issue for me anyway; I'm probably dreaming that people will actually look at the files involved in my planned use of that library.
Jun 06 19:41:55 <hrk>	dmwit ^
Jun 06 19:42:19 <dmwit>	hrk: Depends. Left-associated mappend's would be O(n^2), yes; right-associated ones are O(n).
Jun 06 19:42:43 *	louispan has quit (Client Quit)
Jun 06 19:43:31 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Jun 06 19:44:49 *	andreabedini (~andreabed@26.117.96.58.static.exetel.com.au) has joined
Jun 06 19:44:56 <hrk>	dmwit, you're right. I was just wondering what does lens's toListOf do and it does foldr, so linear complexity there.
Jun 06 19:46:21 *	louispan (~textual@203.38.203.134) has joined
Jun 06 19:46:27 *	lagothri1 has quit (Ping timeout: 240 seconds)
Jun 06 19:48:07 <crestfallen>	https://ptpb.pw/jYzV  dmwit did you get to look at the paste? thanks
Jun 06 19:50:36 *	emilypi has quit (Read error: Connection reset by peer)
Jun 06 19:52:53 <phadej>	hrk: they use dlist "internally"
Jun 06 19:53:04 *	twandy (~Thunderbi@cas-fw-sta.inet.casair.net) has joined
Jun 06 19:53:30 *	buffersandbeer has quit (Quit: Leaving)
Jun 06 19:53:32 <phadej>	yoi can tell that from the type, "almost"
Jun 06 19:53:40 <phadej>	:t toListOf
Jun 06 19:53:41 <lambdabot>	Getting (Endo [a]) s a -> s -> [a]
Jun 06 19:54:31 <crestfallen>	dmwit, sorry just saw your question. yes, we are.
Jun 06 19:54:35 *	ian_andrich_ has quit (Ping timeout: 260 seconds)
Jun 06 19:54:35 *	ian_andrich has quit (Ping timeout: 260 seconds)
Jun 06 19:55:05 *	Arcaelyx (~Arcaelyx@2604:2000:f14a:2500:51a4:f927:7e9c:b3cf) has joined
Jun 06 19:55:21 <phadej>	and difference lists have efficient concat
Jun 06 19:57:33 <phadej>	Endo [a] has the same Monoid instance as proper DList would have (Endo [a] is "bigger")
Jun 06 19:57:38 Python interface unloaded
Jun 06 19:57:38 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Wed Jun  6 19:57:38 2018

**** BEGIN LOGGING AT Thu Jun  7 11:14:48 2018

Jun 07 11:14:48 *	Now talking on #haskell
Jun 07 11:14:48 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Jun 07 11:14:48 *	Topic for #haskell set by geekosaur (Thu May 17 06:28:54 2018)
Jun 07 11:14:49 *	Channel #haskell url: http://www.haskell.org/
Jun 07 11:15:08 <mniip>	lukelau, what did you expect to be able to do
Jun 07 11:15:10 <[exa]>	lukelau: the 'a' from the signature may be completely different from what actually resides in the type
Jun 07 11:15:29 <mnoonan>	lukelau: the problem is just that there aren't any interesting functions that can do anything with a (forall a. a)
Jun 07 11:15:33 <[exa]>	lukelau: by the type, you say that you can provide _any_ type of a, which you obviously can't
Jun 07 11:15:38 <mniip>	lukelau, the way you wrote it, one . two :: a -> b
Jun 07 11:15:51 <mniip>	which would violate pretty much everything in haskell
Jun 07 11:16:02 <crestfallen>	hi, please critique my hand-written output lines 7-13. I'm not satisfied with how it looks. thanks:   https://ptpb.pw/0qYK
Jun 07 11:16:40 <dminuoso>	AWizzArd: If you want to go crazy you could write this as: flip next 1 . snd =<< M.lookupGT (val i) store
Jun 07 11:16:45 <dminuoso>	s/1/i/
Jun 07 11:16:56 *	keepLearning512 (~keepLearn@106.51.21.149) has joined
Jun 07 11:17:06 <mnoonan>	if you put in something like a (forall a. Show a => a) in your Foo' example, then you'd at least be able to show the thing.
Jun 07 11:18:00 *	SenasOzys has quit (Ping timeout: 260 seconds)
Jun 07 11:18:03 <ski>	nope
Jun 07 11:18:42 *	keepLear_ (~keepLearn@106.51.21.149) has joined
Jun 07 11:18:48 *	keepLearning512 has quit (Read error: Connection reset by peer)
Jun 07 11:19:25 <ski>	crestfallen : the type of `fixpoint' could be more general
Jun 07 11:20:16 <ski>	crestfallen: you have mismatched brackets in the last three lines
Jun 07 11:20:30 <ski>	crestfallen : what's with the dots ?
Jun 07 11:21:10 *	cybai (~cybai@123-193-72-10.dynamic.kbronet.com.tw) has joined
Jun 07 11:21:28 <crestfallen>	ski they are sugar for : I don't know what I'm doing.
Jun 07 11:21:34 *	bodisiw (~bodiskw@128.163.8.204) has joined
Jun 07 11:21:47 *	Arcaelyx (~Arcaelyx@2604:2000:f14a:2500:51a4:f927:7e9c:b3cf) has joined
Jun 07 11:21:48 <ski>	crestfallen : the `3' in `\ff 3 -> ...' (and ditto for the next two lines) doesn't make sense. presumably you don't mean to have a numeral `3' as a pattern in that lambda expression
Jun 07 11:22:21 *	encod3 has quit (Remote host closed the connection)
Jun 07 11:22:27 <lukelau>	mnoonan: My actual Foo has FromJSON constraints like this: https://lpaste.net/3668772437316599808
Jun 07 11:22:33 *	davr0s has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
Jun 07 11:22:36 <crestfallen>	ok let me start by fixing that ski
Jun 07 11:22:38 *	shafox (uid28637@gateway/web/irccloud.com/x-ymtlyqorcjipbaub) has joined
Jun 07 11:22:42 <ski>	crestfallen : i suspect that you intended to display an evaluation/reduction trace starting from the expression `factorial 3'
Jun 07 11:22:44 <ski>	?
Jun 07 11:22:53 <crestfallen>	yes
Jun 07 11:23:27 *	ski for whatever reason can't view the page lukelau just linked to ..
Jun 07 11:23:31 <lukelau>	I’m tyring to store it like this https://lpaste.net/6263855822896365568
Jun 07 11:23:50 *	jbalint has quit (Ping timeout: 260 seconds)
Jun 07 11:23:58 <ski>	(`ERR_EMPTY_RESPONSE')
Jun 07 11:24:04 *	Durbley has quit (Remote host closed the connection)
Jun 07 11:24:11 <crestfallen>	what a bear .. working
Jun 07 11:24:24 <ski>	crestfallen ?
Jun 07 11:24:38 *	Durbley (~Durbley__@c-73-148-179-151.hsd1.fl.comcast.net) has joined
Jun 07 11:24:41 <lukelau>	ski: maybe a reupload will help? https://lpaste.net/8140471465678995456
Jun 07 11:25:04 <ski>	sorry, nope
Jun 07 11:25:32 <crestfallen>	just that I'm having trouble even with a good night's sleep
Jun 07 11:25:33 <mnoonan>	data JsonThing = forall a. (FromJSON a, ToJSON a) => JsonThing a
Jun 07 11:26:12 <ski>	(first i was suspecting an expiration for some couple of minutes, but now it doesn't look like that)
Jun 07 11:26:15 *	pavonia (~user@unaffiliated/siracusa) has joined
Jun 07 11:26:27 <lukelau>	That link wasnt’ very interesting, it was just using Data.aseson to decode an object to a (RequestMessage ServerMethod a b)
Jun 07 11:26:30 <mnoonan>	then you could write functions like "JSON -> Proxy a -> JsonThing" and "JsonThing -> JSON"
Jun 07 11:26:40 <crestfallen>	ski please see new link with minor fix
Jun 07 11:26:43 <crestfallen>	https://ptpb.pw/drpA
Jun 07 11:27:15 *	sigmundv__ has quit (Ping timeout: 268 seconds)
Jun 07 11:27:21 <mnoonan>	(not saying you *want* to do that, just that if you figure that out you probably can figure out your actual problem too)
Jun 07 11:27:45 *	jbalint (~jbalint@71-90-85-113.dhcp.ftbg.wi.charter.com) has joined
Jun 07 11:27:46 *	jbalint has quit (Changing host)
Jun 07 11:27:46 *	jbalint (~jbalint@unaffiliated/jbalint) has joined
Jun 07 11:27:49 *	fendor has quit (Remote host closed the connection)
Jun 07 11:28:29 <ski>	(that type `JsonThing' expresses (encodes) the existential type `exists a. (FromJSON a,ToJSON a) => a', which means that given a value of type `JsonThing', you know that there *exists* some hidden/abstract/opaque/forgotten type `a', which you know is an instance of `FromJSON' and `ToJSON', such that there is a single value of that type `a' inside)
Jun 07 11:28:52 *	twanvl (~twanvl@92-110-121-28.cable.dynamic.v4.ziggo.nl) has joined
Jun 07 11:28:57 *	SenasOzys (~Ozys@user208.77-105-199.netatonce.net) has joined
Jun 07 11:29:23 <Welkin>	(is this how people talk now?)
Jun 07 11:29:35 <Welkin>	(a lisp version of english)
Jun 07 11:29:37 <Welkin>	(cool)
Jun 07 11:29:42 <crestfallen>	I guess the last line is also wrong/misleading ski
Jun 07 11:29:49 *	fishythefish (~fishythef@2620:10d:c090:180::1:75fe) has joined
Jun 07 11:29:51 *	replay has quit (Quit: Textual IRC Client: www.textualapp.com)
Jun 07 11:30:31 <ski>	crestfallen : when you're subtituting `3' for `n' in that expression `..n..(\ff n -> ..n..)..', you should only replace the `n's that are outside the lambda expression that binds `n'
Jun 07 11:31:34 <ski>	crestfallen : this is because the `n' named to the left of `->' in that lambda expression, and used to the right of it, is really a variable `n' that is different from the outer one that you're replacing with its value `3'
Jun 07 11:31:45 <shafox>	I have this grammar of the text file. And I have an idea on how to solve it. Can someone share some light for the steps I am taking. It is in this gist: https://gist.github.com/shadow-fox/acd2ce8977e0c28c5f6fa31fe9445133
Jun 07 11:31:46 *	conal has quit (Quit: Computer has gone to sleep.)
Jun 07 11:32:10 <crestfallen>	ski let me update it
Jun 07 11:32:35 <ski>	crestfallen : also the last line says `2 *' and `2 -' where i suspect you meant to say `1 *' and `1 -' (though that last one was an incorrect substitution, as i suggested above)
Jun 07 11:33:02 <ski>	Welkin : occasionally, i've used more nested brackets :)
Jun 07 11:33:45 *	ski has to leave soon, fwiw ..
Jun 07 11:34:19 *	conal (~conal@104.128.136.50) has joined
Jun 07 11:34:31 <monochrom>	Welkin: https://www.smbc-comics.com/comic/language  >:)
Jun 07 11:34:56 <crestfallen>	check this if you have time .. :
Jun 07 11:35:18 <crestfallen>	ski https://ptpb.pw/HSNI
Jun 07 11:35:23 <ski>	monochrom :)
Jun 07 11:35:42 <ski>	crestfallen : good luck
Jun 07 11:35:45 *	ski poofs
Jun 07 11:35:49 *	ski has quit (Quit: Page closed)
Jun 07 11:35:50 <crestfallen>	thanks
Jun 07 11:36:24 <crestfallen>	anyone kindly critique this mess ? https://ptpb.pw/HSNI
Jun 07 11:36:27 *	romanix (~romanix@staticline10864.toya.net.pl) has joined
Jun 07 11:37:13 *	kuribas (~user@ptr-25vy0i7b7itcueb4awh.18120a2.ip6.access.telenet.be) has joined
Jun 07 11:38:51 *	gestone (~gestone@97-113-177-9.tukw.qwest.net) has joined
Jun 07 11:39:38 *	hackage quickcheck-classes 0.4.12 - QuickCheck common typeclasses  http://hackage.haskell.org/package/quickcheck-classes-0.4.12 (andrewthad)
Jun 07 11:39:57 *	yuuki_ (~yuuki_@p2E518B9F.dip0.t-ipconnect.de) has joined
Jun 07 11:40:02 *	dhil_ has quit (Ping timeout: 260 seconds)
Jun 07 11:40:25 *	danthemy_ (~danthemyt@50-246-66-201-static.hfc.comcastbusiness.net) has joined
Jun 07 11:41:08 <romanix>	Hi Guys! A question about hspec: I want to create some dynamic tests from rows of a csv file. In addition, I want each "describe" section to have some set-up code that runs before it. At the moment i'm using runIO to achieve this but this means that set up code runs when the test tree is being assembled rather than when the tests are executed. I know I can use beforeAll but I'm not able to pass return values from my IO action into the
Jun 07 11:41:08 <romanix>	actual tests. Any ideas?
Jun 07 11:41:42 *	arpl (~ARPL@546BB1DB.cm-12-4c.dynamic.ziggo.nl) has joined
Jun 07 11:41:55 <Welkin>	template haskell
Jun 07 11:42:04 *	arpl (~ARPL@546BB1DB.cm-12-4c.dynamic.ziggo.nl) has left
Jun 07 11:42:57 <romanix>	*correction: I can pass return values into an "it" but I need them one level up, if that makes sense (ideally in the "describe")
Jun 07 11:43:04 *	son0p has quit (Quit: Lost terminal)
Jun 07 11:43:20 *	Destol has quit (Quit: leaving)
Jun 07 11:44:05 *	yuuki_ has quit (Ping timeout: 240 seconds)
Jun 07 11:44:05 *	danthemyth has quit (Ping timeout: 256 seconds)
Jun 07 11:44:23 <romanix>	Welkin, thanks but I'd like to avoid TH if at all possible
Jun 07 11:44:42 *	nksegos (uid279024@gateway/web/irccloud.com/x-zvvwupkydoixjper) has joined
Jun 07 11:45:21 *	gestone has quit (Ping timeout: 264 seconds)
Jun 07 11:46:06 *	allenj12 (~user@gw-new.invidi.com) has joined
Jun 07 11:46:48 Python interface unloaded
Jun 07 11:46:48 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Jun  7 11:46:48 2018

**** BEGIN LOGGING AT Sat Jun  9 17:16:20 2018

Jun 09 17:16:20 *	Now talking on #haskell
Jun 09 17:16:20 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Jun 09 17:16:20 *	Topic for #haskell set by geekosaur (Thu May 17 06:28:54 2018)
Jun 09 17:16:21 *	Channel #haskell url: http://www.haskell.org/
Jun 09 17:18:04 *	tomboy64 has quit (Quit: Off to see the wizard.)
Jun 09 17:18:05 *	canaria (~canaria@2409:4070:218c:88b:65e6:7c94:2ddf:2173) has joined
Jun 09 17:18:59 *	vukasink (~vukasink@lak-117-170.wohnheime.ruhr-uni-bochum.de) has joined
Jun 09 17:19:16 *	rcdilorenzo (~rcdiloren@cpe-76-182-26-65.nc.res.rr.com) has joined
Jun 09 17:19:42 *	tomboy64 (~tomboy64@gateway/tor-sasl/tomboy64) has joined
Jun 09 17:20:17 *	dxld has quit (Quit: Bye)
Jun 09 17:20:29 <crestfallen>	hi any haskell-vim users? when vim does formatting in do blocks et al, I get warning: [-Wtabs] anyone know why that is?
Jun 09 17:20:55 *	emilypi (~emilypi@pool-100-33-104-88.nycmny.fios.verizon.net) has joined
Jun 09 17:23:00 *	canaria has quit (Ping timeout: 265 seconds)
Jun 09 17:23:23 *	TCZ (~Johnny@ip-91.189.219.200.skyware.pl) has joined
Jun 09 17:24:56 *	vukasink has quit (Quit: Leaving)
Jun 09 17:25:03 >dmwit<	btw thanks for message via lambdabot the other day. appreciate it. looking at that.
Jun 09 17:25:18 *	eschnett has quit (Quit: eschnett)
Jun 09 17:26:22 *	dxld (~dxld@80-109-145-16.cable.dynamic.surfer.at) has joined
Jun 09 17:26:52 *	rcdilorenzo (~rcdiloren@cpe-76-182-26-65.nc.res.rr.com) has left
Jun 09 17:27:04 *	rcdilorenzo (~rcdiloren@cpe-76-182-26-65.nc.res.rr.com) has joined
Jun 09 17:27:04 *	blackandblue has quit (Quit: Leaving)
Jun 09 17:30:02 <pavonia>	crestfallen: Perhaps it's using tabs for indentation which is not recommended in Haskell
Jun 09 17:31:15 *	Kundry_Wag has quit (Ping timeout: 260 seconds)
Jun 09 17:31:33 *	jle` has quit (Ping timeout: 264 seconds)
Jun 09 17:32:10 *	camsbury_ has quit (Quit: WeeChat 2.0)
Jun 09 17:32:20 *	SenasOzys has quit (Ping timeout: 245 seconds)
Jun 09 17:32:35 <crestfallen>	pavonia, thanks, I just installed a plugin via pathogen that I hope will improve things. appreciate the response   https://github.com/itchyny/vim-haskell-indent
Jun 09 17:35:48 *	twandy has quit (Quit: twandy)
Jun 09 17:36:58 Python interface unloaded
Jun 09 17:36:58 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sat Jun  9 17:36:58 2018

**** BEGIN LOGGING AT Tue Jun 26 19:19:02 2018

Jun 26 19:19:02 *	Now talking on #haskell
Jun 26 19:19:02 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | cabal update stuck? http://mail.haskell.org/pipermail/haskell/2018-January/025325.html
Jun 26 19:19:02 *	Topic for #haskell set by geekosaur (Thu May 17 06:28:54 2018)
Jun 26 19:19:02 *	Channel #haskell url: http://www.haskell.org/
Jun 26 19:19:08 *	banc (~master@82.145.37.203) has joined
Jun 26 19:19:10 <Solonarv>	shouldn't be too hard since you can look at the existing Rational to figure out things like simplifying the fraction
Jun 26 19:20:21 *	chessai has quit (Ping timeout: 240 seconds)
Jun 26 19:22:04 *	chessai (~quassel@2601:c9:c001:9ffc:38a4:94c8:7f77:9b7a) has joined
Jun 26 19:23:00 *	inxiti (~inxiti@unaffiliated/inxiti) has joined
Jun 26 19:23:38 *	hackage extensible-effects 3.0.0.0 - An Alternative to Monad Transformers  http://hackage.haskell.org/package/extensible-effects-3.0.0.0 (shergill)
Jun 26 19:24:13 *	nitaigao (~nitaigao@115.132.114.69) has joined
Jun 26 19:25:43 *	nitaigao has quit (Client Quit)
Jun 26 19:25:47 *	lagothri1 (~lagothrix@unaffiliated/lagothrix) has joined
Jun 26 19:25:48 *	antsanto has quit (Remote host closed the connection)
Jun 26 19:26:29 <crestfallen>	hi I'm trying to get monoids based on what I know so far about using foldr with the 4 functions here, (including their logical unit values): https://ptpb.pw/CKDo   I'm attempting to flesh out my understanding by using this post, https://stackoverflow.com/questions/26581100/monoid-bool-in-haskell 
Jun 26 19:27:05 <crestfallen>	if anyone wouldn't mind walking me through some of that post
Jun 26 19:27:26 *	twandy has quit (Ping timeout: 260 seconds)
Jun 26 19:28:11 <crestfallen>	first, is foldr technically a sort of monoid?
Jun 26 19:28:24 *	nitaigao (~nitaigao@115.132.114.69) has joined
Jun 26 19:28:28 <crestfallen>	or the folds both of them
Jun 26 19:29:00 *	lagothrix has quit (Ping timeout: 256 seconds)
Jun 26 19:29:11 <Solonarv>	foldr is not a monoid, and in fact doesn't have much to do with monoids
Jun 26 19:29:32 <Solonarv>	foldr is just a way to traverse lists or list-like structures
Jun 26 19:29:44 <crestfallen>	but would you say the results are very similar at least in regards to lists.?
Jun 26 19:30:32 <crestfallen>	so a monoid generalizes a way to traverse structures beyond lists, right? 
Jun 26 19:31:05 *	ystael has quit (Ping timeout: 245 seconds)
Jun 26 19:31:07 <Solonarv>	ehhh sort of?
Jun 26 19:31:28 <geekosaur>	I would say no. a monoid specifies a way you can combine two values of the same type to get another value of the same type
Jun 26 19:31:40 <geekosaur>	which is something that is often useful in the context of folds, and in other contexts
Jun 26 19:32:12 <Solonarv>	a monoid also includes an identity value; if you combine the identity value with any other value you just get that other value back
Jun 26 19:32:27 <Solonarv>	for example: (+, 0) on the integers is a monoid
Jun 26 19:33:14 *	al-damiri has quit (Quit: Connection closed for inactivity)
Jun 26 19:33:34 *	Sgeo has quit (Read error: Connection reset by peer)
Jun 26 19:33:40 <crestfallen>	yes, so based on that first paste in my initial post above.. I understand the logic behind the identities of those functions
Jun 26 19:33:58 *	theDon has quit (Ping timeout: 256 seconds)
Jun 26 19:34:14 *	tzemanovic has quit (Remote host closed the connection)
Jun 26 19:34:21 *	mud (~mud@unaffiliated/kadoban) has joined
Jun 26 19:34:58 *	Sgeo (~Sgeo@ool-18b98dd9.dyn.optonline.net) has joined
Jun 26 19:35:03 *	asjo (~asjo@virgil.koldfront.dk) has joined
Jun 26 19:35:06 <crestfallen>	but the stackoverflow post, it looks similar with the newtypes defined with what are I believe the identities...
Jun 26 19:35:19 <crestfallen>	are*
Jun 26 19:35:25 *	theDon (~td@94.134.91.51) has joined
Jun 26 19:36:09 <Solonarv>	well the thing is there are four different monoids on Bool:
Jun 26 19:36:32 *	MoarSpaceFi (~Forgot_my@65.126.126.193) has joined
Jun 26 19:36:41 *	acarrico has quit (Ping timeout: 256 seconds)
Jun 26 19:36:44 <Solonarv>	(||, False); (&&, True); (xor, False); (xnor, True)
Jun 26 19:37:22 <Solonarv>	however there can only be one Monoid Bool, so it'd have to pick one arbitrarily, which is not really great
Jun 26 19:37:26 <crestfallen>	there's a note there saying 'boolean monoids under conjunction' so yeah False is the identity of OR and True of AND just like with using the folds
Jun 26 19:37:50 <crestfallen>	what do you mean?
Jun 26 19:37:58 <Solonarv>	please stop trying to think of this in terms of folds
Jun 26 19:38:01 <Solonarv>	that isn't helpful
Jun 26 19:38:16 <geekosaur>	you can only have one implementation of a given typeclass per type
Jun 26 19:38:23 <Solonarv>	think of smashing two values together, and a special value that does nothing when smashed onto another value
Jun 26 19:38:25 <geekosaur>	so we would have to choose one of them to be "the" Monoid
Jun 26 19:38:38 *	`Guest00000 has quit (Ping timeout: 256 seconds)
Jun 26 19:38:39 <geekosaur>	but, none of them is obviously more important or special than the others
Jun 26 19:39:01 <geekosaur>	so instead of giving Bool a Monoid instance, we make newtypes (zero-cost "wrappers") and give those Monoid instances
Jun 26 19:39:01 *	`Guest00000 (~user@37.113.172.99) has joined
Jun 26 19:39:08 <geekosaur>	hence All and Any
Jun 26 19:39:13 <`Guest00000>	haskell's uniting of kinds and types feels clunky, contrasting to overall language feeling in other features
Jun 26 19:39:48 <Solonarv>	yeah, type-level haskell is a bit unpleasant syntactically
Jun 26 19:40:17 <geekosaur>	we do the same with Integer: neither (+, 0) nor (*, 1) is obviously "the" Monoid Integer, so we have Sum and Product newtypes, each with its own Monoid instance
Jun 26 19:40:51 *	sword865 (uid208942@gateway/web/irccloud.com/x-vmtboyvukfnogbyd) has joined
Jun 26 19:40:52 <crestfallen>	the tutorials I've seen are very terse including this stackoverflow, I feel. can we look at an example where we utilize the monoid Bools to do something beyond this barebones example? 
Jun 26 19:40:55 *	acarrico (~acarrico@dhcp-68-142-35-239.greenmountainaccess.net) has joined
Jun 26 19:41:22 <`Guest00000>	which generally usable haskell-like languages with more pleasant syntax for type-level are there?
Jun 26 19:41:28 *	Linter has quit (Remote host closed the connection)
Jun 26 19:41:32 <monochrom>	Monoid is supposed to have very little content.  You are not seeing terse, you're seeing nothing to talk about.
Jun 26 19:41:36 <geekosaur>	^
Jun 26 19:41:37 <crestfallen>	ie just looking at the definitions alone is tough to get a handle on it.
Jun 26 19:41:47 <geekosaur>	it;s a very simple idea that you may be trying to read too much into
Jun 26 19:42:03 <monochrom>	You have a binary operator that's associative, and you have an identity.  Done.
Jun 26 19:42:15 <crestfallen>	hmm
Jun 26 19:42:24 <geekosaur>	`Guest00000, that's something of a "religious" question (one person's generally usable is another's incomprehensible gobbledygook)
Jun 26 19:42:28 <monochrom>	If you're looking for examples, every example is like "integers and plus, done".
Jun 26 19:42:31 <geekosaur>	idris is somewhat common
Jun 26 19:42:32 <crestfallen>	I'm glad its simple at least :)
Jun 26 19:42:55 <Solonarv>	I genuinely can't think of any `Guest00000 ; there's things like idris / agda (which I haven't used) but AFAIK they're not very mature for "real-world" uses
Jun 26 19:43:02 <oisdk>	`Guest00000 really depends on what type-level stuff you want to do.
Jun 26 19:43:09 <glguy>	`Guest00000: If you want to play with the value syntax at the type level Agda's fun
Jun 26 19:43:26 <geekosaur>	but you should consider thatthe reason idris and agda exist is that people are still working out how to do things with type level
Jun 26 19:43:43 <geekosaur>	and they;re both evolving fairly quickly as a result
Jun 26 19:43:55 *	chao-tic (~chao@203.97.21.86) has joined
Jun 26 19:43:58 <geekosaur>	so your question might not be answerable yet
Jun 26 19:44:01 <`Guest00000>	oisdk: just what Haskell can, but with simpler syntax
Jun 26 19:44:27 <geekosaur>	and one branch of haskell development has been reaching in similar directions
Jun 26 19:44:33 *	morchella has quit (Ping timeout: 268 seconds)
Jun 26 19:44:37 <geekosaur>	but different ways
Jun 26 19:44:47 <`Guest00000>	i want to write an application
Jun 26 19:45:04 *	Guest39 has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jun 26 19:45:30 *	Linter (~linter@2601:2c6:4480:550:e5e9:d225:6503:4596) has joined
Jun 26 19:45:59 <Solonarv>	that's not very specific, what does it do?
Jun 26 19:46:05 *	Adluc has quit (Ping timeout: 245 seconds)
Jun 26 19:46:24 *	fragamus has quit (Read error: Connection reset by peer)
Jun 26 19:46:53 <`Guest00000>	it can use a FFI and write arbitrary bytes in memory and execute as code
Jun 26 19:47:03 *	lain0n has quit (Quit: Leaving)
Jun 26 19:47:07 *	matt179 has quit (Remote host closed the connection)
Jun 26 19:47:10 <Solonarv>	you still didn't say what it *does*
Jun 26 19:47:48 <crestfallen>	well, I lack the context to understand this, I mean, when / where would you use it? 
Jun 26 19:47:52 *	kolokot has quit (Ping timeout: 265 seconds)
Jun 26 19:48:03 *	tzemanovic (~tzemanovi@210.8.214.110) has joined
Jun 26 19:48:14 *	JuanDaugherty (~juan@98.4.124.117) has joined
Jun 26 19:48:21 *	srk has quit (Ping timeout: 265 seconds)
Jun 26 19:48:23 *	chao-tic has quit (Ping timeout: 256 seconds)
Jun 26 19:48:51 <JuanDaugherty>	it will be a neat trick if it can get arbitrary bytes to execute as code
Jun 26 19:49:04 <geekosaur>	`Guest00000, you can do that in any language. where types, and type level programming as a higher level thereof, come in is in doing things like that while avoiding causing core dumps or getting incorrect results
Jun 26 19:49:34 <oisdk>	`Guest00000 Like, if you're doing row-type things, and emulating that with a type-level list, a switch to purescript might make sense. If you're doing a lot of type-level arithmetic, you might just need a typechecker plugin. Lots of invariants etc. liquid Haskell might be the way to go. Other than that, Idris and Agda are the fully-fledged dependent languages closest to Haskell but they have downsides (Idris is still quite immature
Jun 26 19:49:34 <oisdk>	 and Agda isn't really designed for production use)
Jun 26 19:49:35 <geekosaur>	types give you one level of protection. type level programming lets you do more complex things while maintaining protection against erroneous operations
Jun 26 19:50:59 <geekosaur>	type level programming is not where you write the applicaiton at type level. it's where you put rules for application logic to prevent you from combining application logical operation in incorrect ways
Jun 26 19:51:14 <`Guest00000>	right
Jun 26 19:51:20 <`Guest00000>	just Haskell is clunky, that's all
Jun 26 19:52:05 *	gienah has quit (Ping timeout: 240 seconds)
Jun 26 19:52:22 <geekosaur>	but as yet, nobody's got solutions for now to do that "nicely"
Jun 26 19:52:26 <crestfallen>	so far I have variations of this " You have a binary operator that's associative, and you have an identity.  Done. "   but sorry when is this applied?
Jun 26 19:52:39 <glguy>	Fooling with types and getting an application written are kind of two different directions
Jun 26 19:52:48 *	sjakobi has quit (Quit: Leaving.)
Jun 26 19:52:51 <geekosaur>	agda, idris, and haskell are all exploring different ways of reaching that goal. haskell's is much younger than the ither two, and is still rather clunky as a reuslt
Jun 26 19:52:59 <monochrom>	Not very often, really.
Jun 26 19:53:06 <glguy>	crestfallen: You can worry about it later, it's not actually that important.
Jun 26 19:53:11 <geekosaur>	I'd say ":very often, so often that you doin';t notice it"
Jun 26 19:53:24 <crestfallen>	?? !!
Jun 26 19:53:24 <lambdabot>	 !!
Jun 26 19:53:47 <glguy>	Getting starting writing some programs will be more useful than picking through various type classes and small examples like this
Jun 26 19:54:22 *	StoneToad has quit (Ping timeout: 264 seconds)
Jun 26 19:54:22 <JuanDaugherty>	agda is apparently '07, idris later
Jun 26 19:54:32 <geekosaur>	you add two numbers together, you're using a monoid. you say "if condiiton_1 && condition_2 then", you're using a monoid. (or a semigroup if neither of those requires the ability to make part of that "go away" sometimes)
Jun 26 19:54:43 <`Guest00000>	crestfallen: Monoid is any thing, any sequence of whose is "equivalent" to itself with two neighboring elements combined in a fixed way into one thing again
Jun 26 19:54:43 *	sclltr (uid244649@gateway/web/irccloud.com/x-ycougboowhennunl) has joined
Jun 26 19:54:57 *	StoneToad (~StoneToad@ppp-199-167-119-208.storm.ca) has joined
Jun 26 19:54:58 *	srk (sorki@fedora/sorki) has joined
Jun 26 19:55:09 <Solonarv>	that sentence is barely even grammatically correct, let alone meaningful
Jun 26 19:55:11 <monochrom>	But you are not using the generality of monoid.
Jun 26 19:55:19 *	matt179 (~matt179@gen-119-17-160-226.ptr4.otw.net.au) has joined
Jun 26 19:55:21 *	dbmikus_ has quit (Ping timeout: 240 seconds)
Jun 26 19:55:34 <`Guest00000>	sorry
Jun 26 19:55:40 *	gentauro has quit (Ping timeout: 245 seconds)
Jun 26 19:55:43 <crestfallen>	so say you are evaluating a tree structure to find All or Any or somesuch
Jun 26 19:55:53 *	JuanDaugherty has quit (Quit: Exeunt)
Jun 26 19:55:57 <Solonarv>	you rarely need that unless you're writing a library (don't write a library)
Jun 26 19:56:11 *	Jesin has quit (Quit: Leaving)
Jun 26 19:56:24 <monochrom>	I bet you that every time you count with natural numbers you don't think you're using category theory, despite the fact that a lot of category theory textbooks actually begin with that example (the numbers are the objects, the morphisms point from i to i+1).
Jun 26 19:56:28 *	Adluc (Adluc@base48.cz) has joined
Jun 26 19:56:41 <glguy>	You're "using Monoids" when you're writing code that's generic in an arbitrary Monoid and you're using the laws the class is documented in the making and reasoning of that code
Jun 26 19:56:51 <`Guest00000>	woo, the category of natural numbers
Jun 26 19:56:57 <oisdk>	crestfallen one place that it's useful is that, for some types, foldr mappend mempty is more efficient, whereas for others, foldl mappend mempty is. When you call foldMap you allow the implementer of the foldable instance to choose the better one
Jun 26 19:56:58 *	hexo_ (hexo@base48.cz) has joined
Jun 26 19:57:01 <nshepperd>	my favourite monoids are lists and strings
Jun 26 19:57:32 *	gentauro (~gentauro@xd520f28b.cust.hiper.dk) has joined
Jun 26 19:57:39 <`Guest00000>	Solonarv: i was trying to express how i think of monoids in most general way
Jun 26 19:58:09 <glguy>	crestfallen: Some of this stuff would be more obvious if you had some practice just writing programs first
Jun 26 19:58:27 *	xtreak (~xtreak@42.111.139.160) has joined
Jun 26 19:58:30 *	mud has quit (Ping timeout: 265 seconds)
Jun 26 19:58:36 <glguy>	It's been a couple of years now, so it's not too early to start
Jun 26 19:58:47 <crestfallen>	the funny thing about haskell, is things seem simple after I agonize over them long enough. I think I'm autistic seriously don't take offense. thanks, gotta go. many thanks kind people cafe's closing.
Jun 26 19:59:10 *	altjsus (~altjsus@213.87.148.35) has joined
Jun 26 19:59:13 *	mud (~mud@unaffiliated/kadoban) has joined
Jun 26 19:59:29 <geekosaur>	that's just how experience works
Jun 26 19:59:40 <crestfallen>	yes thanks all !
Jun 26 19:59:49 Python interface unloaded
Jun 26 19:59:49 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue Jun 26 19:59:49 2018

**** BEGIN LOGGING AT Wed Jul  4 16:41:49 2018

Jul 04 16:41:49 *	Now talking on #haskell
Jul 04 16:41:49 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Earlier mass kick due to password compromise http://freenode.net/news/security-update-rpa
Jul 04 16:41:49 *	Topic for #haskell set by glguy (Fri Jun 29 08:59:31 2018)
Jul 04 16:41:49 *	Channel #haskell url: http://www.haskell.org/
Jul 04 16:42:35 *	blackberry9900 (~androirc@114.242.248.249) has joined
Jul 04 16:42:57 *	fmixing has quit (Ping timeout: 248 seconds)
Jul 04 16:45:41 *	XorSwap (~XorSwap@wnpgmb016qw-ppp-103-253.dynamic.bellmts.net) has joined
Jul 04 16:46:58 *	jackdk (98537540@gateway/web/cgi-irc/kiwiirc.com/ip.152.83.117.64) has joined
Jul 04 16:47:23 *	theelous3 has quit (Ping timeout: 256 seconds)
Jul 04 16:48:35 *	Kundry_Wag has quit (Ping timeout: 240 seconds)
Jul 04 16:49:42 *	ChaiTRex (~ChaiTRex@gateway/tor-sasl/chaitrex) has joined
Jul 04 16:49:51 *	bairyn (~bairyn@unaffiliated/bob0) has joined
Jul 04 16:50:50 *	louispan (~textual@203.38.203.134) has joined
Jul 04 16:51:19 *	tromp (~tromp@ip-217-103-3-94.ip.prioritytelecom.net) has joined
Jul 04 16:52:19 *	solidstat (~SolidStat@84-236-74-233.pool.digikabel.hu) has joined
Jul 04 16:53:07 <butterthebuddha>	Why can't f : a -> b exist, but g : Void -> a can?
Jul 04 16:53:36 *	YongJoon (~Thunderbi@121.67.187.140) has joined
Jul 04 16:54:11 <pong>	you can't prove any arbitrary implication?
Jul 04 16:54:29 <pong>	but if the premise is false the implication is always vacously true?
Jul 04 16:54:53 *	lumm has quit (Quit: lumm)
Jul 04 16:55:31 <butterthebuddha>	pong: I'm looking for an explanation in terms of types, not propositions
Jul 04 16:55:38 *	ericsagnes has quit (Ping timeout: 255 seconds)
Jul 04 16:55:57 *	tromp has quit (Ping timeout: 240 seconds)
Jul 04 16:56:23 *	hvr has quit (Read error: Connection reset by peer)
Jul 04 16:57:17 *	HallaSurvivor has quit (Ping timeout: 276 seconds)
Jul 04 16:57:36 *	diwo (~diwo@elasticpath-gigabitethernet0-1.elasticpath.com) has joined
Jul 04 17:00:31 *	codesoup (~codesoup@2607:fea8:e220:70:9186:fa2c:4369:bdb) has joined
Jul 04 17:01:47 *	Deidde (~Deide@90.255.101.162) has joined
Jul 04 17:02:10 *	blankhart has quit (Ping timeout: 264 seconds)
Jul 04 17:02:19 *	diwo has quit (Client Quit)
Jul 04 17:02:28 *	lambda-11235 (~lambda-11@campus-037-103.ucdavis.edu) has joined
Jul 04 17:02:37 *	kvda (~kvda@unaffiliated/kvda) has joined
Jul 04 17:03:38 <geekosaur>	neither can exist, or rather, both admit only _|_.
Jul 04 17:03:40 <pgiarrusso>	butterthebuddha: ignoring bottoms, no value inhabits void, so the function g can’t be given an argument and it doesn’t need to return an actual value. But f might be called and needs to create a value of type b, but it can’t (ultimately, by parametricity), so f can’t exist. If you consider bottoms/nontermination, both functions can return bottom in fact
Jul 04 17:04:00 *	matt179 (~matt179@103.233.242.9) has joined
Jul 04 17:04:09 <pgiarrusso>	geekosaur: doesn’t Void admit an absurd eliminator in Haskell?
Jul 04 17:04:21 <pgiarrusso>	Am i doing too much agda maybe?
Jul 04 17:04:31 <geekosaur>	absurd is sort of a special bottom, since it can never actually be called
Jul 04 17:05:14 *	Deide has quit (Ping timeout: 265 seconds)
Jul 04 17:05:19 <geekosaur>	(barring unsafeCoerce, and iirc there was actually a bug report about that once because someone managed to call it that way and it didn't explode)
Jul 04 17:05:22 *	ammazza (~ammazza@130.155.160.155) has joined
Jul 04 17:05:37 <newhoggy>	Does anyone know how to make TemplateHaskell work with DuplicateRecordFields?
Jul 04 17:06:03 <pikajude>	what do you mean by "work" exactly
Jul 04 17:06:12 <pgiarrusso>	geekosaur: not quite, in a pure total world absurd is a case match with no cases, while the other thing just can’t be written
Jul 04 17:06:14 <geekosaur>	my point was more that you can define both functions, they just can't produce results, the former because it can only thrw an exception or infinite loop, the latter because ther's no way to call it barring unsafeCoerce
Jul 04 17:06:22 *	graphene has quit (Remote host closed the connection)
Jul 04 17:06:31 *	Tops2 (~Tobias@dyndsl-095-033-076-247.ewe-ip-backbone.de) has joined
Jul 04 17:06:37 <geekosaur>	so I suppose it depends ion which way you're looking at it from
Jul 04 17:06:39 <dmwit>	geekosaur: This... is not correct. The function with an empty pattern match on Void is not bottom.
Jul 04 17:06:56 <dmwit>	It can't be called except by passing it bottom. But that is not the same thing.
Jul 04 17:07:01 *	graphene (~graphene@46.101.134.251) has joined
Jul 04 17:07:03 <newhoggy>	We have this issue with using TemplateHaskell and DuplicateRecordFields together:
Jul 04 17:07:10 <newhoggy>	https://www.irccloud.com/pastebin/ShnJUFzs/
Jul 04 17:07:23 *	conal (~conal@108.62.5.35) has joined
Jul 04 17:07:58 <newhoggy>	Our template Haskell splice contains duplicate fields and we thought we could just add the DuplicateRecordFields extensions to make that legal.
Jul 04 17:08:03 *	jmcarthur (~jmcarthur@2601:86:100:1620::1) has joined
Jul 04 17:08:28 <dmwit>	a -> b can only be bottom or const bottom. This is not true of Void -> a.
Jul 04 17:08:36 *	diwo (~diwo@elasticpath-gigabitethernet0-1.elasticpath.com) has joined
Jul 04 17:09:08 <pikajude>	newhoggy are you using the field name as an accessor function
Jul 04 17:09:28 <pgiarrusso>	dmwit: agreed
Jul 04 17:09:29 *	ian_andrich has quit (Ping timeout: 256 seconds)
Jul 04 17:09:44 <newhoggy>	It might may be the case.  I need to ask.
Jul 04 17:10:00 <newhoggy>	Do I need to do something special in that case?
Jul 04 17:10:25 *	diwo has quit (Client Quit)
Jul 04 17:10:54 <newhoggy>	We generate instances, which access those fields, so the answer is yes.
Jul 04 17:11:02 *	HallaSurvivor (~chris@c-24-3-141-135.hsd1.pa.comcast.net) has joined
Jul 04 17:11:27 *	k4rtik has quit (Ping timeout: 245 seconds)
Jul 04 17:11:29 <lyxia>	actually, absurd is equivalent to const bottom, set theoretically there's just one function with an empty graph.
Jul 04 17:11:37 <dmwit>	pgiarrusso++ for a great, on-point response to butterthebuddha
Jul 04 17:12:00 *	conal has quit (Ping timeout: 265 seconds)
Jul 04 17:12:10 *	b0oh (~b0oh@c83-248-97-13.bredband.comhem.se) has joined
Jul 04 17:13:02 <dmwit>	hu
Jul 04 17:13:03 <dmwit>	huh
Jul 04 17:13:05 <pgiarrusso>	lyxia: if you consider bottom, Void is not empty, so these aren’t empty graphs
Jul 04 17:13:32 <dmwit>	Nevertheless both const bottom and case void of {} have the same graph, even after considering bottoms.
Jul 04 17:14:43 <pgiarrusso>	Agreed. They’re indeed the same, and they both differ from bottom (as we know, eta fails)
Jul 04 17:14:53 *	tzemanovic has quit (Remote host closed the connection)
Jul 04 17:15:05 <dmwit>	geekosaur: Seems I owe you an apology. =)
Jul 04 17:15:25 *	tzemanovic (~tzemanovi@210.8.214.110) has joined
Jul 04 17:15:32 *	son0p_ has quit (Quit: Lost terminal)
Jul 04 17:15:46 <dmwit>	Every time I disagree with geekosaur I am taught a lesson eventually. =P
Jul 04 17:15:57 *	scottschmidt1 has quit (Ping timeout: 240 seconds)
Jul 04 17:16:09 <geekosaur>	enh. I'm out at my limits and not always understanding. so I usually end up learning something too
Jul 04 17:16:16 <pgiarrusso>	dmwit: well, absurd is still not bottom
Jul 04 17:16:42 <pgiarrusso>	But arguably “const bottom” does count as “a special sort of bottom”
Jul 04 17:16:50 *	b0oh has quit (Ping timeout: 265 seconds)
Jul 04 17:17:06 *	darjeeling_ has quit (Quit: WeeChat 2.1)
Jul 04 17:17:23 *	scottschmidt1 (~scottschm@75-134-202-117.dhcp.vinc.in.charter.com) has joined
Jul 04 17:17:28 *	tomsen has quit (Quit: leaving)
Jul 04 17:17:33 <dmwit>	pgiarrusso: Well, the original question was to contrast the impossibility of `a -> b` and `Void -> a`.
Jul 04 17:17:53 <dmwit>	But it turns out there is no contrast. For both the only choices are bottom and const bottom.
Jul 04 17:18:01 *	darjeeling_ (~darjeelin@205.175.106.57) has joined
Jul 04 17:18:19 *	matt179 has quit (Remote host closed the connection)
Jul 04 17:18:46 <dmwit>	Except in Haskell, of course, where bottoms are distinguishable. =D
Jul 04 17:18:58 *	matt179 (~matt179@gen-119-17-160-226.ptr4.otw.net.au) has joined
Jul 04 17:19:35 *	tom1 is now known as tomsen
Jul 04 17:19:47 <dmwit>	(I actually have a coworker that wants to see an alternate domain theory developed that accounts for distinguishable bottoms more carefully, so that we can give a serious grounding to Haskell's magic abilities here.)
Jul 04 17:20:04 <lyxia>	const bottom is more acceptable for Void -> a than a -> b.
Jul 04 17:20:11 *	blankhart (~blankhart@pool-100-38-242-183.nycmny.fios.verizon.net) has joined
Jul 04 17:20:22 <pgiarrusso>	dmwit: oh right. All that is true in Haskell, and the question’s assumptions aren’t quite correct. The question’s assumptions hold in a total language, where the original answer should apply
Jul 04 17:20:26 *	R3burn (~androirc@2a02:a453:482e:1:1534:9a41:f2f9:dc2e) has joined
Jul 04 17:20:45 *	diwo (~diwo@elasticpath-gigabitethernet0-1.elasticpath.com) has joined
Jul 04 17:21:05 <pgiarrusso>	Anyway, I’ll happily retreat to the total world!
Jul 04 17:21:49 *	R3burn (~androirc@2a02:a453:482e:1:1534:9a41:f2f9:dc2e) has left
Jul 04 17:22:05 *	twanvl has quit (Read error: Connection reset by peer)
Jul 04 17:22:43 *	ebsen (~ebsene@96-2-2-86-dynamic.midco.net) has joined
Jul 04 17:24:16 *	Kundry_Wag (~Kundry_Wa@186.214.34.58) has joined
Jul 04 17:24:20 *	R3burn (~androirc@2a02:a453:482e:1:1534:9a41:f2f9:dc2e) has joined
Jul 04 17:26:00 *	adetokunbo (~adetokunb@ah010099.dynamic.ppp.asahi-net.or.jp) has joined
Jul 04 17:26:03 *	MissingNoIOI (~MissingNo@ip-88-153-48-162.hsi04.unitymediagroup.de) has joined
Jul 04 17:27:57 *	Khisanth has quit (Ping timeout: 240 seconds)
Jul 04 17:28:26 *	fmixing (~fmixing@5.18.211.209) has joined
Jul 04 17:30:24 <newhoggy>	Looks like the lens library uses destructors instead of field accessor to avoid DuplicateRecordFields issue when generating a TemplateHaskell splice
Jul 04 17:30:39 *	scottschmidt1 has quit (Remote host closed the connection)
Jul 04 17:31:00 *	tromp (~tromp@ip-217-103-3-94.ip.prioritytelecom.net) has joined
Jul 04 17:32:33 *	zachk has quit (Quit: Leaving)
Jul 04 17:32:43 *	fmixing has quit (Ping timeout: 256 seconds)
Jul 04 17:33:28 *	Tops2 has quit (Read error: Connection reset by peer)
Jul 04 17:33:29 *	david__ (~david@dslb-088-071-043-006.088.071.pools.vodafone-ip.de) has left ("Konversation terminated!")
Jul 04 17:33:43 *	jao has quit (Remote host closed the connection)
Jul 04 17:34:27 *	scottschmidt1 (~scottschm@75-134-202-117.dhcp.vinc.in.charter.com) has joined
Jul 04 17:35:14 *	tzemanovic has quit (Remote host closed the connection)
Jul 04 17:35:27 *	refold has quit (Ping timeout: 240 seconds)
Jul 04 17:35:46 *	tromp has quit (Ping timeout: 264 seconds)
Jul 04 17:35:55 *	andyhuzhill (~andyhuzhi@14.23.45.178) has joined
Jul 04 17:36:22 *	emilypi has quit (Ping timeout: 264 seconds)
Jul 04 17:37:11 *	andyhuzhill has quit (Read error: Connection reset by peer)
Jul 04 17:37:24 *	MissingNoIOI has quit (Quit: MissingNoIOI)
Jul 04 17:37:32 *	andyhuzhill (~andyhuzhi@14.23.45.178) has joined
Jul 04 17:38:02 *	ebsen has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jul 04 17:38:39 *	andyhuzhill has quit (Client Quit)
Jul 04 17:39:05 *	andyhuzhill (~andyhuzhi@14.23.45.178) has joined
Jul 04 17:39:15 *	scottschmidt1 has quit (Ping timeout: 260 seconds)
Jul 04 17:40:24 *	R3burn (~androirc@2a02:a453:482e:1:1534:9a41:f2f9:dc2e) has left ("AndroIRC")
Jul 04 17:40:50 *	diwo has quit (Quit: diwo)
Jul 04 17:41:20 *	dddddd has quit (Remote host closed the connection)
Jul 04 17:41:27 *	Khisanth (~Khisanth@pool-108-46-1-159.nycmny.east.verizon.net) has joined
Jul 04 17:44:11 *	Deidde has quit (Quit: Seeee yaaaa)
Jul 04 17:45:01 *	matt179 has quit (Remote host closed the connection)
Jul 04 17:45:21 *	jao (~jao@pdpc/supporter/professional/jao) has joined
Jul 04 17:46:48 *	halogenandtoast (~mmongeau@73.235.13.160.dy.iij4u.or.jp) has joined
Jul 04 17:47:08 *	blackberry9900 has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
Jul 04 17:48:45 *	matt179 (~matt179@103.233.242.9) has joined
Jul 04 17:49:17 *	tomsen has quit (Ping timeout: 276 seconds)
Jul 04 17:49:50 *	matt179 has quit (Read error: Connection reset by peer)
Jul 04 17:49:55 *	matt179_ (~matt179@103.233.242.9) has joined
Jul 04 17:50:21 *	blackberry9900 (~androirc@114.242.248.249) has joined
Jul 04 17:50:36 *	scottschmidt1 (~scottschm@75-134-202-117.dhcp.vinc.in.charter.com) has joined
Jul 04 17:50:38 <arahael>	Destructors? In Haskell?
Jul 04 17:51:07 <koz_>	Does accelerate-llvm-native generate SIMD code or something?
Jul 04 17:51:46 <Axman6>	I don't know the library directly, but you should be able to, LLVM has good SIMD support if you use vector types
Jul 04 17:52:20 *	Kundry_Wag_ (~Kundry_Wa@177.159.76.177) has joined
Jul 04 17:53:30 <newhoggy>	Destructors as in pattern matching.
Jul 04 17:53:53 *	Kundry_Wag has quit (Ping timeout: 248 seconds)
Jul 04 17:54:23 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Wed Jul  4 17:54:23 2018

**** BEGIN LOGGING AT Fri Jul 13 19:29:01 2018

Jul 13 19:29:01 *	Now talking on #haskell
Jul 13 19:29:02 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Earlier mass kick due to password compromise http://freenode.net/news/security-update-rpa
Jul 13 19:29:02 *	Topic for #haskell set by glguy (Fri Jun 29 08:59:31 2018)
Jul 13 19:29:02 *	Channel #haskell url: http://www.haskell.org/
Jul 13 19:29:38 *	droplet has quit (Ping timeout: 244 seconds)
Jul 13 19:29:41 *	ChaiTRex has quit (Remote host closed the connection)
Jul 13 19:30:06 *	ChaiTRex (~ChaiTRex@gateway/tor-sasl/chaitrex) has joined
Jul 13 19:30:40 *	tromp has quit (Ping timeout: 244 seconds)
Jul 13 19:31:54 *	dfeuer (~dfeuer@wikimedia/Dfeuer) has joined
Jul 13 19:33:46 *	Lowl3v3l (~Lowl3v3l@dslb-002-203-114-201.002.203.pools.vodafone-ip.de) has joined
Jul 13 19:33:47 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jul 13 19:34:09 *	patlv has quit (Remote host closed the connection)
Jul 13 19:34:12 *	matt179 (~matt179@61.69.249.31) has joined
Jul 13 19:34:28 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Jul 13 19:34:37 *	ddellacosta (~ddellacos@ool-182d2857.dyn.optonline.net) has joined
Jul 13 19:34:38 *	patlv (~patlv@user-24-214-137-19.knology.net) has joined
Jul 13 19:34:38 *	k4rtik (~kartik@207.98.72.251) has joined
Jul 13 19:34:39 *	k4rtik has quit (Changing host)
Jul 13 19:34:39 *	k4rtik (~kartik@unaffiliated/k4rtik) has joined
Jul 13 19:34:44 *	connrs (~connrs@conners.plus.com) has joined
Jul 13 19:34:51 *	ChaiTRex has quit (Ping timeout: 250 seconds)
Jul 13 19:35:12 *	thebnq has quit (Ping timeout: 245 seconds)
Jul 13 19:35:35 *	emmanuel_erc has quit (Ping timeout: 276 seconds)
Jul 13 19:36:09 *	thebnq (~bnq@104.225.134.14) has joined
Jul 13 19:36:24 *	brandly has quit (Ping timeout: 260 seconds)
Jul 13 19:37:20 *	graphene has quit (Remote host closed the connection)
Jul 13 19:37:34 *	lagothri1 has quit (Ping timeout: 260 seconds)
Jul 13 19:37:40 *	lassulus_ (~lass@c-base/crew/lassulus) has joined
Jul 13 19:37:43 <blankhart>	i am experiencing intense nostalgia for open union types like unsealed traits in scala
Jul 13 19:37:59 *	graphene (~graphene@46.101.134.251) has joined
Jul 13 19:38:27 *	matt179 has quit (Ping timeout: 240 seconds)
Jul 13 19:38:45 *	hackage streamly 0.4.1 - Beautiful Streaming, Concurrent and Reactive Composition  http://hackage.haskell.org/package/streamly-0.4.1 (harendra)
Jul 13 19:38:51 *	patlv has quit (Ping timeout: 240 seconds)
Jul 13 19:39:21 *	connrs has quit (Ping timeout: 264 seconds)
Jul 13 19:39:21 *	ddellacosta has quit (Ping timeout: 264 seconds)
Jul 13 19:40:05 *	graphene has quit (Remote host closed the connection)
Jul 13 19:40:27 *	mounty has quit (Ping timeout: 256 seconds)
Jul 13 19:40:29 *	thebnq has quit (Ping timeout: 244 seconds)
Jul 13 19:40:50 *	graphene (~graphene@46.101.134.251) has joined
Jul 13 19:40:57 *	k4rtik has quit (Ping timeout: 240 seconds)
Jul 13 19:41:09 *	lassulus has quit (Ping timeout: 264 seconds)
Jul 13 19:41:10 *	lassulus_ is now known as lassulus
Jul 13 19:41:19 *	goodcodeguy (~textual@2600:1700:9590:ee68:2dfd:bf8b:c29b:3d84) has joined
Jul 13 19:41:38 *	thebnq (~bnq@104.225.134.14) has joined
Jul 13 19:41:51 *	goodcodeguy (~textual@2600:1700:9590:ee68:2dfd:bf8b:c29b:3d84) has left
Jul 13 19:42:01 *	mounty (~mounty@n106-70-126-153.rdl1.qld.optusnet.com.au) has joined
Jul 13 19:43:55 *	kapil___ (uid36151@gateway/web/irccloud.com/x-mvwfovcergimqciy) has joined
Jul 13 19:44:46 *	oter (~oter@c-71-231-193-220.hsd1.wa.comcast.net) has joined
Jul 13 19:45:19 *	djtyml (~djtyml@39-10-130-223.adsl.fetnet.net) has joined
Jul 13 19:46:08 *	nshepperd (~nshepperd@198.144.156.49) has joined
Jul 13 19:47:12 *	djtyml_ has quit (Ping timeout: 244 seconds)
Jul 13 19:49:05 *	pie_ has quit (Ping timeout: 248 seconds)
Jul 13 19:49:16 *	jchia_1 has quit (Ping timeout: 244 seconds)
**** ENDING LOGGING AT Fri Jul 13 19:50:15 2018

**** BEGIN LOGGING AT Wed Aug  8 10:36:27 2018

Aug 08 10:36:27 *	Now talking on #haskell
Aug 08 10:36:27 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Aug 08 10:36:27 *	Topic for #haskell set by glguy!~glguy@haskell/developer/glguy (Thu Aug  2 09:06:51 2018)
Aug 08 10:36:27 *	Channel #haskell url: http://www.haskell.org/
Aug 08 10:37:23 *	Major_Biscuit (~Major_Bis@31-35-11.netrun.cytanet.com.cy) has joined
Aug 08 10:37:57 <crestfallen>	what does "up to" isomorphism mean? I keep coming up to this phrase without an explanation. thanks
Aug 08 10:38:05 *	simukis has quit (Ping timeout: 240 seconds)
Aug 08 10:38:51 <cocreature>	crestfallen: usually it’s something like “equal up to isomorphism” which means that two things are not identical but that there exists an isomorphism between the two
Aug 08 10:39:14 <cocreature>	the stronger version of that is “up to a unique isomorphism” in which case the isomorphism also has to be unique
Aug 08 10:39:22 *	fakenerd has quit (Remote host closed the connection)
Aug 08 10:40:16 <crestfallen>	thanks cocreature working with that
Aug 08 10:41:30 <crestfallen>	I also see "natural isomorphism" 
Aug 08 10:42:07 *	halogenandtoast (~mmongeau@73.235.13.160.dy.iij4u.or.jp) has joined
Aug 08 10:42:29 <cocreature>	natural isomorphisms are natural transformations where both components are isomorphisms
Aug 08 10:42:41 <mnoonan>	read it as "no choices required", to first approximation
Aug 08 10:42:59 <madnight>	crestfallen: i can recommend https://github.com/hmemcpy/milewski-ctfp-pdf all the stuff you were asking is perfectly explained by Bartosz Milewski
Aug 08 10:43:36 *	shdown (~v@83.220.236.80) has joined
Aug 08 10:43:45 *	Guest1815 has quit (Read error: Connection reset by peer)
Aug 08 10:44:03 *	tlaxkit has quit (Quit: Saliendo...)
Aug 08 10:44:08 *	Guest1815 (~Seb@pa49-197-116-217.pa.qld.optusnet.com.au) has joined
Aug 08 10:44:21 *	xanderio has quit (Ping timeout: 240 seconds)
Aug 08 10:44:45 *	Kundry_Wag (~Kundry_Wa@177.99.150.53) has joined
Aug 08 10:44:51 *	iAmerikan has quit (Ping timeout: 240 seconds)
Aug 08 10:46:46 *	halogenandtoast has quit (Ping timeout: 256 seconds)
Aug 08 10:47:43 *	graphene has quit (Remote host closed the connection)
Aug 08 10:48:00 *	nomeata (~jojo@pool-72-78-102-242.phlapa.fios.verizon.net) has joined
Aug 08 10:48:21 *	graphene (~graphene@46.101.134.251) has joined
Aug 08 10:48:33 <crestfallen>	thanks ALL much appreciated
Aug 08 10:48:59 *	conal (~conal@209.209.238.176) has joined
Aug 08 10:49:36 <crestfallen>	yeah I was watching some of the bartosz videos. sometimes I can't hear the dude
Aug 08 10:50:00 *	shdown has quit (Quit: WeeChat 2.1)
Aug 08 10:50:44 *	Guest1815 has quit (Read error: Connection reset by peer)
Aug 08 10:51:04 *	Guest1815 (~Seb@pa49-197-116-217.pa.qld.optusnet.com.au) has joined
Aug 08 10:51:44 <madnight>	in such cases it's better to read the dude
Aug 08 10:52:23 <crestfallen>	word
Aug 08 10:52:26 *	noipmups has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Aug 08 10:52:35 *	Guest1815 has quit (Read error: Connection reset by peer)
Aug 08 10:52:51 *	noipmups (~textual@95.85.211.111) has joined
Aug 08 10:52:53 *	Guest1815 (~Seb@pa49-197-116-217.pa.qld.optusnet.com.au) has joined
Aug 08 10:53:13 *	noipmups has quit (Client Quit)
Aug 08 10:53:36 *	noipmups (~textual@95.85.211.111) has joined
Aug 08 10:53:50 *	fryguybo1 (~fryguybob@173-243-161-100.tvc-ip.com) has joined
Aug 08 10:54:00 *	noipmups has quit (Client Quit)
Aug 08 10:54:19 <ab9rf>	dude word
Aug 08 10:54:22 *	graphene has quit (Read error: Connection reset by peer)
Aug 08 10:54:22 *	davr0s (~textual@host81-155-69-87.range81-155.btcentralplus.com) has joined
Aug 08 10:54:26 *	noipmups (~textual@95.85.211.111) has joined
Aug 08 10:54:32 *	pavonia has quit (Quit: Bye!)
Aug 08 10:54:33 *	silver has quit (Read error: Connection reset by peer)
Aug 08 10:54:35 *	silver_ (~silver@93.85.45.18) has joined
Aug 08 10:54:46 *	noipmups has quit (Client Quit)
Aug 08 10:54:46 *	iridioid has quit (Ping timeout: 244 seconds)
Aug 08 10:54:46 *	anemecek (~adamnemec@cpe-172-91-11-147.socal.res.rr.com) has joined
Aug 08 10:55:24 *	Overfloerror (~Overfloer@85.220.147.176) has joined
Aug 08 10:55:26 <crestfallen>	geezer
Aug 08 10:55:41 <ab9rf>	who you callin' a geezer?
Aug 08 10:56:21 *	cryptomonoid (~cryptomon@81.7.237.234) has joined
Aug 08 10:56:41 <madnight>	dude
Aug 08 10:56:58 *	fryguybob has quit (Ping timeout: 256 seconds)
Aug 08 10:57:58 *	plugin has quit (Read error: Connection reset by peer)
Aug 08 10:59:18 *	danza__ (~francesco@host248-105-dynamic.12-79-r.retail.telecomitalia.it) has joined
Aug 08 10:59:55 *	iridioid (~smasta@casewireless02.CWRU.Edu) has joined
Aug 08 11:01:27 *	Lokathor has quit (Ping timeout: 240 seconds)
Aug 08 11:02:14 *	butterthebuddha (~butterthe@2601:400:c100:c70:807b:b4d7:2aed:c207) has joined
Aug 08 11:02:21 *	danza_ has quit (Ping timeout: 240 seconds)
Aug 08 11:02:48 <crestfallen>	geezer == mate, buddy
Aug 08 11:04:00 *	andresbach[m] (andresbach@gateway/shell/matrix.org/x-ozhjjtscdovwxuqi) has joined
Aug 08 11:04:11 <madnight>	(==) up to isomorphism
Aug 08 11:04:32 *	Overfloerror has quit (Quit: Mutter: www.mutterirc.com)
Aug 08 11:04:36 *	tombusby has quit (Remote host closed the connection)
Aug 08 11:04:55 *	tombusby (~tombusby@gateway/tor-sasl/tombusby) has joined
Aug 08 11:05:07 <Boarders>	does anyone know if there is an easy way to run stylish haskell across all source files in a dirctory recursively?
Aug 08 11:05:14 *	maqbool has quit (Quit: maqbool)
Aug 08 11:05:29 *	maqbool (~maqbool@196.207.75.30) has joined
Aug 08 11:05:46 *	danza__ has quit (Ping timeout: 264 seconds)
Aug 08 11:05:58 *	arpl1 (~ARPL@546BB1DB.cm-12-4c.dynamic.ziggo.nl) has joined
Aug 08 11:06:52 <ggVGc>	never heard of stylish haskell
Aug 08 11:07:32 <ggVGc>	madnight: in most cases it's better to read the shit
Aug 08 11:07:37 *	dpyro (~dpyro@66-169-160-49.dhcp.ftwo.tx.charter.com) has joined
Aug 08 11:07:37 <ggVGc>	instead of listening to the shit
Aug 08 11:07:41 <Boarders>	it is a code formatter
Aug 08 11:08:26 *	cryptomonoid has quit (Ping timeout: 256 seconds)
Aug 08 11:08:51 <ggVGc>	ah, I only knew about cassandra
Aug 08 11:08:56 <ggVGc>	looks good
Aug 08 11:10:04 *	replay (~replay@pdpc/supporter/student/replay) has joined
Aug 08 11:10:22 *	dpyro has quit (Client Quit)
Aug 08 11:10:30 *	rihards (~rihards@balticom-142-78-50.balticom.lv) has joined
Aug 08 11:11:01 *	rihards has quit (Client Quit)
Aug 08 11:11:11 <madnight>	i use the haskell formatter brittany https://github.com/lspitzner/brittany
Aug 08 11:11:15 *	nickoh (~nhamilton@82-132-230-183.dab.02.net) has joined
Aug 08 11:11:33 *	piark_ (~piark@2001:41d0:fe56:1600:a5c2:ff6:8556:2513) has joined
Aug 08 11:11:36 *	seppia (~seppia@37.160.121.68) has joined
Aug 08 11:11:58 <Zemyla>	So on Windows, I've never been able to get stack working, and I kind of want stack so I can have multiple Haskell installations without having to flatten and reinstall every time Haskell gets upgraded?
Aug 08 11:12:24 *	rihards (~rihards@balticom-142-78-50.balticom.lv) has joined
Aug 08 11:12:26 <Boarders>	madnight: looks pretty nice though that demonstration gif looks like it is from 1995
Aug 08 11:14:27 <hololeap>	lyxia: i'm starting to see how difficult this problem actually is
Aug 08 11:16:29 <hololeap>	how would everyone feel about splitting `empty` out of Alternative and into a seperate class? http://dpaste.com/1KKB7VD
Aug 08 11:16:31 *	alexdao (~alexdao@static-96-239-100-245.nycmny.fios.verizon.net) has joined
Aug 08 11:17:05 *	Kundry_Wag has quit (Ping timeout: 240 seconds)
Aug 08 11:17:21 *	merijn (~merijn@a212-238-239-156.adsl.xs4all.nl) has joined
Aug 08 11:17:32 <dmwit>	Zemyla: You already don't have to flatten everything. Multiple versions of GHC are perfectly capable of coexisting without any external tooling.
Aug 08 11:17:33 Python interface unloaded
Aug 08 11:17:33 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Wed Aug  8 11:17:33 2018

**** BEGIN LOGGING AT Thu Aug  9 19:27:37 2018

Aug 09 19:27:37 *	Now talking on #haskell
Aug 09 19:27:37 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Aug 09 19:27:37 *	Topic for #haskell set by glguy!~glguy@haskell/developer/glguy (Thu Aug  2 09:06:51 2018)
Aug 09 19:27:37 *	Channel #haskell url: http://www.haskell.org/
Aug 09 19:28:25 *	banc (~master@82.145.37.203) has joined
Aug 09 19:28:27 *	replay has quit (Quit: Textual IRC Client: www.textualapp.com)
Aug 09 19:28:30 *	weeirc8088 (~user@2.53.37.226) has joined
Aug 09 19:29:34 <crestfallen>	hi this program, a game called 'life', is from the hutton book. It works for a few 'cascades' as expected: a generation of the game moves diagonally from left to right, downwards. then it hangs my machines (debian and a mac) anyone see why its hanging? thanks https://ptpb.pw/ZCZr
Aug 09 19:30:05 <crestfallen>	*multiple 'generations' move diagonally ....
Aug 09 19:30:26 <JuanDaugherty>	impressive if you mean you have to reset the processor to reboot
Aug 09 19:30:51 *	cemerick has quit (Ping timeout: 240 seconds)
Aug 09 19:30:56 *	perspectival has quit (Quit: Leaving.)
Aug 09 19:31:13 <crestfallen>	it fully hangs everything, cursor, mouse events
Aug 09 19:31:58 <JuanDaugherty>	and the control keys for a new screen group, tty? how do you proceed?
Aug 09 19:32:00 <MarcelineVQ>	likely eats all your ram, given your description
Aug 09 19:32:20 <crestfallen>	otherwise it looks ok ?
Aug 09 19:32:32 *	dcoutts_ has quit (Ping timeout: 256 seconds)
Aug 09 19:32:47 *	lagothri1 (~lagothrix@unaffiliated/lagothrix) has joined
Aug 09 19:34:42 *	brunooo (6b9f1108@gateway/web/freenode/ip.107.159.17.8) has joined
Aug 09 19:35:15 <geekosaur>	rotaerk, because it needs to evaluate (a,b) to evaluate the guard to evaluate (a,b), since it expects to fall through to another guard or pattern
Aug 09 19:35:31 *	lagothrix has quit (Ping timeout: 244 seconds)
Aug 09 19:35:48 <geekosaur>	that is, it has to select that alternative ot get (5,6), but you want to test the result in order to select that alternative
Aug 09 19:36:02 <geekosaur>	it doesnt evaluate differently when there are no other guards/patterns
Aug 09 19:36:30 *	bbrodriguez has quit (Ping timeout: 256 seconds)
Aug 09 19:36:40 *	quipa_ is now known as quipa
Aug 09 19:37:08 *	lambda-11235 has quit (Quit: WeeChat 2.2)
Aug 09 19:37:10 *	bradcomp (~bradcomp@c-67-161-161-17.hsd1.ca.comcast.net) has joined
Aug 09 19:37:36 *	conal has quit (Quit: Computer has gone to sleep.)
Aug 09 19:38:05 <crestfallen>	JuanDaugherty, control C / D have no effect. I think I'll go with MarcelineVQ 's response. thanks
Aug 09 19:38:13 *	maqbool has quit (Quit: maqbool)
Aug 09 19:38:26 *	chao-tic (~chao@203.97.21.86) has joined
Aug 09 19:38:27 <MarcelineVQ>	crestfallen: looks comparable to other game of life exercises I can find, how are you running it?  life glider?
Aug 09 19:38:49 <MarcelineVQ>	after about 10 secs on my pc it goes nuts on ram usesage
Aug 09 19:39:00 <JuanDaugherty>	crestfallen, I wouldn't expect them to if the process was crated, I referred to supervisor/kernel events
Aug 09 19:39:12 <JuanDaugherty>	*cratered
Aug 09 19:39:20 *	bbrodriguez (~Bender_Be@200.194.41.165) has joined
Aug 09 19:39:40 <monochrom>	rotaerk: Following Haskell 2010 section 4.4.3.2, you have (a,b) = case () of () | a<b -> (5,6).
Aug 09 19:40:12 *	glguy gives voice to brunooo
Aug 09 19:40:20 *	weeirc8088 has quit (Ping timeout: 256 seconds)
Aug 09 19:40:40 *	joshsh (~josh@c-67-164-104-206.hsd1.ca.comcast.net) has joined
Aug 09 19:41:03 *	twandy has quit (Quit: twandy)
Aug 09 19:41:21 <brunooo>	I'm trying to pipe the data into the conduit stream but I don't really know how, I'm trying to use the http-conduit package
Aug 09 19:41:22 <crestfallen>	MarcelineVQ, I wonder why that process looks pretty straightforward.
Aug 09 19:42:02 <rotaerk>	geekosaur, monochrom, ah, thanks
Aug 09 19:42:10 *	tomsen has quit (Ping timeout: 256 seconds)
Aug 09 19:43:16 *	conal (~conal@104.255.240.10) has joined
Aug 09 19:43:41 *	kvda (~kvda@unaffiliated/kvda) has joined
Aug 09 19:48:00 <MarcelineVQ>	crestfallen: it seems to run quite differently when compiled
Aug 09 19:48:20 <MarcelineVQ>	when coimpiled it's much slower, for some reason, and isn't eating ram
Aug 09 19:48:31 <MarcelineVQ>	not yet at least
Aug 09 19:49:16 <MarcelineVQ>	wait n = sequence_ [return () | _ <- [1..n]]   is weird as heck as a way to time things as well
Aug 09 19:49:20 *	etcinit[m] (etcinitmat@gateway/shell/matrix.org/x-iezuovuvsivtvbzy) has joined
Aug 09 19:49:51 <MarcelineVQ>	try compiling anyway  you'll need a line like   main = life glider  to do so
Aug 09 19:50:08 *	rschmukler has quit (Remote host closed the connection)
Aug 09 19:50:22 <crestfallen>	yeah thanks a lot I don't understand those IO functions yet, the book at this point is painfully terse. ok will do ...
Aug 09 19:53:35 *	johnw has quit (Ping timeout: 256 seconds)
Aug 09 19:53:46 <MarcelineVQ>	seems like ghci is getting through the wait faster and also holding onto things in memory, changing wait 500000 to wait 5000 and compling it made it run the same speed as the ghci one without eating ram
Aug 09 19:54:45 <MarcelineVQ>	it's a little repetative though, pattern-wise. is this an exercise or just an example? what parts of this are you supposed to write if any?
Aug 09 19:55:13 *	olligobber (olligobber@gateway/vpn/privateinternetaccess/olligobber) has joined
**** BEGIN LOGGING AT Thu Aug  9 19:57:57 2018

Aug 09 19:57:57 *	Now talking on #haskell
Aug 09 19:57:57 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Aug 09 19:57:57 *	Topic for #haskell set by glguy!~glguy@haskell/developer/glguy (Thu Aug  2 09:06:56 2018)
Aug 09 19:57:57 *	Channel #haskell url: http://www.haskell.org/
Aug 09 19:59:23 <crestfallen>	sorry had to reboot again MarcelineVQ . many thanks. cafe is closing ... let me know if you find an alternative to wait func .. 
Aug 09 19:59:38 *	twandy (~Thunderbi@2606:7400:c16::f252) has joined
Aug 09 19:59:40 Python interface unloaded
Aug 09 19:59:40 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Aug  9 19:59:40 2018

**** BEGIN LOGGING AT Fri Aug 10 18:49:22 2018

Aug 10 18:49:22 *	Now talking on #haskell
Aug 10 18:49:22 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Aug 10 18:49:22 *	Topic for #haskell set by glguy!~glguy@haskell/developer/glguy (Thu Aug  2 09:06:51 2018)
Aug 10 18:49:22 *	Channel #haskell url: http://www.haskell.org/
Aug 10 18:49:56 *	loc has quit (Remote host closed the connection)
Aug 10 18:50:42 *	tromp (~tromp@ip-217-103-3-94.ip.prioritytelecom.net) has joined
Aug 10 18:50:53 *	olligobber (olligobber@gateway/vpn/privateinternetaccess/olligobber) has joined
Aug 10 18:50:53 *	MoarSpaceFi (~Forgot_my@65.126.126.193) has joined
Aug 10 18:51:02 *	twandy has quit (Ping timeout: 244 seconds)
Aug 10 18:51:05 *	loc (~loc@206.189.179.144) has joined
Aug 10 18:52:15 <crestfallen>	hi while trying to build a stack project, I get the error: Missing dependency on a foreign library: * Missing C library: G  This problem can usaully be solved by installing the system package that provides this library (you may need the dev version).
Aug 10 18:52:38 <dmwit>	mniip: I think it's not *just* ?callStack::CallStack.
Aug 10 18:52:52 <dmwit>	mniip: Because I think the compiler magically makes a value for that IP.
Aug 10 18:53:05 <dmwit>	(Also the docs say not to rely on the fact that it is implemented using IPs.)
Aug 10 18:53:27 <crestfallen>	anyone know that package? I tried to install libudev-dev to no avail
Aug 10 18:53:37 <crestfallen>	on a debian stretch machine
Aug 10 18:54:22 <dmwit>	Oh man, I can never remember what mechanism cabal uses to detect C libraries.
Aug 10 18:54:26 <dmwit>	Is it pkg-config?
Aug 10 18:54:35 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Aug 10 18:54:44 <EvanR>	"libg is a runtime library for g++."
Aug 10 18:55:47 *	tromp has quit (Ping timeout: 268 seconds)
Aug 10 18:55:51 <sclv>	dmwit: it can use that
Aug 10 18:56:28 <sclv>	https://cabal.readthedocs.io/en/latest/developing-packages.html?highlight=pkg-config#pkg-field-pkgconfig-depends
Aug 10 18:56:51 *	sedeki has quit (Quit: Textual IRC Client: www.textualapp.com)
Aug 10 18:57:14 *	darjeeling_ has quit (Ping timeout: 244 seconds)
Aug 10 18:57:42 <crestfallen>	the error is way longer, I thought that was the gist of it
Aug 10 18:58:17 <crestfallen>	btw I upgraded stack
Aug 10 18:59:20 *	redfish64 (~tim@45.32.52.10) has joined
Aug 10 19:00:13 *	ZorbaLua has quit (Read error: Connection reset by peer)
Aug 10 19:00:22 <crestfallen>	anyone familiar with that error?
Aug 10 19:00:33 *	hucksy_ (~hucksy@p4FF4368E.dip0.t-ipconnect.de) has joined
Aug 10 19:01:22 *	Kundry_Wag (~Kundry_Wa@177.99.148.175) has joined
Aug 10 19:03:35 *	banc has quit (Quit: ZNC - http://znc.in)
Aug 10 19:03:57 *	bbrodriguez has quit (Ping timeout: 244 seconds)
Aug 10 19:03:58 *	hucksy has quit (Ping timeout: 256 seconds)
Aug 10 19:04:59 *	oisdk (~textual@207.244.108.244.adsl.inet-telecom.org) has joined
Aug 10 19:05:04 *	Kundry_Wag_ has quit (Ping timeout: 272 seconds)
Aug 10 19:05:59 <dmwit>	crestfallen: I think what sclv is telling you is that you haven't provided enough information yet.
Aug 10 19:06:13 <dmwit>	e.g. perhaps sharing a cabal file would be in order at this point.
Aug 10 19:07:05 *	LastTalon_ is now known as LastTalon
Aug 10 19:07:44 <crestfallen>	one moment thanks dmwit 
Aug 10 19:08:15 *	silver has quit (Read error: Connection reset by peer)
Aug 10 19:09:16 <crestfallen>	sclv dmwit this is the proj cabal file https://ptpb.pw/tszx
Aug 10 19:10:24 *	lortabac (~lortabac@tpt25-1-88-183-165-187.fbx.proxad.net) has joined
Aug 10 19:14:15 <monochrom>	Yes please try to stick to "HasCallStack =>" and pretend you don't know the implementation detail. :)
Aug 10 19:14:41 <sclv>	crestfallen: i don't see anything in that cabal file that seems to imply a dep on a C library?
Aug 10 19:15:12 *	lortabac has quit (Ping timeout: 272 seconds)
Aug 10 19:15:42 *	eschnett has quit (Quit: eschnett)
Aug 10 19:17:26 <crestfallen>	sclv, sorry clueless here. Just want to compile a textbook program
Aug 10 19:18:05 *	hamishmack has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Aug 10 19:19:03 <monochrom>	I don't recall any Hutton textbook example that needs a foreign library.
Aug 10 19:19:20 *	banc (~master@82.145.37.203) has joined
Aug 10 19:19:23 *	loc has quit (Remote host closed the connection)
Aug 10 19:19:33 <monochrom>	OTOH it certainly doesn't anticipate stack either.
Aug 10 19:19:39 *	loc (~loc@206.189.179.144) has joined
Aug 10 19:19:58 <crestfallen>	I'm in the directory, using stack build life-exe. is that wrong?
Aug 10 19:20:08 <sclv>	crestfallen: can you paste the full error in a pastebin?
Aug 10 19:21:29 *	twandy (~Thunderbi@2606:7400:c16::f252) has joined
Aug 10 19:22:13 <crestfallen>	sclv, thanks its a widow-maker https://ptpb.pw/W2Pt
Aug 10 19:23:34 *	theDon has quit (Ping timeout: 260 seconds)
Aug 10 19:23:49 <crestfallen>	how would anyone understand stack
Aug 10 19:24:19 <ab9rf>	osmosis
Aug 10 19:25:19 *	theDon (~td@94.134.91.220) has joined
Aug 10 19:25:58 *	quipa_ has quit (Ping timeout: 272 seconds)
Aug 10 19:26:15 <Gurkenglas>	crestfallen, I think "stack exec pacman -- --help" could get you somewhere
Aug 10 19:27:28 <sclv>	crestfallen: ok so somehow this isn't building just that cabal file, but something that depends on the opengl package, and the missing library isn't "G" but "GL"
Aug 10 19:27:42 *	emmanuel_erc (~user@2601:5c7:8301:f16::1a8a) has joined
Aug 10 19:28:25 <sclv>	the cabal file you pasted had no deps at all!
Aug 10 19:28:39 <Gurkenglas>	(helped me install things iirc)
Aug 10 19:28:51 <sclv>	so the first thing to figure out is why the heck you have OpenGLRaw in your deps at all
Aug 10 19:28:57 <crestfallen>	sclv, sorry I need a total walkthrough if you have time
Aug 10 19:29:00 <sclv>	and if you actually intend to or not
Aug 10 19:29:18 <sclv>	ok -- so what files are in the directory? did you create them all or did you check them out from somewhere?
Aug 10 19:31:03 <Gurkenglas>	On second thought, that four-letter guy sounds like he has more of an idea on this stuff ^^
Aug 10 19:31:17 <crestfallen>	they were created: there's an app directory and an src with a module Lib in it
Aug 10 19:31:24 *	kerrhau (~kerrhau@2600:1700:7aa1:2ee0::44) has joined
Aug 10 19:31:24 *	kerrhau has quit (Changing host)
Aug 10 19:31:24 *	kerrhau (~kerrhau@unaffiliated/aceahmedmoh) has joined
Aug 10 19:31:38 <sclv>	crestfallen: figured it out!
Aug 10 19:31:44 <sclv>	you called `stack build life` not `life-exe`
Aug 10 19:31:53 <crestfallen>	tried it
Aug 10 19:31:56 <sclv>	so stack is trying to build the `life` package from stackage!
Aug 10 19:31:58 <sclv>	https://hackage.haskell.org/package/life
Aug 10 19:32:06 *	a3Dman (~3Dman@unaffiliated/a3dman) has joined
Aug 10 19:32:13 <sclv>	or ackage
Aug 10 19:32:15 <sclv>	hackage
Aug 10 19:32:15 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Aug 10 19:32:30 <sclv>	and that package, which is not yours, is what has the dependency on opengl
Aug 10 19:32:49 <Gurkenglas>	You looked in the reverse dependencies of opengl? :D
Aug 10 19:32:49 *	ensYde (~ensYde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net) has joined
Aug 10 19:32:52 <sclv>	try just a raw `stack build` or just try `cbal build`
Aug 10 19:32:53 *	m0rphism1 has quit (Ping timeout: 244 seconds)
Aug 10 19:32:54 *	marvin2 has quit (Ping timeout: 260 seconds)
Aug 10 19:32:54 *	Kundry_Wag has quit (Remote host closed the connection)
Aug 10 19:33:07 <sclv>	Gurkenglas: no i looked at the error message and saw what the argument was :-)
Aug 10 19:33:28 *	Kundry_Wag (~Kundry_Wa@177.99.148.175) has joined
Aug 10 19:34:01 *	yahb has quit (Ping timeout: 268 seconds)
Aug 10 19:34:36 <crestfallen>	life-exe doesn't work
Aug 10 19:34:54 <crestfallen>	what about that src directory should I delete that?
Aug 10 19:34:59 <sclv>	no
Aug 10 19:35:14 *	lagothri1 has quit (Ping timeout: 260 seconds)
Aug 10 19:35:27 *	hamishmack (~textual@121-73-30-206.cable.telstraclear.net) has joined
Aug 10 19:35:44 <crestfallen>	I tried running it from the parent directory, the project directory, and the app directory
Aug 10 19:35:47 <sclv>	what about `stack build` with no arguments at all?
Aug 10 19:35:54 <sclv>	you should run it from the directory containing the cabal file
Aug 10 19:36:13 <mniip>	ugh
Aug 10 19:36:13 <mniip>	anyone here ever write a Setup.hs file?
Aug 10 19:36:15 <crestfallen>	"The specified targets matched no packages
Aug 10 19:36:16 <crestfallen>	"
Aug 10 19:36:46 <sclv>	ok.. ummm rename the package?
Aug 10 19:37:01 <sclv>	sorry, i could pinpoint the error but i'm more of a cabal user
Aug 10 19:37:09 *	badpixel17 (~badpixel@113.66.0.40) has joined
Aug 10 19:37:10 <sclv>	not sure the exact target syntax of stack
Aug 10 19:37:10 *	badpixel17 has quit (Killed (Sigyn (Spam is off topic on freenode.)))
Aug 10 19:37:38 <sclv>	crestfallen: possibly you need a stack.yaml file to use it at all?
Aug 10 19:37:39 *	kapil___ (uid36151@gateway/web/irccloud.com/x-vvpdslzmwxyccwlv) has joined
Aug 10 19:37:56 *	loc has quit (Remote host closed the connection)
Aug 10 19:37:57 *	yahb (xsbot@178.219.36.155) has joined
Aug 10 19:37:58 *	yahb has quit (Changing host)
Aug 10 19:37:58 *	yahb (xsbot@haskell/bot/yahb) has joined
Aug 10 19:38:09 *	Kundry_Wag has quit (Ping timeout: 260 seconds)
Aug 10 19:38:18 <crestfallen>	I have package.yaml file
Aug 10 19:38:46 *	jackoe (~jackoe@pool-108-51-203-201.washdc.fios.verizon.net) has joined
Aug 10 19:39:03 <sclv>	you need a stack.yaml
Aug 10 19:39:12 <sclv>	https://docs.haskellstack.org/en/stable/stack_yaml_vs_cabal_package_file/
Aug 10 19:39:40 <crestfallen>	the yaml files says - executables: life-exe
Aug 10 19:39:55 <crestfallen>	ok thanks I'll sleep on it sclv
Aug 10 19:40:08 <sclv>	at least i could point to the error :-)
Aug 10 19:40:14 <crestfallen>	how do I run it with cabal commands?
Aug 10 19:40:31 <sclv>	just type "cabal build"
Aug 10 19:40:48 <sclv>	you have no deps so no reason to do anything more complicated i'd otherwise recommend
Aug 10 19:41:05 <sclv>	(assuming you have a ghc installed that cabal can find, and not just the one managed by stack)
Aug 10 19:41:38 *	loc (~loc@206.189.179.144) has joined
Aug 10 19:41:59 <sclv>	you should do so in the directory where the cabal file is, with the src/ subdirectory
Aug 10 19:43:09 <crestfallen>	I think cabal compiled it fine. what's the cabal exec command?
Aug 10 19:43:10 *	loc has quit (Remote host closed the connection)
Aug 10 19:43:18 *	loc (~loc@206.189.179.144) has joined
Aug 10 19:43:38 <sclv>	you just run the compiled binary directly
Aug 10 19:44:05 *	jackoe has quit (Ping timeout: 240 seconds)
Aug 10 19:44:42 <sclv>	it'll be somewhere in dist/build/
Aug 10 19:45:31 <crestfallen>	getting warmer
Aug 10 19:46:39 *	alexteves has quit (Remote host closed the connection)
Aug 10 19:47:20 <crestfallen>	sclv, bingo!
Aug 10 19:47:42 <sclv>	:-)
Aug 10 19:48:05 <crestfallen>	running beautifully. hope Marceline*VQ smiles .. thanks sclv kindly 
Aug 10 19:48:17 <sclv>	note that as you move to more complex projects with real deps you should learn to use "cabal new-build" (which is the new way) or sandboxing (which is slightly older but also works) to manage them more modularly
Aug 10 19:48:28 <sclv>	but this was the fastest way to just get you up and running for simple low-dep stuff
Aug 10 19:48:52 *	cemerick (~cemerick@c-73-47-112-232.hsd1.ma.comcast.net) has joined
Aug 10 19:49:02 <crestfallen>	sclv, cool I need to take notes on all this !
Aug 10 19:49:48 *	ddellacosta has quit (Ping timeout: 260 seconds)
Aug 10 19:50:51 *	twandy has quit (Ping timeout: 240 seconds)
Aug 10 19:56:21 *	dan_f (~dan@24.148.38.233) has joined
**** BEGIN LOGGING AT Sun Aug 12 15:28:45 2018

Aug 12 15:28:45 *	Now talking on #haskell
Aug 12 15:28:45 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Aug 12 15:28:45 *	Topic for #haskell set by glguy!~glguy@haskell/developer/glguy (Thu Aug  2 09:06:51 2018)
Aug 12 15:28:46 *	Channel #haskell url: http://www.haskell.org/
Aug 12 15:32:07 *	alexdao (~alexdao@static-96-239-100-245.nycmny.fios.verizon.net) has joined
Aug 12 15:33:27 *	aarvar has quit (Ping timeout: 240 seconds)
Aug 12 15:33:27 *	Thra11 has quit (Ping timeout: 240 seconds)
Aug 12 15:34:21 *	jeltsch has quit (Ping timeout: 240 seconds)
Aug 12 15:35:22 *	gregberns has quit (Quit: gregberns)
Aug 12 15:36:30 <crestfallen>	hi I went through an exercise online where a non-recursive lambda exp (for factorial) is passed to fixx which I believe is an approximation of the y-combinator :     fixx :: (t -> t) -> t ; fixx f = f (fixx f). I'm trying to discern between that and something that I'm reading about F-albebras. newtype Fix f = Fx (f (Fix f))
Aug 12 15:36:49 *	zearen has quit (Ping timeout: 248 seconds)
Aug 12 15:36:56 *	alexdao has quit (Ping timeout: 256 seconds)
Aug 12 15:37:56 <crestfallen>	I guess this produces trees where you don't need recursion within the type 
Aug 12 15:38:47 *	zearen (~zearen@pool-74-98-255-4.pitbpa.fios.verizon.net) has joined
Aug 12 15:39:00 *	slack1256 has quit (Ping timeout: 272 seconds)
Aug 12 15:39:05 *	valentinbuza (~valentinb@unaffiliated/valentinbuza) has joined
Aug 12 15:39:12 <crestfallen>	the article says this : In Haskell, we can express the fix point of a type constructor f as a type: newtype Fix f = Fx (f (Fix f))
Aug 12 15:39:45 <benzrf>	crestfallen: yep
Aug 12 15:40:01 <crestfallen>	is this used often?
Aug 12 15:40:05 <hpc>	crestfallen: mentally erase data constructors and they're identical modulo capitalization
Aug 12 15:40:07 <benzrf>	this is basically a fixed point operator on type functions
Aug 12 15:40:13 <hpc>	that Fix type in particular isn't used terribly often
Aug 12 15:40:18 <hpc>	but variations like Free are
Aug 12 15:40:31 <crestfallen>	what exactly is fixed point
Aug 12 15:40:33 <hpc>	and the concept of making a data type matching some desired recursion scheme is very common
Aug 12 15:41:01 <benzrf>	crestfallen: for a function f, a fixed point of f is a value x such that f x = x
Aug 12 15:41:37 <crestfallen>	If I may paste something (again) ...
Aug 12 15:41:54 <benzrf>	we don't have equality of types here, but we do have something like a natural isomorphism f (Fix f) ~ Fix f
Aug 12 15:42:05 <hpc>	that's actual equality there btw, it doesn't mean f = id :D
Aug 12 15:42:34 <hpc>	(if you've gotten in the habit of reading equations typed on a keyboard as haskell)
Aug 12 15:43:48 <hpc>	the newtype breaks that type-level equality in practice, but it also stops the compiler from trying to compute the type forever
Aug 12 15:44:45 <crestfallen>	right x is the lambda in this case and not identity but one moment please
Aug 12 15:45:06 <crestfallen>	https://ptpb.pw/ZbZD
Aug 12 15:45:09 *	heebo (~user@cpc96302-lewi18-2-0-cust642.2-4.cable.virginm.net) has joined
Aug 12 15:45:11 *	Lynxium has quit (Quit: Leaving)
Aug 12 15:45:20 <crestfallen>	this I can pretty much follow ^
Aug 12 15:45:43 *	SpinTensor has quit (Quit: WeeChat 2.2)
Aug 12 15:45:51 <crestfallen>	somewhere it said that this is as close to the y-combinator that haskell approaches or somesuch
Aug 12 15:46:30 <crestfallen>	so I can't really follow all of what you guys were saying
Aug 12 15:46:34 <crestfallen>	however
Aug 12 15:46:41 <hpc>	fix and the y combinator compute the same thing
Aug 12 15:46:51 <hpc>	however the y combinator's definition relies on being in an untyped environment
Aug 12 15:47:10 <crestfallen>	interesting cool
Aug 12 15:47:14 <hpc>	we care about equational reasoning anyway so yeah, it's literally as close as you can get
Aug 12 15:47:21 <hpc>	they're extensionally equal :D
Aug 12 15:47:28 <crestfallen>	so this (bartosz) article is saying...
Aug 12 15:48:10 *	gregberns (~gregberns@ip68-109-169-42.ph.ph.cox.net) has joined
Aug 12 15:48:18 <crestfallen>	something about fractally recursive structures.... ?
Aug 12 15:49:02 <crestfallen>	" After infinitely many iterations we should get to a fix point where further iterations make no difference. "
Aug 12 15:49:04 *	gregberns has quit (Client Quit)
Aug 12 15:50:06 *	HaskellLord69 has quit (Ping timeout: 256 seconds)
Aug 12 15:50:31 <crestfallen>	hpc could you go into equational reasoning a bit?
Aug 12 15:50:41 <hpc>	crestfallen: for that, generally in math, mentally replace "infinitely many" or "infinitely close" or "at infinity" with their equivalent description in terms of limits
Aug 12 15:50:41 <crestfallen>	by example
Aug 12 15:51:04 <hpc>	i think in that article he was speaking more casually to get the idea across to programmers, instead of being mathematically precise
Aug 12 15:51:31 <hpc>	so equational reasoning, roughly speaking
Aug 12 15:51:39 <crestfallen>	ok thanks, but the concept is not much different from what I pasted using the factorial lambda
Aug 12 15:51:44 <hpc>	means that the equals sign in haskell definitions is an actual equals sign in your brain
Aug 12 15:51:51 *	hackage free-algebras 0.0.4.0 - Free algebras in Haskell.  http://hackage.haskell.org/package/free-algebras-0.0.4.0 (coot)
Aug 12 15:51:58 <hpc>	(not to the compiler because it still has to know what's being defined, just in your head)
Aug 12 15:52:06 <hpc>	so if you see a definition f x = y
Aug 12 15:52:15 <hpc>	mathematically that's f(x) = y
Aug 12 15:52:40 *	drewbert (~drewbert@50-202-68-254-static.hfc.comcastbusiness.net) has joined
Aug 12 15:52:52 <hpc>	and then elsewhere you see g(z) = f(z)
Aug 12 15:52:57 <hpc>	you can follow the equality
Aug 12 15:53:02 <hpc>	g(z) = f(z) = y
Aug 12 15:53:04 <hpc>	g(z) = y
Aug 12 15:53:15 <hpc>	and then anywhere you see g(z), etc etc
Aug 12 15:53:21 *	gentauro has quit (Ping timeout: 240 seconds)
Aug 12 15:53:35 <hpc>	in programming, what that looks like is
Aug 12 15:53:45 <hpc>	anywhere you see an expression, you can give it a name and refer to that name
Aug 12 15:54:00 <hpc>	and the reverse, anywhere you see the name of something you can mentally replace it with its definition
Aug 12 15:54:14 <crestfallen>	just like "body" in my example
Aug 12 15:54:14 <hpc>	f = \x y -> complicated expression
Aug 12 15:54:22 *	efeuska has quit (Quit: efeuska)
Aug 12 15:54:24 <hpc>	somethingElse = f tomato tomahtoe
Aug 12 15:54:54 <hpc>	is with equational reasoning, the same as somethingElse = (\x y -> complicated expression) tomato tomahtoe
Aug 12 15:55:12 *	gentauro (~gentauro@xd520f2a3.cust.hiper.dk) has joined
Aug 12 15:55:27 <hpc>	you can apply that equational reasoning to fix even, and that's how you know that fix f = f (f (f (f (...
Aug 12 15:55:33 <hpc>	just expanding it step by step
Aug 12 15:55:40 *	sedeki has quit (Quit: Textual IRC Client: www.textualapp.com)
Aug 12 15:55:45 <hpc>	substitute fix in fix's body, with its definition
Aug 12 15:56:03 <crestfallen>	so its a kind of pattern matching
Aug 12 15:56:32 <crestfallen>	?
Aug 12 15:56:44 *	nan` has quit (Ping timeout: 272 seconds)
Aug 12 15:56:48 <crestfallen>	the author says something else interesting...
Aug 12 15:57:27 <hpc>	i wouldn't call it pattern matching
Aug 12 15:57:27 *	fmixing (~fmixing@5.18.211.209) has joined
Aug 12 15:57:39 *	philippD has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
Aug 12 15:57:52 <hpc>	i would probably call it algebra of some kind, if pressed for a word?
Aug 12 15:58:18 <hpc>	maybe there's "pattern matching" in there, the same way in high school algebra you would look for certain patterns of formulas to apply which equational rules to, to make it easier to solve
Aug 12 15:58:36 <crestfallen>	so technically a fixed point is not recursive though it looks something like it
Aug 12 15:58:37 <hpc>	but that's unrelated to the math itself, it's just optimizing your brain for school problems ;)
Aug 12 15:59:10 <crestfallen>	is my comment correct? ^
Aug 12 15:59:29 <hpc>	(actually algebra's still not quite the right word)
Aug 12 15:59:43 <crestfallen>	f-algebra?
Aug 12 16:00:15 <crestfallen>	but what is "finding" the fixpoint ? : But recursion can be abstracted away to uncover the real primitives behind expressions. The trick is to define a non-recursive function and then find its fixed point.
Aug 12 16:00:36 <hpc>	so this is getting close to the part of math where i personally don't care (the technically-not-recursive bit)
Aug 12 16:00:45 <hpc>	iirc that's right and fix is... inductive?
Aug 12 16:01:16 <hpc>	in my mind they're sort of traversing the same self-referential kind of structure in different logical directions
Aug 12 16:01:35 *	twandy has quit (Ping timeout: 240 seconds)
Aug 12 16:01:37 <crestfallen>	hmm, yeah that's what I was sensing
Aug 12 16:02:08 <hpc>	crestfallen: when you ask about finding the fixed point, do you mean in general math or how haskell computation resolves what some (fix f) is?
Aug 12 16:02:20 *	fmixing has quit (Ping timeout: 268 seconds)
Aug 12 16:02:25 *	jedws (~jedws@60.227.232.67) has joined
Aug 12 16:03:21 <hpc>	actually i guess at this point we should start talking correctly about how many fixed points there are to a function
Aug 12 16:03:31 <crestfallen>	but if it has a purpose where you couldn't use a recursive tree structure then I should probably understand the distinction.   well hpc is the fix point other than the value being resolved?
Aug 12 16:03:33 <hpc>	because one can have one or many
Aug 12 16:03:40 <hpc>	(or maybe none)
Aug 12 16:03:47 <crestfallen>	ok please if you have time
Aug 12 16:04:08 <hpc>	i'll talk about how (fix f) is computed in haskell
Aug 12 16:04:12 <crestfallen>	please do discuss that
Aug 12 16:04:17 <hpc>	because we're in #haskell, and also because that's what i know best
Aug 12 16:04:31 <hpc>	so, fixed points are /any/ x such that x = f x
Aug 12 16:04:32 <crestfallen>	yeah in the context of haskell
Aug 12 16:05:11 <hpc>	and additionally, as an importantly related tangent, values have a notion of "definedness"
Aug 12 16:05:18 <hpc>	which forms a partial ordering
Aug 12 16:05:42 <hpc>	bottom is the least-defined
Aug 12 16:06:03 <hpc>	and then things get more-defined from there based on how far into the value bottom is being pushed
Aug 12 16:06:12 <hpc>	but it's a partial order, things can be incomparable
Aug 12 16:06:18 *	banc has quit (Ping timeout: 260 seconds)
Aug 12 16:06:22 <hpc>	True and False are incomparable, but both more defined than bottom
Aug 12 16:06:44 <hpc>	(bottom : bottom : bottom) is more defined than (bottom : bottom) is more defined than bottom
Aug 12 16:06:50 <hpc>	so, all this in mind
Aug 12 16:07:00 <hpc>	what fix computes is just the least fixed point
Aug 12 16:07:09 <hpc>	if the least fixed point is bottom, bottom is what you get
Aug 12 16:07:18 <hpc>	even if 1 or 2 or "banana" are also valid
Aug 12 16:07:37 <hpc>	so let's take a simple example, f = (1:)
Aug 12 16:07:40 <hpc>	> fix (1:)
Aug 12 16:07:42 <lambdabot>	 [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1...
Aug 12 16:08:43 <hpc>	first we evaluate (fix (1:)) to whnf - weak head normal form - we evaluate to the "root" of the value's "tree", which is the first data constructor
Aug 12 16:08:56 <hpc>	fix (1:) = (1:) (fix (1:))
Aug 12 16:09:05 <hpc>	= 1 : (fix (1:))
Aug 12 16:09:15 <hpc>	and we have our root constructor, (:)
Aug 12 16:09:22 <hpc>	and happen to have also gotten the first element, 1
Aug 12 16:09:45 <hpc>	and now we're done, that's actually it
Aug 12 16:10:21 *	weeirc8088 (~user@2.53.29.145) has joined
Aug 12 16:10:25 <crestfallen>	so I've been trying to handwrite evaluation order lately and ...
Aug 12 16:10:30 <hpc>	if the thing /consuming/ (fix (1:)) decides to drill deeper into that value, then we go deeper
Aug 12 16:10:53 <crestfallen>	it really looks quite similar to hand-writing a recursive functions step by step output
Aug 12 16:10:53 *	Ariakenom has quit (Quit: Leaving)
Aug 12 16:11:36 <crestfallen>	if I am correct
Aug 12 16:11:39 *	ZeuPiark (~piark@2001:41d0:fe56:1600:7087:42ac:d7fd:c4ae) has joined
Aug 12 16:11:39 *	banc (~master@217.151.98.168) has joined
Aug 12 16:11:50 *	Kundry_Wag has quit (Remote host closed the connection)
Aug 12 16:12:02 <hpc>	they're both the same thing, if i understand you right
Aug 12 16:12:12 <hpc>	in both cases, you're just tracing haskell evaluation
Aug 12 16:12:14 <hpc>	full stop
Aug 12 16:12:22 *	Kundry_Wag (~Kundry_Wa@177.157.147.17) has joined
Aug 12 16:12:27 <crestfallen>	ok thanks, that's why I was looking for a distinction to sink my teeth into..
Aug 12 16:13:45 <crestfallen>	really appreciate it hpc .. the language is what sometimes throws me off, but I see a structure going through its paces and I pretty much can see what is happening
Aug 12 16:14:13 <hpc>	reading my scrollback, i left that explanation of least fixed points kind of half-baked - read http://blog.ezyang.com/2010/12/hussling-haskell-types-into-hasse-diagrams/
Aug 12 16:14:14 *	alice_ has quit (Remote host closed the connection)
Aug 12 16:14:56 <crestfallen>	well you said that about True/False being ...
Aug 12 16:15:11 <crestfallen>	incomparable
Aug 12 16:15:24 *	lambda-11235 (~lambda-11@72.173.16.124) has joined
Aug 12 16:15:24 <hpc>	yeah
Aug 12 16:15:54 *	dcoutts has quit (Ping timeout: 268 seconds)
Aug 12 16:15:57 *	reactormonk has quit (Ping timeout: 240 seconds)
Aug 12 16:15:59 *	punicorn43 has quit (Remote host closed the connection)
Aug 12 16:16:15 <crestfallen>	youre saying incomparable things cannot be put in order.
Aug 12 16:16:21 *	nan` (~nan`@cpe-75-86-97-227.wi.res.rr.com) has joined
Aug 12 16:16:26 <hpc>	oh yeah, so let's take an example where the least fixed point is actually bottom
Aug 12 16:16:32 <hpc>	and that uses that incomparability
Aug 12 16:16:33 *	eschnett (~eschnett@ktnron0916w-lp140-03-70-29-74-56.dsl.bell.ca) has joined
Aug 12 16:16:44 <hpc>	f = not
Aug 12 16:16:49 <hpc>	what is fix not?
Aug 12 16:16:58 *	Kundry_Wag has quit (Ping timeout: 244 seconds)
Aug 12 16:17:10 <crestfallen>	True == not not
Aug 12 16:17:27 <crestfallen>	False == not not not
Aug 12 16:17:49 *	ddellacosta (~ddellacos@ool-182d29e7.dyn.optonline.net) has joined
Aug 12 16:17:54 <hpc>	it never converges
Aug 12 16:18:41 <crestfallen>	so its not a logical value in that context
Aug 12 16:18:45 <hpc>	or you can consider, if between iterations you're stepping from one value to an incomparable one, it's invalid and you can just stop there (i think)
Aug 12 16:19:09 <hpc>	so let's follow it the way ezyang's blog posts want us to
Aug 12 16:19:33 <hpc>	you start with bottom
Aug 12 16:19:45 <hpc>	then apply not to it, and see where you move to in the partial ordering of definedness
Aug 12 16:19:49 <hpc>	you stay at bottom
Aug 12 16:19:51 <hpc>	boom, there's your fixed point
Aug 12 16:20:07 <hpc>	if you do the same with fix (1:), it goes
Aug 12 16:20:14 <hpc>	bottom -> 1 : bottom -> 1 : 1 : bottom -> ...
Aug 12 16:20:25 <hpc>	up and up the (:) side of the partial ordering
Aug 12 16:20:35 <hpc>	and not criss-crossinng to the [] side
Aug 12 16:21:09 <hpc>	many many many different ways to reason about fix
Aug 12 16:21:21 *	cryptomonoid (~cryptomon@81.7.237.234) has joined
Aug 12 16:22:20 <crestfallen>	hpc I'm a bit foggy but thanks kindly hpc I'll read the blog
Aug 12 16:22:33 *	ZeuPiark has quit (Remote host closed the connection)
Aug 12 16:22:35 *	ddellacosta has quit (Ping timeout: 240 seconds)
Aug 12 16:22:39 <hpc>	yeah
Aug 12 16:23:07 <crestfallen>	its like you can't add 1 to infinity
Aug 12 16:23:11 <hpc>	that series of posts is how fixed points finally came together as a cohesive thing in my mind
Aug 12 16:23:20 *	coot_ has quit (Remote host closed the connection)
Aug 12 16:24:19 <crestfallen>	ok but in a lambda expression passed to fixx , termination is built into the lambda so its a base case just like in recursion hpc
Aug 12 16:24:21 <nshepperd1>	I think it's a theorem that if you start from bottom you never move from a value to a different incomparable one
Aug 12 16:24:30 *	coot_ (~coot@2001:8a0:607c:f01:a545:7e3a:ad9f:3db5) has joined
Aug 12 16:24:45 <nshepperd1>	The new value is always more defined or equal
Aug 12 16:25:04 <hpc>	ah
Aug 12 16:25:26 <nshepperd1>	And the limit of this sequence of increasingly defined things is your fixed point
Aug 12 16:25:39 *	raingloom (~raingloom@C2267141.catv.pool.telekom.hu) has joined
Aug 12 16:26:02 *	erikd_ (~erikd@hendrix.mega-nerd.net) has joined
Aug 12 16:26:05 *	weeirc8088 has quit (Ping timeout: 240 seconds)
Aug 12 16:26:22 *	erikd has quit (Ping timeout: 256 seconds)
Aug 12 16:26:26 *	ChaiTRex (~ChaiTRex@gateway/tor-sasl/chaitrex) has joined
Aug 12 16:26:47 <crestfallen>	youre saying 1: bottom is more defined ?
Aug 12 16:26:53 *	davr0s has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
Aug 12 16:26:53 <crestfallen>	than bottom?
Aug 12 16:26:54 *	rschmukler has quit (Read error: Connection reset by peer)
Aug 12 16:27:03 <hpc>	correct
Aug 12 16:27:10 *	rschmukler (~rschmukle@cpe-68-173-117-20.nyc.res.rr.com) has joined
Aug 12 16:27:18 <hpc>	later there's a drawing for the [a] type in that blog post
Aug 12 16:27:33 <hpc>	bottom : bottom is just up the (:) side of the tree from bottom
Aug 12 16:27:37 *	rblaze has quit (Quit: Leaving.)
Aug 12 16:27:48 <hpc>	and then 1 : bottom would be up the 1 side from that
Aug 12 16:27:49 *	erikd_ has quit (Client Quit)
Aug 12 16:27:57 <hpc>	if you mentally overlayed the other picture for Int
Aug 12 16:28:13 *	erikd (~erikd@hendrix.mega-nerd.net) has joined
Aug 12 16:28:38 <crestfallen>	so there is a limit as in calculus where you call it fixpoint and call that a solution
Aug 12 16:28:44 *	davr0s (~textual@host86-176-242-240.range86-176.btcentralplus.com) has joined
Aug 12 16:30:44 *	kvda (~kvda@unaffiliated/kvda) has joined
Aug 12 16:30:54 <ChaiTRex>	Do Int# literals get truncated to 32 bits when using Int64#s on a 32-bit machine?
Aug 12 16:31:29 <ChaiTRex>	*when using them as
Aug 12 16:32:36 *	nowhere_man has quit (Ping timeout: 256 seconds)
Aug 12 16:32:44 *	rprije (~rprije@ppp118-209-95-78.bras1.mel11.internode.on.net) has joined
Aug 12 16:32:59 *	davr0s has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
Aug 12 16:33:07 <monochrom>	That is a very mixed-up question. Do you want to talk about Int# or do you want to talk about Int64#?
Aug 12 16:33:41 <ChaiTRex>	I want to have literals that don't truncate to use as Int64#s.
Aug 12 16:33:52 <ChaiTRex>	I don't have a 32-bit machine, so I can't test how they work.
Aug 12 16:34:12 *	runforestrun (~alex@97e280b9.skybroadband.com) has left
Aug 12 16:34:17 <monochrom>	Then stick to Int64#.
Aug 12 16:34:25 *	mounty has quit (Ping timeout: 248 seconds)
Aug 12 16:34:28 *	muddywatt has quit (Quit: Kembali ke gua)
Aug 12 16:34:32 <monochrom>	Int# size follows GHC bit-size.
Aug 12 16:34:32 <ChaiTRex>	How do I write an Int64# literal?
Aug 12 16:34:56 <monochrom>	I forgot. But I would read the GHC user's guide carefully again.
Aug 12 16:35:18 <ChaiTRex>	OK. I'll take a look. Thanks for the pointer.
Aug 12 16:35:45 *	mounty (~mounty@61-68-36-198.static.tpgi.com.au) has joined
Aug 12 16:35:46 <monochrom>	And if that turns out to be futile, I would read base source code where Int64# is declared, there may be incidental examples there.
Aug 12 16:35:48 *	Major_Biscuit has quit (Quit: WeeChat 2.2)
Aug 12 16:35:53 *	kapil___ (uid36151@gateway/web/irccloud.com/x-xlucdynwkuwdkjsf) has joined
Aug 12 16:35:57 *	cryptomonoid has quit (Ping timeout: 240 seconds)
Aug 12 16:35:57 *	nan` has quit (Ping timeout: 240 seconds)
Aug 12 16:36:55 <hpc>	if you can find it, i was just having trouble with both hoogle and hayoo
Aug 12 16:37:16 <monochrom>	Hrm Int# is long int?!
Aug 12 16:37:45 <ChaiTRex>	Int# is whatever the machine word size is.
Aug 12 16:39:41 <nshepperd>	case 17 of I64# n -> n
Aug 12 16:39:43 *	nshepperd cheats
Aug 12 16:39:55 <hpc>	what if i run haskell in the cloud? then there's no computer!
Aug 12 16:40:20 <ChaiTRex>	nshepperd: Hmm, that may be the only way.
Aug 12 16:40:26 *	cynapse (~chris@d24-141-242-215.home.cgocable.net) has joined
Aug 12 16:40:57 *	jmcarthur (~jmcarthur@2601:86:100:1620::1) has joined
Aug 12 16:41:08 <ChaiTRex>	The GHC user's guide only mentions literal Char#, Addr# (for strings), Int#, Word#, Float#, and Double#.
Aug 12 16:41:27 <monochrom>	Hrm Yeah
Aug 12 16:42:09 <ChaiTRex>	I'll try doing a 32-bit virtual machine or something.
Aug 12 16:43:15 <nshepperd>	if only fromInteger had PolyKinds
Aug 12 16:43:43 *	nowhere_man (~pierre@2a01:e35:2eb3:4350:3fcb:8255:8d52:d188) has joined
Aug 12 16:46:12 Python interface unloaded
Aug 12 16:46:12 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sun Aug 12 16:46:12 2018

**** BEGIN LOGGING AT Sat Aug 18 13:37:20 2018

Aug 18 13:37:20 *	Now talking on #haskell
Aug 18 13:37:21 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Aug 18 13:37:21 *	Topic for #haskell set by glguy!~glguy@haskell/developer/glguy (Thu Aug  2 09:06:51 2018)
Aug 18 13:37:22 *	Channel #haskell url: http://www.haskell.org/
Aug 18 13:37:36 *	max42343 has quit (Quit: Leaving)
Aug 18 13:37:44 *	takuan (~takuan@178-116-222-182.access.telenet.be) has joined
Aug 18 13:38:09 *	nbloomf (~nbloomf@2600:1700:83e0:1f40:7460:76e5:9bd8:be35) has joined
Aug 18 13:38:16 *	max42343 (~max42343@dslb-002-206-154-128.002.206.pools.vodafone-ip.de) has joined
Aug 18 13:39:35 *	sternmull (~kringel@p57A8A06A.dip0.t-ipconnect.de) has left
Aug 18 13:39:49 *	bennofs (~benno@2a00:c1a0:4300:dd00:ce3d:82ff:fec6:6d58) has joined
Aug 18 13:41:16 *	khilan has quit (Quit: Connection closed for inactivity)
Aug 18 13:41:23 *	lumm has quit (Remote host closed the connection)
Aug 18 13:41:42 *	lumm (~lumm@32.40.136.77.rev.sfr.net) has joined
Aug 18 13:41:58 *	kapil___ has quit (Quit: Connection closed for inactivity)
Aug 18 13:43:00 *	JoshS (~jshjsh@24-113-161-40.wavecable.com) has joined
Aug 18 13:43:28 *	danvet has quit (Ping timeout: 240 seconds)
Aug 18 13:46:33 *	refold (~refold@88.98.204.30) has joined
Aug 18 13:48:22 *	joshsh (~josh@c-67-164-104-206.hsd1.ca.comcast.net) has joined
Aug 18 13:49:14 *	clonak27 (~clonak@156.197.133.94) has joined
Aug 18 13:50:52 *	thy0 (~thy0@199.115.112.88) has joined
Aug 18 13:50:58 *	Humbedooh11 (~Humbedooh@41.239.7.191) has joined
Aug 18 13:51:00 *	Humbedooh11 has quit (Killed (Sigyn (Spam is off topic on freenode.)))
Aug 18 13:53:00 *	jmorris (~jmorris@118.210.223.169) has joined
Aug 18 13:54:05 *	poljar1 has quit (Ping timeout: 240 seconds)
Aug 18 13:54:14 <crestfallen>	hi if we say a predicate representation of prime numbers, is that use of the word representation the same as in representation theory? i.e. does the predicate create a finite set of primes that can be expressed in matrix form ? just wondering after reading up of representation theory...
Aug 18 13:54:19 *	son0p (~ff@190.145.148.185) has joined
Aug 18 13:54:22 *	andyhoang (~andyhoang@14.187.217.20) has joined
Aug 18 13:54:53 *	rprije has quit (Remote host closed the connection)
Aug 18 13:55:00 <crestfallen>	or is representation used more generally / literally
Aug 18 13:55:09 *	poljar1 (~poljar@93-141-137-81.adsl.net.t-com.hr) has joined
Aug 18 13:55:29 *	jeltsch has quit (Ping timeout: 276 seconds)
Aug 18 13:56:05 *	Thra11 has quit (Ping timeout: 240 seconds)
Aug 18 13:56:15 <crestfallen>	in other words do you think of all results of a function that checks for primality as a set ?
Aug 18 13:56:22 *	rprije (~rprije@58-7-134-115.dyn.iinet.net.au) has joined
Aug 18 13:56:52 <crestfallen>	when the results are True
Aug 18 13:56:53 <glguy>	That looks like it's a better question for ##math than #haskell
Aug 18 13:56:58 *	clonak27 has quit (Ping timeout: 272 seconds)
Aug 18 13:57:34 <crestfallen>	I asked it there thanks. I was just wondering since I first heard "predicate representation" here.
Aug 18 13:58:57 *	andyhoang has quit (Ping timeout: 240 seconds)
Aug 18 13:58:59 *	acarrico (~acarrico@dhcp-68-142-35-239.greenmountainaccess.net) has joined
Aug 18 14:00:46 *	oish has quit (Ping timeout: 272 seconds)
Aug 18 14:02:30 *	sbdchd has quit (Remote host closed the connection)
Aug 18 14:02:59 *	raichoo has quit (Ping timeout: 256 seconds)
Aug 18 14:03:53 *	__monty__ has quit (Quit: leaving)
Aug 18 14:04:11 *	maerwald (~maerwald@mail.hasufell.de) has joined
Aug 18 14:05:00 *	dented42 has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Aug 18 14:05:19 *	aarvar (~foewfoiew@65.154.158.104) has joined
Aug 18 14:05:59 *	merijn has quit (Ping timeout: 244 seconds)
Aug 18 14:07:56 <dmwit>	I've got a pretty simple byte-oriented protocol. I'm looking at binary and attoparsec, which both seem more than capable enough; are there others I should be considering? Any tips on how to choose?
Aug 18 14:08:28 <ab9rf>	i'd use binary if you can in preference to attoparsec
Aug 18 14:08:29 *	pplr has quit (Ping timeout: 276 seconds)
Aug 18 14:08:43 <ab9rf>	binary isn't nearly as flexible, though
Aug 18 14:09:38 *	jmcarthur has quit (Ping timeout: 256 seconds)
Aug 18 14:09:40 *	Zialus has quit (Ping timeout: 272 seconds)
Aug 18 14:09:59 *	acidjnk has quit (Ping timeout: 240 seconds)
Aug 18 14:11:33 <ab9rf>	i vaguely recall running into another library for that sort of thing once, but i don't remember it having any advantage over eithr binary or atto
Aug 18 14:11:43 <ab9rf>	nor do i remember what it was called
Aug 18 14:11:51 <dmwit>	You'd prefer binary for speed or for some other reason?
Aug 18 14:12:02 *	forgottenone has quit (Ping timeout: 256 seconds)
Aug 18 14:12:42 <MarcelineVQ>	ab9rf: cbor?
Aug 18 14:12:54 *	pplr (~pplr@S0106bc4dfb17d5c3.vc.shawcable.net) has joined
Aug 18 14:13:08 <dmwit>	cbor looks great, but doesn't really help if the protocol is already specified and isn't cbor.
Aug 18 14:13:25 *	Zialus (~RMF@158.29.166.178.rev.vodafone.pt) has joined
Aug 18 14:14:04 *	justanotheruser has quit (Ping timeout: 272 seconds)
Aug 18 14:14:16 *	graphene has quit (Read error: Connection reset by peer)
Aug 18 14:14:44 <MarcelineVQ>	Just wondering if that's what he was thinking of
Aug 18 14:14:44 *	Orion3k (~Orion3k@185.103.109.20) has joined
Aug 18 14:15:01 <dmwit>	attoparsec looks like it has a bunch more "library" built up around it. Like... takeWhile exists, e.g.
Aug 18 14:15:02 *	graphene (~graphene@46.101.134.251) has joined
Aug 18 14:15:56 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Aug 18 14:17:47 <ab9rf>	MarcelineVQ: don't think so
Aug 18 14:17:50 <ab9rf>	MarcelineVQ: and i'm not a he :)
Aug 18 14:18:03 *	brillsp (~zhuo@gateway/tor-sasl/brillsp) has joined
Aug 18 14:18:19 <ab9rf>	i don't recall running into cbor
Aug 18 14:19:01 *	fresheyeball (~isaac@c-71-237-105-37.hsd1.co.comcast.net) has joined
Aug 18 14:20:51 *	nbloomf (~nbloomf@2600:1700:83e0:1f40:7460:76e5:9bd8:be35) has joined
Aug 18 14:21:53 *	deadman5 has quit (Ping timeout: 265 seconds)
Aug 18 14:23:05 *	remyhr (~remyhr@2a01cb0006b7920016b7d1e332c25b04.ipv6.abo.wanadoo.fr) has joined
Aug 18 14:24:05 <fresheyeball>	derive generic on a large enum is killing ghc
Aug 18 14:24:19 <fresheyeball>	is it possible to have an NFData instance that does not require Generic?
Aug 18 14:24:22 <MarcelineVQ>	aww still? it's been an issue for awhile iirc
Aug 18 14:25:03 *	XorSwap (~XorSwap@199.254.238.204) has joined
Aug 18 14:25:12 <MarcelineVQ>	Actually I might be thinking of the large records issue
Aug 18 14:26:50 *	sbdchd (~sbdchd@pool-72-93-246-22.bstnma.fios.verizon.net) has joined
Aug 18 14:26:53 *	remyhr has quit (Client Quit)
Aug 18 14:26:56 *	deadman5 (~ag@14.139.187.110) has joined
Aug 18 14:27:12 *	dpyro (~dpyro@66-169-160-49.dhcp.ftwo.tx.charter.com) has joined
Aug 18 14:27:42 *	danso (~dan@45.58.94.234) has joined
Aug 18 14:28:26 *	codesoup has quit (Remote host closed the connection)
Aug 18 14:30:54 *	Guest92638 has quit (Quit: Page closed)
Aug 18 14:32:28 *	max42343 has quit (Ping timeout: 272 seconds)
Aug 18 14:33:00 *	max42343 (~max42343@dslb-002-206-154-128.002.206.pools.vodafone-ip.de) has joined
Aug 18 14:33:13 *	Thra11 (~Thra11@5.1.169.217.in-addr.arpa) has joined
Aug 18 14:34:23 *	graphene has quit (Read error: Connection reset by peer)
Aug 18 14:35:03 *	graphene (~graphene@46.101.134.251) has joined
Aug 18 14:36:45 *	tzemanovic (~tzemanovi@131.10.168.125.sta.wbroadband.net.au) has joined
Aug 18 14:38:23 *	max42343 has quit (Ping timeout: 276 seconds)
Aug 18 14:38:45 *	codesoup (~codesoup@2607:fea8:e220:70:717f:4c40:5644:6885) has joined
Aug 18 14:38:50 *	dented42 (~dented42@65-130-188-150.slkc.qwest.net) has joined
Aug 18 14:39:33 *	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined
Aug 18 14:40:02 *	jorj has quit (Ping timeout: 272 seconds)
Aug 18 14:40:32 *	jorj (~jorj@162.220.240.216) has joined
Aug 18 14:41:18 *	tzemanovic has quit (Ping timeout: 272 seconds)
Aug 18 14:43:46 *	droplet has quit (Ping timeout: 256 seconds)
Aug 18 14:45:05 *	floryst has quit (Ping timeout: 240 seconds)
Aug 18 14:46:02 *	bendo has quit (Ping timeout: 256 seconds)
Aug 18 14:47:31 *	rschmukler (~rschmukle@cpe-68-173-117-20.nyc.res.rr.com) has joined
Aug 18 14:47:48 *	anon_ has quit (Ping timeout: 244 seconds)
Aug 18 14:49:31 *	troydm (~troydm@unaffiliated/troydm) has joined
Aug 18 14:50:24 *	dented42 has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Aug 18 14:50:33 *	max42343 (~max42343@dslb-002-206-154-128.002.206.pools.vodafone-ip.de) has joined
Aug 18 14:50:37 *	sdothum has quit (Quit: ZNC 1.7.1 - https://znc.in)
Aug 18 14:50:47 *	takuan has quit (Remote host closed the connection)
Aug 18 14:51:28 *	tristanp has quit (Remote host closed the connection)
Aug 18 14:51:29 *	gabiruh has quit (Read error: Connection reset by peer)
Aug 18 14:51:33 *	sdothum (~znc@dsl-173-206-63-210.tor.primus.ca) has joined
Aug 18 14:51:54 *	gabiruh (~gabiruh@138.59.61.2) has joined
Aug 18 14:51:59 *	tristanp (~tristanp@174.127.225.16) has joined
Aug 18 14:52:02 *	DTZUZO has quit (Ping timeout: 276 seconds)
Aug 18 14:52:25 *	brillsp has quit (Ping timeout: 250 seconds)
Aug 18 14:52:49 *	fresheyeball has quit (Quit: WeeChat 2.0)
Aug 18 14:52:57 *	erikd has quit (Ping timeout: 240 seconds)
Aug 18 14:53:22 *	DTZUZO (~DTZUZO@70.70.100.95) has joined
Aug 18 14:53:58 *	pamu (6d6e0e8d@gateway/web/freenode/ip.109.110.14.141) has joined
Aug 18 14:54:51 *	Guest47918 (~GrapeNinj@156.220.94.9) has joined
Aug 18 14:55:00 *	glguy gives voice to pamu
Aug 18 14:55:04 *	andyhoang (~andyhoang@14.187.217.20) has joined
Aug 18 14:55:59 <d34df00d>	Isn't the NF for a enum type the same as WHNF?
Aug 18 14:56:11 <pamu>	 How can I get started with Nix haskell project? Any beginner friendly tutorials available on internet?
Aug 18 14:56:14 <d34df00d>	(assuming the enum type is a type whose all constructors dont' have subfields)
Aug 18 14:57:08 *	tristanp has quit (Ping timeout: 272 seconds)
Aug 18 14:57:10 *	Zillolo has quit (Ping timeout: 265 seconds)
Aug 18 14:57:11 <MarcelineVQ>	pamu: https://github.com/Gabriel439/haskell-nix is popular, I haven't finished it myself
Aug 18 14:57:12 *	r_ (~r@ip5450e83d.speed.planet.nl) has joined
Aug 18 14:57:22 *	r_ has quit (Client Quit)
Aug 18 14:57:37 *	libertyprime has quit (Ping timeout: 244 seconds)
Aug 18 14:57:52 <Gurkenglas>	Clicking "#fork" on https://downloads.haskell.org/~ghc/8.4.2/docs/html/libraries/base-4.11.1.0/src/GHC.Conc.Sync.html#forkIO gives me 400
Aug 18 14:57:53 *	gre (~gre@epseli.com) has joined
Aug 18 14:57:59 *	glguy gives voice to gre
Aug 18 14:58:21 *	hackage openexr-write 0.1.0.2 - Library for writing images in OpenEXR HDR file format.  http://hackage.haskell.org/package/openexr-write-0.1.0.2 (pavolzetor)
Aug 18 14:59:28 *	erikd (~erikd@hendrix.mega-nerd.net) has joined
Aug 18 14:59:41 *	andyhoang has quit (Ping timeout: 244 seconds)
Aug 18 15:00:11 *	sbdchd has quit (Remote host closed the connection)
Aug 18 15:00:12 *	Guest47918 has quit (Ping timeout: 256 seconds)
Aug 18 15:00:27 *	ijks has quit (Ping timeout: 240 seconds)
Aug 18 15:01:34 *	cybai (~cybai@123-193-72-10.dynamic.kbronet.com.tw) has joined
Aug 18 15:02:59 *	tasse7 (~tasse@ssvlon5203w-lp130-03-50-101-80-174.dsl.bell.ca) has joined
Aug 18 15:03:02 *	tasse7 has quit (Killed (Sigyn (Spam is off topic on freenode.)))
Aug 18 15:03:03 *	max42343 has quit (Ping timeout: 256 seconds)
Aug 18 15:03:46 <gre>	hello
Aug 18 15:04:28 *	gre is looking for a functionnal language to make some scripts/GUI on windows
Aug 18 15:04:31 *	libertyprime (~libertypr@71.82.69.111.dynamic.snap.net.nz) has joined
Aug 18 15:04:44 <gre>	is Haskell can help me for that or do you have any other suggestion pls? ty
Aug 18 15:05:10 <systemfault>	gre: You might find me totally crazy... but I'd consider using PureScript with Electron.
Aug 18 15:05:46 *	albertus1 has quit (Quit: Leaving.)
Aug 18 15:06:20 *	cybai has quit (Ping timeout: 276 seconds)
Aug 18 15:06:36 <pamu>	Has anyone used miso ( https://github.com/dmjio/miso ) ? What is your experience with it? What does it serve all the basic features required for Single page frontend app development?
Aug 18 15:06:54 <gre>	hi, ofc im not find you totally crazy, i didn't know purescript actually, im reading about
Aug 18 15:06:56 <pamu>	*How is your experience with it?
Aug 18 15:08:53 *	Thra11 has quit (Ping timeout: 260 seconds)
Aug 18 15:09:15 *	codesoup has quit (Ping timeout: 265 seconds)
Aug 18 15:10:24 *	zero_byte has quit (Ping timeout: 256 seconds)
Aug 18 15:11:15 *	tristanp (~tristanp@174.127.225.16) has joined
Aug 18 15:11:43 *	silver__ (~silver@93.85.185.152) has joined
Aug 18 15:11:53 *	gehmehgeh (~ircuser1@gateway/tor-sasl/gehmehgeh) has joined
Aug 18 15:11:54 *	juhp has quit (Ping timeout: 268 seconds)
Aug 18 15:15:26 *	silver_ has quit (Ping timeout: 276 seconds)
Aug 18 15:15:30 *	r_ (~r@ip5450e83d.speed.planet.nl) has joined
Aug 18 15:15:39 *	codesoup (~codesoup@2607:fea8:e220:70:717f:4c40:5644:6885) has joined
Aug 18 15:16:19 *	grumble has quit (Remote host closed the connection)
Aug 18 15:16:28 *	pamu has quit (Quit: Page closed)
Aug 18 15:17:43 *	max42343 (~max42343@dslb-002-206-154-006.002.206.pools.vodafone-ip.de) has joined
Aug 18 15:18:02 *	alex`` has quit (Ping timeout: 276 seconds)
Aug 18 15:18:27 *	jmorris has quit (Ping timeout: 240 seconds)
Aug 18 15:18:36 *	lumm_ (~lumm@2a01:e35:2f0f:b480:1233:2a3b:100:9b4e) has joined
Aug 18 15:19:32 *	r_ has quit (Client Quit)
Aug 18 15:19:54 *	aarvar has quit (Ping timeout: 268 seconds)
Aug 18 15:20:02 *	grumble (~grumble@freenode/staff/grumble) has joined
Aug 18 15:21:56 *	drathir12 (~drathir@222.96.133.90) has joined
Aug 18 15:21:56 *	lumm has quit (Ping timeout: 276 seconds)
Aug 18 15:22:55 *	banzaikitten13 (~banzaikit@217.175.4.7) has joined
Aug 18 15:22:57 *	banzaikitten13 has quit (Killed (Sigyn (Spam is off topic on freenode.)))
Aug 18 15:23:55 *	drathir12 has quit (Remote host closed the connection)
Aug 18 15:24:31 *	lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net) has joined
Aug 18 15:24:52 *	lumm_ has quit (Read error: Connection reset by peer)
Aug 18 15:25:00 *	glguy removes voice from gre
Aug 18 15:27:13 *	kritzefitz has quit (Remote host closed the connection)
Aug 18 15:27:27 *	cobax (~rien@2604:2000:c680:8700:576:dc69:4f8:c4b8) has joined
Aug 18 15:29:38 *	pplr has quit (Remote host closed the connection)
Aug 18 15:29:47 *	lumm has quit (Read error: Connection reset by peer)
Aug 18 15:30:03 *	lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net) has joined
Aug 18 15:30:05 *	pplr (~pplr@S0106bc4dfb17d5c3.vc.shawcable.net) has joined
Aug 18 15:31:05 *	refold has quit (Ping timeout: 240 seconds)
Aug 18 15:33:45 *	lumm has quit (Client Quit)
Aug 18 15:33:59 *	lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net) has joined
Aug 18 15:34:37 <c50a326>	https://ptpb.pw/VwA9/hs what's wrong with the opening ( on line 15? :S
Aug 18 15:34:38 *	erikd has quit (Remote host closed the connection)
Aug 18 15:35:09 *	jmorris (~jmorris@118.210.223.169) has joined
Aug 18 15:35:10 <lavalike>	c50a326: " and ( must be on the same column
Aug 18 15:35:26 <c50a326>	bloody emacs! ty
Aug 18 15:35:42 <lavalike>	np
Aug 18 15:35:47 *	enyc14 (~enyc@188.255.130.116) has joined
Aug 18 15:35:51 *	enyc14 has quit (Killed (Sigyn (Spam is off topic on freenode.)))
Aug 18 15:36:21 *	perrier-jouet (~perrier-j@modemcable162.77-81-70.mc.videotron.ca) has joined
Aug 18 15:37:10 *	xplat has quit (Ping timeout: 268 seconds)
Aug 18 15:37:27 *	osa1 has quit (Ping timeout: 240 seconds)
Aug 18 15:37:41 *	osa1 (~omer@haskell/developer/osa1) has joined
Aug 18 15:38:39 *	stef204 has quit (Quit: WeeChat 2.2)
Aug 18 15:38:39 *	lumm has quit (Read error: Connection reset by peer)
Aug 18 15:38:40 *	sticaz has quit (Quit: My name Heff)
Aug 18 15:40:51 *	hackage control 0.1.0.0 - Class of monad transformers which control operations can be lifted thru  http://hackage.haskell.org/package/control-0.1.0.0 (MatthewFarkasDyck)
Aug 18 15:41:00 *	davr0s has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
Aug 18 15:47:05 *	gentauro has quit (Ping timeout: 240 seconds)
Aug 18 15:50:17 *	alex`` (~alex@APuteaux-651-1-2-137.w86-249.abo.wanadoo.fr) has joined
Aug 18 15:51:31 *	insanitea__ (~insanitea@194.77-31-62.static.virginmediabusiness.co.uk) has joined
Aug 18 15:51:35 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Aug 18 15:52:12 *	jshjsh (~jshjsh@24-113-161-40.wavecable.com) has joined
Aug 18 15:52:18 *	dmiles has quit (Read error: Connection reset by peer)
Aug 18 15:52:18 *	insanitea has quit (Read error: Connection reset by peer)
Aug 18 15:52:24 *	rfold (~rfold@ip5450e83d.speed.planet.nl) has joined
Aug 18 15:52:34 *	yaewa (~moei@softbank221078042071.bbtec.net) has joined
Aug 18 15:52:47 *	mounty has quit (Remote host closed the connection)
Aug 18 15:53:11 *	mounty (~mounty@n106-71-220-50.rdl2.qld.optusnet.com.au) has joined
Aug 18 15:53:38 *	yaewa has quit (Client Quit)
Aug 18 15:53:43 *	rfold has quit (Client Quit)
Aug 18 15:53:56 *	logicmoo (dmiles@c-73-190-111-74.hsd1.wa.comcast.net) has joined
Aug 18 15:54:08 *	moei has quit (Ping timeout: 272 seconds)
Aug 18 15:54:24 *	gentauro (~gentauro@xd520f2a3.cust.hiper.dk) has joined
Aug 18 15:55:00 *	rfold (~rfold@ip5450e83d.speed.planet.nl) has joined
Aug 18 15:55:09 *	bendo (~bendo@aftr-88-217-181-241.dynamic.mnet-online.de) has joined
Aug 18 15:55:22 *	plugin has quit (Remote host closed the connection)
Aug 18 15:55:23 *	rfold has quit (Client Quit)
Aug 18 15:55:58 *	rfold (~rfold@ip5450e83d.speed.planet.nl) has joined
Aug 18 15:56:03 *	JoshS has quit (Ping timeout: 272 seconds)
Aug 18 15:56:03 *	andyhoang (~andyhoang@14.187.217.20) has joined
Aug 18 15:56:55 *	sticaz (~sticaz@host-109-89-250-41.dynamic.voo.be) has joined
Aug 18 15:58:47 *	simukis has quit (Quit: simukis)
Aug 18 15:59:01 *	oisdk (~textual@207.244.108.244.adsl.inet-telecom.org) has joined
Aug 18 15:59:27 *	son0p has quit (Ping timeout: 240 seconds)
Aug 18 15:59:58 *	forgottenone (~forgotten@217.131.93.84) has joined
Aug 18 16:00:35 *	andyhoang has quit (Ping timeout: 240 seconds)
Aug 18 16:00:41 *	sbdchd (~sbdchd@pool-72-93-246-22.bstnma.fios.verizon.net) has joined
Aug 18 16:02:22 *	acarrico has quit (Ping timeout: 272 seconds)
Aug 18 16:05:33 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Aug 18 16:06:03 *	sbdchd has quit (Ping timeout: 260 seconds)
Aug 18 16:06:55 *	slack1256 (~slack1256@181-163-241-3.baf.movistar.cl) has joined
Aug 18 16:07:26 *	rfold has quit (Ping timeout: 276 seconds)
Aug 18 16:09:18 *	conal has quit (Quit: Computer has gone to sleep.)
Aug 18 16:09:33 *	libertyprime has quit (Ping timeout: 260 seconds)
Aug 18 16:09:40 *	codesoup has quit (Ping timeout: 265 seconds)
Aug 18 16:09:57 <madnight>	pamu, i used miso and pux (Purescript)
Aug 18 16:10:07 <c50a326>	what do haskellers think about erlang?
Aug 18 16:10:40 *	conal (~conal@38.132.115.214) has joined
Aug 18 16:11:38 <madnight>	pamu, from my personal experience i like miso better, that's not due to the framework (both frameworks are good for my purpose), but rather due to the language
Aug 18 16:12:09 *	acarrico (~acarrico@dhcp-68-142-35-239.greenmountainaccess.net) has joined
Aug 18 16:12:36 <hpc>	c50a326: it's on my "learn it eventually if it's not too far out of my way" list
Aug 18 16:12:50 *	alex`` has quit (Quit: WeeChat 2.2)
Aug 18 16:13:08 <hpc>	i like the idea of it, concurrency is an important thing to be able to do well
Aug 18 16:14:45 *	moei (~moei@softbank221078042071.bbtec.net) has joined
Aug 18 16:16:15 *	codesoup (~codesoup@174.119.180.211) has joined
Aug 18 16:17:14 *	t7 has quit (Quit: Konversation terminated!)
Aug 18 16:17:50 *	carlomazzaferro has quit (Ping timeout: 276 seconds)
Aug 18 16:18:50 *	bendo has quit (Ping timeout: 272 seconds)
Aug 18 16:19:39 *	conal has quit (Quit: Computer has gone to sleep.)
Aug 18 16:20:37 <Rembane>	c50a326: Erlang is a small, and beautiful language with very interesting primitives and rock-solid concurrency. The lack of a powerful type system and static type checking bites me all the time though. I find it very frustrating to work with.
Aug 18 16:21:42 <Wizek>	glguy: Apparently this is possible after all! https://gist.github.com/Wizek/ad643609535033321fcc8489f933d4f4
Aug 18 16:21:47 *	emilypi (~emilypi@pool-108-6-208-179.nycmny.fios.verizon.net) has joined
Aug 18 16:22:05 *	conal (~conal@38.132.115.214) has joined
Aug 18 16:23:30 *	Eduard_Munteanu has quit (Ping timeout: 256 seconds)
Aug 18 16:23:40 <suzu>	erlang has no static typing
Aug 18 16:23:42 <suzu>	dealbreaker
Aug 18 16:23:46 <suzu>	i can never og back
Aug 18 16:24:56 <slack1256>	Has gi-gtk effectively won as the de-facto native UI library for haskell?
Aug 18 16:25:40 *	pplr has quit (Remote host closed the connection)
Aug 18 16:26:05 *	emilypi has quit (Ping timeout: 240 seconds)
Aug 18 16:26:05 *	pplr (~pplr@S0106bc4dfb17d5c3.vc.shawcable.net) has joined
Aug 18 16:26:30 *	jdnavarro has quit (Remote host closed the connection)
Aug 18 16:26:46 *	conal has quit (Client Quit)
Aug 18 16:26:54 *	marduk19111 (~marduk191@69.red-88-24-151.staticip.rima-tde.net) has joined
Aug 18 16:26:57 *	marduk19111 has quit (Killed (Sigyn (Spam is off topic on freenode.)))
Aug 18 16:28:58 *	thc202 has quit (Ping timeout: 268 seconds)
Aug 18 16:30:33 *	mud has quit (Ping timeout: 260 seconds)
Aug 18 16:31:59 *	conal (~conal@38.132.115.214) has joined
Aug 18 16:33:42 *	jmcarthur (~jmcarthur@2601:86:100:1620::1) has joined
Aug 18 16:34:10 *	LKoen has quit (Remote host closed the connection)
Aug 18 16:34:50 *	Big_G has quit (Quit: Leaving)
Aug 18 16:36:05 *	jluttine has quit (Ping timeout: 240 seconds)
Aug 18 16:36:53 *	jluttine (~jluttine@109.204.147.177) has joined
Aug 18 16:37:03 *	jedws (~jedws@60.227.232.67) has joined
Aug 18 16:37:06 *	max42343 has quit (Quit: Leaving)
Aug 18 16:37:23 *	conal has quit (Quit: Computer has gone to sleep.)
Aug 18 16:37:34 <glguy>	Wizek: using undecidable instance to break functional dependencies is a bad plan
Aug 18 16:37:36 *	Eduard_Munteanu (~Eduard_Mu@5-12-220-66.residential.rdsnet.ro) has joined
Aug 18 16:37:47 <glguy>	Relying on overlapping instances is too
Aug 18 16:37:56 <glguy>	You're worse off now than you were before
Aug 18 16:38:20 <Wizek>	glguy: How so? Can this go bad in some way?
Aug 18 16:39:00 *	conal (~conal@38.132.115.214) has joined
Aug 18 16:39:05 *	jjpk has quit (Ping timeout: 240 seconds)
Aug 18 16:39:14 *	Cthalupa has quit (Ping timeout: 248 seconds)
Aug 18 16:39:14 *	jedws has quit (Client Quit)
Aug 18 16:39:30 *	droplet (~bmehta@host86-172-176-107.range86-172.btcentralplus.com) has joined
Aug 18 16:39:57 <glguy>	And on to of that you're still using MonadReader
Aug 18 16:40:55 *	zachk has quit (Quit: Leaving)
Aug 18 16:41:27 *	conal has quit (Client Quit)
Aug 18 16:42:09 *	Deide has quit (Quit: Seeee yaaaa)
Aug 18 16:42:10 *	carlomazzaferro (~carlomazz@c-73-191-25-6.hsd1.dc.comcast.net) has joined
Aug 18 16:42:38 *	Wizek glguy: I am indeed. But if the limitation is gone it's not as bad a choice as before, or is it? Also, could you share an example with me with which this can go wrong? Either at compile time or runtime?
Aug 18 16:42:47 *	ddellacosta (~ddellacos@2607:fb90:54af:8ee5:85e8:b660:7e06:5bf1) has joined
Aug 18 16:42:57 <Gurkenglas>	What do you use instead of MonadReader?
Aug 18 16:43:01 *	knupfer has quit (Ping timeout: 265 seconds)
Aug 18 16:43:26 <glguy>	I don't know what all the consequences are of violating the functional dependency. I didn't really know it would let you. I expect that to create inference issues. 
Aug 18 16:43:27 *	kranius (~kranius@lev92-3-78-203-108-33.fbx.proxad.net) has joined
Aug 18 16:44:16 <glguy>	Gurkenglas: either no class or a class specific to the problem you're solving. Exposing and relying on mtl classes is an antipattern
Aug 18 16:44:29 *	droplet has quit (Ping timeout: 276 seconds)
Aug 18 16:44:45 <glguy>	Similar issues to using global variables defined in someone else's package
Aug 18 16:45:56 <Wizek>	glguy: look here, it works quite well and quite flexibly too! I don't expect inference to work without the type appications, to me that's a very understandable tradeoff. https://gist.github.com/Wizek/6efcef92a961009dad355e2793da21cd#file-reader2-hs-L23-L29
Aug 18 16:46:44 *	slack1256 has quit (Ping timeout: 256 seconds)
Aug 18 16:48:32 <Wizek>	glguy: I also don't quite agree that this is akin to using global variables for two reasons: 1) it's only available to functions whose types explicitly state they can have access. 2) we can have safe IORefs and MVars in reader contexts without having to reach for unsafePerformIO globally. 3) running multiple such functions still won't mess up each other's state as they are separate, so not really global
Aug 18 16:49:09 <Wizek>	but maybe I am missing something with how you mean global variables, or how this can be an issue.
Aug 18 16:49:13 <hololeap>	i'm having a hard time understanding the use of OverloadedLabels in haskell-gi. all i know about labels is that they are basically type-level strings. what i don't understand is what their use is in this code, for instance #add and #showAll : https://github.com/haskell-gi/haskell-gi#using-the-generated-bindings
Aug 18 16:49:13 *	readertio has quit (Ping timeout: 260 seconds)
Aug 18 16:49:19 *	justanotheruser has quit (Ping timeout: 268 seconds)
Aug 18 16:49:21 <hpc>	Wizek: it's more of a packaging-level issue
Aug 18 16:49:39 <Eduard_Munteanu>	What's that @Bool syntax?
Aug 18 16:49:46 <hpc>	your package's api directly includes parts of another package's api
Aug 18 16:50:34 <Wizek>	hpc: Do you mean that in the context if one is writing and publishing a library?
Aug 18 16:50:43 *	max42343 (~max42343@81.171.98.113) has joined
Aug 18 16:51:05 <geekosaur>	Eduard_Munteanu, TypeApplications
Aug 18 16:51:25 <hpc>	yeah, or not even publishing but just using it
Aug 18 16:51:57 <hpc>	it's less effective as an abstraction because it leaks stuff below it
Aug 18 16:52:02 <hololeap>	honestly, i don't understand the motivation for Symbols or OverloadedLabels
Aug 18 16:52:14 *	conal (~conal@38.132.115.214) has joined
Aug 18 16:52:25 <Wizek>	hpc: how so? Is that because this way I am exposing some mtl specific stuff?
Aug 18 16:52:30 <hpc>	or actually, here's a better way to put it
Aug 18 16:52:34 *	joshsh has quit (Remote host closed the connection)
Aug 18 16:52:41 <hpc>	your package's api now includes its dependencies
Aug 18 16:53:04 <hpc>	where before the dependencies were implementation details, now users of your package care about what it's using too
Aug 18 16:53:14 <hpc>	so you can't go changing that dependency later, or it's also an api change
Aug 18 16:53:33 <Wizek>	hpc: surely that's just an abstraction detail
Aug 18 16:54:05 <Wizek>	e.g. I could say I only export `askInt = ask @Int` and `askBar = ask @Bool`
Aug 18 16:54:06 *	dolio has quit (Ping timeout: 256 seconds)
Aug 18 16:54:13 <Wizek>	and later on I can refactor
Aug 18 16:54:13 *	mizu_no_oto_work (~textual@2604:6000:1012:4098:0:4ab1:4648:4083) has joined
Aug 18 16:54:18 <hpc>	:t ask
Aug 18 16:54:19 <lambdabot>	MonadReader r m => m r
Aug 18 16:54:22 *	mizu_no_oto_work has quit (Client Quit)
Aug 18 16:54:26 <hpc>	:t ask @Int
Aug 18 16:54:27 *	carlomazzaferro has quit (Ping timeout: 240 seconds)
Aug 18 16:54:28 <lambdabot>	error:
Aug 18 16:54:28 <lambdabot>	    Pattern syntax in expression context: ask@Int
Aug 18 16:54:28 <lambdabot>	    Did you mean to enable TypeApplications?
Aug 18 16:54:31 <hpc>	blargh
Aug 18 16:54:35 *	connrs has quit (Ping timeout: 240 seconds)
Aug 18 16:54:43 <MarcelineVQ>	% :t ask @Int
Aug 18 16:54:43 <yahb>	MarcelineVQ: MonadReader Int m => m Int
Aug 18 16:54:50 *	droplet (~bmehta@host86-172-176-107.range86-172.btcentralplus.com) has joined
Aug 18 16:54:56 <Eduard_Munteanu>	Thanks, looks like a cool extension which I missed.
Aug 18 16:55:17 <hpc>	Wizek: MonadReader is still exposed
Aug 18 16:55:33 *	jedws (~jedws@60.227.232.67) has joined
Aug 18 16:56:36 <Wizek>	hpc: that's true. But maybe I can continue to abstract. E.g. I could say `type CanAskBar m = MonadReader Bool m`
Aug 18 16:56:50 *	jao has quit (Ping timeout: 276 seconds)
Aug 18 16:56:52 <Wizek>	And that way no one has to rely on MonadReader specifically
Aug 18 16:56:53 *	andyhoang (~andyhoang@14.187.217.20) has joined
Aug 18 16:57:20 *	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined
Aug 18 16:58:10 *	ziyourenxiang (~ZiYouRenX@unaffiliated/ziyourenxiang) has joined
Aug 18 16:59:42 <Wizek>	hpc: what do you think?
Aug 18 16:59:44 *	cdo256[m] (cdo256matr@gateway/shell/matrix.org/x-lrsemnauxmyxwzip) has joined
Aug 18 17:01:17 <hpc>	type aliases don't really do anything
Aug 18 17:01:29 <hpc>	you're no longer typing MonadReader but it's still the same type
Aug 18 17:02:45 *	readertio (~readertio@ip68-101-96-126.oc.oc.cox.net) has joined
Aug 18 17:02:51 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
Aug 18 17:03:02 *	sbdchd (~sbdchd@pool-72-93-246-22.bstnma.fios.verizon.net) has joined
Aug 18 17:03:14 *	dolio (~dolio@haskell/developer/dolio) has joined
Aug 18 17:03:53 *	andyhoang has quit (Ping timeout: 272 seconds)
Aug 18 17:03:57 *	conal has quit (Quit: Computer has gone to sleep.)
Aug 18 17:05:19 *	mounty has quit (Remote host closed the connection)
Aug 18 17:05:44 *	mounty (~mounty@n106-71-220-50.rdl2.qld.optusnet.com.au) has joined
Aug 18 17:06:15 *	Solarion has quit (Remote host closed the connection)
Aug 18 17:06:21 *	taumuon has quit (Ping timeout: 272 seconds)
Aug 18 17:06:42 <glguy>	Wizek: it's just poor design, but if it works well enough for you then that's ok
Aug 18 17:07:18 *	danso has quit (Quit: WeeChat 2.2)
Aug 18 17:07:29 <glguy>	And it's like a going variable in how it relies on a unique shared class you don't control
Aug 18 17:07:38 <glguy>	Not because of mutable state
Aug 18 17:07:47 <glguy>	Like a global*
Aug 18 17:07:53 *	sbdchd has quit (Ping timeout: 260 seconds)
Aug 18 17:08:23 *	Kraps28 (~Kraps@167.184.76.188.dynamic.jazztel.es) has joined
Aug 18 17:08:26 *	Kraps28 has quit (Killed (Sigyn (Spam is off topic on freenode.)))
Aug 18 17:08:39 <glguy>	Type synonyms aren't abstraction, so that doesn't help
Aug 18 17:09:15 <glguy>	And breaking the functional dependencies makes brittle code that will break when GHC gets smarter and rejects your code
Aug 18 17:09:53 *	rschmukler has quit (Ping timeout: 244 seconds)
Aug 18 17:10:15 *	rschmukler (~rschmukle@cpe-68-173-117-20.nyc.res.rr.com) has joined
Aug 18 17:10:30 *	Solarion (~solarion@fsf/member/solarion) has joined
Aug 18 17:10:50 *	glguy gives voice to badzergling_
Aug 18 17:11:29 <badzergling_>	is there a version of `Data.Constraint.Lifting` where the constraints on `a` and `f a` can be different?  
Aug 18 17:11:43 *	quipa (~Maxim@193.136.157.73) has joined
Aug 18 17:12:28 <badzergling_>	I suppose I'm looking `QuantifiedConstraints` but as type class. 
Aug 18 17:15:27 *	fredrikhl (~fredrikhl@218.145.211.112) has joined
Aug 18 17:15:30 *	fredrikhl has quit (Killed (Sigyn (Spam is off topic on freenode.)))
**** BEGIN LOGGING AT Mon Aug 20 11:01:48 2018

Aug 20 11:01:48 *	Now talking on #haskell
Aug 20 11:01:48 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Aug 20 11:01:48 *	Topic for #haskell set by glguy!~glguy@haskell/developer/glguy (Thu Aug  2 09:06:51 2018)
Aug 20 11:01:48 *	Channel #haskell url: http://www.haskell.org/
Aug 20 11:01:58 *	logzet has quit (Ping timeout: 265 seconds)
Aug 20 11:02:49 *	logzet (~quassel@unaffiliated/logzet) has joined
Aug 20 11:02:50 *	carlomagno (~cararell@inet-hqmc05-o.oracle.com) has joined
Aug 20 11:02:51 *	rblaze has quit (Quit: Leaving.)
Aug 20 11:02:51 *	hackage util-primitive 0.1.0.0 - Primitive memory-related utilities  http://hackage.haskell.org/package/util-primitive-0.1.0.0 (MatthewFarkasDyck)
Aug 20 11:03:05 *	the_2nd (~the_2nd@2a02:8070:41b9:bf00:e43f:7a11:1a27:3d42) has joined
Aug 20 11:03:11 *	Jesin has quit (Read error: Connection reset by peer)
Aug 20 11:03:12 <nan`>	glguy: right, that helps actually i was thinking of ReaderT applied to something
Aug 20 11:03:26 <madnight>	how can i use makeLenses'' for a data structure that is not underscore prefixed?
Aug 20 11:03:51 <the_2nd>	Trying to stack build a LTS 12.7 (GHC 8.4.3) project on archlinux never seems to terminate and keeps freezing the UI
Aug 20 11:03:57 <the_2nd>	any ideas?
Aug 20 11:04:09 <the_2nd>	Happening during Configuring / Installing ghc
Aug 20 11:04:25 *	rblaze (~Adium@2620:10d:c091:200::3:74da) has joined
Aug 20 11:04:26 <cocreature>	madnight: makeLensesFor and makeLensesWith let you customize the naming scheme
Aug 20 11:04:26 <glguy>	madnight: either specify a different naming rule or use makeLensesFor to specify the naming yourself.
Aug 20 11:04:50 <the_2nd>	already using the stack-static solution
Aug 20 11:05:07 <the_2nd>	11.22 with 8.2.2 works fine
Aug 20 11:05:25 *	pplr (~pplr@S0106bc4dfb17d5c3.vc.shawcable.net) has joined
Aug 20 11:05:59 -SaslServ-	n_blownapart!~crestfall@76.243.123.17 has just authenticated as you (n_blownapart)
**** BEGIN LOGGING AT Mon Aug 20 11:06:05 2018

Aug 20 11:06:05 *	Now talking on #haskell
Aug 20 11:06:05 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Aug 20 11:06:05 *	Topic for #haskell set by glguy!~glguy@haskell/developer/glguy (Thu Aug  2 09:06:51 2018)
Aug 20 11:06:05 *	Channel #haskell url: http://www.haskell.org/
Aug 20 11:06:05 *	n_blownapart (~crestfall@76.243.123.17) has joined
Aug 20 11:06:40 <madnight>	okay looks good, hmm and for any "cool" stuff you need TH right?
**** ENDING LOGGING AT Mon Aug 20 11:06:40 2018

Aug 20 11:06:42 *	crestfallen has quit (Client Quit)
Aug 20 11:07:06 <glguy>	Only if you define cool to mean TH
Aug 20 11:07:26 <the_2nd>	nm, it just takes forever and keeps freezing my pc
Aug 20 11:07:31 <the_2nd>	but finishes at some point
Aug 20 11:07:41 <geekosaur>	sounds like you're hitting swap space limits to me
Aug 20 11:07:42 <madnight>	glguy: i mean lenses auto generation is somewhat cool
Aug 20 11:07:53 *	emilypi (~emilypi@135.84.167.51) has joined
Aug 20 11:08:16 *	logzet_ (~quassel@unaffiliated/logzet) has joined
Aug 20 11:08:35 *	DTZUZO has quit (Ping timeout: 240 seconds)
Aug 20 11:08:35 *	logzet has quit (Ping timeout: 276 seconds)
Aug 20 11:09:21 *	dmiles (dmiles@c-73-190-111-74.hsd1.wa.comcast.net) has joined
Aug 20 11:09:22 *	Jacoby6000_ has quit (Ping timeout: 268 seconds)
Aug 20 11:09:25 <the_2nd>	geekosaur, memory usage is actually rather low
Aug 20 11:09:44 *	iryp has quit (Quit: Connection closed for inactivity)
Aug 20 11:09:55 <the_2nd>	stack stuck at 0% usage and little memory
Aug 20 11:09:55 <the_2nd>	just something seems to interfere with the OS/UI
Aug 20 11:10:07 <cocreature>	madnight: there is also generic-lens which doesn’t require TH
Aug 20 11:11:04 *	alx741 (~alx741@186.178.110.69) has joined
Aug 20 11:11:29 *	Khisanth (~Khisanth@pool-108-46-3-164.nycmny.east.verizon.net) has joined
Aug 20 11:11:50 *	nan` has quit (Ping timeout: 276 seconds)
Aug 20 11:13:04 *	emilypi has quit (Ping timeout: 268 seconds)
Aug 20 11:13:41 *	Jacoby6000_ (~jacoby600@mlbadvance08.m.subnet.rcn.com) has joined
Aug 20 11:14:25 <sebben>	newbie question: is there a `pseq` equivalent that returns the a instead of the b? I.e. something like `fn :: a -> b -> a`. 
Aug 20 11:14:28 <madnight>	cocreature: hmm looks good, how can i add deriving to an already existing imported ADT?
Aug 20 11:14:39 *	oo_miguel has quit (Quit: WeeChat 1.6)
Aug 20 11:14:43 <sebben>	What I am trying to achieve is to force evaluation of a function before subsequently doing some cleanup involving file IO
Aug 20 11:15:42 <glguy>	Control.Exception.evaluate x >> cleanup >> return x
Aug 20 11:15:42 <cocreature>	madnight: you can use standalone deriving but that implies an orphan instance and these tend to be somewhat problematic
Aug 20 11:15:46 *	Jesin (~Jesin@2601:152:4603:cb81::6abd) has joined
Aug 20 11:16:14 <madnight>	cocreature: but that is slightly cooler than TH right? :)
Aug 20 11:16:20 <glguy>	sebben: But that you need to run some file cleanup *after* some evaluation indicates you're doing something wrong
Aug 20 11:16:45 *	wdanilo (5efe9b2f@gateway/web/freenode/ip.94.254.155.47) has joined
Aug 20 11:17:05 <cocreature>	madnight: I’m not sure “cool” is an objective metric so that’s somewhat hard to answer :). the TH solution does not suffer from the problems incurred by orphan instances. then again, an orphan instance for Generic is probably also not that bad
Aug 20 11:17:18 <cocreature>	but I would first try to convince the author to add that to the package itself
Aug 20 11:17:22 *	glguy gives voice to wdanilo
Aug 20 11:17:30 <wdanilo>	Hi guys! I've got a question. Is it true that extensions in module header override the ones defined as default-extensions in cabal/stack file ?
Aug 20 11:17:47 <sebben>	glguy: that might very well be true. I am writing a test for a parser I have written that should read content from a file. In my test setup I create the file on disk, do the processing on it that I want to test, and then delete the file in the cleanup phase. At the moment the file is deleted before the function test is ever run...
Aug 20 11:18:13 *	dedgrant has quit (Quit: Leaving)
Aug 20 11:18:24 <cocreature>	wdanilo: no, we actually had the same question earlier today: cli flags (and default-extensions is turned into a cli flag) take precedence
Aug 20 11:18:30 <glguy>	sebben: Put the code on gist.github.com so we can see what's happening. Perhaps you're using lazy IO (readFile)?
Aug 20 11:18:35 <madnight>	cocreature: so should every author in general do deriving Generic for their datatypes?
Aug 20 11:19:04 <cocreature>	madnight: well it’s up to the author but I’d say Generic is probably worth deriving
Aug 20 11:19:05 *	oo_miguel (~miguel@89-70-84-68.dynamic.chello.pl) has joined
Aug 20 11:19:07 <cocreature>	(if you can)
Aug 20 11:19:16 <wdanilo>	cocreature: I know oyu had this question - I'm working with ara on the same project but I just cannot believe it. I bet I was using it many times setting defualt extensions to something and overriding it in modules
Aug 20 11:19:16 <sebben>	glguy: thanks! The code in question is this section here: https://github.com/sebastian/todos/blob/master/test/TodoSpec.hs#L58-L63
Aug 20 11:19:32 *	oisdk (~textual@207.244.108.244.adsl.inet-telecom.org) has joined
Aug 20 11:19:34 <the_2nd>	how can I figure out if a path is a directory? e.g. paths returned by listDirectory
Aug 20 11:19:41 <wdanilo>	cocreature: I just don't get it. I could swear I was always using it. Moreover its stupid, isnt it ?
Aug 20 11:19:42 <odanoburu>	hello, I'm using the `xmlgen` library, but I can't seem to be able to print the generated XML using UTF-8 encoding. the `xrender` function outputs a bytestring, which I'm currently simply applying `putStr` on, as in the tutorial. to get correct utf-8 output, do I have to use the utf8-string library, or is there a better way? (maybe using text..?)
Aug 20 11:20:11 <selfsymmetric-pa>	cocreature: Does deriving Generic by default have compilation speed implications? 
Aug 20 11:20:13 <glguy>	sebben: https://gist.github.com/glguy/c326f1ddb310a0a923e8b3a0298c3edf
Aug 20 11:20:17 *	Jacoby6000_ has quit (Ping timeout: 276 seconds)
Aug 20 11:20:24 *	polman has quit (Read error: Connection reset by peer)
Aug 20 11:20:31 <cocreature>	wdanilo: I don’t think it’s stupid, if you think of cli flags it makes sense that they take precedence imho. the slightly confusing thing here is that default-extensions is treated like any other cli flag
Aug 20 11:20:50 <sebben>	glguy: oh man! thanks!
Aug 20 11:20:54 <cocreature>	selfsymmetric-pa: sure, generating and compiling code is never free :)
Aug 20 11:21:08 *	polman (~ananevtem@128.71.129.198) has joined
Aug 20 11:21:22 <sebben>	glguy: now that I see it, it obviously makes sense… 
Aug 20 11:21:24 <cocreature>	but it’s usually not that bad
Aug 20 11:21:24 <wdanilo>	cocreature: oh sure, cli flags should take precedence. But default-extensions is for what its called - defaults. So I can set something per project and don't put it everywhere unless I want to have fine grianed control
Aug 20 11:22:18 <cocreature>	wdanilo: GHC doesn’t know anything about default-extensions. and the only option Cabal has to tell GHC about the extension is to pass it as a cli flag
Aug 20 11:23:18 <wdanilo>	cocreature: I see the rationale behind it but its just very very bad. If I set default-extensions then I cannot disable it per-module, thats terryfying
Aug 20 11:23:43 <glguy>	Yes, using default-extensions is a bad idea
Aug 20 11:23:50 <glguy>	even without per-file overrides
Aug 20 11:24:32 <cocreature>	wdanilo: I’m not saying the current behavior is great, I’m just explaining the rationale :)
Aug 20 11:24:58 <geekosaur>	the_2nd, http://hackage.haskell.org/package/directory-1.3.3.1/docs/System-Directory.html#v:doesDirectoryExist
Aug 20 11:25:15 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
Aug 20 11:25:35 *	saml has quit (Remote host closed the connection)
**** BEGIN LOGGING AT Mon Aug 20 11:25:39 2018

Aug 20 11:25:39 *	Now talking on #haskell
Aug 20 11:25:39 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Aug 20 11:25:39 *	Topic for #haskell set by glguy!~glguy@haskell/developer/glguy (Thu Aug  2 09:06:51 2018)
Aug 20 11:25:39 *	crestfallen (~crestfall@96.74.79.25) has joined
Aug 20 11:25:39 *	Channel #haskell url: http://www.haskell.org/
Aug 20 11:25:41 <cocreature>	then again, I’d also argue that default-extensions + file-local overrides are pretty confusing and in that case you might just be better off not using default-extensions anyway (whether default-extensions should be avoided altogether is a separate matter)
Aug 20 11:25:41 <cocreature>	then again, I’d also argue that default-extensions + file-local overrides are pretty confusing and in that case you might just be better off not using default-extensions anyway (whether default-extensions should be avoided altogether is a separate matter)
Aug 20 11:25:55 <geekosaur>	but (a) there's also tests using stat(), better if you're testing the same file/handle for multiple things (but which would force you into POSIX) (b) there can be security implication s here with respect to race conditions
Aug 20 11:25:55 <geekosaur>	but (a) there's also tests using stat(), better if you're testing the same file/handle for multiple things (but which would force you into POSIX) (b) there can be security implication s here with respect to race conditions
Aug 20 11:26:03 *	saml (~saml@unaffiliated/saml) has joined
Aug 20 11:26:04 *	saml (~saml@unaffiliated/saml) has joined
**** ENDING LOGGING AT Mon Aug 20 11:26:28 2018

Aug 20 11:26:29 *	n_blownapart (~crestfall@76.243.123.17) has left ("Leaving")
Aug 20 11:26:41 <wdanilo>	cocreature: yeah I know. I'm very thankful for the explanation. I just cannot believe I was living 10 years using Hs without knowing that 
Aug 20 11:26:49 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
Aug 20 11:26:56 <wdanilo>	cocreature: thank you for helping me and Ara
Aug 20 11:28:10 <the_2nd>	geekosaur, thanks
Aug 20 11:28:57 *	connrs has quit (Ping timeout: 240 seconds)
Aug 20 11:29:30 <inkbottle>	This https://hackage.haskell.org/package/SVGFonts-1.7/docs/Graphics-SVGFonts.html#v:textSVG, yields "The function ‘stroke’ is applied to one argument, but its type ‘Render ()’ has none"; I can't find a more recent working example
Aug 20 11:29:37 *	loic__ has quit (Quit: Quitte)
Aug 20 11:30:06 *	niklasl2 (~niklasl@c83-253-23-120.bredband.comhem.se) has joined
Aug 20 11:31:10 <cocreature>	inkbottle: what exactly do you mean by “this”? do you get this error when trying to compile the package, when trying to use it, …?
Aug 20 11:31:21 <cocreature>	also please show us the full error message in some pastebin
Aug 20 11:31:29 <inkbottle>	OK, I do that
Aug 20 11:31:43 *	anon (~anon@188.57.57.41) has joined
Aug 20 11:31:58 *	niklasl has quit (Ping timeout: 256 seconds)
Aug 20 11:32:06 *	anon is now known as Guest33831
Aug 20 11:32:30 *	Jackneill (~Jackneill@unaffiliated/jackneill) has joined
Aug 20 11:32:53 *	Jackneill has quit (Remote host closed the connection)
Aug 20 11:33:10 *	MarcelineVQ has quit (Ping timeout: 256 seconds)
Aug 20 11:33:11 *	Jackneilll has quit (Ping timeout: 256 seconds)
Aug 20 11:33:11 *	Kipras_ has quit (Ping timeout: 256 seconds)
Aug 20 11:33:17 *	Jackneill (~Jackneill@unaffiliated/jackneill) has joined
Aug 20 11:33:22 *	Kipras_ (~Kipras@78-58-153-109.static.zebra.lt) has joined
Aug 20 11:33:35 *	MarcelineVQ (~anja@S01069050ca2f4f83.no.shawcable.net) has joined
Aug 20 11:33:57 *	rzp has quit (Quit: Ex-Chat)
Aug 20 11:34:11 *	nan` (~nan`@199.255.1.25) has joined
Aug 20 11:35:04 *	glguy gives voice to awjchen
Aug 20 11:35:09 *	sebben has quit (Quit: sebben)
Aug 20 11:35:12 <awjchen>	In Mark Karpov's blog post (https://markkarpov.com/post/evolution-of-error-messages.html) and in the current megaparsec source, `mergeError` is a case expression `case errorPos e1 `compare` errorPos e2 of ...`, where `errorPos e1` and `errorPos e2` are stacks of source positions (:: NonEmpty SourcePos) that can be used to represent include files, and where the top of the stack corresponds to the front of the NonEmpty list.
Aug 20 11:35:23 <awjchen>	My question is this: why should the stacks of source positions be compard using the default ordering for NonEmpty, in which the top element of the stack dominates the ordering, rather than the reverse ordering (`case (NE.reverse (errorPos e1)) `compare` (NE.reverse (errorPos e2)) of ...`), in which the bottom element dominates?
Aug 20 11:35:28 *	ChaiTRex (~ChaiTRex@gateway/tor-sasl/chaitrex) has joined
Aug 20 11:35:34 <awjchen>	I ask because I am trying to solve an issue that seems to be resolved by modifying megaparsec to use the reverse ordering, but I really don't know anything about parsing or megaparsec, so I have no idea what other effects that might have.
Aug 20 11:35:53 *	MarcelineVQ has quit (Remote host closed the connection)
Aug 20 11:36:06 *	tylerhou has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
Aug 20 11:36:11 *	MarcelineVQ (~anja@S01069050ca2f4f83.no.shawcable.net) has joined
Aug 20 11:36:20 *	emilypi (~emilypi@135.84.167.51) has joined
Aug 20 11:36:29 *	milanj has quit (Quit: This computer has gone to sleep)
Aug 20 11:36:30 <inkbottle>	cocreature: error message is at the beginning, then the code: https://lpaste.net/4341657851115077632
Aug 20 11:36:49 <madnight>	cocreature: are Profunctor Optics the new lenses?
Aug 20 11:36:57 *	__lawlesseel__ has quit (Remote host closed the connection)
Aug 20 11:37:08 *	marvin2 has quit (Ping timeout: 256 seconds)
Aug 20 11:37:48 <cocreature>	inkbottle: as a first step, add some imports to fix the last 6 errors
Aug 20 11:38:16 <inkbottle>	Yes, sure, try that
Aug 20 11:38:20 <cocreature>	madnight: I’m not sure how to give a meaningful response to that. the lens lib that most people use doesn’t use profunctor optics for everything, so no?
**** BEGIN LOGGING AT Sat Sep  1 11:39:56 2018

Sep 01 11:39:56 *	Now talking on #haskell
Sep 01 11:39:56 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 01 11:39:56 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 01 11:39:56 *	Channel #haskell url: http://www.haskell.org/
Sep 01 11:40:07 <schell>	geekosaur: my buddy figured it out - the ag CreateProcess record needed its `std_out` field explicitly set to `NoStream` 
Sep 01 11:40:28 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
**** BEGIN LOGGING AT Sat Sep  1 11:40:35 2018

Sep 01 11:40:35 *	Now talking on #haskell
Sep 01 11:40:35 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 01 11:40:35 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 01 11:40:35 *	crestfallen (~crestfall@96.74.79.25) has joined
Sep 01 11:40:35 *	Channel #haskell url: http://www.haskell.org/
Sep 01 11:40:35 *	greg_ has quit (Quit: Page closed)
Sep 01 11:40:35 *	greg_ has quit (Quit: Page closed)
Sep 01 11:41:49 <crestfallen>	hi regarding algebraic data types, what does this mean exactly? : " The associated eliminatory forms are projections, which select the first and second component of a pair. "
Sep 01 11:41:49 <crestfallen>	hi regarding algebraic data types, what does this mean exactly? : " The associated eliminatory forms are projections, which select the first and second component of a pair. "
Sep 01 11:42:25 *	beatmax has quit (Ping timeout: 250 seconds)
Sep 01 11:42:25 *	beatmax has quit (Ping timeout: 250 seconds)
Sep 01 11:42:26 *	fragamus has quit (Client Quit)
Sep 01 11:42:26 *	fragamus has quit (Client Quit)
Sep 01 11:42:26 <crestfallen>	from https://stackoverflow.com/questions/5911267/what-are-sums-and-products-data-structures
Sep 01 11:42:26 <crestfallen>	from https://stackoverflow.com/questions/5911267/what-are-sums-and-products-data-structures
Sep 01 11:42:26 *	kerrhau (~kerrhau@2600:1700:7aa1:2ee0::49) has joined
Sep 01 11:42:26 *	kerrhau (~kerrhau@2600:1700:7aa1:2ee0::49) has joined
Sep 01 11:42:26 *	kerrhau has quit (Changing host)
Sep 01 11:42:26 *	kerrhau (~kerrhau@unaffiliated/aceahmedmoh) has joined
Sep 01 11:42:26 *	kerrhau has quit (Changing host)
Sep 01 11:42:26 *	kerrhau (~kerrhau@unaffiliated/aceahmedmoh) has joined
Sep 01 11:43:42 <crestfallen>	its from "Practical Foundations of Programming Languages" cited in above blog
Sep 01 11:43:42 <crestfallen>	its from "Practical Foundations of Programming Languages" cited in above blog
Sep 01 11:44:11 *	SenasOzys (~Ozys@user208.77-105-199.netatonce.net) has joined
Sep 01 11:44:11 *	SenasOzys (~Ozys@user208.77-105-199.netatonce.net) has joined
Sep 01 11:45:15 *	wroathe has quit (Ping timeout: 252 seconds)
Sep 01 11:45:15 *	wroathe has quit (Ping timeout: 252 seconds)
Sep 01 11:45:36 *	oisdk (~textual@64.237.40.140) has joined
Sep 01 11:45:36 *	oisdk (~textual@64.237.40.140) has joined
Sep 01 11:45:56 *	eschnett has quit (Quit: eschnett)
Sep 01 11:45:56 *	eschnett has quit (Quit: eschnett)
Sep 01 11:47:09 *	revtintin has quit (Quit: WeeChat 1.9.1)
Sep 01 11:47:09 *	revtintin has quit (Quit: WeeChat 1.9.1)
Sep 01 11:48:34 <geekosaur>	it is talking about simplifying something like data Foo a b = Foo {fooA :: a; fooB :: b} into a tuple of type (a, b); fooA and fooB are the "eliminatory forms", their action as functions is projections (pulling individual values out of the notional tuple, each selecting its associated value to be pulled out)
Sep 01 11:48:34 <geekosaur>	it is talking about simplifying something like data Foo a b = Foo {fooA :: a; fooB :: b} into a tuple of type (a, b); fooA and fooB are the "eliminatory forms", their action as functions is projections (pulling individual values out of the notional tuple, each selecting its associated value to be pulled out)
Sep 01 11:50:11 *	amirpro (~amirpro@196.219.65.184) has joined
Sep 01 11:50:11 *	amirpro (~amirpro@196.219.65.184) has joined
Sep 01 11:50:16 *	eschnett (~eschnett@ktnron0916w-lp130-02-76-66-163-80.dsl.bell.ca) has joined
Sep 01 11:50:16 *	eschnett (~eschnett@ktnron0916w-lp130-02-76-66-163-80.dsl.bell.ca) has joined
Sep 01 11:50:52 *	amirpro has quit (Remote host closed the connection)
Sep 01 11:50:52 *	amirpro has quit (Remote host closed the connection)
Sep 01 11:51:17 *	amirpro (~amirpro@196.219.65.184) has joined
Sep 01 11:51:17 *	amirpro (~amirpro@196.219.65.184) has joined
Sep 01 11:51:21 *	conal has quit (Quit: Computer has gone to sleep.)
Sep 01 11:51:21 *	conal has quit (Quit: Computer has gone to sleep.)
Sep 01 11:52:21 *	asheshambasta has quit (Remote host closed the connection)
Sep 01 11:52:21 *	asheshambasta has quit (Remote host closed the connection)
Sep 01 11:52:27 *	ma489 (~ma489@guest-255-46.nat.brookes.ac.uk) has joined
Sep 01 11:52:27 *	ma489 (~ma489@guest-255-46.nat.brookes.ac.uk) has joined
Sep 01 11:52:40 <geekosaur>	but I suggest you learn the language of type theory if you're going to be poking at that.
Sep 01 11:52:40 <geekosaur>	but I suggest you learn the language of type theory if you're going to be poking at that.
Sep 01 11:52:53 <crestfallen>	hmm I need to process that thank you.
Sep 01 11:52:53 <crestfallen>	hmm I need to process that thank you.
Sep 01 11:52:58 *	uboa (~uboa@c-75-73-39-45.hsd1.mn.comcast.net) has joined
Sep 01 11:52:58 *	uboa (~uboa@c-75-73-39-45.hsd1.mn.comcast.net) has joined
Sep 01 11:53:02 *	uboa has quit (Remote host closed the connection)
Sep 01 11:53:02 *	uboa has quit (Remote host closed the connection)
Sep 01 11:53:18 *	milanj has quit (Quit: Leaving)
Sep 01 11:53:18 *	milanj has quit (Quit: Leaving)
Sep 01 11:53:25 *	amirpro has quit (Client Quit)
Sep 01 11:53:25 *	amirpro has quit (Client Quit)
Sep 01 11:53:57 *	kritzefitz has quit (Remote host closed the connection)
Sep 01 11:53:57 *	kritzefitz has quit (Remote host closed the connection)
Sep 01 11:54:14 *	Sonderblade (~bjourne@n178-p81.eduroam.kth.se) has joined
Sep 01 11:54:14 *	Sonderblade (~bjourne@n178-p81.eduroam.kth.se) has joined
Sep 01 11:54:56 <crestfallen>	yeah geekosaur I'm not too clear on that. my intention is to get algebraic data types.
Sep 01 11:54:57 <crestfallen>	yeah geekosaur I'm not too clear on that. my intention is to get algebraic data types.
Sep 01 11:55:23 <geekosaur>	walk befre you run. type theory is probably not the plce to start
Sep 01 11:55:23 <geekosaur>	walk befre you run. type theory is probably not the plce to start
Sep 01 11:56:00 *	conal (~conal@207.189.24.171) has joined
Sep 01 11:56:00 *	conal (~conal@207.189.24.171) has joined
Sep 01 11:56:06 *	Vulfe (~vulfe@2600:1702:31b0:34e0:195b:fe06:d62e:58ed) has joined
Sep 01 11:56:06 *	Vulfe (~vulfe@2600:1702:31b0:34e0:195b:fe06:d62e:58ed) has joined
Sep 01 11:58:22 <crestfallen>	other parts of the blog are good with me. I'm going to read the entire chapter in haskellbook on it. I thought that excerpt might be helpful
Sep 01 11:58:22 <crestfallen>	other parts of the blog are good with me. I'm going to read the entire chapter in haskellbook on it. I thought that excerpt might be helpful
Sep 01 11:58:38 *	forgottenone (~forgotten@217.131.95.54) has joined
Sep 01 11:58:38 *	forgottenone (~forgotten@217.131.95.54) has joined
Sep 01 11:58:50 <crestfallen>	and/or any suggested reading on it..
Sep 01 11:58:50 <crestfallen>	and/or any suggested reading on it..
Sep 01 11:59:41 *	sword865 has quit (Quit: Connection closed for inactivity)
Sep 01 11:59:41 *	sword865 has quit (Quit: Connection closed for inactivity)
Sep 01 11:59:46 *	Pepe_ (~pep_@anderith.bouah.net) has joined
Sep 01 11:59:46 *	Pepe_ (~pep_@anderith.bouah.net) has joined
Sep 01 11:59:54 *	amirpro (~amirpro@196.219.65.184) has joined
Sep 01 11:59:54 *	amirpro (~amirpro@196.219.65.184) has joined
Sep 01 12:00:06 *	Jacoby6000_ has quit (Ping timeout: 252 seconds)
Sep 01 12:00:06 *	Jacoby6000_ has quit (Ping timeout: 252 seconds)
Sep 01 12:00:37 *	Vulfe has quit (Ping timeout: 250 seconds)
Sep 01 12:00:37 *	Vulfe has quit (Ping timeout: 250 seconds)
Sep 01 12:01:28 *	Vulfe (~vulfe@2600:1702:31b0:34e0:195b:fe06:d62e:58ed) has joined
Sep 01 12:01:28 *	Vulfe (~vulfe@2600:1702:31b0:34e0:195b:fe06:d62e:58ed) has joined
Sep 01 12:01:40 *	dcoutts (~duncan@28.186.125.91.dyn.plus.net) has joined
Sep 01 12:01:40 *	dcoutts (~duncan@28.186.125.91.dyn.plus.net) has joined
Sep 01 12:04:11 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Sep 01 12:04:11 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Sep 01 12:05:57 <crestfallen>	thanks geek*osaur
Sep 01 12:05:57 <crestfallen>	thanks geek*osaur
Sep 01 12:07:20 *	tzemanovic (~tzemanovi@131.10.168.125.sta.wbroadband.net.au) has joined
Sep 01 12:07:20 *	tzemanovic (~tzemanovi@131.10.168.125.sta.wbroadband.net.au) has joined
Sep 01 12:07:24 Python interface unloaded
**** ENDING LOGGING AT Sat Sep  1 12:07:24 2018

**** ENDING LOGGING AT Sat Sep  1 12:07:24 2018

**** BEGIN LOGGING AT Tue Sep  4 18:47:37 2018

Sep 04 18:47:37 *	Now talking on #haskell
Sep 04 18:47:37 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 04 18:47:37 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 04 18:47:51 *	Channel #haskell url: http://www.haskell.org/
Sep 04 18:47:58 *	cybai has quit (Ping timeout: 245 seconds)
Sep 04 18:48:15 <dmwit>	If I write to a TChan, and there are no readers, is that a space leak or is GHC's GC good enough to do the right thing?
Sep 04 18:48:36 <MarcelineVQ>	koz_: honestly I can't really follow that package at all, there's a lot going on
Sep 04 18:48:50 <koz_>	MarcelineVQ: No worries - thanks for your help anyway.
Sep 04 18:48:52 *	yiufung has quit (Remote host closed the connection)
Sep 04 18:49:05 <dmwit>	On further reflection, it seems like there's no chance GC could do the right thing there. Never mind.
Sep 04 18:49:07 <koz_>	(I can't follow it at all either; I asked earlier, but nobody's chimed in, so I assume no-one else can either)
Sep 04 18:49:23 Python interface unloaded
**** ENDING LOGGING AT Tue Sep  4 18:49:23 2018

**** BEGIN LOGGING AT Thu Sep  6 14:18:25 2018

Sep 06 14:18:25 *	Now talking on #haskell
Sep 06 14:18:25 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 06 14:18:25 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 06 14:18:25 *	Channel #haskell url: http://www.haskell.org/
Sep 06 14:18:46 *	selfsymmetric-pa (~matt@65.206.95.146) has joined
Sep 06 14:18:49 *	iAmerikan has quit (Ping timeout: 244 seconds)
Sep 06 14:18:51 *	jose_zap (~jose_zap@176-20-96-104-dynamic.dk.customer.tdc.net) has joined
Sep 06 14:19:09 *	butterthebuddha (~butterthe@35.1.183.223) has joined
Sep 06 14:19:14 *	raichoo has quit (Ping timeout: 272 seconds)
Sep 06 14:19:21 *	hololeap has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
Sep 06 14:19:27 <mniip>	placing a temporary string under the top of the stack... I guess I've been feeling ballsy then
Sep 06 14:19:34 *	bbrodriguez has quit (Ping timeout: 246 seconds)
Sep 06 14:21:15 *	knupfer (~Thunderbi@mue-88-130-61-207.dsl.tropolys.de) has joined
Sep 06 14:21:23 *	valentinbuza (~valentinb@unaffiliated/valentinbuza) has joined
Sep 06 14:21:53 <crestfallen>	hi I read somewhere that data types are often defined to set the domain of a program. In this 'abstract machine' program, could someone explain how and where the domain can be observed? I hope my question makes sense https://ptpb.pw/MJSw
Sep 06 14:24:07 <crestfallen>	also what the definition of domain would be in this case, if any
Sep 06 14:24:33 *	ackthet (~ackthet@unaffiliated/ackthet) has joined
Sep 06 14:25:06 <subttle>	crestfallen: It looks like you are creating expressions over Int
Sep 06 14:25:10 *	armyriad has quit (Ping timeout: 246 seconds)
Sep 06 14:25:51 *	butterthebuddha has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 06 14:25:56 *	armyriad (~armyriad@96-39-247-38.dhcp.mtpk.ca.charter.com) has joined
Sep 06 14:26:23 <crestfallen>	subttle, thanks could you elaborate?
Sep 06 14:26:27 *	ersran9 has quit (Ping timeout: 240 seconds)
Sep 06 14:26:56 *	ersran9 (~ersran9@unaffiliated/ersran9) has joined
Sep 06 14:27:17 <subttle>	crestfallen: There are three ways to construct an `Expr`
Sep 06 14:27:33 <subttle>	only values of `Int` can go in
Sep 06 14:27:55 <subttle>	when you make a `Val`
Sep 06 14:28:14 *	davr0s (~textual@host81-152-240-243.range81-152.btcentralplus.com) has joined
Sep 06 14:28:17 *	thy0_ (~thy0@165.84.226.119) has joined
Sep 06 14:28:19 *	mizu_no_oto has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 06 14:28:23 *	mizu_no_oto_work has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 06 14:29:29 *	codesoup has quit (Remote host closed the connection)
Sep 06 14:29:33 <crestfallen>	so that is the extent of the domain for our purposes?
Sep 06 14:29:38 <crestfallen>	subttle, 
Sep 06 14:29:42 <subttle>	so when you ask what the Domain is are you referring to a particular function?
Sep 06 14:29:45 *	twandy has quit (Quit: twandy)
Sep 06 14:29:52 *	glittershark has quit (Remote host closed the connection)
Sep 06 14:29:53 <mniip>	EvanR, you were wondering https://github.com/mniip/sandbox/blob/master/main.cpp#L132-L178   https://github.com/mniip/sandbox/blob/master/fs.h#L191-L211
Sep 06 14:30:04 *	twandy (~Thunderbi@cas-fw-sta.inet.casair.net) has joined
Sep 06 14:30:20 <crestfallen>	subttle, not sure, just trying to see how the domain manifests here
Sep 06 14:30:46 *	replay has quit (Ping timeout: 246 seconds)
Sep 06 14:30:46 *	mounty (~mounty@61-68-36-198.static.tpgi.com.au) has joined
Sep 06 14:30:52 *	pagnol has quit (Quit: Ex-Chat)
Sep 06 14:31:04 <EvanR>	C++
Sep 06 14:31:28 *	butterthebuddha (~butterthe@35.1.183.223) has joined
Sep 06 14:31:49 <crestfallen>	subttle, thanks kindly, I hope to ask further questions later on re: this.
Sep 06 14:32:02 Python interface unloaded
Sep 06 14:32:02 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Sep  6 14:32:02 2018

**** BEGIN LOGGING AT Thu Sep  6 18:50:17 2018

Sep 06 18:50:17 *	Now talking on #haskell
Sep 06 18:50:17 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 06 18:50:17 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 06 18:50:17 *	Channel #haskell url: http://www.haskell.org/
Sep 06 18:50:39 *	tromp (~tromp@ip-217-103-3-94.ip.prioritytelecom.net) has joined
Sep 06 18:51:43 *	EdJoJob has quit (Ping timeout: 245 seconds)
Sep 06 18:52:46 *	EdJoJob (~EdJoJob@203.41.122.242) has joined
Sep 06 18:53:24 *	dstolfa has quit (Ping timeout: 252 seconds)
Sep 06 18:55:03 *	tromp has quit (Ping timeout: 245 seconds)
Sep 06 18:55:14 *	theelous3 has quit (Ping timeout: 244 seconds)
Sep 06 18:55:23 <MarcelineVQ>	anyone know the status of, or if I'm even remembering half-right, the proposal for do to not need $?  like  atomically $ do\n   could be   atomically do\n
Sep 06 18:55:40 <MarcelineVQ>	$ is hard to search for, or I'm too dumb to know how
Sep 06 18:56:48 <ab9rf>	i read that as "deprived instancs"
Sep 06 18:57:23 *	lassulus_ (~lassulus@c-base/crew/lassulus) has joined
Sep 06 18:58:00 <droplet>	Does Lucid have any interface for modifying html - I'm trying to change every <span class="a"> to <span class="b">?
Sep 06 18:59:02 *	sbdchd has quit (Remote host closed the connection)
Sep 06 18:59:11 <jackdk>	MarcelineVQ: https://downloads.haskell.org/~ghc/master/users-guide/glasgow_exts.html#more-liberal-syntax-for-function-arguments ?
Sep 06 18:59:51 <MarcelineVQ>	jackdk: hey neat, looks like the thing, thank you
Sep 06 19:00:16 *	lassulus has quit (Ping timeout: 246 seconds)
Sep 06 19:00:16 *	lassulus_ is now known as lassulus
Sep 06 19:00:50 *	maerwald (~maerwald@mail.hasufell.de) has joined
Sep 06 19:02:02 <crestfallen>	hi still trying to get some insight into how dataTypes are used to create a domain. so if you're looking at a program , how to do see that the program defines a domain. this is the abstract machine from the hutton book  https://ptpb.pw/MJSw
Sep 06 19:02:23 <crestfallen>	how *do you*
Sep 06 19:02:34 *	cq1 (~snp@157-131-197-141.fiber.dynamic.sonic.net) has joined
Sep 06 19:02:36 <ab9rf>	i'm kinda surprised that Html isn't Traversable
Sep 06 19:03:42 <crestfallen>	there are a lot of concepts, I believe, that this program covers. Like how do you look at this in terms of algebraic data types, setting up this program as an elgebraic equation
Sep 06 19:03:56 <lyxia>	droplet: the package description mentions it can "edit" HTML
Sep 06 19:04:03 *	banc has quit (Quit: ZNC - http://znc.in)
Sep 06 19:04:08 <cq1>	Sorry, this is probably a very basic question, but is there an easy idiom to "foreign import ccall" a bunch of functions from a single shared library without having to write "foreign import ccall" before every single signature?
Sep 06 19:04:35 <geekosaur>	crestfallen, "defines a doman" means the program is defined around types that accurately represent what it is to do, such that things it shouldn't be able to do are type errors
Sep 06 19:04:39 *	rcdilorenzo (~rcdiloren@cpe-24-163-97-97.nc.res.rr.com) has joined
Sep 06 19:04:41 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 06 19:04:55 <geekosaur>	algebraic data types are a means to that goal
Sep 06 19:04:57 *	tzemanovic has quit (Remote host closed the connection)
Sep 06 19:05:47 *	chao-tic (~chao@203.97.21.86) has joined
Sep 06 19:05:51 <lyxia>	droplet: oh I see it's rather to write Haskell that gets translated to HTML
Sep 06 19:06:01 <geekosaur>	cq1, not as such, but there are tools like http://hackage.haskell.org/package/c2hs
Sep 06 19:06:42 <mniip>	weird
Sep 06 19:07:02 <crestfallen>	geekosaur, thanks so i.e. it is preferable to use dataTypes instead of writing a function without dataTypes? So the naming of dataTypes "accurately represent" what its supposed to do?
Sep 06 19:07:44 <geekosaur>	its' better to use something more specific than, say a tuple of Integers and Bools and Strings that are supposed to represent something more specific
Sep 06 19:08:21 <crestfallen>	I find this program very confusing, I revisit it and always have to hack through it again to see how it works.
Sep 06 19:08:23 <crestfallen>	geekosaur, 
Sep 06 19:08:42 *	max3 (~max3@67.133.97.98) has joined
Sep 06 19:08:49 <max3>	how do i install latest ghc using stack?
Sep 06 19:08:58 <cq1>	geekosaur: Okay, thanks.
Sep 06 19:09:38 <crestfallen>	also this is called a proof of constructive induction, and I haven't been able to see what this means or how its manifest in this program
Sep 06 19:10:08 <geekosaur>	crestfallen, that's a matter of it not having comments. in any program that tends to meanou have to carefully read the code to figure out what's going on
Sep 06 19:10:14 <geekosaur>	(or in tis case read the book)
Sep 06 19:10:27 *	chao-tic has quit (Ping timeout: 252 seconds)
Sep 06 19:11:49 <MarcelineVQ>	max3: a newer nightly resolver will tend to be the latest officially supported ghc version  you can find resolvers here https://www.stackage.org/  currently both lts and nightly are providing ghc 8.4.3 so I would reccomend just using the current lts-12.9 resolver
Sep 06 19:12:00 <max3>	MarcelineVQ, i mean to replace my distro haskell
Sep 06 19:13:23 *	libertyprime has quit (Ping timeout: 245 seconds)
Sep 06 19:13:34 *	dbmikus__ has quit (Ping timeout: 240 seconds)
Sep 06 19:14:03 <MarcelineVQ>	Stack doesn't replace your distro's ghc version, it provides its own ghc's. You might typically remove your distro haskell if you want stack to manage ghc entirely
Sep 06 19:14:13 *	Somix has quit (Ping timeout: 250 seconds)
Sep 06 19:14:15 *	urodna has quit (Quit: urodna)
Sep 06 19:14:57 <max3>	MarcelineVQ, yes i'd like that. i guess i'm left with add ~/.stack/programs to my path
Sep 06 19:15:34 *	eschnett (~eschnett@ktnron0916w-lp130-02-76-66-163-80.dsl.bell.ca) has joined
Sep 06 19:16:15 *	max3 has quit (Remote host closed the connection)
Sep 06 19:16:19 <ab9rf>	i don't have ghc installed on my system; i let stack manage ghc for me
Sep 06 19:16:20 <MarcelineVQ>	I wouldn't reccomend doing that directly to your path, you might be better off making an alias in your shell's config  like   alias ghci="stack ghci"
Sep 06 19:16:52 *	Saukk (~Saukk@91-156-130-28.elisa-laajakaista.fi) has joined
Sep 06 19:17:27 *	Lycurgus has quit (Quit: Exeunt)
Sep 06 19:17:47 *	twandy has quit (Ping timeout: 240 seconds)
Sep 06 19:17:56 *	unyu has quit (Quit: The end of the world is nigh. Bring as much popcorn as you can!)
Sep 06 19:18:14 <crestfallen>	thanks kindly geekosaur .. what about the constructive induction business. how is it that?
Sep 06 19:18:37 <crestfallen>	what is induced in that prog?
Sep 06 19:18:41 <MarcelineVQ>	actually exec is probably the better alias.   stack exec ghc   stack exec ghci   etc
Sep 06 19:18:49 *	crick_ (0e8bae03@gateway/web/freenode/ip.14.139.174.3) has joined
Sep 06 19:18:50 *	glguy gives voice to crick_
Sep 06 19:20:02 <ab9rf>	i find that thing most commonly induced is confusion
Sep 06 19:20:19 <crick_>	Can someone look at this error: https://lpaste.net/2611618910885117952
Sep 06 19:20:41 *	banc (~master@82.145.37.203) has joined
Sep 06 19:20:42 *	daniel-s has quit (Ping timeout: 252 seconds)
Sep 06 19:20:48 <ab9rf>	crick_: / is not integer division
Sep 06 19:21:00 *	twandy (~Thunderbi@cas-fw-sta.inet.casair.net) has joined
Sep 06 19:21:00 <crick_>	I want floating numbers only
Sep 06 19:21:12 *	max3 (~max3@67.133.97.98) has joined
Sep 06 19:21:22 <ab9rf>	crick_: so you need to convert the integers you have to a type that has a Fractional instance
Sep 06 19:21:29 <max3>	so i removed my distro ghc and put .stack/programs in my path and now vscode hie doesn't work
Sep 06 19:21:43 <ab9rf>	:t fromIntegral
Sep 06 19:21:44 <lambdabot>	(Num b, Integral a) => a -> b
Sep 06 19:22:22 <crestfallen>	ab9rf, :) does that mean it's not worth explaining? 
Sep 06 19:22:35 <crick_>	ya I don't get it
Sep 06 19:22:59 <ab9rf>	crick_: Int is not a valid type for the / operator
Sep 06 19:23:00 <ab9rf>	:t (/)
Sep 06 19:23:01 <MarcelineVQ>	max3: is that part of the instructions for hie with vscode and stack?
Sep 06 19:23:01 <lambdabot>	Fractional a => a -> a -> a
Sep 06 19:23:06 *	fishythefish has quit (Ping timeout: 252 seconds)
Sep 06 19:23:08 <crick_>	I see
Sep 06 19:23:20 <ab9rf>	only works on types that are instances of Fractional, and Int is not an instance of Fractional
Sep 06 19:23:27 <ab9rf>	you need to convert it to a type that is
Sep 06 19:23:31 <ab9rf>	them, rather
Sep 06 19:23:56 <crick_>	Yep, got it!
Sep 06 19:23:56 <ab9rf>	haskell does not automatically interconvert numeric types
Sep 06 19:24:35 <crick_>	I was trying to use `quot` but I did not want integer answers
Sep 06 19:24:52 <max3>	MarcelineVQ, what do you mean part of the instructions? to remove distro?
Sep 06 19:24:57 <crick_>	\QUIT
Sep 06 19:25:00 *	crick_ has quit ()
Sep 06 19:25:35 <MarcelineVQ>	What I ​mean is you've changed how your system is set up, so you may need to follow the install directions for hie again if it's not working now
Sep 06 19:26:08 Python interface unloaded
Sep 06 19:26:08 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Sep  6 19:26:08 2018

**** BEGIN LOGGING AT Fri Sep  7 11:35:15 2018

Sep 07 11:35:15 *	Now talking on #haskell
Sep 07 11:35:15 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 07 11:35:15 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 07 11:35:15 *	Channel #haskell url: http://www.haskell.org/
Sep 07 11:35:56 *	ixxie has quit (Quit: Lost terminal)
Sep 07 11:36:12 *	dbmikus (~dbmikus@ec2-52-70-171-151.compute-1.amazonaws.com) has joined
Sep 07 11:37:30 *	Azel has quit (Ping timeout: 252 seconds)
Sep 07 11:37:35 *	acidjnk has quit ()
Sep 07 11:38:35 *	pera (~pera@unaffiliated/pera) has joined
Sep 07 11:38:48 *	fvr has quit (Ping timeout: 252 seconds)
Sep 07 11:39:09 *	tzemanovic has quit (Ping timeout: 252 seconds)
Sep 07 11:42:06 *	mkoenig has quit (Ping timeout: 252 seconds)
Sep 07 11:43:15 <sm>	I often get a runaway ghc process that brings my mac to its knees. I'm trying to figure out what triggers it and I suspect it's from running/killing ghcid. Have you seen this ?
Sep 07 11:43:24 *	SchleimKeim has quit (Quit: schoooooools out for summer!!)
Sep 07 11:43:45 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
Sep 07 11:45:01 *	dpyro (~dpyro@66-169-160-49.dhcp.ftwo.tx.charter.com) has joined
Sep 07 11:45:22 *	sbdchd has quit (Remote host closed the connection)
Sep 07 11:46:26 <hexagoxel>	sm: yes. there was a bug in ghcid that caused it which if fixed (https://github.com/ndmitchell/ghcid/issues/154)
Sep 07 11:46:31 *	sbdchd (~sbdchd@natp-128-119-202-156.wireless.umass.edu) has joined
Sep 07 11:47:08 *	Ramanga (quassel@gateway/vpn/privateinternetaccess/ramanga) has joined
Sep 07 11:47:09 *	Boarders (267d42e9@gateway/web/freenode/ip.38.125.66.233) has joined
Sep 07 11:47:10 *	glguy gives voice to Boarders
Sep 07 11:47:13 <sm>	hexagoxel: thanks, I was just reading that. I seem to have ghcid 0.7 which should have that fix, but upgrading
Sep 07 11:47:26 *	buoto (~buoto@185.56.175.154) has joined
Sep 07 11:47:28 *	glguy removes voice from Boarders
Sep 07 11:47:49 *	jkup has quit (Remote host closed the connection)
Sep 07 11:47:51 <hexagoxel>	sm: but i have seen the problem at least once even with that fix.
Sep 07 11:48:05 *	jkup (~jkup@gateway/tor-sasl/jkup) has joined
Sep 07 11:48:13 <hexagoxel>	i think the fix works though, only there appears also to be a bug in cabal (new-)repl
Sep 07 11:48:18 <Boarders>	if I have a Fold s a from Control.Lens.Fold then does anyone know how I do a strict fold?
Sep 07 11:48:30 <hexagoxel>	so ghcid kills cabal, cabal does not kill ghc
Sep 07 11:49:12 <sm>	hexagoxel: interesting. I'm using an up to date stack, built with I'm not sure what Cabal version
Sep 07 11:49:15 <Zipheir>	Who says combinators are a terrible implementation technique??
Sep 07 11:49:27 *	OnkelTem has quit (Ping timeout: 244 seconds)
Sep 07 11:49:33 <sm>	shall I update that issue or will you
Sep 07 11:49:55 <hexagoxel>	sm: hmm. well maybe there _is_ still something broken on ghcid. i only found it hard to reproduce
Sep 07 11:50:28 <hexagoxel>	sm: please do, if you have a clear reproduction case
Sep 07 11:50:46 <sm>	I don't, but I'll note the trouble and watch it more closely
Sep 07 11:50:58 *	ixxie (~ixxie@88-115-5-96.elisa-laajakaista.fi) has joined
Sep 07 11:52:01 *	conal (~conal@207.189.24.156) has joined
Sep 07 11:52:07 *	sbdchd has quit (Ping timeout: 240 seconds)
Sep 07 11:54:14 *	OnkelTem (~onkeltem@unaffiliated/fantomas) has joined
Sep 07 11:55:07 *	nbunjeva1 (~nbunjevac@fsf/member/nbunjevac) has joined
Sep 07 11:55:25 <hexagoxel>	(i don't think cabal and stack share logic in this regard btw - but then it is still possible that both cabal and stack are buggy.)
Sep 07 11:55:45 *	blackandblue has quit (Remote host closed the connection)
Sep 07 11:56:19 *	blackandblue (~batdownh@gateway/tor-sasl/blackandblue) has joined
Sep 07 11:56:36 *	raynold_ (uid201163@gateway/web/irccloud.com/x-fjmqepvxnnkubimt) has joined
Sep 07 11:56:40 *	raynold_ has quit (Client Quit)
Sep 07 11:56:49 *	dalembert (~dalembert@p508F3509.dip0.t-ipconnect.de) has joined
Sep 07 11:56:57 <sm>	nod
Sep 07 11:57:34 *	Guest21064 (~daniel@ip-37-201-7-19.hsi13.unitymediagroup.de) has joined
Sep 07 11:58:17 <sm>	seems like a ghc bug too, actually
Sep 07 11:58:23 *	dalember1 has quit (Ping timeout: 245 seconds)
Sep 07 11:58:49 *	CZ (d9ab9c7f@gateway/web/freenode/ip.217.171.156.127) has joined
Sep 07 11:58:49 *	glguy gives voice to CZ
Sep 07 11:59:41 <CZ>	test
Sep 07 12:00:08 <CZ>	+v
Sep 07 12:00:15 <CZ>	(+v)
Sep 07 12:00:39 *	emilypi (~emilypi@135.84.167.51) has joined
Sep 07 12:01:35 <CZ>	Is anyone here?
Sep 07 12:01:51 *	gxt has quit (Ping timeout: 244 seconds)
Sep 07 12:01:51 *	matzy_ has quit (Ping timeout: 252 seconds)
Sep 07 12:01:54 <crestfallen>	hi I'm trying to figure out if I need to understand taylor series, since I guess it is used to describe (annotate?)  Binary Trees
Sep 07 12:02:18 *	keepLearning512 (~keepLearn@49.207.55.192) has joined
Sep 07 12:02:27 *	m4lvin has quit (Remote host closed the connection)
Sep 07 12:03:14 *	gxt (~gxt@x2f7f2be.dyn.telefonica.de) has joined
Sep 07 12:03:16 *	twandy has quit (Quit: twandy)
Sep 07 12:03:24 *	Jacoby6000_ has quit (Ping timeout: 244 seconds)
Sep 07 12:03:30 *	m4lvin (~m4lvin@w4eg.de) has joined
Sep 07 12:03:33 <ab9rf>	i'm at a loss as to what taylor series have to do with binary trees. please explain.
Sep 07 12:04:17 *	dan_f (~dan@24.148.38.233) has joined
Sep 07 12:04:36 <crestfallen>	ab9rf, from a badly written post : https://codewords.recurse.com/issues/three/algebra-and-calculus-of-algebraic-data-types   scroll down about 1/3
Sep 07 12:04:44 <ab9rf>	i suppose there could be a _connection_, at some level (binominals appear in both)
Sep 07 12:04:52 *	ztf1 has quit (Quit: WeeChat 1.9.1)
Sep 07 12:05:28 <ab9rf>	ok, this is talking about derivatives in type theory, so that's the connection
Sep 07 12:06:09 <ab9rf>	i am aware that there is a concept of a derivative in type theory, but it makes absolutely no sense to me
Sep 07 12:06:29 <crestfallen>	ab9rf, I'm having trouble following the part "Neat trick, but let's push our luck"
Sep 07 12:06:32 <hexagoxel>	CZ: (yes, we can see you)
Sep 07 12:06:33 <mbwgh>	Is there a way to programmatically lookup the version of a dependency?
Sep 07 12:06:59 <crestfallen>	ab9rf, ok thanks I guess its too advanced for me presently
Sep 07 12:07:11 <ab9rf>	crestfallen: are you familiar with taylor series as a means to approximate the value of a differentiable function?
Sep 07 12:07:31 *	iAmerikan has quit (Ping timeout: 246 seconds)
Sep 07 12:07:37 <crestfallen>	only based on cursory reading of wikipedia
Sep 07 12:08:19 <ab9rf>	crestfallen: ok. you'll have to take as given that f(x)=1/(1-x) has the given taylor series expansion, then
Sep 07 12:08:27 *	CZ has quit (Ping timeout: 252 seconds)
Sep 07 12:09:07 <ab9rf>	it does work out that 1/(1-x) = \sum x^k, for cases where that sum converges
Sep 07 12:09:23 *	iAmerikan (~dwshrewt@unaffiliated/iamerikan) has joined
Sep 07 12:09:48 <dmwit>	mbwgh: cabal-plan
Sep 07 12:10:02 <ab9rf>	and so what this does here is "let's assume that the expressions 1-a and 1/a can be given a meaning when a is a type (instead of a number), and see where this goes"
Sep 07 12:10:52 *	conal has quit (Quit: Computer has gone to sleep.)
Sep 07 12:11:06 <ab9rf>	and that allows us to conclude that the "type" of a recursively defined type such as List a is 1/(1-a), even though we don't yet know what the types 1-a and 1/a are
Sep 07 12:11:47 <mbwgh>	dmwit: Would that work with a stack project? 
Sep 07 12:11:55 <dmwit>	no
Sep 07 12:12:21 *	conal (~conal@207.189.24.156) has joined
Sep 07 12:12:22 <dmwit>	If you have successfully built once, then it's possible stack exec ghc-pkg will do what you want.
Sep 07 12:12:25 <dmwit>	But I don't know for sure.
Sep 07 12:12:29 <crestfallen>	ab9rf, thanks kindly, that's interesting. the list example is pretty clear. so I guess the taylor series applies to other GADT s . I will look further into it much appreciated
Sep 07 12:12:34 <ab9rf>	crestfallen: it's not hard to prove that taylor series work, and explain how you compute them, but you need a fairly decent amount of calculus to do so
Sep 07 12:12:56 <crestfallen>	^ thanks again
Sep 07 12:13:09 <dmwit>	(List is just a boring old specialized ADT. GADTs are not needed for this.)
Sep 07 12:13:11 <ab9rf>	i don't remember the specifics; it's been almost 30 years
Sep 07 12:13:34 *	knupfer has quit (Ping timeout: 240 seconds)
Sep 07 12:13:40 <geekosaur>	I'm not sure this is eve relevant at this level
Sep 07 12:13:56 *	blz37 (~blz37@76-225-38-4.lightspeed.sntcca.sbcglobal.net) has joined
Sep 07 12:14:03 <geekosaur>	it feels like learning basic arithmetic starting from ZFC
Sep 07 12:14:22 <crestfallen>	it was suggested I studied GADTs and I came across that post. what's ZFC
Sep 07 12:14:35 <ab9rf>	crestfallen: this basically builds on the recognition that a singly-recursive type like List a ends up having the form 1+a+a^2+..., which (not entirely by chance) happens to look like that taylor series
Sep 07 12:14:44 <mbwgh>	dmwit: The use case would be generating a TemplateHaskell Name via "package-1.2.3", where "package-" is constant. Hardcoding showVersion [1,2,3] wouldn't be terrible right now, but if there was an easy way to avoid it, that would be great.
Sep 07 12:14:54 *	Big_G has quit (Ping timeout: 252 seconds)
Sep 07 12:15:18 <ab9rf>	crestfallen: and somebody with a willingness to "cross the streams" went "what if we treat it as if it were one, where would that go", did some handwaving, and results ensued.
Sep 07 12:15:18 <sm>	I think you can't easily check the os version in a cabal file, right
Sep 07 12:15:44 *	sbdchd (~sbdchd@natp-128-119-202-156.wireless.umass.edu) has joined
Sep 07 12:15:54 <ab9rf>	crestfallen: it gets a bit rabbit-holy if you dont already have a fairly decent amount of math under the belt.
Sep 07 12:15:58 <geekosaur>	crestfallen, set theory. I assure you nobody learns 2+ by deriving arithmetic from mathematical base principles
Sep 07 12:16:19 <geekosaur>	you leave that for later. often much later or even not at all
Sep 07 12:16:28 *	graphene has quit (Remote host closed the connection)
Sep 07 12:16:32 <crestfallen>	thanks all gotta go. appreciated
Sep 07 12:16:35 Python interface unloaded
Sep 07 12:16:35 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri Sep  7 12:16:35 2018

**** BEGIN LOGGING AT Sat Sep  8 17:11:43 2018

Sep 08 17:11:43 *	Now talking on #haskell
Sep 08 17:11:43 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 08 17:11:43 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 08 17:11:43 *	Channel #haskell url: http://www.haskell.org/
Sep 08 17:12:07 *	darjeeling_ (~darjeelin@c-73-97-157-215.hsd1.wa.comcast.net) has joined
Sep 08 17:14:49 <crestfallen>	please critique comments , lines 14 - 18, regarding the commutative property up to isomorphism.   https://lpaste.net/2031458349198868480
Sep 08 17:15:05 *	ChaiTRex has quit (Ping timeout: 256 seconds)
Sep 08 17:15:34 *	runforestrun (~alex@2a02:c7f:c44e:d900:9eb1:3fef:9aa7:6df2) has left
Sep 08 17:16:08 *	abueide (~abueide@47-48-66-138.static.reno.nv.charter.com) has joined
Sep 08 17:16:55 <crestfallen>	my question is if a monoid, unlike a group, doesn't need an inverse, does an isomorphic function allow it to act like a group?
Sep 08 17:17:34 <crestfallen>	since all the criteria of a group are met.
Sep 08 17:17:51 *	Somix has quit (Ping timeout: 252 seconds)
Sep 08 17:18:17 *	sanjinderjitsing is now known as christopher
Sep 08 17:18:50 *	tristanp has quit (Remote host closed the connection)
Sep 08 17:19:19 *	Khisanth (~Khisanth@pool-108-46-5-152.nycmny.east.verizon.net) has joined
Sep 08 17:20:36 *	pfurla has quit (Ping timeout: 252 seconds)
Sep 08 17:22:00 <koz_>	jle`: If you're around, I'm having strange issues with Data.Vector.Sized again: https://lpaste.net/241316285168746496
Sep 08 17:22:07 <koz_>	I don't even know what this is even.
Sep 08 17:22:57 <johnw>	crestfallen: a category with products and terminal objects is monoidal taking the product to be the tensor, and the terminal object as the identity. In that case what you've written corresponds to the fact that it's monoidal and braided monoidal (swap and swap.swap≈id)
Sep 08 17:24:03 <johnw>	crestfallen: you could go further since it's also relevance monoidal (\x -> (x, x) with related laws)
Sep 08 17:24:09 <johnw>	oh, I should have said symmetric, not merely braided
Sep 08 17:24:22 <crestfallen>	thanks, yikes that is over my head
Sep 08 17:24:42 <johnw>	I'm just naming the categories of relationship you're identifying in what you wrote
Sep 08 17:25:03 <crestfallen>	ok so those comments lines 13-18 are valid johnw ?
Sep 08 17:25:14 <johnw>	the whole (a, (b, c)) ≅ ((a, b), c) is exactly a condition implied by monoidal categories
Sep 08 17:25:56 <johnw>	crestfallen: it only needs to be symmetric up to isomorphism
Sep 08 17:26:10 *	dented42 has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 08 17:26:17 <crestfallen>	these are notes from a bartosz video lecture. I got a lot out of it , however...
Sep 08 17:26:21 <johnw>	braided gives just x ⨂ y ≅ y ⨂ x
Sep 08 17:26:33 <johnw>	symmetric adds: swap . swap ≈ id
Sep 08 17:26:54 <crestfallen>	so symmetric is a specific type of monoid
Sep 08 17:27:07 <johnw>	symmetric a stronger type of monoidal category
Sep 08 17:27:24 *	marvin2 has quit (Ping timeout: 252 seconds)
Sep 08 17:27:27 <crestfallen>	one moment please
Sep 08 17:27:30 <johnw>	monoids as we know them in haskell are a rather specific bread of monoid object within a monoidal category
Sep 08 17:27:35 <johnw>	breed*
Sep 08 17:27:46 <mniip>	an endofunctor category doesn't seem symmetric, or even braided
Sep 08 17:28:02 *	Vulfe (~vulfe@2600:1702:31b0:34e0:48cf:4fc4:7193:2f2b) has joined
Sep 08 17:28:05 <mniip>	day convolution is symmetric I guess
Sep 08 17:28:16 <johnw>	ncatlab: "The endofunctor category is a strict monoidal category, thanks to our ability to compose endofunctors."
Sep 08 17:28:22 <crestfallen>	sorry I'm out of my league, but let me ask specific questions re: my paste ...
Sep 08 17:28:33 <AndreasK>	koz_: maybe related to https://ghc.haskell.org/trac/ghc/wiki/Migration/8.4#TypeInTypeispickier
Sep 08 17:28:40 <mniip>	johnw, right, but not symmetric in generael
Sep 08 17:28:44 <johnw>	agreed
Sep 08 17:28:57 *	ChaiTRex (~ChaiTRex@gateway/tor-sasl/chaitrex) has joined
Sep 08 17:29:01 <koz_>	AndreasK: Thanks - that could well be it.
Sep 08 17:29:15 <crestfallen>	so on line 68, we have simple multiplicative identity ...
Sep 08 17:29:15 <jle`>	koz_: the error suggests enabling AllowAmbigiousTypes
Sep 08 17:29:27 <jle`>	did you try that?
Sep 08 17:29:27 <mniip>	johnw, but then the category of endofunctors with Day Convolution as the product *is* symmetric
Sep 08 17:29:32 <koz_>	jle`: Why would this be required in 8.4.3 but not 8.2.2?
Sep 08 17:29:44 <koz_>	I can try that, certainly, but I'm just confused why?
Sep 08 17:29:47 <johnw>	yes, that's the monoidal form of the "a <> mempty = a" law we're used to
Sep 08 17:30:15 <johnw>	mniip: so it's not symmetric generally, but some monoid objects within it exhibit symmetry?
Sep 08 17:31:05 <mniip>	no we're talking two different monoidal structures on the same category
Sep 08 17:31:14 <johnw>	yes, that's what I mean by monoid object
Sep 08 17:31:17 *	smudge (~smudge@cpc85412-aztw29-2-0-cust161.18-1.cable.virginm.net) has joined
Sep 08 17:31:22 <crestfallen>	so identity in the form (a, id) is isomorphic to a, but not equivalent
Sep 08 17:31:31 <crestfallen>	(a, () )
Sep 08 17:31:33 <johnw>	a choice of (object, ⨂, I)
Sep 08 17:31:38 *	philippD has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
Sep 08 17:31:41 <johnw>	crestfallen: correct
Sep 08 17:31:49 <mniip>	(End(C), compose, id) vs (End(C), day convolution, id)
Sep 08 17:32:21 *	DTZUZO (~DTZUZO@S0106bcd16584b0aa.vs.shawcable.net) has joined
Sep 08 17:32:27 <crestfallen>	please elaborate :   a choice of (object, ⨂, I)
Sep 08 17:32:39 *	jessest (~jessest@c-69-136-147-130.hsd1.mi.comcast.net) has joined
Sep 08 17:32:47 <mniip>	hmm not id in the last one
Sep 08 17:32:54 *	Vulfe has quit (Ping timeout: 252 seconds)
Sep 08 17:32:54 *	gyia has quit (Ping timeout: 252 seconds)
Sep 08 17:32:59 *	Fairy has quit (Ping timeout: 244 seconds)
Sep 08 17:33:05 <mniip>	const(unit_C) I think
Sep 08 17:33:12 <crestfallen>	johnw ^
Sep 08 17:33:12 *	Fairy (~Fairy@unaffiliated/fairy) has joined
Sep 08 17:36:02 *	jmcarthur (~jmcarthur@2601:86:100:1620::1) has joined
Sep 08 17:36:12 *	thc202 has quit (Ping timeout: 252 seconds)
Sep 08 17:36:32 <AndreasK>	koz_: I guess because of the "TypeInType is pickier" change. Why THAT was changed? I have no idea :)
Sep 08 17:37:16 <AndreasK>	Did enabling typeintype fix your issue?
Sep 08 17:37:20 <koz_>	AndreasK and jle` : Thank you both - I think I'm going to take my usual Haskell approach, which is 'write what I want and have the compiler tell me what type it should have'.
Sep 08 17:37:36 <koz_>	AndreasK: No, but I just realized that I hadn't written it right in the first place.
Sep 08 17:38:24 *	Ahmedkh has quit (Ping timeout: 252 seconds)
Sep 08 17:38:56 <AndreasK>	Wonder if that's a bug then.
Sep 08 17:39:54 <crestfallen>	johnw still curious about what your post means    a choice of (object, ⨂, I)
Sep 08 17:40:08 *	yunhao94 (~yunhao94@183.197.179.95) has joined
Sep 08 17:40:10 <johnw>	crestfallen: I'll try: A monoidal category has a tensor ⨂ and an identity I. A given category can be monoidal in different ways (the cartesian product being just one possible choice). A monoid object is a choice of (Object, ⨂, I) within a monoidal category. So, monads are a monoid object in the category of endofunctors by choosing ([C,C], Compose, Identity) Applicatives are a monoid object in the category of
Sep 08 17:40:11 <johnw>	endofunctors by choosing ([C,C], Day, Identity)
Sep 08 17:40:54 *	rblaze (~Adium@199.201.64.2) has joined
Sep 08 17:41:30 <johnw>	a "monoid" as we use them is a monoid object in some monoidal category C where we choose cartesian products as the tensor. So a Haskell monoid would be (Type, (,), ()) within Hask (which is cartesian monoidal).
Sep 08 17:41:41 <johnw>	have to run now
Sep 08 17:41:44 *	conal has quit (Quit: Computer has gone to sleep.)
Sep 08 17:41:49 <crestfallen>	thanks kindly johnw
Sep 08 17:42:54 <crestfallen>	so the catesian monoidal is most common in haskell ?
Sep 08 17:43:07 *	libertyprime (~libertypr@71.82.69.111.dynamic.snap.net.nz) has joined
Sep 08 17:44:05 <crestfallen>	*cartesian
Sep 08 17:44:41 *	pfurla (~textual@ool-d18c2a07.dyn.optonline.net) has joined
Sep 08 17:46:21 *	hololeap has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
Sep 08 17:48:43 <koz_>	jle` and AndreasK: I wrote up my issue in more detail, with my thought process. Still getting the same issue, but hopefully you might be able to advise me better: https://lpaste.net/4098778751901368320
Sep 08 17:50:44 *	nille has quit (Ping timeout: 276 seconds)
Sep 08 17:51:12 *	wpcarro (~wpcarro@2604:2000:e843:1e00:a5e7:6c7e:6d19:56d8) has joined
Sep 08 17:51:49 *	Somix (~Somix@172.58.35.234) has joined
Sep 08 17:54:13 *	rblaze has quit (Ping timeout: 245 seconds)
Sep 08 17:54:29 <johnw>	crestfallen: Hask is cartesian monoidal category, yes
Sep 08 17:54:53 <johnw>	mniip: I think then we can say that the endofunctor category is monoidal under functor composition, and symmetric monoidal under Day convolution
Sep 08 17:55:34 *	wpcarro has quit (Ping timeout: 240 seconds)
Sep 08 17:55:48 <johnw>	crestfallen: it's very cool that you noticed the similarity between the monoid laws, and the isomorphic equivalence of (a, ()) and a. Same notions, just a more general setting.
Sep 08 17:55:53 *	Somix has quit (Ping timeout: 245 seconds)
Sep 08 17:56:07 <johnw>	the former is just a specialization of the latter
Sep 08 17:56:07 <AndreasK>	koz_: Just realized you use a plugin, might be an issue with the bug?
Sep 08 17:56:18 *	sbdchd (~sbdchd@natp-128-119-202-176.wireless.umass.edu) has joined
Sep 08 17:56:22 <AndreasK>	*issue with the plugin on 8.4
Sep 08 17:56:29 <koz_>	AndreasK: If that's the case, I just have to go back to 8.2.2.
Sep 08 17:56:35 <koz_>	It's not a _huge_ deal, but annoying all the same.
Sep 08 17:56:40 <koz_>	How would I check this?
Sep 08 17:57:49 <AndreasK>	Given that your code depends on the plugin/package I'm not sure that's easily possible. But I haven't used KnowNats yet so I can't say for sure sorry
Sep 08 17:57:57 <koz_>	AndreasK: OK, thanks.
Sep 08 17:58:04 <koz_>	But my logic makes sense, right?
Sep 08 17:58:12 <koz_>	(as in, my explanation isn't assuming anything strange)
Sep 08 17:59:08 *	jedws has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 08 17:59:22 *	smudge has quit (Quit: Leaving)
Sep 08 17:59:29 *	alx741 has quit (Quit: alx741)
Sep 08 17:59:36 *	nbloomf (~nbloomf@2600:1700:83e0:1f40:2167:cdf0:40e8:4884) has joined
Sep 08 17:59:47 *	sigmundv has quit (Remote host closed the connection)
Sep 08 18:00:15 *	alx741 (~alx741@186.178.110.188) has joined
Sep 08 18:00:35 <AndreasK>	koz_: As far as I'm concerned, if your code worked on 8.2, and doesn't on 8.4 when considering the migration recommendations it's likely an issue with a dependency (or sometimes ghc itself)
Sep 08 18:00:46 <koz_>	AndreasK: OK, thanks.
Sep 08 18:01:34 <AndreasK>	That package seems to have at least known issues with 8.4: https://github.com/clash-lang/ghc-typelits-knownnat/issues/21
Sep 08 18:01:39 *	Ahmedkh (~master@197.57.36.12) has joined
Sep 08 18:02:28 *	sigmundv (~sigmundv@31.200.180.13.threembb.ie) has joined
Sep 08 18:02:57 *	jedws (~jedws@60.227.232.67) has joined
Sep 08 18:03:19 *	SenasOzys has quit (Remote host closed the connection)
Sep 08 18:04:08 <koz_>	AndreasK: So you'd recommend to stick with 8.2.2 since it works?
Sep 08 18:04:23 *	nbloomf has quit (Client Quit)
Sep 08 18:04:28 *	graphene has quit (Remote host closed the connection)
Sep 08 18:04:36 <AndreasK>	Seems like the pragmatic approach. 
Sep 08 18:04:46 <koz_>	AndreasK: Fair enough. Thank you for your help!
Sep 08 18:05:13 *	graphene (~graphene@46.101.134.251) has joined
Sep 08 18:05:18 <AndreasK>	Sadly compatibility with new ghc releases can take quite some time to trickly down into less popular dependencies :/
Sep 08 18:05:59 *	nbloomf (~nbloomf@2600:1700:83e0:1f40:2167:cdf0:40e8:4884) has joined
Sep 08 18:06:07 *	pimlu has quit (Ping timeout: 240 seconds)
Sep 08 18:08:30 <koz_>	Another thing, completely unrelated: for Data.Functor.Contravariant.Divisible.Decidable, lose has the type '(a -> Void) -> f a'. However, if I understand correctly, we can't even _define_ a function with type (a -> Void) except by using bottom. What's the deal with that type then?
Sep 08 18:10:41 *	dented42 (~dented42@c-24-10-132-159.hsd1.ut.comcast.net) has joined
Sep 08 18:11:17 *	tristanp (~tristanp@2601:600:a07f:ef2b:410e:be32:dd8c:b117) has joined
Sep 08 18:12:21 *	sword865 (uid208942@gateway/web/irccloud.com/x-jiepdrsjobmjmhgu) has joined
Sep 08 18:12:27 *	sigmundv has quit (Ping timeout: 240 seconds)
Sep 08 18:14:07 *	Pepe_ has quit (Quit: Gateway shutdown)
Sep 08 18:15:28 *	graphene has quit (Remote host closed the connection)
Sep 08 18:16:08 *	graphene (~graphene@46.101.134.251) has joined
Sep 08 18:17:36 *	nullcone has quit (Quit: Connection closed for inactivity)
Sep 08 18:22:36 *	tristanp has quit (Remote host closed the connection)
Sep 08 18:22:50 <dmwit>	You can define a function of type `a -> Void` when `a` is `Void`.
Sep 08 18:22:59 <dmwit>	(Or any other empty type.)
Sep 08 18:23:18 <koz_>	dmwit: OK, fair enough, but I still don't understand what purpose that (a -> Void) argument could possibly serve.
Sep 08 18:23:26 <koz_>	Or why it's necessary.
Sep 08 18:23:33 *	mizu_no_oto_work (~textual@2604:6000:1012:4098:0:4ab1:4648:4083) has joined
Sep 08 18:23:33 <dmwit>	It serves the purpose of being evidence that `a` is an empty type.
Sep 08 18:23:38 *	acarrico (~acarrico@dhcp-68-142-35-239.greenmountainaccess.net) has joined
Sep 08 18:23:48 <koz_>	Why do you need that in this case?
Sep 08 18:24:29 <dmwit>	Presumably you will use it to build the `f a`.
Sep 08 18:24:57 <dmwit>	e.g. if your `f a` has an `a -> B` function in it, you can use `fmap absurd` to build one of those.
Sep 08 18:26:36 *	Pepe_ (~pep_@anderith.bouah.net) has joined
Sep 08 18:26:36 *	mounty has quit (Ping timeout: 252 seconds)
Sep 08 18:27:16 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 08 18:27:33 *	markus1199 (~markus118@82.206.17.165) has joined
Sep 08 18:27:58 *	nbloomf (~nbloomf@2600:1700:83e0:1f40:2167:cdf0:40e8:4884) has joined
Sep 08 18:28:40 <crestfallen>	johnw, comment appreciated, I was over at the math channel. pondering...
Sep 08 18:28:47 *	dstolfa (~dstolfa@160-90.dsl.iskon.hr) has joined
Sep 08 18:30:33 *	haasn has quit (Remote host closed the connection)
Sep 08 18:31:00 *	markus1189 has quit (Ping timeout: 252 seconds)
Sep 08 18:31:15 *	oo_miguel has quit (Quit: WeeChat 1.6)
Sep 08 18:31:20 *	Vulfe (~vulfe@2600:1702:31b0:34e0:48cf:4fc4:7193:2f2b) has joined
Sep 08 18:33:25 *	tzemanovic (~tzemanovi@131.10.168.125.sta.wbroadband.net.au) has joined
Sep 08 18:33:26 *	dstolfa has quit (Ping timeout: 244 seconds)
Sep 08 18:33:26 *	Partmedia has quit (Ping timeout: 244 seconds)
Sep 08 18:33:42 *	haasn (~haasn@HSI-KBW-5-56-186-133.hsi16.kabel-badenwuerttemberg.de) has joined
Sep 08 18:36:27 *	enterprisey has quit (Ping timeout: 240 seconds)
Sep 08 18:37:29 *	blz37 has quit ()
**** ENDING LOGGING AT Sat Sep  8 18:39:31 2018

**** BEGIN LOGGING AT Tue Sep 11 11:20:01 2018

Sep 11 11:20:01 *	Now talking on #haskell
Sep 11 11:20:02 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 11 11:20:02 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 11 11:20:02 *	Channel #haskell url: http://www.haskell.org/
Sep 11 11:20:30 <dmwit>	drager: The Reader monad (transformer) gives you a way to carry around some configuration information. `ask` retrieves the configuration information. Frequently, your configuration is a record or similar and you want access to a specific field or do some simple calculation on the configuration. You could do this with `fmap fieldName ask`, but this is such a common use that there's a dedicated name for it; 
Sep 11 11:20:36 <dmwit>	`asks f` applies `f` to the configuration and returns the result.
Sep 11 11:20:39 *	a_nick (~nick@78.152.226.162) has joined
Sep 11 11:20:46 *	dented42 (~dented42@65-130-188-150.slkc.qwest.net) has joined
Sep 11 11:21:41 <dmwit>	I don't know why pluralizing is the convention for this, but it is; e.g. `gets f` is `fmap f get`, and I think there are a few other examples of this lying around.
Sep 11 11:21:52 *	sbdchd has quit (Ping timeout: 244 seconds)
Sep 11 11:22:27 *	theelous3 (~theelous3@unaffiliated/theelous3) has joined
Sep 11 11:22:36 *	niklasl2 has quit (Quit: Nettalk6 - www.ntalk.de)
Sep 11 11:22:45 *	rihards has quit (Quit: rihards)
Sep 11 11:22:56 *	niklasl (~niklasl@c83-253-23-120.bredband.comhem.se) has joined
Sep 11 11:23:05 *	rihards (~rihards@balticom-142-78-50.balticom.lv) has joined
Sep 11 11:23:18 *	sbdchd_ has quit (Ping timeout: 264 seconds)
Sep 11 11:23:30 *	albertus1 (~seb@ip-109-42-0-184.web.vodafone.de) has joined
Sep 11 11:23:33 *	oisdk (~textual@95.211.95.26.adsl.inet-telecom.org) has joined
Sep 11 11:23:36 *	pio_ has quit (Quit: pio_)
Sep 11 11:23:38 *	sleepster (465de3e7@gateway/web/freenode/ip.70.93.227.231) has joined
Sep 11 11:23:47 <drager>	dmwit: Alright, I think I get that right. Thanks
Sep 11 11:23:57 *	sjakobi (~sjakobi@ip2504fa5e.dynamic.kabel-deutschland.de) has joined
Sep 11 11:24:13 *	andyhoang has quit (Ping timeout: 245 seconds)
Sep 11 11:24:47 *	Saukk has quit (Read error: Connection reset by peer)
Sep 11 11:25:01 *	nocm has quit (Quit: ChatZilla 0.9.93 [Firefox 52.9.1/20180826165001])
Sep 11 11:25:15 <geekosaur>	iirc the s stands for selector
Sep 11 11:25:26 <sleepster>	what would be the easiest way to read well-defined data from disk directly into memory into a data record in Haskell?
Sep 11 11:25:46 *	Saukk (~Saukk@91-156-130-28.elisa-laajakaista.fi) has joined
Sep 11 11:25:58 *	howdoi has quit (Quit: Connection closed for inactivity)
Sep 11 11:26:16 <sleepster>	One example of this might be an ELF file or a persisted tcp packet
Sep 11 11:27:38 *	khilan has quit (Quit: Connection closed for inactivity)
Sep 11 11:27:55 *	sbdchd (~sbdchd@natp-128-119-202-174.wireless.umass.edu) has joined
Sep 11 11:28:30 *	yyy (~yyy@unaffiliated/tinnotl) has joined
Sep 11 11:28:45 <dmwit>	https://hackage.haskell.org/package/bytestring-mmap perhaps
Sep 11 11:29:10 *	XCE has quit (Quit: Leaving)
Sep 11 11:29:25 *	yyy has quit (Remote host closed the connection)
Sep 11 11:29:38 *	rblaze has quit (Quit: Leaving.)
Sep 11 11:29:55 <dmwit>	Your plan of "directly into data record" is unlikely to happen. Haskell doesn't give you a way to control the memory layout of its data types, and even the additional control GHC gives you above and beyond the Haskell Report is very unlikely to be enough.
Sep 11 11:30:43 <sleepster>	thanks dmwit . I'll take a look at this.
Sep 11 11:30:52 *	cyberglot has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 11 11:30:54 *	dented42 has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 11 11:31:25 *	pio_ (~pio@cm-84.208.241.146.getinternet.no) has joined
Sep 11 11:31:36 *	keepLearning512 (~keepLearn@106.51.18.62) has joined
Sep 11 11:31:45 *	yyy (~yyy@unaffiliated/tinnotl) has joined
Sep 11 11:32:15 *	Saukk has quit (Remote host closed the connection)
Sep 11 11:32:52 <EvanR>	you can create a short vector of heterogenous boxed values, and use accessors similar to record field accessors on them
Sep 11 11:32:56 *	Saukk (~Saukk@91-156-130-28.elisa-laajakaista.fi) has joined
Sep 11 11:33:16 *	rblaze (~Adium@2620:10d:c091:200::1:1ef6) has joined
Sep 11 11:33:27 *	rprije has quit (Read error: Connection reset by peer)
Sep 11 11:34:39 <EvanR>	or if the underlying data is purely binary, use a ByteString and provide a view layer to look at the parts
Sep 11 11:34:41 *	rprije (~rprije@220-253-29-152.dyn.iinet.net.au) has joined
Sep 11 11:34:52 *	pio_ has quit (Client Quit)
Sep 11 11:35:05 <EvanR>	i'm not sure how the performance of any of this adds up
Sep 11 11:35:07 *	Saukk has quit (Client Quit)
Sep 11 11:35:22 *	logzet (~quassel@unaffiliated/logzet) has joined
Sep 11 11:36:16 *	olle (~olle@i577BC873.versanet.de) has joined
Sep 11 11:36:50 *	spiegelau has quit (Quit: leaving)
Sep 11 11:37:08 *	borkr has quit (Remote host closed the connection)
Sep 11 11:38:28 *	beatmax (~beatmax@4dafbf8f.ftth.telfortglasvezel.nl) has joined
Sep 11 11:39:41 *	dented42 (~dented42@65-130-188-150.slkc.qwest.net) has joined
Sep 11 11:39:46 *	nowhere_man has quit (Ping timeout: 252 seconds)
Sep 11 11:39:49 *	graphene has quit (Read error: Connection reset by peer)
Sep 11 11:40:04 <vaibhavsagar>	how do I pass stack an --enable-executable-dynamic flag?
Sep 11 11:40:16 <vaibhavsagar>	like with cabal?
Sep 11 11:40:21 *	BasDirks (~textual@546AAE3B.cm-12-3c.dynamic.ziggo.nl) has joined
Sep 11 11:41:41 *	jessest has quit (Read error: Connection reset by peer)
Sep 11 11:41:58 *	nowhere_man (~pierre@2a01:e35:2eb3:4350:3fcb:8255:8d52:d188) has joined
Sep 11 11:41:59 *	albertus1 has quit (Remote host closed the connection)
Sep 11 11:42:03 *	dented42 has quit (Client Quit)
Sep 11 11:42:06 *	jessest (~jessest@69.54.194.98) has joined
Sep 11 11:42:13 *	hackage flight-igc 1.0.0 - A parser for IGC files.  http://hackage.haskell.org/package/flight-igc-1.0.0 (philderbeast)
Sep 11 11:42:13 *	z0 (~zzz@2a03:b0c0:3:d0::3095:3001) has joined
Sep 11 11:42:56 *	spiegelau (~spiegelau@82.144.205.57) has joined
Sep 11 11:44:07 *	connrs has quit (Ping timeout: 240 seconds)
Sep 11 11:44:23 *	rschmukler has quit (Remote host closed the connection)
Sep 11 11:44:41 *	zzz has quit (Ping timeout: 276 seconds)
Sep 11 11:45:47 *	aarvar has quit (Quit: Leaving.)
Sep 11 11:46:20 *	oisdk has quit (Ping timeout: 272 seconds)
Sep 11 11:46:43 *	graphene (~graphene@46.101.134.251) has joined
Sep 11 11:46:46 *	cyberglot (~cyberglot@xd4ed8716.cust.hiper.dk) has joined
Sep 11 11:47:06 *	rschmukler (~rschmukle@static-96-239-100-245.nycmny.fios.verizon.net) has joined
Sep 11 11:48:44 *	Jacoby6000_ (~jacoby600@mlbadvance08.m.subnet.rcn.com) has joined
Sep 11 11:48:49 *	graphene has quit (Remote host closed the connection)
Sep 11 11:49:55 *	oisdk (~textual@95.211.187.229.adsl.inet-telecom.org) has joined
Sep 11 11:50:17 *	graphene (~graphene@46.101.134.251) has joined
Sep 11 11:50:41 *	rschmukler has quit (Remote host closed the connection)
Sep 11 11:51:48 *	vlatkoB has quit (Remote host closed the connection)
Sep 11 11:52:05 *	rschmukler (~rschmukle@static-96-239-100-245.nycmny.fios.verizon.net) has joined
Sep 11 11:54:44 *	rprije has quit (Read error: Connection reset by peer)
**** ENDING LOGGING AT Tue Sep 11 11:55:13 2018

**** BEGIN LOGGING AT Fri Sep 14 11:02:57 2018

Sep 14 11:02:57 *	Now talking on #haskell
Sep 14 11:02:57 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 14 11:02:57 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 14 11:02:57 *	Channel #haskell url: http://www.haskell.org/
Sep 14 11:03:20 *	replay (~replay@pdpc/supporter/student/replay) has joined
Sep 14 11:03:39 *	glittershark (~griffin@static-96-239-100-245.nycmny.fios.verizon.net) has joined
Sep 14 11:05:29 *	RegEchse (~regechse@dslb-178-010-080-151.178.010.pools.vodafone-ip.de) has joined
Sep 14 11:06:44 *	martingale has quit (Ping timeout: 244 seconds)
Sep 14 11:06:52 *	abueide (~abueide@71-92-164-100.static.reno.nv.charter.com) has joined
Sep 14 11:07:16 *	sbdchd (~sbdchd@natp-128-119-202-134.wireless.umass.edu) has joined
Sep 14 11:07:48 *	matheus23 has quit (Ping timeout: 252 seconds)
Sep 14 11:08:37 *	bluepixel (~bluepixel@unaffiliated/bluepixel) has joined
Sep 14 11:08:54 *	Destol (~Destol@public-253-79.nat.utoronto.ca) has joined
Sep 14 11:09:16 <dmwit>	wroathe: where, because I prefer to think of "what is the answer" first and "how do I compute it" second. But I see no problem with `let`/`in`.
Sep 14 11:09:55 *	valentinbuza (~valentinb@unaffiliated/valentinbuza) has joined
Sep 14 11:11:33 *	Disconnected ()
**** ENDING LOGGING AT Fri Sep 14 11:11:33 2018

**** BEGIN LOGGING AT Fri Sep 14 11:19:10 2018

Sep 14 11:19:10 *	Now talking on #haskell
Sep 14 11:19:10 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 14 11:19:10 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 14 11:19:10 *	Channel #haskell url: http://www.haskell.org/
Sep 14 11:19:36 *	gyia (~jy@213.152.162.84) has joined
Sep 14 11:19:36 *	jessest has quit (Read error: Connection reset by peer)
Sep 14 11:19:51 *	jessest (~jessest@69.54.194.98) has joined
Sep 14 11:20:22 *	trcc (~trcc@85.191.91.16) has joined
Sep 14 11:20:59 <glittershark>	let foo = iso hither thither where { hither = ... ; thither = ... }
Sep 14 11:21:11 <glittershark>	I can't believe I wrote this code but also I'm delighted
Sep 14 11:21:53 <crestfallen>	hi I've been studying the algebraic representation for List, Tree, and counting inhabitants of (a -> b). where should I go from here, ie now that I know the principle behind counting inhabitants of a Type ? 
Sep 14 11:22:26 <cocreature>	crestfallen: write actual programs? :)
Sep 14 11:22:36 *	sbdchd (~sbdchd@natp-128-119-202-149.wireless.umass.edu) has joined
Sep 14 11:22:41 <dmwit>	cocreature++
Sep 14 11:22:42 *	wroathe has quit (Ping timeout: 252 seconds)
Sep 14 11:23:02 *	fishythefish (~fishythef@2620:10d:c090:180::1:6fa) has joined
Sep 14 11:23:51 *	sbdchd_ (~sbdchd@natp-128-119-202-149.wireless.umass.edu) has joined
Sep 14 11:23:56 *	sbdchd_ has quit (Remote host closed the connection)
Sep 14 11:24:08 *	chaosmasttter has quit (Ping timeout: 272 seconds)
Sep 14 11:24:12 *	sbdchd_ (~sbdchd@natp-128-119-202-149.wireless.umass.edu) has joined
Sep 14 11:24:14 <crestfallen>	well, why does the taylor series keep coming up while studying these ideas?
Sep 14 11:24:39 <crestfallen>	and catalan numbers.
Sep 14 11:24:39 <dmwit>	Counter-question: how come thermal expansion doesn't come up very much while studying these ideas?
Sep 14 11:24:50 <crestfallen>	goodbye
Sep 14 11:24:54 Python interface unloaded
**** ENDING LOGGING AT Fri Sep 14 11:24:54 2018

**** BEGIN LOGGING AT Sat Sep 15 13:13:51 2018

Sep 15 13:13:51 *	Now talking on #haskell
Sep 15 13:13:51 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 15 13:13:51 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 15 13:13:51 *	Channel #haskell url: http://www.haskell.org/
Sep 15 13:14:30 *	EdJoJob has quit (Ping timeout: 252 seconds)
Sep 15 13:16:27 *	osa1 has quit (Ping timeout: 252 seconds)
Sep 15 13:18:55 *	connrs (~connrs@conners.plus.com) has joined
Sep 15 13:19:09 *	ManiacTwister has quit (Quit: Servus!)
Sep 15 13:20:17 *	glittershark (~griffin@ool-43503381.dyn.optonline.net) has joined
Sep 15 13:20:44 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 15 13:23:05 <stevenxl>	jle`: Apologies that I am replying a bit late. You can find the script here (https://gist.github.com/StevenXL/3764b8887b40325349020595d472a044). 
Sep 15 13:23:17 <crestfallen>	hi please explain how Boolean is isomorphic to Either id id. I don't get this
Sep 15 13:23:22 *	connrs has quit (Ping timeout: 246 seconds)
Sep 15 13:23:32 *	osa1 (~omer@haskell/developer/osa1) has joined
Sep 15 13:23:58 *	toovs has quit (Quit: WeeChat 2.2)
Sep 15 13:25:01 <ab9rf>	heh
Sep 15 13:25:13 *	cschneid_ (~cschneid@c-73-78-144-189.hsd1.co.comcast.net) has joined
Sep 15 13:25:20 <crestfallen>	so one parameter to Either needs to be True
Sep 15 13:25:49 <ab9rf>	what's "Either id id"?
Sep 15 13:25:52 *	oo_miguel (~miguel@89-75-127-111.dynamic.chello.pl) has joined
Sep 15 13:26:10 <crestfallen>	id
Sep 15 13:26:18 *	toovs (~toovs@c-98-238-150-172.hsd1.ca.comcast.net) has joined
Sep 15 13:26:22 <ab9rf>	:t Either id id
Sep 15 13:26:24 <lambdabot>	error:
Sep 15 13:26:24 <lambdabot>	    • Data constructor not in scope:
Sep 15 13:26:24 <lambdabot>	        Either :: (a0 -> a0) -> (a1 -> a1) -> t
Sep 15 13:26:34 <ab9rf>	there's no "Either" data constructor
Sep 15 13:26:39 <ab9rf>	Either is a type constructor
Sep 15 13:26:51 <ab9rf>	"Either id id" is invalid
Sep 15 13:27:20 <crestfallen>	what about Either (Unit, Unit)
Sep 15 13:27:23 *	jmcarthur (~jmcarthur@2601:86:100:1620::1) has joined
Sep 15 13:27:30 <ab9rf>	so i can't say its isomorphic to anything because it has no meaning
Sep 15 13:27:32 *	thy0 (~thy0@209.209.238.152) has joined
Sep 15 13:27:38 <crestfallen>	this is how the blog post was written
Sep 15 13:27:41 <ab9rf>	that's an incompletely applied type constructor
Sep 15 13:28:02 <crestfallen>	yeah thanks it didn't look right to me.
Sep 15 13:28:15 <ab9rf>	we could talk about Either () ()
Sep 15 13:28:56 <crestfallen>	please do
Sep 15 13:29:27 *	cschneid_ has quit (Ping timeout: 240 seconds)
Sep 15 13:29:58 <crestfallen>	> :t Either () ()
Sep 15 13:30:01 <lambdabot>	 <hint>:1:1: error: parse error on input ‘:’
Sep 15 13:30:02 *	connrs (~connrs@conners.plus.com) has joined
Sep 15 13:30:21 *	luhliarik__ (~zer0@ip-37-188-179-207.eurotel.cz) has joined
Sep 15 13:30:25 <crestfallen>	:t Either () ()
Sep 15 13:30:26 <lambdabot>	error:
Sep 15 13:30:27 <lambdabot>	    • Data constructor not in scope: Either :: () -> () -> t
Sep 15 13:30:27 <lambdabot>	    • Perhaps you meant variable ‘either’ (imported from Data.Either)
Sep 15 13:30:33 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
Sep 15 13:30:52 <crestfallen>	oh well I suck
Sep 15 13:31:36 <ab9rf>	the data constructors are Left and Right
Sep 15 13:31:40 <ab9rf>	:t Left ()
Sep 15 13:31:42 <lambdabot>	Either () b
Sep 15 13:31:45 <ab9rf>	:t Right ()
Sep 15 13:31:47 <lambdabot>	Either a ()
Sep 15 13:32:01 *	desperek has quit (Quit: xoxo)
Sep 15 13:32:38 <ab9rf>	so the isomorphism is between Bool (which has two inhabitants, True and False) and Either () () (which also has two inhabitants, Left () and Right ())
Sep 15 13:33:04 <ab9rf>	there are subtle differences, hwoever, when yu consider bottom
Sep 15 13:33:19 <crestfallen>	hmm
Sep 15 13:33:55 <ab9rf>	Either () () has _|_, Left _|_, and Right _|_ as additional inhabitants, while Bool only has _|_
Sep 15 13:34:07 *	kapil___ has quit (Quit: Connection closed for inactivity)
Sep 15 13:34:10 *	ktonga has quit (Ping timeout: 272 seconds)
Sep 15 13:34:16 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Sep 15 13:34:24 *	graphene has quit (Read error: Connection reset by peer)
Sep 15 13:35:13 *	graphene (~graphene@46.101.134.251) has joined
Sep 15 13:35:31 <crestfallen>	yeah I don't get this quite yet
Sep 15 13:37:27 <ab9rf>	well, let's ignore _|_ for now
Sep 15 13:37:42 <ab9rf>	Bool has two possible values, or inhabitants, which are True and False
Sep 15 13:37:56 <crestfallen>	ab9rf, ok
Sep 15 13:38:28 <ab9rf>	the unit type, which we call () in Haskell, has exactly one possible value, which we also call ()
Sep 15 13:38:38 <ab9rf>	you'll also see it called Unit
Sep 15 13:38:41 <ab9rf>	or sometimes Void
Sep 15 13:39:14 *	wroathe has quit (Ping timeout: 272 seconds)
Sep 15 13:39:22 <ab9rf>	Either a b has as many possible value as a has, plus however many b has
Sep 15 13:39:47 <ab9rf>	this is because each value in Either is either Left a or Right b.
Sep 15 13:40:19 <crestfallen>	right that is (*), or AND
Sep 15 13:41:00 *	darjeeling_ (~darjeelin@205.175.107.170) has joined
Sep 15 13:41:16 <crestfallen>	hold on
Sep 15 13:41:28 <ab9rf>	so, the two values in Either () () are Left () and Right ()
Sep 15 13:41:46 <ab9rf>	which yuo can place in one to one correspondence with the True and False of Bool
Sep 15 13:41:59 <ab9rf>	and so they're isomorphic, disregarding bottom
Sep 15 13:42:25 *	jeltsch has quit (Ping timeout: 250 seconds)
Sep 15 13:42:42 <crestfallen>	ok so even though there is no | in Either, it is an addition type (+) OR
Sep 15 13:42:48 <ab9rf>	correct, it's an addition type
Sep 15 13:43:05 <ab9rf>	that's because it's defined as Either a b = Left a | Right b
Sep 15 13:43:29 *	zv (~zv@unaffiliated/zv) has joined
Sep 15 13:43:47 <ab9rf>	the Left constructor has the same number of inhabitants as its enclosed type, a
Sep 15 13:43:58 <ab9rf>	and the Right constructor the same as its enclosed type, b
Sep 15 13:44:25 <crestfallen>	so the side of the pipe that is inhabited, can we say that is True?
Sep 15 13:44:51 <crestfallen>	its not a Boolean value, but..
Sep 15 13:44:52 <ab9rf>	you can choose arbitrarily wehther to associate Left () with True or with False
Sep 15 13:45:45 *	SenasOzys has quit (Remote host closed the connection)
Sep 15 13:45:47 *	jao (~jao@pdpc/supporter/professional/jao) has joined
Sep 15 13:46:32 <ab9rf>	by convention we tend to use Left for "failures" and Right for "successes", so mapping Left () to False would likely make the existing combinators behave more "expectedly" when used with Either () ()
Sep 15 13:47:10 *	SenasOzys (~Ozys@user208.77-105-199.netatonce.net) has joined
Sep 15 13:47:28 *	thy0 has quit (Ping timeout: 272 seconds)
Sep 15 13:47:34 *	jmcarthur has quit (Ping timeout: 250 seconds)
Sep 15 13:47:45 *	hololeap (~hololeap@unaffiliated/hololeap) has joined
Sep 15 13:48:49 *	cybai (~cybai@123-193-72-10.dynamic.kbronet.com.tw) has joined
Sep 15 13:48:50 <crestfallen>	right. also in logic, implication has ' not P | Q ' . is that related?
Sep 15 13:49:00 <ab9rf>	not really, no
Sep 15 13:49:26 <ab9rf>	at least not in any way that is obvious to me
Sep 15 13:50:00 <crestfallen>	thanks yeah it explains why Bool is defined with False on the left side
Sep 15 13:50:27 *	Solonarv_ has quit (Ping timeout: 240 seconds)
Sep 15 13:50:50 <crestfallen>	I mean, is that convention only, and not based on logic?
Sep 15 13:51:18 *	Solonarv_ (~Thunderbi@AStrasbourg-653-1-159-25.w90-6.abo.wanadoo.fr) has joined
Sep 15 13:51:54 <geekosaur>	there are things it helps with, but less due to logic than operationally (for example, fromEnum False == 0 which is convenient)
Sep 15 13:52:29 *	davr0s has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
Sep 15 13:52:50 *	knupfer (~Thunderbi@200116b82c7fa000f69634fffef0b45f.dip.versatel-1u1.de) has joined
Sep 15 13:52:55 <crestfallen>	interesting, thank you kindly. I'm a little fuzzy
Sep 15 13:53:05 <geekosaur>	you gain a very tiny speed boost from treating the constructor tag as a machine level bitwise boolean
Sep 15 13:53:06 *	cybai has quit (Ping timeout: 252 seconds)
Sep 15 13:53:31 <ab9rf>	sorry, i had to step away
Sep 15 13:53:33 <geekosaur>	but in terms of the logic itself, there's no difference
Sep 15 13:53:42 *	kefin (~kefin@120-92-11.connect.netcom.no) has joined
Sep 15 13:53:47 <ab9rf>	my son is recovering from major surgery and i'm prone to having to help him with some thing or another
Sep 15 13:54:21 <crestfallen>	ab9rf, blessings to your family
Sep 15 13:54:51 *	aarvar (~foewfoiew@65.154.158.104) has joined
Sep 15 13:55:34 *	pimlu has quit (Ping timeout: 240 seconds)
Sep 15 13:55:38 <crestfallen>	that's interesting, being an english speaker, of course everything is better from left to Right :)
Sep 15 13:56:16 *	son0p_ (~ff@190.145.148.186) has joined
Sep 15 13:56:36 <ab9rf>	yes, the interpretation of Left and Right is dextrocentric :)
Sep 15 13:57:53 *	thy0 (~thy0@104.222.153.50) has joined
Sep 15 13:58:09 *	mizu_no_oto_work (~textual@2604:6000:1012:4098:0:4ab1:4648:4083) has joined
Sep 15 13:58:11 <geekosaur>	data Aut a b = Sinistro a | Dextro b
Sep 15 13:58:23 *	raichoo has quit (Ping timeout: 245 seconds)
Sep 15 13:59:38 *	Gurkenglas has quit (Ping timeout: 245 seconds)
Sep 15 13:59:51 <ab9rf>	geekosaur: gah, you're making me think of algol now
Sep 15 14:00:07 *	glittershark has quit (Remote host closed the connection)
Sep 15 14:00:25 <monochrom>	Algol was nice. Still is, just a bit less.
Sep 15 14:00:59 *	fragamus has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 15 14:01:20 <jle`>	crestfallen: if two data types are isomorphic, it means that it is possible to write an `to :: a -> b` and `from :: b -> a` such that `to . from = id` and `from . to = id`
Sep 15 14:01:54 <jle`>	crestfallen: in many (most?) cases, there are actually many possible such pairs of functions
Sep 15 14:01:58 <monochrom>	I think we over-abuse the word "isomorphic" when we just mean "bijection".
Sep 15 14:02:40 <jle`>	i think that's fair too :)
Sep 15 14:02:49 <jle`>	crestfallen: the only requirement is that at least one to/from pair exists
Sep 15 14:02:50 <Solonarv>	an isomorphism typically also preserves some laws or operations, on top of being a bijection
Sep 15 14:02:54 *	mizu_no_oto_work has quit (Ping timeout: 264 seconds)
Sep 15 14:02:54 <monochrom>	Actually s/we/you/ because I don't do it. :)
Sep 15 14:03:15 <Solonarv>	although in colloquial usage it's left ambiguous *which* laws are preserved
Sep 15 14:03:36 *	sbdchd (~sbdchd@natp-128-119-202-137.wireless.umass.edu) has joined
Sep 15 14:04:38 *	sbdchd has quit (Remote host closed the connection)
Sep 15 14:05:15 *	glguy gives voice to knupfer
Sep 15 14:06:05 *	pio_ has quit (Quit: pio_)
Sep 15 14:06:07 <knupfer>	Any news on ghc861?
Sep 15 14:06:14 *	odanoburu has quit (Quit: Connection closed for inactivity)
Sep 15 14:06:37 *	P1RATEZ (piratez@unaffiliated/p1ratez) has joined
Sep 15 14:07:42 <crestfallen>	thanks jle` et al ..
Sep 15 14:08:22 *	fragamus (~textual@2600:1:9a1f:a257:18c6:54ce:6e2f:18f) has joined
Sep 15 14:08:23 *	Jetien has quit (Quit: Leaving)
Sep 15 14:09:02 <crestfallen>	well I'm beginning to understand homomorphism. I've been watching the bartosz lectures which are helping.
Sep 15 14:10:44 *	tzemanovic (~tzemanovi@131.10.168.125.sta.wbroadband.net.au) has joined
Sep 15 14:12:10 *	cschneid_ (~cschneid@c-73-78-144-189.hsd1.co.comcast.net) has joined
Sep 15 14:12:10 *	oish has quit (Ping timeout: 272 seconds)
Sep 15 14:13:43 <fragamus>	cale you here?
Sep 15 14:15:10 *	ManiacTwister (~Twister@2a01:4f8:171:4de::40:2) has joined
Sep 15 14:15:39 *	a_nick has quit (Quit: a_nick)
Sep 15 14:15:39 *	enterprisey has quit (Remote host closed the connection)
Sep 15 14:16:01 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Sep 15 14:16:15 *	ddellacosta (~ddellacos@ool-43536010.dyn.optonline.net) has joined
Sep 15 14:16:34 *	connrs has quit (Ping timeout: 240 seconds)
Sep 15 14:18:07 *	Disconnected ()
**** ENDING LOGGING AT Sat Sep 15 14:18:07 2018

**** BEGIN LOGGING AT Sat Sep 15 14:18:37 2018

Sep 15 14:18:37 *	Now talking on #haskell
Sep 15 14:18:37 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 15 14:18:37 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 15 14:18:37 *	Channel #haskell url: http://www.haskell.org/
Sep 15 14:20:25 *	wroathe has quit (Ping timeout: 246 seconds)
Sep 15 14:20:27 *	ddellacosta has quit (Ping timeout: 240 seconds)
Sep 15 14:20:28 *	cschneid_ has quit (Ping timeout: 245 seconds)
Sep 15 14:20:42 <n_blownapart>	Solonarv, but also a homomorphism must preserve operations; I mean any morphism needs to know 'to' and 'from' to, well typecheck, right?
Sep 15 14:20:53 *	crestfallen has quit (Ping timeout: 245 seconds)
Sep 15 14:22:18 *	mounty has quit (Ping timeout: 272 seconds)
Sep 15 14:22:31 *	mounty (~mounty@n106-71-211-213.rdl2.qld.optusnet.com.au) has joined
Sep 15 14:22:52 *	You are now known as crestfallen
Sep 15 14:23:08 <Solonarv>	homomorphisms don't have to be bijective
Sep 15 14:23:08 <crestfallen>	why did the irc swith my nick..
Sep 15 14:23:17 *	RegEchse has quit (Quit: <3 WeeChat (v2.3-dev))
Sep 15 14:23:35 *	siers (~ij@unaffiliated/ij) has joined
Sep 15 14:25:13 *	Jobava (uid133806@gateway/web/irccloud.com/x-exbgebanqhlcrnih) has joined
Sep 15 14:25:27 <crestfallen>	sorry do you mean they cannot be bijective?
Sep 15 14:25:40 *	acidjnk has quit (Ping timeout: 246 seconds)
Sep 15 14:25:46 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Sep 15 14:26:00 <Solonarv>	no, I mean what I said
Sep 15 14:26:07 <crestfallen>	ok thanks
Sep 15 14:26:11 <Solonarv>	homomorphisms preserve shape (in some sense)
Sep 15 14:26:22 <Solonarv>	an isomorpism is a homomorphism that can also be reversed
Sep 15 14:26:40 <jle`>	homomorphisms can be bijective...
Sep 15 14:26:48 <jle`>	there's nothing saying they aren't allowed to be, heh
Sep 15 14:27:18 <crestfallen>	in the case of monoid, it's alway uni-directional right?
Sep 15 14:27:29 <ab9rf>	not necessarily
Sep 15 14:27:44 <crestfallen>	oh brother
Sep 15 14:27:47 <jle`>	consider the monoid homorphism from (Integer, +) to (Integer, +)
Sep 15 14:27:49 <monochrom>	What is "uni-directional"?
Sep 15 14:27:58 <jle`>	defined by to = id
Sep 15 14:28:19 <jle`>	this is a proper monoid homorphism, and is also a bijection
Sep 15 14:28:20 <ab9rf>	a very boring homomorphism, but it one
Sep 15 14:29:13 *	djbeau has quit (Remote host closed the connection)
Sep 15 14:29:25 *	martingale (~textual@pool-96-232-163-118.nycmny.fios.verizon.net) has joined
Sep 15 14:29:29 *	djbeau (~dbeaureg@inet-hqmc04-o.oracle.com) has joined
Sep 15 14:29:38 <jle`>	it's a monoid homomorphism because to mempty = mempty, and to (x <> y) = to x <> to y 
Sep 15 14:30:08 *	Wyv3rn (~Wyv3rn@unaffiliated/wyv3rn) has joined
Sep 15 14:30:25 *	Ariakenom (~Ariakenom@h-155-4-129-251.NA.cust.bahnhof.se) has joined
Sep 15 14:30:28 *	Robin_Jadoul has quit (Quit: WeeChat 2.2)
Sep 15 14:32:06 <crestfallen>	jle`, thanks need to process this..
Sep 15 14:32:41 *	Garmy_ has quit (Read error: Connection reset by peer)
Sep 15 14:33:21 <ktor>	jose_zap: buggy version was c72c54359891d4763211968bd623e4a773ff7e99
Sep 15 14:33:48 *	martingale has quit (Ping timeout: 252 seconds)
Sep 15 14:33:49 *	dyamon (~dyamon@client-8-93.eduroam.oxuni.org.uk) has joined
Sep 15 14:33:50 *	michaelhamel__ has quit (Quit: This computer has gone to sleep)
Sep 15 14:34:20 *	Solonarv_ has quit (Ping timeout: 272 seconds)
Sep 15 14:35:07 <jose_zap>	ktor interesting, because not much has changed after that
Sep 15 14:35:23 <jose_zap>	well, not true
Sep 15 14:35:34 <jose_zap>	a bunch of submodules got upgraded
Sep 15 14:37:45 *	Solonarv_ (~Thunderbi@AStrasbourg-653-1-159-25.w90-6.abo.wanadoo.fr) has joined
Sep 15 14:38:09 *	silver_ (~silver@93.85.173.162) has joined
Sep 15 14:38:23 *	gxt has quit (Ping timeout: 245 seconds)
Sep 15 14:38:26 Python interface unloaded
Sep 15 14:38:26 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sat Sep 15 14:38:26 2018

**** BEGIN LOGGING AT Fri Sep 21 11:15:30 2018

Sep 21 11:15:30 *	Now talking on #haskell
Sep 21 11:15:30 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 21 11:15:30 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 21 11:15:30 *	Channel #haskell url: http://www.haskell.org/
Sep 21 11:15:35 *	kopper15 (~kopper@121.183.30.216) has joined
Sep 21 11:15:39 *	kopper15 has quit (Killed (Sigyn (Spam is off topic on freenode.)))
Sep 21 11:15:49 Usage: MSG <nick> <message>, sends a private message, message "." to send to last nick or prefix with "=" for dcc chat
Sep 21 11:16:06 Usage: MSG <nick> <message>, sends a private message, message "." to send to last nick or prefix with "=" for dcc chat
Sep 21 11:16:16 *	knupfer has quit (Ping timeout: 260 seconds)
Sep 21 11:16:22 *	bak1an has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 21 11:17:08 *	cschneid_ has quit (Ping timeout: 245 seconds)
Sep 21 11:17:19 <pavonia>	Is there a function to split a list into n chunks such that all chunks vary only in length by 1? I can't find something like that in the split package
Sep 21 11:17:55 *	tombusby has quit (Ping timeout: 256 seconds)
Sep 21 11:18:07 *	Jacoby6000 (~jacoby600@pool-173-52-198-157.nycmny.fios.verizon.net) has joined
Sep 21 11:18:22 <pavonia>	e.g. split [1..10] 4 = [[1,2,3], [4,5,6], [7,8], [9,10]]
Sep 21 11:18:28 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Sep 21 11:18:44 Usage: MSG <nick> <message>, sends a private message, message "." to send to last nick or prefix with "=" for dcc chat
Sep 21 11:18:47 *	tombusby (~tombusby@gateway/tor-sasl/tombusby) has joined
Sep 21 11:19:04 *	rschmukler (~rschmukle@static-96-239-100-245.nycmny.fios.verizon.net) has joined
Sep 21 11:19:11 *	Fare has quit (Ping timeout: 260 seconds)
Sep 21 11:19:58 *	connrs (~connrs@conners.plus.com) has joined
Sep 21 11:19:59 <koala_man>	pavonia: do you need them to be contiguous rather than round-robin?
Sep 21 11:20:11 >lambdabot<	(<$>) (+5) (Just 3)
Sep 21 11:20:46 >lambdabot<	t = (<$>) (+5) (Just 3)
Sep 21 11:21:11 <pavonia>	Yes
Sep 21 11:21:27 >lambdabot<	t
Sep 21 11:21:43 <pavonia>	Or rather I'm not sure what round-robin means here
Sep 21 11:22:11 <MarcelineVQ>	presuably  [1,4] [2,5] [3,6]
Sep 21 11:23:06 *	wroathe has quit (Ping timeout: 252 seconds)
Sep 21 11:23:37 *	dstolfa (~dstolfa@190-237.dsl.iskon.hr) has joined
Sep 21 11:24:00 <pavonia>	Like chunksOf but with the number of chunks given, not the length of each chunk
Sep 21 11:24:23 >lambdabot<	(<$>) (+5) (Just 3)
Sep 21 11:24:56 *	das (9b5e7f73@gateway/web/freenode/ip.155.94.127.115) has joined
Sep 21 11:24:56 *	glguy gives voice to das
Sep 21 11:25:12 *	dcoutts (~duncan@82-69-94-207.dsl.in-addr.zen.co.uk) has joined
Sep 21 11:26:08 <dyl>	pavonia it looks like you'd want to compute the split positions and then use splitPlaces.
Sep 21 11:26:18 *	bbear has quit (Remote host closed the connection)
Sep 21 11:26:26 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 21 11:26:37 <dyl>	This would be a lot easier for finite lists.
Sep 21 11:26:49 <dyl>	Well, it's not really possible for non-finite lists.
Sep 21 11:27:26 <MarcelineVQ>	it's more easily possible, since you can always get chunks of some minimal size with an infinite list
Sep 21 11:27:36 <pavonia>	The lists are finite
Sep 21 11:27:38 <dyl>	But here the chunk size is a function of the list length.
Sep 21 11:27:47 *	acidjnk22 (~acid@mue-88-130-58-132.dsl.tropolys.de) has joined
Sep 21 11:27:50 *	nbloomf (~nbloomf@104-183-67-6.lightspeed.fyvlar.sbcglobal.net) has joined
Sep 21 11:27:54 <dyl>	i.e. above the length is 10, we want 4 chunks, so each chunk can only be of length 3 or 2.
Sep 21 11:27:54 <MarcelineVQ>	I suppose yeah ehe
Sep 21 11:28:20 <dyl>	It looks like we want to greedily take lists of the larger size (3) until doing so would make it impossible to finish the split without violating the chunk size condition.
Sep 21 11:28:26 >lambdabot<	@ (<$>) (+5) (Just 3)
Sep 21 11:28:35 <dyl>	ie.. 3, 3, "now we have to pick 2 because otherwise the last chunk would only have 1.
Sep 21 11:28:54 <dyl>	One approach would be to iterate along the list greedily, checking the divisibility of the remaining length.
Sep 21 11:30:10 *	yunhao94 has quit (Quit: yunhao94)
Sep 21 11:30:19 <dyl>	The chunk sizes are floor and ceil or length xs `div` n 
Sep 21 11:30:27 *	FreeBirdLjj (~freebirdl@58.35.229.143) has joined
Sep 21 11:30:35 *	rschmukler has quit (Ping timeout: 252 seconds)
Sep 21 11:30:38 *	yunhao94 (~yunhao94@183.197.163.66) has joined
Sep 21 11:31:07 <dyl>	This feels related to the change-making problem, though a bit easier.
Sep 21 11:31:47 *	minenoshinkamach (minenoshin@gateway/shell/matrix.org/x-jqncvyhbuvaowjws) has joined
Sep 21 11:32:08 *	jeltsch (~wolfgang@2ee0-a3b4-ee3c-242b-3e80-82b2-07d0-2001.dyn.estpak.ee) has joined
Sep 21 11:33:06 <dyl>	My intuition is that you want to look at the number of remaining elements (m), and look at the divisibility of m - chunk_size_low and m - chunk_size_high. 
Sep 21 11:33:33 *	Ayo has quit (Ping timeout: 252 seconds)
Sep 21 11:33:33 <dyl>	i.e. in the case above, once you've already made 2 groups of 3, you have 4 elements left. 4 - 3 = 1 is not divisible by 3 or 2, but 4 - 2 = 2 is.
Sep 21 11:33:42 *	trcc (~trcc@85.191.91.16) has joined
Sep 21 11:34:08 <dyl>	Oh wait, there's a much easier way, haha.
Sep 21 11:34:18 *	merijn (~merijn@a212-238-239-156.adsl.xs4all.nl) has joined
Sep 21 11:34:33 *	fishythefish (~fishythef@24.35.64.112) has joined
Sep 21 11:34:38 <pavonia>	I think the number of longer lists is equal to length xs `mod` n
Sep 21 11:34:54 *	UnlawfulMonad (~unlawfulm@2604:a880:cad:d0::28f:3001) has joined
Sep 21 11:34:56 *	FreeBirdLjj has quit (Ping timeout: 260 seconds)
Sep 21 11:34:57 <dyl>	You just need to solve for a linear combination of the low and high pavonia 
Sep 21 11:35:12 <dyl>	c1 * low + c2 * high = length xs
Sep 21 11:35:31 *	dcoutts has quit (Ping timeout: 260 seconds)
Sep 21 11:35:34 <dyl>	and, c1 + c2 = n
Sep 21 11:35:38 <dyl>	That's a soluble system. 
Sep 21 11:35:51 *	Fare (~fare@172.58.217.34) has joined
**** ENDING LOGGING AT Fri Sep 21 11:36:11 2018

**** BEGIN LOGGING AT Sat Sep 22 12:51:00 2018

Sep 22 12:51:00 *	Now talking on #haskell
Sep 22 12:51:00 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 22 12:51:00 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 22 12:51:00 *	Channel #haskell url: http://www.haskell.org/
Sep 22 12:51:14 *	doubledup has quit (Quit: Leaving)
Sep 22 12:51:36 *	emilypi_ has quit (Ping timeout: 260 seconds)
Sep 22 12:53:17 <crestfallen>	hi does the following function return a functor?  ...
Sep 22 12:53:24 <crestfallen>	> tx = (<$>) length
Sep 22 12:53:26 <lambdabot>	 <hint>:1:4: error:
Sep 22 12:53:26 <lambdabot>	     parse error on input ‘=’
Sep 22 12:53:26 <lambdabot>	     Perhaps you need a 'let' in a 'do' block?
Sep 22 12:53:45 <crestfallen>	wha
Sep 22 12:53:56 <crestfallen>	sorry
Sep 22 12:54:12 <crestfallen>	@let tx = (<$>) length
Sep 22 12:54:14 <lambdabot>	 Defined.
Sep 22 12:55:00 <crestfallen>	> tx [(Just 4.5),(Just 2), (Just 3.3), Nothing, (Just 5.66)]
Sep 22 12:55:03 <lambdabot>	 [1,1,1,0,1]
Sep 22 12:55:09 *	humanoyd (~humanoyd@p200300DCB735DA004A5D60FFFE655171.dip0.t-ipconnect.de) has joined
Sep 22 12:55:37 <crestfallen>	so that is not returning a functor, correct?
Sep 22 12:55:50 <glguy>	Are you trying to say "function"?
Sep 22 12:55:50 <deltasquared>	oooh, I want to try the bot out now...
Sep 22 12:56:03 *	son0p (~ff@adsl201-232-238-252.epm.net.co) has joined
Sep 22 12:56:08 <deltasquared>	which one was <$> again, was that infix fmap
Sep 22 12:56:08 <crestfallen>	no
Sep 22 12:56:15 <crestfallen>	:t tx
Sep 22 12:56:16 <lambdabot>	(Functor f, Foldable t) => f (t a) -> f Int
Sep 22 12:56:19 <monochrom>	Yes infix fmap
Sep 22 12:56:23 <deltasquared>	:t (<$>)
Sep 22 12:56:25 <lambdabot>	Functor f => (a -> b) -> f a -> f b
Sep 22 12:56:28 <glguy>	crestfallen: Right, it's returning a function
Sep 22 12:56:50 *	oisdk (~textual@80.233.46.184) has joined
Sep 22 12:56:51 *	KeyJoo has quit (Ping timeout: 252 seconds)
Sep 22 12:57:06 <crestfallen>	please explain exactly what that output is glguy 
Sep 22 12:57:08 <monochrom>	I wouldn't even use the word "return".
Sep 22 12:57:23 *	uboa has quit (Ping timeout: 252 seconds)
Sep 22 12:57:25 <glguy>	The expression has a function type
Sep 22 12:57:44 <deltasquared>	wait, surely that would be (length <$>)... or why not just (fmap length)
Sep 22 12:58:05 <monochrom>	Yeah it's fmap length.
Sep 22 12:58:09 <glguy>	(length <$>); (<$>) length; fmap length   all the same deal
Sep 22 12:58:19 <deltasquared>	:t length
Sep 22 12:58:20 <lambdabot>	Foldable t => t a -> Int
Sep 22 12:58:29 *	ym555 (~ym@156.198.73.28) has joined
Sep 22 12:58:34 <monochrom>	But it's useful to learn section syntax too.
Sep 22 12:58:35 <deltasquared>	huh, didn't think to try length on Maybe, but I guess that figures
Sep 22 12:58:40 *	nokomprendo (~nokompren@8se62-1-88-181-191-28.fbx.proxad.net) has joined
Sep 22 12:58:41 <crestfallen>	I like prefix notation not sure why. but ...
Sep 22 12:58:41 *	nokomprendo_ (~nokompren@8se62-1-88-181-191-28.fbx.proxad.net) has joined
Sep 22 12:59:14 <monochrom>	Yeah recently length foldl foldr etc have been generalized from list to a lot of types such as Maybe etc., generally the Foldable class.
Sep 22 12:59:19 <crestfallen>	deltasquared, please hold on I can't keep track of the advice
Sep 22 12:59:32 *	nokomprendo_ has quit (Client Quit)
Sep 22 12:59:34 *	Anthaas_ has quit (Ping timeout: 246 seconds)
Sep 22 12:59:40 <deltasquared>	crestfallen: very well, I shall curb my enthusiasm :P
Sep 22 12:59:51 <monochrom>	deltasquared is not giving you advice. deltasquared is talking to me.
Sep 22 13:00:01 *	joeyh_ (~joeyh@elephant.kitenet.net) has joined
Sep 22 13:00:09 *	joeyh has quit (Ping timeout: 252 seconds)
Sep 22 13:00:13 <monochrom>	You don't tell everyone to stop talking just for you.
Sep 22 13:00:22 *	u0_a161 (~user@2603:9000:a019:2f00:25c7:eb43:8f20:1a4) has joined
Sep 22 13:00:28 *	Anthaas_ (~Anthaas@unaffiliated/anthaas) has joined
Sep 22 13:00:47 <deltasquared>	eeeeh, monochrom it kinda sounded like they were having some difficulty, I would give them the benefit of the doubt
Sep 22 13:01:09 <crestfallen>	I wasn't doing that. 
Sep 22 13:01:36 <glguy>	deltasquared: there's history you don't appear to be aware of
Sep 22 13:02:07 <deltasquared>	glguy: as in, previous behaviour with this particular person?
Sep 22 13:02:12 <crestfallen>	sorry I'll get off now, I was merely trying to read the posts
Sep 22 13:02:13 *	ym555_ (~ym@156.201.114.31) has joined
Sep 22 13:02:49 <crestfallen>	I wasn't telling people to stop talking. 
Sep 22 13:03:13 *	tommd (~tommd@71-34-67-86.ptld.qwest.net) has joined
Sep 22 13:03:28 *	ym555 has quit (Read error: Connection reset by peer)
Sep 22 13:03:49 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Sep 22 13:04:10 <deltasquared>	crestfallen: in any case, from what I understand of your original question, it doesn't return a functor, it returns a function operating on one (given constraints on the element type originating from length, namely Foldable)
Sep 22 13:04:26 <crestfallen>	monochrom make no mistake, you are mean
Sep 22 13:05:13 *	ym555_ has quit (Client Quit)
Sep 22 13:06:43 <lortabac>	hello, I am looking for good resources for learning how to write a compiler for a simple dependently-typed language
Sep 22 13:06:57 *	novumsensum (~novumsens@unaffiliated/novumsensum) has joined
Sep 22 13:07:50 <lortabac>	I don't care much about parsing and code generation, I am more interested in the type-checking part
Sep 22 13:07:58 *	Robin_Jadoul has quit (Ping timeout: 245 seconds)
Sep 22 13:08:24 *	wroathe has quit (Ping timeout: 252 seconds)
Sep 22 13:08:36 *	libertyprime (~libertypr@101.98.42.91) has joined
Sep 22 13:09:10 *	ggole has quit (Quit: ggole)
Sep 22 13:09:13 <Welkin>	lortabac: a book just came out 5 days ago called The Little Typer that does just that
Sep 22 13:09:17 <dmwit>	lortabac: http://thelittletyper.com/
Sep 22 13:09:33 <Welkin>	I am considering getting it, but there is no preview
Sep 22 13:09:42 <Welkin>	I'm familiar with the author's other books though
Sep 22 13:09:44 <absence>	if i need something like span/break, but want to fold over the items in parallel so i can use the value of the fold for the predicate, are there any clever tricks or libraries to check out, or do i just have to implement it manually?
Sep 22 13:09:47 *	dented42 (~dented42@65-130-188-150.slkc.qwest.net) has joined
Sep 22 13:09:48 <dmwit>	I found it insufferably verbose, but I'm also a PL expert and so not really in the intended audience.
Sep 22 13:09:57 *	Robin_Jadoul (~robin@89.39.107.195) has joined
Sep 22 13:10:04 *	Robin_Jadoul has quit (Client Quit)
Sep 22 13:10:32 <dmwit>	But it is, like, exactly answering the question you asked. =P
Sep 22 13:11:02 <lortabac>	dmwit: I have very little experience in writing compilers
Sep 22 13:11:09 >glguy<	I think its unfair to say I have a history. I wasn't able to keep track of your advice and made a polite request. mono*chrom is mean and intimidating on this channel
Sep 22 13:11:28 <lortabac>	so I might be in the intended audience :)
Sep 22 13:11:29 <Welkin>	if you can write a scheme, that's good enough
Sep 22 13:11:32 <Welkin>	I've done it
Sep 22 13:11:41 <dmwit>	lortabac: I think you might be right!
Sep 22 13:11:51 <shapr>	I need ( parenal ) guidance.
Sep 22 13:11:57 <deltasquared>	I would normally hazard that most of couldn't write a compiler, but I'm aware doing so is more prevalent in haskell, so I won't jump to conclusions for everyone here
Sep 22 13:12:00 *	dented42 has quit (Client Quit)
Sep 22 13:12:06 <Welkin>	that book uses a custom language called "pie" implemented in racket (which is a language meant for creating other languages)
Sep 22 13:12:08 *	knupfer (~Thunderbi@200116b82c396a00f69634fffef0b45f.dip.versatel-1u1.de) has joined
Sep 22 13:12:09 <deltasquared>	*most of us
Sep 22 13:12:10 *	P1RATEZ has quit (Quit: reboot)
Sep 22 13:13:34 <Welkin>	lortabac: also see https://beautifulracket.com/
Sep 22 13:13:34 <lortabac>	Welkin: dmwit: does the book say anything about type inference?
Sep 22 13:13:49 <shapr>	deltasquared: it's easier to cheat when building compilers in Haskell
Sep 22 13:13:55 <deltasquared>	shapr: "cheat"?
Sep 22 13:14:02 *	twandy has quit (Ping timeout: 272 seconds)
Sep 22 13:14:27 *	lemonpepper24 (~lemonpepp@2603:3024:1a0b:5a00::62b0) has joined
Sep 22 13:14:37 *	albert has quit (Ping timeout: 256 seconds)
Sep 22 13:14:50 <shapr>	parsing is easier, converting a parse tree into something else is easier.
Sep 22 13:15:21 <deltasquared>	I wouldn't call that "cheating", just a natural consequence of the paradigm and libraries
Sep 22 13:15:22 <shapr>	I wrote several recursive descent parsers in Java and C, and decided that was a difficult task, but it's much easier in Haskell.
Sep 22 13:15:45 *	davidm_ has quit (Ping timeout: 256 seconds)
Sep 22 13:16:47 *	pfurla (~pfurla@ool-18bd403b.dyn.optonline.net) has joined
Sep 22 13:16:54 *	XorSwap has quit (Quit: the creeping crawling chaos will return.)
Sep 22 13:17:18 *	Folkol has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
Sep 22 13:17:36 <monochrom>	Algebraic data types and pattern matching certainly make things more high-level. After getting used to them, you certainly find that manual tagging and tag checking feel like assembly programming.
Sep 22 13:18:57 <deltasquared>	I think there will be a *lot* of things I will miss from haskell when I manage to secure a job, which looks likely to be in imperative languages of the C/C++ family.
Sep 22 13:19:39 <amx>	bracketeer
Sep 22 13:19:49 <cocreature>	deltasquared: sounds like you might want to try finding a Haskell job :)
Sep 22 13:19:50 <amx>	sorry, wrong window
Sep 22 13:19:51 >deltasquared<	thanks kindly for your help it answered my question. there are certain persons here who act like cops; it intimidating to someone trying to learn.
Sep 22 13:19:51 <Welkin>	where are people still using c and c++ outside of game development, hft, and legacy software?
Sep 22 13:20:11 <deltasquared>	Welkin: idk, I'm just saying what's on my CV, which is limited having just graduated
Sep 22 13:20:26 <deltasquared>	what's *common* out there is C# and .NET runtime
Sep 22 13:20:28 <Welkin>	that's normal for most cs grads to only have ever used c or c++ or java
Sep 22 13:20:42 <Welkin>	99% of the time you will not be doing that at work
Sep 22 13:20:45 <lortabac>	deltasquared: FYI my company is hiring for a Haskell position :P
Sep 22 13:20:47 <glguy>	Welkin: embedded development, aircraft stuff, and also basically everything else
Sep 22 13:20:52 <deltasquared>	lortabac: great, they in the UK? :P
Sep 22 13:21:03 <deltasquared>	should mention, I'm british
Sep 22 13:21:05 <lortabac>	in France, but remote should be possible
Sep 22 13:21:14 *	joeyh_ has quit (Read error: Connection reset by peer)
Sep 22 13:21:39 <lortabac>	s/my company/the company I work for
Sep 22 13:22:07 <Welkin>	glguy: that is very niche
Sep 22 13:22:10 *	P1RATEZ (piratez@unaffiliated/p1ratez) has joined
Sep 22 13:22:29 <deltasquared>	lortabac: alas I have to say unless you're willing to like do an intership program I can't say I'd be very impressive
Sep 22 13:22:36 <glguy>	Welkin: I talk to a lot of people, it's the most common language experience I find people have
Sep 22 13:22:38 <[exa]>	Welkin: there's the kernel, system libraries, crypto, and all the device drivers
Sep 22 13:22:39 <Welkin>	most programming work these days is for the web
Sep 22 13:22:51 <MarcelineVQ>	absence: is it possible to make it clearer what you mean?
Sep 22 13:22:55 *	unlink2 (~unlink2@dslc-082-082-094-144.pools.arcor-ip.net) has joined
Sep 22 13:23:22 <glguy>	Of course I'm talking to a slice of the programming community interested in working at Galois
Sep 22 13:23:29 <glguy>	so there's that selection bias
Sep 22 13:23:41 *	unlink_ has quit (Ping timeout: 260 seconds)
Sep 22 13:23:48 *	Digit has quit (Ping timeout: 245 seconds)
Sep 22 13:23:48 *	Digitteknohippie (~user@fsf/member/digit) has joined
Sep 22 13:23:55 *	joeyh (~joeyh@elephant.kitenet.net) has joined
Sep 22 13:24:32 *	oisdk has quit (Read error: Connection reset by peer)
Sep 22 13:25:05 *	Paradise (Abuse@188.126.46.247) has joined
Sep 22 13:25:14 *	glguy sets ban on *!*@188.126.46.247
Sep 22 13:25:14 *	glguy has kicked Paradise from #haskell (Paradise)
Sep 22 13:26:05 *	glguy removes ban on *!*@188.126.46.247
Sep 22 13:26:34 <growpotkin>	I graduate in the fall and would definitely enjoy working with FP instead of the zillion Brokers and DoD labs that are always recruiting
Sep 22 13:26:39 <Welkin>	no paradise for you
Sep 22 13:26:43 <orzo>	Given (Int -> a), I would like to construct a lazy (near infinite) object (IntMap a).  Is that doable?
Sep 22 13:27:06 <glguy>	No, IntMap is not lazy in its keys
Sep 22 13:27:13 <Welkin>	IntMap is limited to 2^32
Sep 22 13:27:16 *	rschmukler has quit (Remote host closed the connection)
Sep 22 13:27:16 <glguy>	But maybe take a look at MemoTrie
Sep 22 13:27:53 <glguy>	Welkin: How so?
Sep 22 13:27:54 <Welkin>	2^31
Sep 22 13:28:14 <orzo>	thanks glguy, besides MemoTrie, know any other options off hand?
Sep 22 13:28:37 <absence>	MarcelineVQ: let's see... say you have a list of numbers, and you want to break the list when the sum reaches a certain value
Sep 22 13:28:39 <glguy>	orzo: What dimension do you want it to be different from MemoTrie?
Sep 22 13:28:45 *	Digitteknohippie has quit (Quit: brb)
Sep 22 13:29:19 *	blinkhard has quit (Ping timeout: 246 seconds)
Sep 22 13:29:19 <[exa]>	growpotkin: why not try a phd?
Sep 22 13:29:22 <orzo>	i haven't even looked at memotrie yet, I was just figuring to get a list of dependencies to choose from
Sep 22 13:29:33 <orzo>	since i dont have memotrie installed
Sep 22 13:29:57 *	Digit (~user@fsf/member/digit) has joined
**** ENDING LOGGING AT Sat Sep 22 13:30:11 2018

**** BEGIN LOGGING AT Sat Sep 22 17:54:07 2018

Sep 22 17:54:07 *	Now talking on #haskell
Sep 22 17:54:07 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 22 17:54:07 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 22 17:54:07 *	Channel #haskell url: http://www.haskell.org/
Sep 22 17:55:31 *	yunhao94 (~yunhao94@183.197.163.66) has joined
Sep 22 17:56:07 *	libertyprime (~libertypr@71.82.69.111.dynamic.snap.net.nz) has joined
Sep 22 17:57:45 >glguy<	Could I ask you one thing: do you truly think I was rude earlier? I would really appreciate a response. thanks 
Sep 22 17:59:08 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Sep 22 17:59:11 *	joeyh has quit (Read error: Connection reset by peer)
Sep 22 17:59:19 *	oo_miguel has quit (Quit: WeeChat 1.6)
Sep 22 17:59:53 *	uboa has quit (Ping timeout: 252 seconds)
Sep 22 18:00:46 *	dented42 has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 22 18:01:35 *	ym555 (~ym@156.198.38.254) has joined
Sep 22 18:01:36 *	dyamon has quit (Quit: WeeChat 2.0.1)
Sep 22 18:02:00 *	cschneid_ has quit (Remote host closed the connection)
Sep 22 18:02:32 *	cschneid_ (~cschneid@c-73-78-144-189.hsd1.co.comcast.net) has joined
Sep 22 18:03:01 *	joeyh (~joeyh@elephant.kitenet.net) has joined
Sep 22 18:03:12 *	ym555_ has quit (Ping timeout: 252 seconds)
Sep 22 18:03:27 *	wroathe has quit (Ping timeout: 240 seconds)
Sep 22 18:03:29 *	SPACE_AIDS (~weenis@2607:5300:60:41a::1) has joined
Sep 22 18:05:50 *	jaziz1 (~jaziz@unaffiliated/jaziz) has joined
Sep 22 18:05:57 *	nille has quit (Ping timeout: 252 seconds)
Sep 22 18:06:17 *	nille (~nille@unaffiliated/nille) has joined
Sep 22 18:06:35 *	twandy has quit (Quit: twandy)
Sep 22 18:06:36 *	djtyml has quit (Ping timeout: 260 seconds)
Sep 22 18:06:51 *	twandy (~Thunderbi@cas-fw-sta.inet.casair.net) has joined
Sep 22 18:06:52 *	cschneid_ has quit (Ping timeout: 246 seconds)
Sep 22 18:06:59 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Sep 22 18:07:03 *	ym555 has quit (Ping timeout: 252 seconds)
Sep 22 18:07:56 *	jaziz has quit (Ping timeout: 244 seconds)
Sep 22 18:08:28 *	nbloomf (~nbloomf@2600:1700:83e0:1f40:f1a3:b1b0:e1d7:cbf2) has joined
Sep 22 18:10:04 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Sep 22 18:11:14 *	nbloomf has quit (Client Quit)
Sep 22 18:11:42 *	twandy has quit (Ping timeout: 272 seconds)
Sep 22 18:14:12 *	wroathe has quit (Ping timeout: 252 seconds)
Sep 22 18:15:46 >glguy<	In any case I apologize mono*chrom thought I was trying to get advice from delta*squared but I was actually trying to read what you, gl*guy had written. I saw deltasquared comments just as they did when they wrote "I'll curb my enthusiam". I saw it as enthusiastic so in the heat of the moment I wrote "Hold on" as if that is such a huge crime as it was in monochrom's eyes. Any way I'm very sorry I was misunderstood another time not very long ago, but at that time as well I wasn't trying to get people to be quiet for my benefit. I apologized to deltasquared in a pm and clarified myself. thanks again and sorry for the diatribe. 
Sep 22 18:16:20 *	Disconnected ()
**** ENDING LOGGING AT Sat Sep 22 18:16:20 2018

**** BEGIN LOGGING AT Sat Sep 22 18:19:16 2018

Sep 22 18:19:16 *	Now talking on #haskell
Sep 22 18:19:16 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 22 18:19:16 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 22 18:19:16 *	Channel #haskell url: http://www.haskell.org/
Sep 22 18:19:39 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Sep 22 18:20:01 *	You are now known as crestfallen
Sep 22 18:22:03 *	exbio (~ri@fixed-138-186-31-111.totalplay.net) has joined
Sep 22 18:22:03 *	exbio has quit (Changing host)
Sep 22 18:22:03 *	exbio (~ri@unaffiliated/exbio) has joined
Sep 22 18:22:16 *	Essadon has quit (Quit: Qutting)
Sep 22 18:22:28 *	wpcarro has quit (Ping timeout: 272 seconds)
Sep 22 18:22:31 Python interface unloaded
**** ENDING LOGGING AT Sat Sep 22 18:22:31 2018

**** BEGIN LOGGING AT Mon Sep 24 12:08:30 2018

Sep 24 12:08:30 *	Now talking on #haskell
Sep 24 12:08:30 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Sep 24 12:08:30 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Sep 24 12:08:30 *	Channel #haskell url: http://www.haskell.org/
Sep 24 12:08:34 *	wroathe has quit (Ping timeout: 272 seconds)
Sep 24 12:08:49 *	davr0s has quit (Read error: Connection reset by peer)
Sep 24 12:09:04 <cocreature>	tsaka__: looks like you need a call to "lift"
Sep 24 12:09:30 *	blackandblue has quit (Remote host closed the connection)
Sep 24 12:10:03 *	forgottenone has quit (Read error: Connection reset by peer)
Sep 24 12:10:12 *	forgottenone (~forgotten@217.131.94.51) has joined
Sep 24 12:10:16 <cocreature>	tsaka__: if you take a close look at the error message it tells you that it expects something of type "t m a" but you are giving it "m a". "lift" is exactly the function that lets you embed an "m a" inside "t m a"
Sep 24 12:11:08 *	pio_ (~pio@cm-84.208.241.146.getinternet.no) has joined
Sep 24 12:13:05 *	davr0s (~textual@host86-149-110-62.range86-149.btcentralplus.com) has joined
Sep 24 12:13:39 *	enterprisey has quit (Read error: No route to host)
Sep 24 12:14:17 <tsaka__>	cocreature: that worked. Is there a way to create that function more elegantly? I mean I have to pull out "state A" manually, run "state (A,B)" computations with execStateT and put the state back in.
Sep 24 12:15:35 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
**** ENDING LOGGING AT Mon Sep 24 12:15:45 2018

**** BEGIN LOGGING AT Tue Oct  2 18:55:24 2018

Oct 02 18:55:24 *	Now talking on #haskell
Oct 02 18:55:24 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Oct 02 18:55:24 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Oct 02 18:55:24 *	Channel #haskell url: http://www.haskell.org/
Oct 02 18:57:01 *	carlos (~carlos@2804:431:9719:3fad:6e02:452:6a46:960) has joined
Oct 02 18:58:39 *	kapil____ (uid36151@gateway/web/irccloud.com/x-iiiybymcmiqbfbtk) has joined
Oct 02 18:59:11 *	jwindover has quit (Ping timeout: 268 seconds)
Oct 02 18:59:22 *	bontaq (~user@158.106.203.154) has joined
Oct 02 18:59:29 *	lambda-11235 (~lambda-11@207.183.239.54) has joined
Oct 02 18:59:40 *	JimmyRcom (~JimmyRcom@71-11-240-211.dhcp.dntn.tx.charter.com) has joined
Oct 02 19:00:00 *	jackdk_ (98537540@gateway/web/cgi-irc/kiwiirc.com/ip.152.83.117.64) has joined
Oct 02 19:00:14 *	jackdk has quit (Disconnected by services)
Oct 02 19:00:17 *	Noldorin (~noldorin@unaffiliated/noldorin) has joined
Oct 02 19:00:17 *	jackdk_ is now known as jackdk
Oct 02 19:01:20 *	joeyh has quit (Ping timeout: 252 seconds)
Oct 02 19:01:20 *	pera (~pera@unaffiliated/pera) has joined
Oct 02 19:01:30 *	conal (~conal@185.236.200.138) has joined
Oct 02 19:01:59 *	bontaq has quit (Remote host closed the connection)
Oct 02 19:02:03 *	carlos has quit (Ping timeout: 252 seconds)
Oct 02 19:02:17 *	bontaq (~user@158.106.203.154) has joined
Oct 02 19:02:39 *	inkbottle has quit (Quit: Konversation terminated!)
Oct 02 19:02:59 *	joeyh (~joeyh@elephant.kitenet.net) has joined
Oct 02 19:03:41 *	urodna has quit (Quit: urodna)
Oct 02 19:04:15 *	banc has quit (Quit: ZNC - http://znc.in)
Oct 02 19:04:44 *	ale_ has quit (Ping timeout: 268 seconds)
Oct 02 19:06:30 *	carlos (~carlos@2804:431:9719:3fad:6e02:452:6a46:960) has joined
Oct 02 19:07:50 *	boj (~bojo@103.5.142.234) has joined
Oct 02 19:08:24 *	escapist has quit (Ping timeout: 244 seconds)
Oct 02 19:08:54 *	mzo (~marchelzo@unaffiliated/marchelzo) has joined
Oct 02 19:09:26 *	bontaq has quit (Ping timeout: 244 seconds)
Oct 02 19:09:49 *	maksim__ (~max3@asa-00.cise.ufl.edu) has joined
Oct 02 19:10:26 *	tinwood has quit (Remote host closed the connection)
Oct 02 19:10:35 *	WaVeRmU (~WaVeR@186-88-83-156.genericrev.cantv.net) has joined
Oct 02 19:10:46 *	WaVeRmU has quit (Killed (Sigyn (Spam is off topic on freenode.)))
Oct 02 19:11:39 *	tinwood (~tinwood@general.default.akavanagh.uk0.bigv.io) has joined
Oct 02 19:12:00 *	kdatta[m] (kdattamatr@gateway/shell/matrix.org/x-yikbphnmywyosflc) has joined
Oct 02 19:12:26 *	maksim_ has quit (Ping timeout: 250 seconds)
Oct 02 19:14:57 *	jwindover (~jwindover@64.235.97.158) has joined
Oct 02 19:15:13 *	Destol (~Destol@public-253-134.nat.utoronto.ca) has joined
Oct 02 19:15:29 *	rcdilorenzo (~rcdiloren@cpe-24-163-97-97.nc.res.rr.com) has left
Oct 02 19:15:43 *	rcdilorenzo (~rcdiloren@cpe-24-163-97-97.nc.res.rr.com) has joined
Oct 02 19:15:57 *	begriffs (begriffs@gateway/vpn/privateinternetaccess/begriffs) has joined
Oct 02 19:16:25 <dyl>	But wait...
Oct 02 19:16:29 <dyl>	What’s dual to duality?
Oct 02 19:16:40 <dyl>	What is coduality?
Oct 02 19:16:55 *	carlos has quit (Remote host closed the connection)
Oct 02 19:17:00 *	dacto (~chatzilla@c-24-20-108-97.hsd1.wa.comcast.net) has joined
Oct 02 19:18:03 *	ym555 (~ym@156.198.19.51) has joined
Oct 02 19:18:28 *	lagothrix is now known as Guest75889
Oct 02 19:18:29 *	Guest75889 has quit (Killed (weber.freenode.net (Nickname regained by services)))
Oct 02 19:18:37 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Oct 02 19:19:38 *	jwindover has quit (Ping timeout: 245 seconds)
Oct 02 19:20:51 *	theDon has quit (Ping timeout: 252 seconds)
Oct 02 19:21:34 *	banc (~master@82.145.37.203) has joined
Oct 02 19:21:34 *	inkbottle (~inkbottle@AAubervilliers-654-1-12-77.w86-218.abo.wanadoo.fr) has joined
Oct 02 19:22:15 *	jb55 has quit (Ping timeout: 252 seconds)
Oct 02 19:22:39 *	theDon (~td@94.134.91.92) has joined
Oct 02 19:22:58 *	Gurkenglas has quit (Ping timeout: 245 seconds)
Oct 02 19:24:13 *	rcdilorenzo (~rcdiloren@cpe-24-163-97-97.nc.res.rr.com) has left
Oct 02 19:33:13 *	ChaiTRex has quit (Ping timeout: 256 seconds)
Oct 02 19:33:39 *	Wuzzy has quit (Remote host closed the connection)
Oct 02 19:34:14 *	joeyh has quit (Ping timeout: 244 seconds)
Oct 02 19:34:39 *	Saukk (~Saukk@91-156-130-190.elisa-laajakaista.fi) has joined
Oct 02 19:35:03 <koz_>	Do transitive instance of Coercible exist? What I mean is that if we have Coercible a b and Coercible b c, do we have Coercible a c?
Oct 02 19:35:21 *	joeyh (~joeyh@elephant.kitenet.net) has joined
Oct 02 19:35:57 *	jwindover (~jwindover@64.235.97.158) has joined
Oct 02 19:39:32 *	jao has quit (Ping timeout: 252 seconds)
Oct 02 19:39:36 *	slack1256 (~slack1256@181-163-45-106.baf.movistar.cl) has joined
Oct 02 19:40:28 *	jwindover has quit (Ping timeout: 245 seconds)
Oct 02 19:42:36 *	dataN has quit (Quit: Page closed)
Oct 02 19:44:53 *	gibbers (~gibbers@65.79.146.45) has joined
Oct 02 19:46:36 *	ChaiTRex (~ChaiTRex@gateway/tor-sasl/chaitrex) has joined
Oct 02 19:46:37 <geekosaur>	given the implementation, I would expect so
Oct 02 19:46:56 <glguy>	I don't think instances of Coercible are used to find other instances of it
Oct 02 19:47:08 <koz_>	I ask because the documentation for Data.Coerce doesn't specify that transitive instances exist.
Oct 02 19:48:05 <geekosaur>	well, none of them "exist" as such
Oct 02 19:48:22 *	Gurkenglas (~Gurkengla@unaffiliated/gurkenglas) has joined
Oct 02 19:49:32 *	Synthetica has quit (Quit: Connection closed for inactivity)
Oct 02 19:49:41 *	stephenmac7 (18831323@gateway/web/freenode/ip.24.131.19.35) has joined
Oct 02 19:49:41 *	glguy gives voice to stephenmac7
Oct 02 19:49:41 *	glguy removes voice from stephenmac7
Oct 02 19:49:58 *	gibbers has quit (Ping timeout: 272 seconds)
Oct 02 19:50:13 *	alx741 has quit (Quit: alx741)
Oct 02 19:50:28 *	Sgeo (~Sgeo@ool-18b98dd9.dyn.optonline.net) has joined
Oct 02 19:51:16 *	conal has quit (Quit: Computer has gone to sleep.)
Oct 02 19:51:37 <glguy>	GHC accepts this: demo :: (Coercible a b, Coercible b c) => [(a,b)] -> [(c,c)]; demo = coerce
Oct 02 19:51:46 *	chao-tic (~chao@203.97.21.86) has joined
Oct 02 19:52:13 *	Sgeo_ has quit (Ping timeout: 268 seconds)
Oct 02 19:52:40 *	cement (~quassel@67-61-17-28.cpe.cableone.net) has joined
Oct 02 19:52:56 *	kerrhau has quit (Ping timeout: 260 seconds)





Nov 12 10:52:28 <crestfallen>	hi, if I may, I've been reading that the "S" in the SKI calculus is a certain implementation of <*>  .  could someone tell me which one it is / where I can read about it more? BTW I find the SKI calculus easier to understand than lambda calculus (I believe I do :) )  thanks
Nov 12 10:53:00 <crestfallen>	not implementation, but that it is equivalent ...
Nov 12 10:53:19 <lyxia>	<*> for functions
Nov 12 10:53:54 <lyxia>	crestfallen: https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#line-822

Nov 12 10:54:42 <Solonarv>	% let s x y z = x z (y z)
Nov 12 10:54:42 <yahb>	Solonarv: 
Nov 12 10:54:48 <Solonarv>	% :t s
Nov 12 10:54:48 <yahb>	Solonarv: (t1 -> t2 -> t3) -> (t1 -> t2) -> t1 -> t3
Nov 12 10:54:55 *	butterthebuddha has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Nov 12 10:55:06 <govno>	crestfallen: what I can read about s k i algebra?
Nov 12 10:55:06 <Solonarv>	% :t ((<*>) @((->) _))
Nov 12 10:55:07 <yahb>	Solonarv: (w -> a -> b) -> (w -> a) -> w -> b
Nov 12 10:55:52 <geekosaur>	shafox, if what's bothering you is not wanting to repeat the case there, the correct answer is to omit the otherwise guard and have a catch-all pattern afterward. If all the guard expressions fail, but there are further patterns, it will go on to those; so use a catch-all pattern at the end
Nov 12 10:55:53 *	quaestor (~quaestor@faui8276.informatik.uni-erlangen.de) has joined
Nov 12 10:55:59 <crestfallen>	thanks lyxia , Solonarv .. one moment
Nov 12 10:56:03 <zachk>	govno, maybe google sk combinators
Nov 12 10:56:04 *	iAmerikan has quit (Ping timeout: 252 seconds)
Nov 12 10:56:22 *	gildS (~eftychis@66.201.59.50) has joined
Nov 12 10:56:41 <crestfallen>	I watched some videos but couldn't figure out the connection to <*> in haskell
Nov 12 10:57:18 <shafox>	geekosaur: I added parseRevision doc [] = doc. 
Nov 12 10:57:19 <govno>	Solonarv: How you combine it?
Nov 12 10:57:23 <geekosaur>	except in this case that doesnt work either because there'd be no xs either. which si why the otherwise guard can't fire on []
Nov 12 10:57:29 <geekosaur>	yeh
Nov 12 10:57:33 *	Jetien has quit (Ping timeout: 245 seconds)
Nov 12 10:59:15 *	xjlk has quit (Remote host closed the connection)
Nov 12 11:00:39 *	fmixing (~fmixing@5.18.98.152) has joined
Nov 12 11:00:41 *	fmixing has quit (Remote host closed the connection)
Nov 12 11:00:54 <govno>	:t @
Nov 12 11:00:54 *	fmixing (~fmixing@5.18.98.152) has joined
Nov 12 11:00:55 <lambdabot>	error: parse error on input ‘@’
Nov 12 11:01:49 <geekosaur>	it doesn't have a type. you're looking for TypeApplications
Nov 12 11:02:35 <crestfallen>	what about iota do people think about it much ? what is the dis/advantage to think in terms of SKI iota et al ?
Nov 12 11:02:44 *	theelous3_ (~theelous3@unaffiliated/theelous3) has joined
Nov 12 11:02:47 *	gildS has quit (Ping timeout: 240 seconds)
Nov 12 11:02:48 <Solonarv>	oh, the '@((->) _)' business was just to ask about '<*>' for functions specifically
Nov 12 11:03:00 <Solonarv>	% :t (<*>)
Nov 12 11:03:01 <yahb>	Solonarv: Applicative f => f (a -> b) -> f a -> f b
Nov 12 11:03:27 <Solonarv>	'<*>' actually has that type, which is more general
Nov 12 11:04:11 <geekosaur>	crestfallen, it's kinda a reductionist approach. I'm not sure it actually accomplishes anything practical, it's mostly a way to see how compact a "language" you can come up with that has the same expressiveness as lambda calculus
Nov 12 11:04:38 <geekosaur>	(I is often omitted because you can derive it given S and K, but that was only realized later)
Nov 12 11:04:45 *	thiagorp (~thiago@ip5f5ac1ce.dynamic.kabel-deutschland.de) has joined
Nov 12 11:05:32 <Solonarv>	specifically: SKxy reduces to y, so SKx === I
Nov 12 11:06:35 <crestfallen>	excellent thanks geekosaur the notation for SKI seems to gel better for me. Right I == SKK right? 
Nov 12 11:06:54 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Nov 12 11:07:00 *	osa1 has quit (Remote host closed the connection)
Nov 12 11:07:03 <Solonarv>	SKK, or SKS, or SK(SSSSSS)
Nov 12 11:07:09 <geekosaur>	as Solonarv just showed, it doesn't have to be SKK
Nov 12 11:07:15 <shafox>	This code run indefinitely : https://gist.github.com/shadow-fox/466e5618497ed7085ee265811a105a3f  it should stop when it reaches at the  end. however it prints the default values. 
Nov 12 11:07:26 <Solonarv>	precisely: SKx, for any choice of x, is equivalent to I
Nov 12 11:07:51 <crestfallen>	interesting thanks ALL
Nov 12 11:08:16 <Solonarv>	SKxy => Ky(xy) => y -- as you can see, it doesn't matter what x is
Nov 12 11:09:52 <crestfallen>	so I assume that if we use S, that is applicative order as opposed to normal order? not too clear on this.
Nov 12 11:11:16 *	Harvey-Pwca has quit (Quit: Leaving)
Nov 12 11:11:26 <ski>	hm, i think "applicative order" and "normal order" allows reducing under lambda, while "by-value" and "by-name" doesn't
Nov 12 11:12:04 <ski>	(hm, but if you have already converted to SKI algebra, then i suppose some of your reductions would then correspond to original reductions under lambda)
Nov 12 11:12:08 *	gildS (~eftychis@66.201.59.50) has joined
Nov 12 11:12:36 <crestfallen>	ski thanks gotta work on this
Nov 12 11:12:47 *	dstolfa wants someone to implement a CAM for Haskell. that would be fun
Nov 12 11:12:58 <crestfallen>	sorry if I inadvertently pinged you!
Nov 12 11:13:08 <ski>	dstolfa : Categorical Abstract Machine ?
Nov 12 11:17:56 <geekosaur>	fresheyeball, you do realize thats' a losing case no matter what?
Nov 12 11:18:09 <geekosaur>	"IST" has something like 4 possible meanings, for example
Nov 12 11:18:12 *	enterprisey (~enterpris@wikipedia/enterprisey) has joined
Nov 12 11:20:34 *	elgoosy (~user@207.70.15.37.dynamic.jazztel.es) has joined
Nov 12 11:20:51 <govno>	% :t (<$>)
Nov 12 11:20:51 <yahb>	govno: Functor f => (a -> b) -> f a -> f b
Nov 12 11:21:00 *	tsaka__ has quit (Ping timeout: 252 seconds)
Nov 12 11:21:06 <govno>	% :t (<*>)
Nov 12 11:21:07 <yahb>	govno: Applicative f => f (a -> b) -> f a -> f b
Nov 12 11:21:40 <govno>	% :t ((<*>) @((->) _))
Nov 12 11:21:40 <yahb>	govno: (w -> a -> b) -> (w -> a) -> w -> b
Nov 12 11:22:45 <govno>	f (a -> b) it is parametrized
Nov 12 11:23:39 <fresheyeball>	geekosaur: are you saying a function like parseFormatAs :: TimeZone -> String -> Maybe UTCTime
Nov 12 11:23:42 <fresheyeball>	is not possible?
Nov 12 11:23:42 *	averell has quit (Ping timeout: 252 seconds)
Nov 12 11:23:43 *	kapil____ (uid36151@gateway/web/irccloud.com/x-klgvntfwbntldzzq) has joined
Nov 12 11:23:54 *	themsay (~themsay@149.254.234.222) has joined
Nov 12 11:24:14 *	averell- is now known as averell
Nov 12 11:24:32 <geekosaur>	oh, no. at least if I understadn the intentof that corect5ly, where you have a well defined timezone and want it to apply to a timezone-less timestamp
Nov 12 11:24:38 *	zero_byte has quit (Ping timeout: 245 seconds)
Nov 12 11:26:06 <crestfallen>	"The choice of reduction strategy determines which terms diverge: normal order vs. applicative order." This is something I never grasped. It came up while looking at SKI. any concrete example appreciated.
Nov 12 11:51:00 <crestfallen>	one more question re: SKI . why is it called theoretic or "synthetic" ?
Nov 12 11:51:20 <crestfallen>	vs. analytic / model
Nov 12 11:51:53 *	cur8or (~cur8or@2c0f:fbe1::c13e:e67c:8ec3:b412) has joined
Nov 12 11:52:04 <Welkin>	MarcelineVQ: what do you mean by broadcast chans?
Nov 12 11:52:16 *	Neo--- has quit (Ping timeout: 264 seconds)
Nov 12 11:53:18 <geekosaur>	analytic means you've fitted it to existing data of some kind, theoretic means you've derived / proved it from fundamentals
Nov 12 11:53:19 <Welkin>	the way I am considering handling this is to have a single channel that I write to using a key-value pair, where the key is either an ID or a global tag
Nov 12 11:53:46 <Welkin>	then each consumer filters the messages for only global ones and the id is it assigned
Nov 12 11:56:04 <crestfallen>	hmm,  ok thanks geekosaur 
Nov 12 11:57:48 <geekosaur>	and "synthetic" here doesn't man "artificial", it is referring to the word's meaning in logic (for example the thesis / anti-thesis / synthesis construction in logic, derived from ancient Greek explorations of logic)
Nov 12 11:59:09 *	ryan_vw (~ryan@2601:681:5100:8250:8c02:836a:3fad:54b2) has joined
Nov 12 11:59:47 *	butterthebuddha (~butterthe@35.1.188.166) has joined
Nov 12 12:00:39 <crestfallen>	right its not like sweet-n-low. :) thanks a lot geekosaur 
Nov 12 12:01:11 *	jkaye has quit (Remote host closed the connection)
Nov 12 12:01:57 *	elgoosy has quit (Remote host closed the connection)
Nov 12 12:03:50 Python interface unloaded
**** ENDING LOGGING AT Mon Nov 12 12:03:50 2018

**** BEGIN LOGGING AT Fri Nov 16 11:43:14 2018

Nov 16 11:43:14 *	Now talking on #haskell
Nov 16 11:43:14 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Nov 16 11:43:14 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Nov 16 11:43:14 *	Channel #haskell url: http://www.haskell.org/
Nov 16 11:43:20 *	dbmikus__ (~dbmikus@ec2-52-0-158-42.compute-1.amazonaws.com) has joined
Nov 16 11:44:06 *	revprez_anz has quit (Quit: Lost terminal)
Nov 16 11:44:20 >lambdabot<	@let s f g h = f h (g h)
Nov 16 11:44:38 <geekosaur>	Haskell's type system is Hindley-Milner with typeclasses. System Fc is used internally by ghc but is not exposed; although some extensions partially expose some aspects of it.
Nov 16 11:45:25 <Welkin>	I thought it was system f-omega
Nov 16 11:45:26 *	sbdchd (~sbdchd@natp-128-119-202-153.wireless.umass.edu) has joined
Nov 16 11:45:39 <Solonarv>	yeah I thought it was System Fω
Nov 16 11:45:45 <geekosaur>	hm, maybe
Nov 16 11:46:02 <govno>	ok, thanks
Nov 16 11:46:28 <geekosaur>	in any case, one thing in it that is not exposed is geenral type lambdas: they exist at the level of ghc core, but cannot be written in user code
Nov 16 11:47:00 <Welkin>	MarcelineVQ: you are writing a book?
Nov 16 11:47:26 <MarcelineVQ>	No, sandy maguire did
Nov 16 11:47:33 <monochrom>	GHC is walking the fine line between getting closer to dependent typing and yet forbidding downright type lambda.
Nov 16 11:47:36 <Welkin>	on what?
Nov 16 11:47:45 <MarcelineVQ>	modern type-level programming in haskell
Nov 16 11:47:55 <Welkin>	is there a link?
Nov 16 11:48:12 *	kapil____ (uid36151@gateway/web/irccloud.com/x-nklqfwamcwhcmand) has joined
Nov 16 11:48:18 <MarcelineVQ>	https://leanpub.com/thinking-with-types
Nov 16 11:48:22 <Welkin>	type-level programming is one of the things I still have not gotten into yet with haskell
Nov 16 11:48:29 <Welkin>	I haven't found a reason (yet)
Nov 16 11:48:55 <int-e>	> 2^1^0 == 2^(1*0)
Nov 16 11:48:57 <lambdabot>	 False
Nov 16 11:49:07 <int-e>	> (2^1)^0 == 2^(1*0)
Nov 16 11:49:08 <monochrom>	I visualize that as trying to swim without getting wet.
Nov 16 11:49:09 <lambdabot>	 True
Nov 16 11:49:41 <Welkin>	I have been programming just fine without it for some years now
Nov 16 11:49:47 *	oish has quit (Ping timeout: 240 seconds)
Nov 16 11:50:12 *	sbdchd has quit (Ping timeout: 272 seconds)
Nov 16 11:51:00 *	oish (~charlie@159.22.169.217.in-addr.arpa) has joined
Nov 16 11:51:28 *	Neo-- has quit (Disconnected by services)
Nov 16 11:51:30 *	Neo--- (~neo@n59h172.net.telprom.si) has joined
Nov 16 11:51:55 *	dpyro has quit (Read error: Connection reset by peer)
Nov 16 11:51:59 *	dpyro_ (~dpyro@66-169-160-49.dhcp.ftwo.tx.charter.com) has joined
Nov 16 11:52:07 *	forgottenone has quit (Quit: Konversation terminated!)
Nov 16 11:52:54 <MarcelineVQ>	int-e: thank you for that, I see I've made an error in bracketing, as well as reading the rule.  lavalike: I didn't understand your comment, were you hinting at what int-e did?
Nov 16 11:53:08 *	Synthetica has quit (Quit: Connection closed for inactivity)
Nov 16 11:53:22 *	kark (~kartik@unaffiliated/kark) has joined
Nov 16 11:54:03 <lavalike>	MarcelineVQ: no just saying that a^(b^c) /= (a^b)^c
Nov 16 11:54:07 *	OpenSorc_ has quit (Ping timeout: 240 seconds)
Nov 16 11:54:52 *	bcmyers (~bcmyers@ool-944b2341.dyn.optonline.net) has joined
Nov 16 11:57:00 <Welkin>	(a^b)^c = a^(bc)
Nov 16 11:59:54 *	bts- (~bts@cpe-74-72-139-85.nyc.res.rr.com) has joined
Nov 16 12:00:22 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Nov 16 12:04:13 *	yyy- (~yyy@unaffiliated/tinnotl) has joined
Nov 16 12:04:27 *	Neo--- has quit (Ping timeout: 252 seconds)
Nov 16 12:05:33 *	butterthebuddha (~butterthe@35.1.149.251) has joined
Nov 16 12:06:07 *	dpyro_ has quit (Ping timeout: 240 seconds)
Nov 16 12:07:04 *	chaosmasttter has quit (Ping timeout: 244 seconds)
Nov 16 12:07:40 *	alx741 (~alx741@181.196.69.106) has joined
Nov 16 12:08:47 *	yyy has quit (Ping timeout: 240 seconds)
Nov 16 12:10:48 *	fen (56928295@gateway/web/freenode/ip.86.146.130.149) has joined
Nov 16 12:10:48 *	glguy gives voice to fen
Nov 16 12:11:28 *	eric88 (~eric@c-73-158-71-90.hsd1.ca.comcast.net) has joined
Nov 16 12:12:41 *	vlatkoB has quit (Remote host closed the connection)
**** ENDING LOGGING AT Fri Nov 16 12:14:00 2018

**** BEGIN LOGGING AT Thu Nov 22 12:57:10 2018

Nov 22 12:57:10 *	Now talking on #haskell
Nov 22 12:57:10 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Nov 22 12:57:10 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Nov 22 12:57:11 *	Channel #haskell url: http://www.haskell.org/
Nov 22 12:57:11 <hyperisco>	so the reason people were confused about string quoting is because a token such as FOO was assumed to be a constant, and if a constant is undefined when it is used then it becomes defined and is equal to its name as a string
Nov 22 12:57:40 *	perique has quit (Quit: Textual IRC Client: www.textualapp.com)
Nov 22 12:57:58 <hyperisco>	so programmers would say things like $playerData[PLAYER_NAME] and other programmers would say $playerData['PLAYER_NAME']
Nov 22 12:58:13 *	fizbin has quit (Ping timeout: 246 seconds)
Nov 22 12:58:18 *	python476 has quit (Ping timeout: 252 seconds)
Nov 22 12:58:29 <berndl>	hyperisco: nowadays the interpret will warn you about that.
Nov 22 12:58:33 <berndl>	*interpreter
Nov 22 12:58:38 <hyperisco>	oh sure
Nov 22 12:58:50 <hyperisco>	at the time you had to modify your php.ini to enable "strict errors" or whatever they called it
Nov 22 12:59:51 *	chaosmasttter has quit (Client Quit)
Nov 22 12:59:51 *	notzmv has quit (Read error: Connection reset by peer)
Nov 22 12:59:53 *	knupfer1 has quit (Remote host closed the connection)
Nov 22 13:00:03 <berndl>	Yeah.
Nov 22 13:00:03 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Nov 22 13:00:16 <hyperisco>	right after you disabled "register globals" lol
Nov 22 13:00:18 *	chaosmasttter (~chaosmast@p2E50E4EA.dip0.t-ipconnect.de) has joined
Nov 22 13:00:20 *	cfsloth has quit (Remote host closed the connection)
Nov 22 13:00:22 *	knupfer (~Thunderbi@200116b82c73fd00f69634fffef0b45f.dip.versatel-1u1.de) has joined
Nov 22 13:00:35 *	XCE (~XCE@2600:1700:f3d0:e130:fdc2:fb59:60c:58d8) has joined
Nov 22 13:00:37 <crestfallen>	hi wondering why I cannot eta reduce the x in line 8. thanks https://paste.ee/p/6reDs
Nov 22 13:00:49 <hyperisco>	that wonderful feature where variables encoded in a querystring would automatically get defined globally in your program
Nov 22 13:00:50 <berndl>	But hey, it's paying my bills at the moment, until I find an Agda job.
Nov 22 13:01:02 <monochrom>	This is why a proud "I don't know theory" guy can do so much harm by adding petty conveniences, penny wise pound foolish.
Nov 22 13:01:08 *	notzmv (~zmv@unaffiliated/zmv) has joined
Nov 22 13:01:14 *	cfsloth (~cfsloth3@89-181-200-17.net.novis.pt) has joined
Nov 22 13:01:29 <MarcelineVQ>	crestfallen: Why you yourself can't or whether it's possible?
Nov 22 13:01:43 <crestfallen>	I myself
Nov 22 13:02:00 *	mcc has quit (Quit: Nettalk6 - www.ntalk.de)
Nov 22 13:02:07 <MarcelineVQ>	k then I don't mean to be rude, but no one can possibly answer that question but you
Nov 22 13:02:21 Python interface unloaded
Nov 22 13:02:21 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Nov 22 13:02:21 2018

**** BEGIN LOGGING AT Fri Nov 23 12:30:54 2018

Nov 23 12:30:54 *	Now talking on #haskell
Nov 23 12:30:54 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Nov 23 12:30:54 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Nov 23 12:30:54 *	biglambda has quit (Quit: biglambda)
Nov 23 12:30:54 *	Channel #haskell url: http://www.haskell.org/
Nov 23 12:31:06 *	coot_ has quit (Quit: coot_)
Nov 23 12:32:04 *	nbloomf has quit (Client Quit)
Nov 23 12:32:04 <crestfallen>	hi I've been trying to get this to work on a list of Maybe elements such that ...
Nov 23 12:32:29 <crestfallen>	@let t = (<$>) length
Nov 23 12:32:31 <lambdabot>	 Defined.
Nov 23 12:32:54 <crestfallen>	one moment sorry
Nov 23 12:33:17 *	Gigabitten has quit (Remote host closed the connection)
Nov 23 12:33:22 *	nbloomf (~nbloomf@104-183-67-6.lightspeed.fyvlar.sbcglobal.net) has joined
Nov 23 12:33:30 <crestfallen>	@let t = (<$>) (++ " !)
Nov 23 12:33:31 <lambdabot>	 Parse failed: Improperly terminated string
Nov 23 12:33:37 <crestfallen>	@let t = (<$>) (++ " !")
Nov 23 12:33:38 <lambdabot>	 .L.hs:165:1: error:
Nov 23 12:33:38 <lambdabot>	     Multiple declarations of ‘t’
Nov 23 12:33:38 <lambdabot>	     Declared at: .L.hs:164:1
Nov 23 12:33:43 *	jutaro (~jutaro@p200300D2971B8DFEB6E034F5E8DE827F.dip0.t-ipconnect.de) has joined
Nov 23 12:33:46 <crestfallen>	@let tt = (<$>) (++ " !")
Nov 23 12:33:48 <lambdabot>	 Defined.
Nov 23 12:34:06 *	spion has quit (Read error: Connection reset by peer)
Nov 23 12:34:42 *	supercoven has quit (Read error: Connection reset by peer)
Nov 23 12:34:50 <crestfallen>	I cannot write the type declaration to make tt work over a list [(Just "Tater"), (Just "Tot")]
Nov 23 12:34:56 *	Gigabitten (~Somn@098-127-041-104.res.spectrum.com) has joined
Nov 23 12:35:12 <Solonarv>	:t tt
Nov 23 12:35:14 <lambdabot>	Functor f => f [Char] -> f [Char]
Nov 23 12:35:31 <Solonarv>	:t [(Just "Tater"), (Just "Tot")]
Nov 23 12:35:32 <lambdabot>	[Maybe [Char]]
Nov 23 12:35:46 *	nbloomf has quit (Client Quit)
Nov 23 12:36:04 *	bbrodriguez has quit (Ping timeout: 246 seconds)
Nov 23 12:36:11 <Solonarv>	the list-of-maybes has two "layers": the outer layer is '[]', the inner layer is 'Maybe'
Nov 23 12:36:28 *	Goplat (~goplat@reactos/developer/Goplat) has joined
Nov 23 12:36:31 <Solonarv>	'tt' only works through one layer
Nov 23 12:36:42 <crestfallen>	ok I've been one the right track, however Solonarv 
Nov 23 12:36:45 <crestfallen>	...
Nov 23 12:37:16 <crestfallen>	how do I write that in the constraint?
Nov 23 12:37:32 <Solonarv>	you don't, instead you write:
Nov 23 12:37:41 *	hackage adblock2privoxy 2.0.0 - Convert adblock config files to privoxy format  http://hackage.haskell.org/package/adblock2privoxy-2.0.0 (essandess)
Nov 23 12:37:47 <Solonarv>	@let t2 = fmap (fmap (++ " !"))
Nov 23 12:37:49 <lambdabot>	 Defined.
Nov 23 12:37:51 <Solonarv>	:t t2
Nov 23 12:37:53 <lambdabot>	(Functor f1, Functor f2) => f1 (f2 [Char]) -> f1 (f2 [Char])
Nov 23 12:38:00 <Solonarv>	this one does two layers
Nov 23 12:38:11 <crestfallen>	excellent thanks kindly Solonarv 
Nov 23 12:38:36 *	axeman-_ (~axeman_@37.228.243.140) has joined
Nov 23 12:39:13 *	carif has quit (Ping timeout: 245 seconds)
Nov 23 12:40:38 *	kjak has quit (Quit: Lost terminal)
Nov 23 12:40:42 *	axeman- has quit (Ping timeout: 252 seconds)
Nov 23 12:40:57 *	UpstreamSalmon has quit (Quit: Connection closed for inactivity)
Nov 23 12:41:24 *	mutenewt (~mutenewt@38.124.29.75) has joined
Nov 23 12:42:14 Python interface unloaded
Nov 23 12:42:14 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri Nov 23 12:42:14 2018

**** BEGIN LOGGING AT Fri Nov 23 13:38:36 2018

Nov 23 13:38:36 *	Now talking on #haskell
Nov 23 13:38:36 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org | Identification or Voice(+v) require to chat during spam
Nov 23 13:38:36 *	Topic for #haskell set by glguy (Thu Aug  2 09:06:52 2018)
Nov 23 13:38:37 *	Channel #haskell url: http://www.haskell.org/
Nov 23 13:39:00 <hpc>	like you have a definition for a list
Nov 23 13:39:20 <hpc>	you want to use it somewhere, in a lazy language you wonder if it's defined
Nov 23 13:39:27 *	carif has quit (Ping timeout: 252 seconds)
Nov 23 13:39:32 <glguy>	leo2007: If you're just looking for a book to learn Haskell from there's Hutton's Programming in Haskell
Nov 23 13:39:42 <hpc>	as in, if you keep evaluating it, will it ever reach a point where it errors or doesn't produce the next element
Nov 23 13:40:01 *	nowhere_man has quit (Ping timeout: 252 seconds)
Nov 23 13:40:15 *	booglewoogle has quit (Remote host closed the connection)
Nov 23 13:40:24 <hpc>	[1..] is defined
Nov 23 13:40:32 <hpc>	but in a strict language you now have to wonder if it terminates
Nov 23 13:40:45 <leo2007>	glguy: I am not looking for learning material more for a classic book for my bookshelf, which I'd like to keep it small.
Nov 23 13:40:53 <hpc>	meaning you can't just think inductively about it, you have to actually reason through ALL of it and determine that it is a finite list
Nov 23 13:41:13 <glguy>	leo2007: Just something for people to be impressed with when they see it then?
Nov 23 13:41:25 <leo2007>	for myself of course.
Nov 23 13:41:29 *	confusedwanderer has quit (Quit: confusedwanderer)
Nov 23 13:41:29 <hpc>	so the list (collatz someHugePositiveNumber) is not as easy to reason about as [1..] or [1..5]
Nov 23 13:41:35 <Tuplanolla>	I imagine that I'd prefer a strict language, but I've never actually tried one.
Nov 23 13:41:35 <Ariakenom>	in (lhs <*> rhs) you have to consider how much it costs to evaluate rhs and maybe should manually make it lazy
Nov 23 13:41:35 *	booglewoogle (~booglewoo@2a02:908:1571:f3e0:f084:e65e:e0fb:afd1) has joined
Nov 23 13:41:44 <crestfallen>	@let bb = (<$>) (fmap (++ " !")) -- Solo*narv, I wonder if you're still on. There's something I don't understand about ghci vs ghc fundamentally -- bb does not compile but works fine in ghci 
Nov 23 13:41:46 <lambdabot>	 Defined.
Nov 23 13:41:48 <glguy>	Oh... well if you're just trying to impress yourself, pick something that impresses you :)
Nov 23 13:42:35 <hpc>	i think that's really the key bit, comparing [1..5] to [1..] to (collatz bigNumber)
Nov 23 13:42:43 <hpc>	in a strict language you're treating each one wildly differently
Nov 23 13:43:04 <hpc>	in a lazy language they're all lists and the next iteration of each list is a very simple computation so they are productive when matched on
Nov 23 13:43:13 <leo2007>	somethings it is difficult to convey intention.
Nov 23 13:43:31 <hpc>	amateur_hour: hope that made sense
Nov 23 13:44:05 *	takuan_dozo has quit (Remote host closed the connection)
Nov 23 13:44:11 <crestfallen>	bb [(Just "Tater"), (Just "Tot")]
Nov 23 13:44:29 <leo2007>	I just want to pick the most important book of haskell to buy.
Nov 23 13:44:42 <amateur_hour>	it does, and it's very interesting, though I'm not sure I see why as a list it's better than considering a present number plus storage, I'll have to reflect on it a bit more
Nov 23 13:45:01 *	oish has quit (Ping timeout: 246 seconds)
Nov 23 13:45:06 <crestfallen>	> bb [(Just "Tater"), (Just "Tot")]
Nov 23 13:45:09 <lambdabot>	 [Just "Tater !",Just "Tot !"]
Nov 23 13:45:29 <amateur_hour>	@Tuplanolla we briefly considered purescript at work, that seems interesting for a strict language if you ever wanted to dabble
Nov 23 13:45:29 <lambdabot>	Unknown command, try @list
Nov 23 13:45:44 <amateur_hour>	oops, no idea why I added an at
Nov 23 13:45:46 <Tuplanolla>	I think I'd rather try OCaml, amateur_hour.
Nov 23 13:45:58 <Tuplanolla>	Mainly because it integrates better with Coq.
Nov 23 13:46:12 <stilgart>	crestfallen: I cannot help you much to understand what happens here
Nov 23 13:46:18 *	zzzaaa (~zzzaaa@adsl-104.37.6.155.tellas.gr) has joined
Nov 23 13:46:25 *	leo2007 (~leo2007@139.59.241.182) has left ("rcirc on GNU Emacs 26.1")
Nov 23 13:46:33 <stilgart>	but the code does compile if you provide a type signature for bb
Nov 23 13:46:45 <amateur_hour>	yeah we really only considered it because we have some front end dev to do :P
Nov 23 13:46:48 *	mounty has quit (Ping timeout: 268 seconds)
Nov 23 13:46:49 <hpc>	leo2007: maybe okasaki's data structure book, if you're dead set on that
Nov 23 13:46:50 *	polman (~ananevtem@2.95.141.3) has joined
Nov 23 13:46:52 *	oish (~charlie@212.83.177.138) has joined
Nov 23 13:47:14 <hpc>	programming doesn't really have status books like you'd find with like, homer's odyssey on a laywer's bookshelf
Nov 23 13:47:55 <amateur_hour>	category theory for programmers recently started being printed on demand, free to read online
Nov 23 13:48:06 <crestfallen>	stilgart but why doesn't inference work in ghc ?
Nov 23 13:48:17 <stilgart>	this I don't know
Nov 23 13:48:27 <Tuplanolla>	@where mmr -- crestfallen
Nov 23 13:48:27 <lambdabot>	https://wiki.haskell.org/Monomorphism_restriction
Nov 23 13:49:07 <crestfallen>	thanks all I find that maddening 
Nov 23 13:49:14 <__monty__>	hpc: How about TAOCP, maybe SICP?
Nov 23 13:49:23 <stilgart>	does ghci use some -Xfeature by default?
Nov 23 13:49:53 *	varigatedvanilla has quit (Ping timeout: 268 seconds)
Nov 23 13:50:27 <stilgart>	wow, thanks Tuplanolla 
Nov 23 13:50:48 <glguy>	stilgart: type: :showi language
Nov 23 13:50:53 <hpc>	haven't read TAOCP, i wasn't a huge fan of SICP
Nov 23 13:51:07 <hpc>	though i read it post-haskell so it wasn't really anything new to me
Nov 23 13:52:23 <stilgart>	and here it is:   -XNoMonomorphismRestriction
Nov 23 13:52:25 <tronic_>	hpc: I started reading haskell and didn't know what "map" was.  I stopped reading for a while and then discovered SICP, and it was a revelation because it actually explained what map was.
Nov 23 13:52:27 *	aksjdbw has quit (Quit: Page closed)
Nov 23 13:53:02 <tronic_>	this was back in '03 I think...
Nov 23 13:53:21 <hpc>	ah
Nov 23 13:53:58 <glguy>	It should be pretty common for a book to teach new things
Nov 23 13:54:10 <crestfallen>	I've heard wildly successful programmers say that SICP was impossible. I certainly couldn't get through chapt 1.
Nov 23 13:54:27 *	mcc has quit (Quit: Nettalk6 - www.ntalk.de)
Nov 23 13:54:50 <tronic_>	haha well the haskell book i was reading was Hudak's Haskell School of Expression
Nov 23 13:54:56 <tronic_>	which was probably too advanced for me at the time
Nov 23 13:55:08 *	carif (~mcarifio@cpe-67-246-228-200.rochester.res.rr.com) has joined
Nov 23 13:55:13 *	gxt has quit (Ping timeout: 244 seconds)
Nov 23 13:55:28 <amateur_hour>	SICP is quite a nice read really, no wonder a lot of universities use it early on in a CS programme
Nov 23 13:55:43 <tronic_>	It is typeset very well also haha
Nov 23 13:56:10 <hpc>	i was pretty bummed when MIT dropped lisp as their freshman language for python
Nov 23 13:56:13 *	polman has quit (Ping timeout: 246 seconds)
Nov 23 13:56:37 <hpc>	really missed the point of MIT there
Nov 23 13:56:59 <glguy>	hpc: Why were you bummed?
Nov 23 13:57:53 <hpc>	because theoretically, MIT is one of the best CS schools in the world
Nov 23 13:58:09 <crestfallen>	@let vv :: Functor f => f [[Char]] -> f [[Char]] ; vv = (<$>) (fmap (++ " !"))
Nov 23 13:58:11 <lambdabot>	 Defined.
Nov 23 13:58:23 <crestfallen>	well at least I got this to work
Nov 23 13:58:25 <hpc>	and downgrading languages like that is making them yet another python school
Nov 23 13:58:28 <hpc>	at least for undergrads
Nov 23 13:58:39 <glguy>	So you went somewhere else instead?
Nov 23 13:59:09 *	berndl has quit (Remote host closed the connection)
Nov 23 13:59:32 <hpc>	i never went, but i still liked knowing someplace that taught CS seriously as a science was out there
Nov 23 13:59:48 *	XCE has quit (Read error: Connection reset by peer)
Nov 23 13:59:51 <hpc>	rather than as engineering, or office job number 765
Nov 23 14:00:15 *	wildlander (~wildlande@unaffiliated/wildlander) has joined
Nov 23 14:00:22 *	ryan_vw has quit (Ping timeout: 268 seconds)
Nov 23 14:00:41 <crestfallen>	please explain how to get vv to work over a list of Maybe [Char] .. I've tried to write that into the signature  
Nov 23 14:01:15 <crestfallen>	...numerous times
Nov 23 14:01:33 <crestfallen>	sorry for being a knucklehead
Nov 23 14:01:51 <hpc>	crestfallen: if you substitute Maybe for f, that might help you see the mistake in the type signature
Nov 23 14:02:27 *	zzzaaa has quit (Remote host closed the connection)
Nov 23 14:02:28 *	SpinTensor has quit (Quit: WeeChat 2.3)
Nov 23 14:02:29 <hpc>	that might improve the error enough that you can solve it the rest of the way yourself
Nov 23 14:02:52 <crestfallen>	so it goes into the constraint ...
Nov 23 14:03:00 <crestfallen>	thanks
Nov 23 14:03:37 <hpc>	i assume you ultimately want vv :: Maybe [Char] -> Maybe [Char]?
Nov 23 14:03:43 *	oisdk has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Nov 23 14:04:45 *	permagreen (~permagree@c-98-246-129-179.hsd1.or.comcast.net) has joined
Nov 23 14:04:47 <hyperisco>	hpc, pressure to be more industry relevant
Nov 23 14:05:08 <hyperisco>	I don't know but if my experience in uni is telling then that's a likely explanation
Nov 23 14:05:13 <crestfallen>	thanks hpc .. working
Nov 23 14:05:48 *	carlomagno (~carlomagn@inet-hqmc04-o.oracle.com) has joined
Nov 23 14:06:27 <hyperisco>	hpc, I heard similar murmuring about dropping Miranda because it seemed irrelevant
Nov 23 14:06:30 <geekosaur>	that includes little things like funding / sponsorships
Nov 23 14:06:35 <geekosaur>	sadly
Nov 23 14:06:46 <hpc>	that sounds likely
Nov 23 14:06:55 <hyperisco>	follow the money
Nov 23 14:07:04 *	raichoo has quit (Ping timeout: 246 seconds)
Nov 23 14:07:07 <hyperisco>	because of the other adage: go where the money is
Nov 23 14:07:33 <Tuplanolla>	You also need to get rid of all the hard courses, because students don't like those.
Nov 23 14:07:50 <hpc>	the sad thing is, "the money" is now in "devops"
Nov 23 14:08:02 *	carif has quit (Ping timeout: 250 seconds)
Nov 23 14:08:10 <hyperisco>	the stupid part, the subversive part, is the *students* were making these complaints
Nov 23 14:08:23 <hyperisco>	and they get elected onto student councils, and then they have the ear of the administrators
Nov 23 14:08:28 <hpc>	and when i got that sort of job, functional programming was by far the most relevant prior skill i had going into it
Nov 23 14:08:33 <hpc>	BY FAR
Nov 23 14:08:40 *	fizbin has quit (Remote host closed the connection)
Nov 23 14:08:40 *	carlomagno has quit (Remote host closed the connection)
Nov 23 14:08:50 <hyperisco>	why students should have a say in what they are taught is beyond me
Nov 23 14:09:09 *	ystael has quit (Ping timeout: 252 seconds)
Nov 23 14:09:22 <hyperisco>	you pick your course, and beyond that you're there to learn from the people who know
Nov 23 14:09:47 <amx>	which country/continent are you talking about
Nov 23 14:10:19 <hyperisco>	UoW Ontario
Nov 23 14:10:30 <geekosaur>	students want what will get them a job quickly, not what will teach them skils useful beyond that first job
Nov 23 14:10:32 *	polman (~ananevtem@2.95.141.3) has joined
Nov 23 14:11:31 <gonz_>	Given how useless and debilitating a lot of university studies seem to be in the US it's a different situation than most in f.e. Europe
Nov 23 14:12:14 <gonz_>	To take on massive debt or have your parents pay a shit ton for something that largely isn't actually doing much for you should send anyone into a panic.
Nov 23 14:12:20 <hpc>	heh, that reminds me once i was explaining a bug fix to a coworker and the simplest explanation was via calculus
Nov 23 14:12:29 <hpc>	their immediate reaction was "oh god, this again"
Nov 23 14:12:55 <Rembane>	:D
Nov 23 14:13:01 *	iAmerikan has quit (Ping timeout: 252 seconds)
Nov 23 14:13:38 <hpc>	if i could go back in time and be one of those complain-y students, i would probably direct my efforts at data structures
Nov 23 14:13:40 <koz_>	hpc: Hear hear.
Nov 23 14:13:49 <koz_>	(for everything above)
Nov 23 14:14:08 <hpc>	nobody ever learned anything interesting from heaps and hashing algorithms
Nov 23 14:14:09 *	Eduard_Munteanu (~Eduard_Mu@188.25.231.233) has joined
Nov 23 14:14:12 <hpc>	B-trees are where it's at
Nov 23 14:14:19 <hpc>	best data structure ever
Nov 23 14:14:20 *	Gigabitten has quit (Ping timeout: 244 seconds)
Nov 23 14:14:24 *	buttons840 (~buttons@174-23-209-122.slkc.qwest.net) has joined
Nov 23 14:14:36 <bollu>	hpc why do you like B trees? they're weird
Nov 23 14:14:39 <hyperisco>	I've forgotten just about all of it
Nov 23 14:14:46 *	polman has quit (Ping timeout: 246 seconds)
Nov 23 14:14:51 <hpc>	bollu: it's the data structure that stores something like 90% of the world's data
Nov 23 14:14:59 <hpc>	every RDBMS uses it
Nov 23 14:15:00 <bollu>	hpc sure
Nov 23 14:15:06 <hyperisco>	at one point I could calculate some things about filling hash tables up and comparing linear and quadratic somethings
Nov 23 14:15:09 <koz_>	Basically, if you interact with _anything_ that claims to be a database it probably uses it.
Nov 23 14:15:11 <bollu>	hpc that's cause disks used to have seek times
Nov 23 14:15:13 <hpc>	because it's got fast access through multiple indices, plus fast traversals
Nov 23 14:15:24 <koz_>	bollu: In-memory DBs still use B+-trees.
Nov 23 14:15:29 <bollu>	koz_ why?
Nov 23 14:15:40 <koz_>	(at least according to Andy Pavlo, and when Andy Pavlo says something, I'm inclined to listen)
Nov 23 14:15:46 *	sooheon has quit (Ping timeout: 252 seconds)
Nov 23 14:15:50 <koz_>	bollu: I can link you to his explanation, but it's in video form.
Nov 23 14:15:50 <hpc>	i don't even care about the locality aspect, indexing is just so good
Nov 23 14:16:09 *	Gigabitten (~Somn@098-127-041-104.res.spectrum.com) has joined
Nov 23 14:17:09 <hpc>	even if every row access is its own hard drive seek, O(logn + n) is a really good asymptote for "select x from y where complicated predicates and sub-queries"
Nov 23 14:17:22 *	carif (~mcarifio@cpe-67-246-228-200.rochester.res.rr.com) has joined
Nov 23 14:17:31 <hpc>	which... is O(n)
Nov 23 14:18:04 <geekosaur>	bollu, because they're a good general purpose data structure for both random / by-key and indexed sequential access
Nov 23 14:18:05 <hpc>	and multiple indexes
Nov 23 14:18:19 <hpc>	which you're never going to get out of even my second-favorite data structure, balanced binary trees
Nov 23 14:18:22 <Solonarv>	> reading wikipedia article on B-trees
Nov 23 14:18:22 <Solonarv>	"What, if anything, the B stands for has never been established. "
Nov 23 14:18:24 <lambdabot>	 error:
Nov 23 14:18:24 <lambdabot>	     • Variable not in scope:
Nov 23 14:18:24 <lambdabot>	         reading
Nov 23 14:18:36 *	polman (~ananevtem@2.95.141.3) has joined
Nov 23 14:18:40 <hyperisco>	we also learned AVL and Red Black trees… forget all those too
Nov 23 14:18:56 <hyperisco>	but being able to balance a tree is useful
Nov 23 14:19:19 *	govno has quit (Ping timeout: 256 seconds)
Nov 23 14:19:24 <bollu>	hyperisco splay trees <3 
Nov 23 14:19:26 <hpc>	i think i was talking about B+ trees this whole time, but close enough :D
Nov 23 14:19:40 <buttons840>	will the haskell police take me away if I make a Storable instance that doesn't implement peek?
Nov 23 14:20:04 <hyperisco>	buttons840, where do you live?
Nov 23 14:20:56 <amx>	take your hands away from the keyboard and put them were i can see them
Nov 23 14:20:57 *	mverkleij[m] has quit (Ping timeout: 264 seconds)
Nov 23 14:21:04 *	mverkleij[m] (mverkleijm@gateway/shell/matrix.org/x-xcymhkkdcalacqvx) has joined
Nov 23 14:21:20 <hyperisco>	"I never compiled it officer I swear!"
Nov 23 14:21:20 <Solonarv>	Just so we can send you chocolates for being so original, of course. We wouldn't use that address to come arrest you. Nuh-uh.
Nov 23 14:21:39 <geekosaur>	it's not clear how much use such a thing is, but as long as it's not a bomb lurkingwithin a published library (I could see it in a program making use of specific C APIs where it's only useful in one direction) it's probably ok
Nov 23 14:21:45 <koz_>	bollu: https://www.youtube.com/watch?v=QKNISiRJF-4&list=PLSE8ODhjZXjbisIGOepfnlbfxeH7TW-8O&index=2
Nov 23 14:22:01 <koz_>	Check out the rest of this video series and the associated course materials too - they are a fascinating insight into how DBs are actually implemented.
Nov 23 14:22:13 <hyperisco>	10 years from now we're reading the headlines "Peek-A-Boo Exploit Exposes Millions"
Nov 23 14:22:27 *	xcmw has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Nov 23 14:22:38 <hpc>	hyperisco: i read something about that about the quic protocol that http/3 is built on
Nov 23 14:22:40 <koz_>	bollu: Course page: 15721.courses.cs.cmu.edu/spring2016/
Nov 23 14:22:41 *	UpstreamSalmon (uid12077@gateway/web/irccloud.com/x-hzglaenxlsjyznbv) has joined
Nov 23 14:22:45 <crestfallen>	hpc pulling my hair out
Nov 23 14:22:47 <amateur_hour>	I'll be very disappointed if the next spectre vulnerability isn't called 'Spoopy Ghost'
Nov 23 14:22:49 <geekosaur>	and, uh, clearly documented so you don't shoot ourself in the foot 6 months from now
Nov 23 14:22:52 <hpc>	it sends cryptographic information in the first packet
Nov 23 14:23:02 <geekosaur>	*yourself
Nov 23 14:23:04 <hpc>	someone said "this is the next 10 years of vulnerabilities"
Nov 23 14:23:10 *	polman has quit (Ping timeout: 246 seconds)
Nov 23 14:23:23 <buttons840>	i'm working with a graphic library, and it has a LoadTexture/Unload
Nov 23 14:23:39 <hpc>	crestfallen: where are you at now?
Nov 23 14:23:43 <koz_>	bollu: Sorry, _actual_ link: https://15721.courses.cs.cmu.edu/spring2016/
Nov 23 14:24:09 <bollu>	koz_ thanks!
Nov 23 14:24:20 <koz_>	As a complete aside, I find Andy Pavlo hilarious.
Nov 23 14:24:39 <crestfallen>	   vv :: Functor Maybe => Maybe [Char] -> Maybe [Char] 
Nov 23 14:24:43 <buttons840>	i'm working with a graphic library, and it has a LoadTexture/UnloadTexture method, so I use a ForeignPtr to ensure UnloadTexture get's called, like you'd expect, but the actual Texture is little more than an integer id to the texture being stored on the GPU, so, I could easily make it peekable, but then you end up having these bad texture ids laying around if you're not careful
Nov 23 14:25:50 <Solonarv>	"you can have stale data if you're not careful" is always a problem if you're working with pointers
Nov 23 14:25:59 <hyperisco>	saying  Functor Maybe  is a frivolous exercise
Nov 23 14:26:02 <hpc>	cool so, you don't need the Functor Maybe constraint
Nov 23 14:26:28 <koz_>	Yah, Maybe is already a Functor. As well as many other things.
Nov 23 14:27:01 <hyperisco>	if it is a Functor, you don't need the constraint, and if it isn't a Functor your code won't compile anyways
Nov 23 14:27:05 <crestfallen>	oh you mentioned that above but I thought you wanted me to hash it out from there hpc :) .. I didn't try it
Nov 23 14:27:07 <buttons840>	so, I'm either going to leave Storable's peek method undefined, or just use arbitrary functions without making it Storable -- which is perferrable?
Nov 23 14:27:15 <Solonarv>	the latter, IMO
Nov 23 14:27:21 <koz_>	_Definitely_ the latter.
Nov 23 14:27:39 <koz_>	If you can't keep typeclass promises, you should really not be an instance unless you have a _very_ good reason.
Nov 23 14:27:58 <hyperisco>	buttons840, preferable is something like  error "peek not implemented for MyType"
Nov 23 14:28:02 <hpc>	crestfallen: hmm, here's something that might help - imagine that you don't know it's going to be (++ "!") that you're applying to the inner strings
Nov 23 14:28:06 <koz_>	Especially if you expect people who aren't you to use it.
Nov 23 14:28:19 <hyperisco>	buttons840, assuming avoiding this instance altogether is off the table
Nov 23 14:28:20 <Solonarv>	the main point of Storable is for libraries to provide datastructures, functions etc. that can work fr any Storable; those libraries will definitely call 'peek' and crash, because that's literally half the point of Storable
Nov 23 14:28:23 <hpc>	crestfallen: that would give you some kind of vv' :: (String -> String) -> Maybe String -> Maybe String
Nov 23 14:28:32 <hpc>	crestfallen: and vv = vv' (++ "!")
Nov 23 14:28:32 *	elfets (~elfets@ip-37-201-143-140.hsi13.unitymediagroup.de) has joined
Nov 23 14:28:40 <hpc>	vv' might be easier to define
Nov 23 14:28:41 *	hackage fast-arithmetic 0.6.4.2 - Fast functions on integers.  http://hackage.haskell.org/package/fast-arithmetic-0.6.4.2 (vmchale)
Nov 23 14:29:03 <hpc>	see if you recognize that type signature in some other functions you've used before ;)
Nov 23 14:29:12 *	polman (~ananevtem@2.95.141.3) has joined
Nov 23 14:29:32 <buttons840>	k, i'll just make my own Storable-like functions, but not actually make a Storable instance
Nov 23 14:29:34 <hyperisco>	any time you write an error message, consider whether an idiot could figure out what is actually wrong by reading it
Nov 23 14:29:52 <hyperisco>	even assuming they have access to your source code and the grep tool
Nov 23 14:29:55 <hpc>	consider being that idiot with a library you didn't write too
Nov 23 14:30:15 <hyperisco>	well, I was going to say because that idiot could be you come a year from now
Nov 23 14:30:16 <Tuplanolla>	How do you feel about error messages long enough to be books?
Nov 23 14:30:23 <koz_>	s/a year/a week/
Nov 23 14:30:46 <Solonarv>	s/could/will/, too
Nov 23 14:30:47 <hyperisco>	I think my code memory is maybe a month long
Nov 23 14:30:51 <hpc>	Tuplanolla: like long stack traces? as long as the information i need is at the top or bottom i can get used to them
Nov 23 14:31:17 <koz_>	Tuplanolla: I am sympathetic to people not liking the kind of incoherent error spew Java NPEs produce.
Nov 23 14:31:27 <hpc>	or if they're like ghc error messages and full of location and descriptive information in equal measure
Nov 23 14:31:28 <hyperisco>	Tuplanolla, I've been baptised in the slurry of C++ error messages.
Nov 23 14:31:33 *	sooheon (~sooheon@14.52.19.140) has joined
Nov 23 14:31:39 <koz_>	Involving thousands of BuilderFlyweightSingletonOptionalManagers
Nov 23 14:32:02 *	varigatedvanilla (~mpascale@23.226.131.230) has joined
Nov 23 14:32:10 <Tuplanolla>	More like several paragraphs of written exposition of what actually went wrong.
Nov 23 14:32:33 *	jedws (~jedws@60.227.196.122) has joined
Nov 23 14:32:58 <Solonarv>	ack, I've seen my fair share of NPEs while writing minecraft mods
Nov 23 14:33:07 <Solonarv>	caught and re-thrown a couple of times, too
Nov 23 14:33:08 <hpc>	when i am debugging an error, i like location info and not being lied to
Nov 23 14:33:10 *	rprije has quit (Ping timeout: 250 seconds)
Nov 23 14:33:22 <hyperisco>	"It all started 18 years ago when I first stumbled across a brightly yellow 'PHP For Dummies' book on my father's bookshelf…"
Nov 23 14:33:40 *	carif has quit (Ping timeout: 268 seconds)
Nov 23 14:33:40 *	ixxie has quit (Ping timeout: 268 seconds)
Nov 23 14:33:42 <Solonarv>	Tuplanolla: might want to have a short summary at the top/bottom, tbh
Nov 23 14:33:46 <koz_>	Solonarv: I can do better. I've had my university's CMS vomit two-page NPE stacktraces at me.
Nov 23 14:33:51 <koz_>	(and not even once)
Nov 23 14:33:53 <hpc>	if your code's ability to debug itself ends at stacktrace("dunno lol"), that's better than leading me astray with a short message
Nov 23 14:34:05 <Solonarv>	*only* two pages? hah!
Nov 23 14:34:15 <hpc>	ideally you would stacktrace("dunno lol but here's my variables\n" ++ everything_in_scope)
Nov 23 14:34:18 <koz_>	Solonarv: Two pages on a 1920x1080 resolution screen in my browser.
Nov 23 14:34:24 <koz_>	That's a lotta lines.
Nov 23 14:34:26 <Solonarv>	oh, that's a big oof
Nov 23 14:34:46 <hyperisco>	"… and so you see, that is why the magic method could not find the member you were looking for. A simple matter of naming convention."
Nov 23 14:35:09 <koz_>	And people wonder why I don't trust the ICT team anywhere near as far as I can throw them. Which, being that I'm an out-of-shape person, is not far at all.
Nov 23 14:35:40 <hyperisco>	Tuplanolla, like that? I might enjoy writing an Easter egg like that sometime.
Nov 23 14:36:00 <Tuplanolla>	That's the spirit, hyperisco.
Nov 23 14:36:12 *	sooheon has quit (Ping timeout: 250 seconds)
Nov 23 14:37:22 *	gabe4k has quit (Ping timeout: 268 seconds)
Nov 23 14:38:48 <crestfallen>	hpc sorry I don't understand your vv' suggestion
Nov 23 14:39:12 <koz_>	crestfallen: The idea is that instead of 'baking in' a particular thing to do, you pass a function which does that thing as an extra parameter.
Nov 23 14:39:15 <hpc>	crestfallen: basically it's making the problem a little bit more generic
Nov 23 14:39:22 <hyperisco>	koz_, and seeing as the ICT team is also mostly composed of out-of-shape people, there's not much hope for anyone throwing them far.
Nov 23 14:39:36 <hpc>	so there's fewer possible definitions that satisfy the type
Nov 23 14:40:05 <koz_>	So instead of having 'mapIncrement :: [Int] -> [Int]', we have 'map :: (a -> b) -> [a] -> [b]', and define 'mapIncrement = map (+ 1)'
Nov 23 14:40:19 <hpc>	the type of vv' is very similar to the type of a function you've used before
Nov 23 14:40:25 <koz_>	(also that too)
Nov 23 14:40:31 <hpc>	in fact, it might be the same type just specialized wink wink
Nov 23 14:40:51 <hpc>	so you find that function, define vv' as that, and see if it does what you want
Nov 23 14:41:52 *	kapil____ has quit (Quit: Connection closed for inactivity)
Nov 23 14:42:35 <hyperisco>	I recommend trying VVVVVV
Nov 23 14:43:39 <koz_>	hyperisco: Why not UUUUUUU?
Nov 23 14:43:51 <hyperisco>	is that a sequel?
Nov 23 14:43:58 <koz_>	s/se/pre/
Nov 23 14:44:00 <stilgart>	well, I'm still not master of the universe :(
Nov 23 14:44:11 *	gabe4k (~gabe4k@2600:100f:b02c:f5c9:6757:fa84:b243:cb51) has joined
Nov 23 14:44:14 <koz_>	stilgart: Have you tried asking it nicely?
Nov 23 14:44:19 <stilgart>	wow, is there a prequel ? really
Nov 23 14:44:21 <hpc>	(the solution is going to look stupidly easy in retrospect, but you'll have begun learning type-level thinking in the process)
Nov 23 14:44:36 *	varigatedvanilla has quit (Read error: Connection reset by peer)
Nov 23 14:44:42 <stilgart>	koz_: you got this title when you finish VVVVVV with no death
Nov 23 14:45:01 <crestfallen>	my nomenclature is perfectly fine
Nov 23 14:45:05 <hyperisco>	koz_, really? because I can't find it
Nov 23 14:45:15 *	varigatedvanilla (~mpascale@23.226.131.230) has joined
Nov 23 14:45:54 *	varigatedvanilla has quit (Remote host closed the connection)
Nov 23 14:46:03 <hyperisco>	guess my problem is I suck too much
Nov 23 14:46:12 *	varigatedvanilla (~mpascale@23.226.131.230) has joined
Nov 23 14:46:22 *	carif (~mcarifio@cpe-67-246-228-200.rochester.res.rr.com) has joined
Nov 23 14:47:15 <hpc>	crestfallen: less about terminology, more about thought process - one of my biggest hangups learning haskell early on was changing the way i think
Nov 23 14:47:30 *	iAmDecim_ (~iAmDecim@2600:1702:ad0:3b90:e9cb:fabc:c91:40d5) has joined
Nov 23 14:47:32 <hpc>	it's hard without the right problems and something pointing you in the right direction :D
Nov 23 14:47:51 *	machinedgod has quit (Ping timeout: 268 seconds)
Nov 23 14:48:30 <hyperisco>	you think programming hardware is hard? try the wetware
Nov 23 14:48:33 *	albertus1 (~seb@x4dbe1473.dyn.telefonica.de) has joined
Nov 23 14:48:53 <crestfallen>	hpc thanks really appreciate it.. I looked at the link re: inference but I cannot understand it. I don't see why an environment for testing/learning allows you to do things that the compiler will not.
Nov 23 14:49:00 <hpc>	https://mygaming.co.za/news/wp-content/uploads/2012/09/PC-oil-cooling.jpg - wetware
Nov 23 14:49:15 <Solonarv>	my wetware has a bug where it just kind of fails to do things, and it's really hard to debug
Nov 23 14:50:17 <hpc>	crestfallen: which link?
Nov 23 14:50:30 <hyperisco>	I have troubles waking my wetware from sleep mode
Nov 23 14:50:46 <sm>	Solonarv: dropouts between the scheduler and worker nodes ?
Nov 23 14:51:17 <Solonarv>	sounds about right
Nov 23 14:51:37 <crestfallen>	sorry hpc that was Tupla*nolla  https://wiki.haskell.org/Monomorphism_restriction
Nov 23 14:51:48 <hpc>	ah
Nov 23 14:51:56 <hpc>	i think that was part of a different conversation
Nov 23 14:52:03 *	iAmDecim_ has quit (Ping timeout: 252 seconds)
Nov 23 14:52:22 <crestfallen>	yeah I was asking about ghci vs ghc
Nov 23 14:52:23 <hpc>	or maybe i misread, reading scrollback is hard in this channel
Nov 23 14:52:30 <crestfallen>	word
Nov 23 14:52:32 <hyperisco>	also the power supply is really finnicky about what it gets
Nov 23 14:53:31 <hpc>	hyperisco: i can't find the switch for EU voltage
Nov 23 14:53:44 <crestfallen>	hpc but at that point I'm pretty burnt from guessing how to write it
Nov 23 14:54:40 <hyperisco>	yeah that's no good, else it'll get the wrong kind of chips
Nov 23 14:54:43 <hpc>	try vv = fmap (++ "!")
Nov 23 14:55:19 <hyperisco>	   ^^ unused variable
Nov 23 14:55:42 <hyperisco>	huh though I lined that up. *shrug*
Nov 23 14:55:44 <hpc>	fun fact, in the UK they call it an "intel crispset"
Nov 23 14:55:49 <hpc>	hyperisco: lol
Nov 23 14:55:59 <hpc>	can't line it up with my eentsy nick
Nov 23 14:56:18 *	doyougnu (~doyougnu@c-71-237-206-238.hsd1.or.comcast.net) has joined
Nov 23 14:56:29 *	carif has quit (Ping timeout: 268 seconds)
Nov 23 14:56:43 *	fen has quit (Ping timeout: 256 seconds)
Nov 23 14:57:02 <Lears>	MMR is basically interpreting your declarations less charitably for the sake of performance. ghci doesn't offer performance, so it wants to make the opposite tradeoff. Also, it can be enabled or disabled however you prefer in both ghci and source files.
Nov 23 14:57:43 *	Azel has quit (Ping timeout: 268 seconds)
Nov 23 14:58:26 *	merijn (~merijn@a212-238-239-156.adsl.xs4all.nl) has joined
Nov 23 14:58:31 *	Jetien__ (~Jetien@p2E505C82.dip0.t-ipconnect.de) has joined
Nov 23 14:58:49 <crestfallen>	hpc you mean in a file?
Nov 23 14:59:18 <Eduard_Munteanu>	I was recently writing some Go code and wondered if we had anything like select in Haskell. We can probably write one as a function, although we have orElse in STM as a nice alternative.
Nov 23 14:59:41 <hyperisco>	what select is that?
Nov 23 15:00:01 <Eduard_Munteanu>	hyperisco, C-like select, except you can use it on a bunch of channels
Nov 23 15:00:11 <hpc>	crestfallen: as your definition for vv
Nov 23 15:00:24 <Solonarv>	`select` isn't a C thing, it's a unix thing (IIUC))
Nov 23 15:00:28 <hyperisco>	I don't recall a select in C either
Nov 23 15:00:32 <Eduard_Munteanu>	Er, yeah.
Nov 23 15:00:45 <Eduard_Munteanu>	POSIX then.
Nov 23 15:00:46 <hpc>	i mean, http://hackage.haskell.org/package/select
Nov 23 15:00:48 <rain1>	select is a standard C function
Nov 23 15:00:59 <crestfallen>	that won't compile
Nov 23 15:01:24 *	oo_miguel has quit (Quit: WeeChat 1.6)
Nov 23 15:01:33 <hpc>	crestfallen: vv :: Maybe String -> Maybe String?
Nov 23 15:01:45 <Eduard_Munteanu>	Anyway, they made it fairly convenient.
Nov 23 15:02:11 *	nowhere_man (~pierre@37.164.128.225) has joined
Nov 23 15:02:15 <Solonarv>	you should be able to implement that as a function in haskell, too
Nov 23 15:02:22 <crestfallen>	yeah with the signature it does
Nov 23 15:02:24 *	iAmDecim_ (~iAmDecim@2600:1702:ad0:3b90:e9cb:fabc:c91:40d5) has joined
Nov 23 15:02:27 <Solonarv>	for most "channel" implementations
Nov 23 15:02:46 <crestfallen>	ok thanks one moment please
Nov 23 15:03:04 *	merijn has quit (Ping timeout: 252 seconds)
Nov 23 15:04:09 *	JosephFerano has quit (Ping timeout: 252 seconds)
Nov 23 15:04:45 *	eric88 (~eric@c-67-166-159-166.hsd1.ca.comcast.net) has joined
Nov 23 15:06:40 <Eduard_Munteanu>	I figure something along the lines of   data Select = forall a. Read (MVar a) (a -> IO ()) | forall a. Write (MVar a) a
Nov 23 15:06:58 <Eduard_Munteanu>	And have   select :: [Select] -> IO ()
Nov 23 15:08:15 <koz_>	Eduard_Munteanu: Any reason not to have select' :: Select -> IO () and then define select = traverse_ select' ?
Nov 23 15:09:16 <Eduard_Munteanu>	koz_, I guess you kinda need to call a real select on the underlying MVars, although what you said might work with STM's orElse.
Nov 23 15:09:28 <Eduard_Munteanu>	*on all the underlying MVars
Nov 23 15:11:18 *	eric88 has quit (Ping timeout: 245 seconds)
Nov 23 15:11:18 *	carif (~mcarifio@cpe-67-246-228-200.rochester.res.rr.com) has joined
Nov 23 15:11:38 >hpc<	utterly frustrated I can't see what you want me to do. I'm trying to get (<$>) (fmap (++ " !")) work over [(Just "Tater"), (Just "Tot")] 
Nov 23 15:12:32 <koz_>	Also, select' should probably be doSelect or runSelect or something.
Nov 23 15:12:41 *	perique (~peri@2601:646:8a80:3ca9:b138:20f9:917b:dc0b) has joined
Nov 23 15:13:11 *	albertus1 has quit (Quit: Leaving.)
Nov 23 15:14:50 *	eric88 (~eric@c-67-166-159-166.hsd1.ca.comcast.net) has joined
Nov 23 15:15:09 *	oisdk (~textual@95.211.187.229.adsl.inet-telecom.org) has joined
Nov 23 15:16:27 *	varigatedvanilla has quit (Ping timeout: 240 seconds)
Nov 23 15:17:13 *	coot_ has quit (Quit: coot_)
Nov 23 15:17:19 *	jedws has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Nov 23 15:17:31 *	yyy (~yyy@unaffiliated/tinnotl) has joined
Nov 23 15:18:18 *	jedws (~jedws@60.227.196.122) has joined
Nov 23 15:19:17 *	fmixing has quit (Remote host closed the connection)
Nov 23 15:19:25 *	conal has quit (Quit: Computer has gone to sleep.)
Nov 23 15:19:55 *	fmixing (~fmixing@5.18.98.152) has joined
Nov 23 15:20:34 <koz_>	Eduard_Munteanu: Maybe I don't understand exactly what you're after, but wouldn't this work? https://gist.github.com/kozross/28cac7bc29a34cefef00ae237bb19b72
Nov 23 15:21:18 *	wonko7 has quit (Ping timeout: 245 seconds)
Nov 23 15:21:41 *	fizbin (~fizbin@c-98-221-75-24.hsd1.nj.comcast.net) has joined
Nov 23 15:21:42 *	Gigabitten has quit (Ping timeout: 250 seconds)
Nov 23 15:21:43 *	__monty__ has quit (Quit: leaving)
Nov 23 15:22:01 *	carif has quit (Ping timeout: 244 seconds)
Nov 23 15:22:30 *	nowhere_man has quit (Ping timeout: 272 seconds)
Nov 23 15:22:34 *	buttons840 has quit (Ping timeout: 250 seconds)
Nov 23 15:22:41 *	biglambda has quit (Quit: biglambda)
Nov 23 15:22:47 *	Gigabitten (~Somn@098-127-041-104.res.spectrum.com) has joined
Nov 23 15:24:04 *	fmixing has quit (Ping timeout: 246 seconds)
Nov 23 15:25:56 *	varigatedvanilla (~mpascale@23.226.131.230) has joined
Nov 23 15:26:11 *	amateur_hour has quit (Ping timeout: 256 seconds)
Nov 23 15:26:31 *	JZ (421e0912@gateway/web/freenode/ip.66.30.9.18) has joined
Nov 23 15:26:32 *	glguy gives voice to JZ
Nov 23 15:28:10 *	biglambda (~biglambda@static-71-183-108-208.nycmny.fios.verizon.net) has joined
Nov 23 15:30:33 *	gabe4k has quit (Ping timeout: 252 seconds)
Nov 23 15:30:59 *	gabe4k (~gabe4k@225.sub-174-216-17.myvzw.com) has joined
Nov 23 15:31:10 <Eduard_Munteanu>	koz_, it won't work with multiple MVars if the first one blocks
Nov 23 15:31:48 *	reallymemorable (~reallymem@c-174-62-241-97.hsd1.ma.comcast.net) has joined
Nov 23 15:32:14 <Eduard_Munteanu>	Unless you have some way of chaining blocking actions in a special way, like...
Nov 23 15:32:15 *	sbdchd has quit (Ping timeout: 268 seconds)
Nov 23 15:32:17 <Eduard_Munteanu>	:t orElse
Nov 23 15:32:18 <lambdabot>	error: Variable not in scope: orElse
Nov 23 15:32:23 <Eduard_Munteanu>	@hoogle orElse
Nov 23 15:32:24 <lambdabot>	GHC.Conc orElse :: STM a -> STM a -> STM a
Nov 23 15:32:24 <lambdabot>	GHC.Conc.Sync orElse :: STM a -> STM a -> STM a
Nov 23 15:32:24 <lambdabot>	Control.Monad.STM orElse :: STM a -> STM a -> STM a
Nov 23 15:32:33 <reallymemorable>	I have been programming a bit with Python and Postgres and am now starting Haskell.  I have simultaneously had an interest to build a procedurally generated sound project.  Are there good libraries for this in Haskell?
Nov 23 15:32:40 *	yyy has quit (Quit: Leaving)
Nov 23 15:32:53 <reallymemorable>	Or are there examples of people building interesting things along these lines?
Nov 23 15:33:48 *	eric88 has quit (Ping timeout: 245 seconds)
Nov 23 15:35:27 *	cfsloth (~cfsloth3@89-181-200-17.net.novis.pt) has joined
Nov 23 15:36:08 *	_noblegas has quit (Quit: Connection closed for inactivity)
Nov 23 15:36:34 <hpc>	reallymemorable: i was just messing with that a few months ago
Nov 23 15:36:34 *	carif (~mcarifio@cpe-67-246-228-200.rochester.res.rr.com) has joined
Nov 23 15:36:35 <hpc>	uh
Nov 23 15:36:59 <hpc>	i used synthesizer-core and synthesizer-alsa
Nov 23 15:37:19 <hpc>	and followed the included example code
Nov 23 15:37:36 <reallymemorable>	I am reading about http://www.euterpea.com/ and Tidal
Nov 23 15:38:15 <reallymemorable>	I will check those out also thank you
Nov 23 15:38:50 <hpc>	if you don't mind using an external tool, i forget the name of the library but it interfaces with soundcollider
Nov 23 15:39:01 <hpc>	er, supercollider
Nov 23 15:39:22 <reallymemorable>	hmmm ok will investigate thanks
Nov 23 15:39:27 *	dcoutts (~duncan@63.14.75.194.dyn.plus.net) has joined
Nov 23 15:39:41 *	jedws has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Nov 23 15:40:11 *	perique has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Nov 23 15:41:36 <crestfallen>	friend in pm :  https://paste.ee/p/kUaOj
Nov 23 15:41:44 *	conal (~conal@209.209.238.184) has joined
Nov 23 15:43:07 *	pacak has quit (Ping timeout: 240 seconds)
Nov 23 15:45:16 *	joeyh has quit (Ping timeout: 244 seconds)
Nov 23 15:46:35 *	nowhere_man (~pierre@2a01:e35:2eb3:4350:e450:14c0:75f:802d) has joined
Nov 23 15:46:42 <crestfallen>	the error is included ^
Nov 23 15:46:49 *	olligobber (olligobber@gateway/vpn/privateinternetaccess/olligobber) has joined
Nov 23 15:47:24 *	hyperisco has quit (Quit: Curry, you fools!)
Nov 23 15:47:50 *	carif has quit (Ping timeout: 272 seconds)
Nov 23 15:48:41 *	hackage fix-imports 2.1.0 - Program to manage the imports of a haskell module  http://hackage.haskell.org/package/fix-imports-2.1.0 (EvanLaforge)
Nov 23 15:51:59 *	kadoban (~mud@unaffiliated/kadoban) has joined
Nov 23 15:54:31 *	reallymemorable has quit (Ping timeout: 246 seconds)
Nov 23 15:55:30 *	Jetien__ has quit (Ping timeout: 250 seconds)
Nov 23 15:55:47 <crestfallen>	I'm getting this Ambiguous type variable error when I comment out the type signature for 'bb'  : https://paste.ee/p/kUaOj
Nov 23 15:57:33 <lyxia>	Congratulations, you hit the monomorphism restriction!
Nov 23 15:58:27 <lyxia>	since it's just a variable to the left of '=', the inferred type tries to be monomorphic
Nov 23 15:58:55 <lyxia>	but there is no way to infer what functors you want to use fmap and (<$>) with
Nov 23 15:59:54 *	rprije (~rprije@ppp118-209-84-56.bras1.mel11.internode.on.net) has joined
Nov 23 16:00:45 *	joeyh (joeyh@kitenet.net) has joined
Nov 23 16:01:21 *	adino (~textual@c-71-202-226-87.hsd1.ca.comcast.net) has joined
Nov 23 16:02:31 <crestfallen>	lyxia, thanks what do you mean by "its just a variable to the left of the '='  ?
Nov 23 16:02:38 *	carif (~mcarifio@cpe-67-246-228-200.rochester.res.rr.com) has joined
Nov 23 16:03:59 *	kapil____ (uid36151@gateway/web/irccloud.com/x-mproguktirqmovay) has joined
Nov 23 16:04:37 <geekosaur>	it has no parameters
Nov 23 16:04:57 *	JZ` (~user@2601:184:4880:8e72:7d05:52eb:957e:3f93) has joined
Nov 23 16:05:05 <stilgart>	crestfallen: if you start with "bb l =", then you will be fine
Nov 23 16:05:28 <crestfallen>	thanks one moment
Nov 23 16:05:31 <geekosaur>	haskell assumes you intended a memoized value binding, and memoizatio only makes sense with a concreet type, so it monomorphizes
Nov 23 16:05:33 <geekosaur>	you were pointed at thsi earlier. read it
Nov 23 16:05:37 <geekosaur>	?where mmr
Nov 23 16:05:37 <lambdabot>	https://wiki.haskell.org/Monomorphism_restriction
Nov 23 16:06:00 *	booglewoogle has quit (Remote host closed the connection)
Nov 23 16:06:07 *	JZ has quit (Quit: Page closed)
Nov 23 16:06:47 *	lumm has quit (Quit: lumm)
Nov 23 16:06:53 <stilgart>	crestfallen: you should go read this wiki page (if you did not already read it a couple of hours ago)
Nov 23 16:07:21 *	glguy removes voice from ScriptRunner
Nov 23 16:09:23 *	gerwwtnf (d9c5044a@gateway/web/freenode/ip.217.197.4.74) has joined
Nov 23 16:09:23 *	glguy gives voice to gerwwtnf
Nov 23 16:10:04 *	acidjnk has quit (Ping timeout: 244 seconds)
Nov 23 16:10:06 <crestfallen>	thanks ALL I was being helped in the chat so had time to merely glance at it. really appreciate it, adding a parameter shouldn't be too hard to grasp
Nov 23 16:10:58 *	JZ` has quit (Remote host closed the connection)
Nov 23 16:12:17 *	Somniad (~Somn@098-127-041-104.res.spectrum.com) has joined
Nov 23 16:12:23 *	machinedgod (~machinedg@198-48-220-190.cpe.pppoe.ca) has joined
Nov 23 16:12:25 *	Gigabitten has quit (Read error: Connection reset by peer)
Nov 23 16:13:01 *	JZ (~user@2601:184:4880:8e72:7d05:52eb:957e:3f93) has joined
Nov 23 16:13:16 *	Sheilong (uid293653@gateway/web/irccloud.com/x-cdbbtoeukmcaljkh) has joined
Nov 23 16:13:49 *	sooheon (~sooheon@14.52.19.140) has joined
Nov 23 16:14:26 *	gerwwtnf has quit (Quit: Page closed)
Nov 23 16:14:57 *	blankhart (~blankhart@2604:6000:1520:60c9:80ee:5baf:5f3:cb68) has joined
Nov 23 16:15:26 *	carif has quit (Ping timeout: 250 seconds)
Nov 23 16:15:52 *	chaosmasttter1 has quit (Ping timeout: 250 seconds)
Nov 23 16:17:21 *	buttons840 (~buttons@174-23-209-122.slkc.qwest.net) has joined
Nov 23 16:17:58 *	reactormonk has quit (Ping timeout: 245 seconds)
Nov 23 16:18:06 *	JZ has quit (Remote host closed the connection)
Nov 23 16:18:23 *	merijn (~merijn@a212-238-239-156.adsl.xs4all.nl) has joined
Nov 23 16:18:30 *	rprije has quit (Ping timeout: 268 seconds)
Nov 23 16:19:02 *	cmsmcq (~cmsmcq@65.19.20.141) has joined
Nov 23 16:19:35 *	refold has quit (Quit: leaving)
Nov 23 16:19:38 *	Solonarv has quit (Ping timeout: 245 seconds)
Nov 23 16:21:41 *	andyhuzhill (~andyhuzhi@14.23.45.178) has joined
Nov 23 16:22:15 *	jinxuanzhu (~user@2601:184:4880:8e72:7d05:52eb:957e:3f93) has joined
Nov 23 16:22:20 *	davr0s has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
Nov 23 16:22:29 *	simukis has quit (Quit: simukis)
Nov 23 16:22:52 *	merijn has quit (Ping timeout: 246 seconds)
Nov 23 16:22:59 *	jinxuanzhu has quit (Remote host closed the connection)
Nov 23 16:27:50 *	JZ (~user@c-66-30-9-18.hsd1.ma.comcast.net) has joined
Nov 23 16:28:01 <zachk>	the haskell type system is like a shining, guiding light in a dark cave
Nov 23 16:28:01 *	JZ has quit (Client Quit)
Nov 23 16:28:26 *	acarrico has quit (Ping timeout: 250 seconds)
Nov 23 16:29:08 Python interface unloaded
Nov 23 16:29:08 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri Nov 23 16:29:08 2018

**** BEGIN LOGGING AT Sat Jan 12 17:10:34 2019

Jan 12 17:10:34 *	Now talking on #haskell
Jan 12 17:10:34 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Jan 12 17:10:34 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Jan 12 17:10:34 *	Channel #haskell url: http://www.haskell.org/
Jan 12 17:10:37 <fen>	only, not sure how to manage higher dimensional indexing, like with tuples of irrational numbers, because then its not clear how to order them. 
Jan 12 17:10:40 *	DoYouKnow has quit (Ping timeout: 272 seconds)
Jan 12 17:11:03 <crestfallen>	hi I'm using import Data.Set     also...
Jan 12 17:11:20 <mniip>	wtf does this have with R or irrational numbers
Jan 12 17:11:23 <crestfallen>	import qualified Data.Set as Set
Jan 12 17:11:25 <Solonarv>	fen: wdym by "indexing into L"?
Jan 12 17:11:40 <Solonarv>	crestfallen: hi, what's your question?
Jan 12 17:11:47 <fen>	mniip: to distinguish the functions, which are presumably dense
Jan 12 17:11:48 <crestfallen>	this second import is not recognized first of all...
Jan 12 17:11:54 *	carif (~mcarifio@cpe-67-246-228-200.rochester.res.rr.com) has joined
Jan 12 17:12:14 <crestfallen>	with the first import I cannot use basic functions such as union
Jan 12 17:12:20 <crestfallen>	in ghci
Jan 12 17:12:35 *	butterthebuddha (~butterthe@35.1.237.8) has joined
Jan 12 17:12:38 <mniip>	dense?
Jan 12 17:12:39 <mniip>	in what
Jan 12 17:12:59 <Solonarv>	crestfallen: I'd recommend pasting the relevant part of your GHCi session somewhere and posting a link to that
Jan 12 17:13:07 <fen>	well just that they seem difficult to order, or index by something ordered 
Jan 12 17:13:07 <crestfallen>	thanks Solonarv 
Jan 12 17:13:18 <mniip>	what
Jan 12 17:13:32 *	Big_G has quit (Ping timeout: 268 seconds)
Jan 12 17:13:33 *	butterthebuddha has quit (Client Quit)
Jan 12 17:13:46 *	xcmw (~textual@2605:a000:132b:7fa:7136:f923:abf2:5907) has joined
Jan 12 17:13:46 *	esp32_prog (~esp32_pro@178.18.54.206) has joined
Jan 12 17:13:55 <orion[sf]>	Hello. I would like to create an interface which keeps track of state, but prevents the user from accessing it directly. What's the standard way to approach this?
Jan 12 17:14:03 <fen>	well the problem is that this L = L -> L needs to be able to tell which L it is passed, which seems like they should be indexed
Jan 12 17:14:15 <mniip>	"which L it is passed"?
Jan 12 17:14:36 <Solonarv>	orion[sf]: what kind of interface? a graphical interface? a CLI? something else?
Jan 12 17:15:10 *	Deide has quit (Quit: Seeee yaaaa)
Jan 12 17:15:18 <fen>	well in haskell, it wouldnt be possible to tell which function was provided, so it would not be possible to lookup which function to return 
Jan 12 17:15:20 *	philippD has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
Jan 12 17:15:37 <Solonarv>	fen: the premise is true, but the conclusion is nonsense
Jan 12 17:15:43 <fen>	huh?
Jan 12 17:15:59 <fen>	you mean its still possible?
Jan 12 17:16:17 *	Nate_ (ae303b1c@gateway/web/freenode/ip.174.48.59.28) has joined
Jan 12 17:16:38 <mniip>	we talked about this, please refrain from using words when you're not completely sure what they mean
Jan 12 17:16:39 <fen>	or is the concept of "lookup" not the correct way to describe a function that cannot be indexed
Jan 12 17:16:42 *	axios (derelict@gateway/shell/blinkenshell.org/x-oengolqpnwjukvsj) has joined
Jan 12 17:16:58 *	Kiruwa (kiruwa@gateway/shell/blinkenshell.org/x-tumhsavnvltybkso) has joined
Jan 12 17:17:06 <Solonarv>	Correct, the concept of "lookup" is also not very well-defined - and neither is "indexing"
Jan 12 17:17:22 <mniip>	are you thinking of countable sets?
Jan 12 17:17:32 <fen>	something to do with the inhabitants of a type being uncountable?
Jan 12 17:18:20 <Solonarv>	the lambda calculus has infinitely many terms, but it's a *countable* infinity
Jan 12 17:18:29 *	orion[sf] has quit (Ping timeout: 256 seconds)
Jan 12 17:18:31 <fen>	not quite sure about how that fits with indexing by the real line, as thats uncountable, but totally ordered 
Jan 12 17:18:37 *	esp32_prog has quit (Ping timeout: 258 seconds)
Jan 12 17:18:39 <mniip>	on the other hand L = L -> L does not have a cardinality
Jan 12 17:18:53 <mniip>	(because it is formally not a set)
Jan 12 17:19:07 <fen>	this seems to be the problem
Jan 12 17:19:22 *	butterthebuddha (~butterthe@35.1.237.8) has joined
Jan 12 17:19:22 *	rprije has quit (Read error: Connection reset by peer)
Jan 12 17:19:26 *	m_ (~m_ezra@185.217.69.98) has joined
Jan 12 17:19:26 <crestfallen>	Solonarv I'm just following the page on haskell-containers.readthedocs.io    https://paste.ee/p/iywRw
Jan 12 17:19:32 *	evanm (43577a4b@gateway/web/freenode/ip.67.87.122.75) has joined
Jan 12 17:19:34 <mniip>	if you're establishing a total order on a set, I wouldn't call that "indexing"
Jan 12 17:19:43 <mniip>	you've uhh, defined a total order on a set
Jan 12 17:19:45 *	rprije (~rprije@203-217-77-26.dyn.iinet.net.au) has joined
Jan 12 17:19:51 <evanm>	#emacs-haskell
Jan 12 17:20:12 <fen>	it just means the index can be used to identify the function
Jan 12 17:20:22 *	m_ has quit (Client Quit)
Jan 12 17:20:31 *	orion[sf] (c61bbd15@gateway/web/freenode/ip.198.27.189.21) has joined
Jan 12 17:20:39 <crestfallen>	btw initially I was reading the zvon page but evidently missing something..
Jan 12 17:20:48 <fen>	and then the function itself is just a "lookup" i.e. a square matrix associating the input index to the output index
Jan 12 17:20:59 *	marco_t (~marco_t@181.231.118.54) has joined
Jan 12 17:21:00 <Solonarv>	crestfallen: why would you think "blahblah" is a set literal?
Jan 12 17:21:37 <mniip>	what
Jan 12 17:21:37 <Solonarv>	similarly, [1, 2, 3] isn't a set literal normally
Jan 12 17:21:38 <crestfallen>	based on zvon example. but [1,2,3] [2]   also is invalid
Jan 12 17:21:44 <crestfallen>	o
Jan 12 17:21:47 <crestfallen>	oh
Jan 12 17:22:01 *	binq_ has quit (Remote host closed the connection)
Jan 12 17:22:16 <Solonarv>	(Set.fromList [1, 2, 3]) is a "set literal"
Jan 12 17:22:25 *	m_ (~m_ezra@185.217.69.98) has joined
Jan 12 17:22:39 *	m_ has quit (Client Quit)
Jan 12 17:22:46 <Solonarv>	if you enable the OverloadedLists extension, then [1, 2, 3] can be treated as a set literal too, but you clearly didn't enable it ;)
Jan 12 17:23:13 <mniip>	square matrix?
Jan 12 17:23:14 <mniip>	wtf
Jan 12 17:23:36 <crestfallen>	could you write a few examples on that paste.ee  Solonarv if you have time?
Jan 12 17:24:19 *	tzh (~xax@2601:448:c500:cf3::68b3) has joined
Jan 12 17:24:21 *	bbrodriguez (~Bender_Be@189.217.97.247) has joined
Jan 12 17:24:22 <Solonarv>	crestfallen: frankly, I'd just end up copy-pasting from the docs, which you linked and therefore clearly know about already
Jan 12 17:24:34 *	binq (~binq@99.156.186.141) has joined
Jan 12 17:24:43 <Solonarv>	if you say what exactly is confusing you, I can try to alleviate that
Jan 12 17:25:03 *	Nate_ has quit (Quit: Page closed)
Jan 12 17:25:07 <fen>	mniip: whats up?
Jan 12 17:25:25 <mniip>	you're not making any sense as always
Jan 12 17:25:37 *	zachk has quit (Quit: Leaving)
Jan 12 17:25:54 *	marco_t has quit (Ping timeout: 258 seconds)
Jan 12 17:26:59 <fen>	basically this idea of a function not being identifiable, re: "<Solonarv> mniip: can you inspect values of 'L' in any useful way?" seems to be something to do with a bijection between functions and their indexing set, and a representation of the isomorphism as an isomorphism on the index
Jan 12 17:27:29 <Solonarv>	whether functions are identifiable depends on the formalism you're working in
Jan 12 17:27:31 <crestfallen>	trying. this script is not usable in ghci though correct Solonarv ?
Jan 12 17:27:40 <crestfallen>	{-# LANGUAGE ExtensionName #-}
Jan 12 17:27:41 <fen>	(L -> L) -> Ix + Ix -> (L -> L) + (Ix -> Ix) = L -> L
Jan 12 17:27:46 <mniip>	no
Jan 12 17:27:47 <Solonarv>	examples: in set theory, they are; in the lambda calculus, they are not
Jan 12 17:28:02 <Solonarv>	crestfallen: in ghci, you type :set -XLanguageExtension
Jan 12 17:28:07 *	kish` has quit (Ping timeout: 240 seconds)
Jan 12 17:28:13 <crestfallen>	got it thanks
Jan 12 17:28:14 <mniip>	Solonarv meant whether you can tell two elements of L apart in haskell
Jan 12 17:28:28 <mniip>	that has nothing to do with any isomorphisms of L with anything
Jan 12 17:28:31 *	butterthebuddha has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jan 12 17:28:53 <fen>	thought that was because you would need to be able to tell which L was provided to L -> L to tell which L should be returned
Jan 12 17:28:58 <orion[sf]>	Solonarv: Consider this code: https://gist.github.com/centromere/e09d76aa0474a2716dbfb6ff4d9e634b
Jan 12 17:29:00 <Solonarv>	...and I don't think you can, unless you're okay with the result being wrapped in L again.
Jan 12 17:29:03 *	ski idly wonders what "functions being identifiable" even means
Jan 12 17:29:16 <mniip>	the short answer here is that there is no ADT in sight and thus you can never use a pattern match to branch between False and True
Jan 12 17:29:24 <fen>	ski: thats what the indexing and lookup concepts were trying to cover
Jan 12 17:29:31 <mniip>	they aren't concepts
Jan 12 17:29:33 <mniip>	you made them up
Jan 12 17:29:35 <Solonarv>	orion[sf]: looks like a great use case for the 'State' monad
Jan 12 17:29:57 *	ski doesn't know what, if anything, was meant by "indexing" and "lookup", either
Jan 12 17:30:32 <fen>	well functions could be distinguished if they had a total order...
Jan 12 17:30:32 <orion[sf]>	Solonarv: Line 4 represents a catastrophic problem because the state is reused. I would like to prevent the user from ever seeing the state.
Jan 12 17:30:48 <mniip>	unsurprising, but so what?
Jan 12 17:30:58 *	savolla has quit (Quit: WeeChat 2.3)
Jan 12 17:31:01 <fen>	the index is that which parametrises this order
Jan 12 17:31:01 <Solonarv>	orion[sf]: State doesn't make it impossible to see the state, but it does make it considerably harder to shoot yourself in the foot like that
Jan 12 17:31:11 <orion[sf]>	Solonarv: Okay.
Jan 12 17:31:16 *	wroathe has quit (Ping timeout: 258 seconds)
Jan 12 17:31:26 *	olligobber (olligobber@gateway/vpn/privateinternetaccess/olligobber) has joined
Jan 12 17:31:48 *	samurdha (~samurdha@dyn-209-2-216-239.dyn.columbia.edu) has joined
Jan 12 17:31:50 <mniip>	the functions could also be distinguished if they were isomorphic to some language in a finite alphabet
Jan 12 17:31:52 <mniip>	but so what
Jan 12 17:32:24 *	xcmw has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jan 12 17:32:38 <monochrom>	orion[sf]: I'm thinking you need to define your own monad that, under the hood is implemented like the State monad, but you choose what operations to provide to the user at your interface boundary.
Jan 12 17:32:42 *	codesoup has quit (Remote host closed the connection)
Jan 12 17:32:53 <Solonarv>	yep, that's also a thing you can do
Jan 12 17:33:04 <Solonarv>	(you can even re-use State to make it easier!)
Jan 12 17:33:07 <mniip>	orion[sf], monochrom why not use a free monad
Jan 12 17:33:37 <fen>	well thats the concept of indexing anyway... probably this lack of isomorphic alphabet or index is the problem when trying to create these L terms
Jan 12 17:33:49 <mniip>	no
Jan 12 17:34:29 <Solonarv>	you can *create* L terms just fine, you just can't do anything with them other than build more L terms
Jan 12 17:34:38 <Solonarv>	(barring unsafeCoerce and similar shenanigans)
Jan 12 17:34:44 <orion[sf]>	mniip: I'd like to give the user the option of composing other Monads too.
Jan 12 17:34:51 <mniip>	free monad transformer
Jan 12 17:35:13 <mniip>	Solonarv, sounds like existential quantification
Jan 12 17:35:25 <mniip>	I wonder if (mu L. L -> L) ~ 1
Jan 12 17:36:02 <Solonarv>	mniip: huh, I wonder if L is iso to 'newtype LEx = forall a. LEx (a -> a)'
Jan 12 17:36:18 <monochrom>	No, "L equiv L->L" is untyped lambda calculus.
Jan 12 17:36:21 <fen>	a good example is vectors V with L2 norm. they are self dual, so conjugation :: V -> (V -> V)
Jan 12 17:36:21 *	samurdha has quit (Ping timeout: 268 seconds)
Jan 12 17:36:24 <Solonarv>	orion[sf]: a monad transformer, then - you can re-use StateT in your implementation
Jan 12 17:36:47 <monochrom>	Or rather, "L order-isomorphic-to L->L"
Jan 12 17:37:35 <mniip>	Solonarv, again, FreeT
Jan 12 17:37:42 <mniip>	it's pretty exciting
Jan 12 17:37:53 <fen>	it defines an inner product space
Jan 12 17:37:54 <orion[sf]>	mniip: What about a free applicative?
Jan 12 17:37:55 <monochrom>	Ah I have to think again, what I said is true in math but there is a difference with Haskell.
Jan 12 17:38:12 *	nan` has quit (Ping timeout: 268 seconds)
Jan 12 17:38:28 <mniip>	orion[sf], are you using "applicative transformers"?
Jan 12 17:38:32 <mniip>	if so for what
Jan 12 17:38:36 <fen>	basically its partial application of mappend in a monoidal category to the objects
Jan 12 17:39:00 <Solonarv>	(you never need applicative transformers, because applicatives compose just fine)
Jan 12 17:39:23 <mniip>	fen, elaborate
Jan 12 17:39:36 <orion[sf]>	mniip: https://github.com/centromere/cacophony/blob/master/src/Crypto/Noise/Internal/Handshake/Pattern.hs
Jan 12 17:39:39 <fen>	apparently this defines a naive lambda calculus set theory 
Jan 12 17:40:40 <fen>	which is made regular in haskell because of some properties of (->) not containing all possible functions
Jan 12 17:41:17 <mniip>	fen, I see reminiscence of my own words but that isn't at all what I said
Jan 12 17:41:36 *	carif has quit (Ping timeout: 244 seconds)
Jan 12 17:41:48 <monochrom>	:)
Jan 12 17:41:54 <mniip>	"naive lambda calculus" isn't a thing, "naive set theory" is
Jan 12 17:42:06 <crestfallen>	Solonarv, thanks got that to work. Still, why would a function like union require an extension, when i.e. ' union [1,2,3] [3] ' is such a basic operation with a dataType (Int) that is according to the documentation: " Set relies on the element type having instances of the Eq and Ord typeclass for its internal representation. "
Jan 12 17:42:12 <mniip>	"regular" - is that referring to the axiom of regularity?
Jan 12 17:42:16 <fen>	yes
Jan 12 17:42:36 <Solonarv>	crestfallen: you've got it backwards - 'union' doesn't require an extension
Jan 12 17:42:44 <mniip>	that's a perk of ZF that in particular eliminates russel's paradox and the like
Jan 12 17:42:48 <Solonarv>	writing [1, 2, 3] for a Set literal is what you need the extension for
Jan 12 17:42:50 <mniip>	nothing to do with haskell's type system
Jan 12 17:42:57 *	jao (~jao@pdpc/supporter/professional/jao) has joined
Jan 12 17:42:57 *	codesoup (~codesoup@2607:fea8:e21f:fea0:7081:d3a7:f1fd:6ec8) has joined
Jan 12 17:43:06 <mniip>	all haskell types are countable
Jan 12 17:43:08 <fen>	what was that about (->) then ?
Jan 12 17:43:15 <mniip>	and (->) denotes the type of *computable* functions
Jan 12 17:43:20 <mniip>	where there is a countable number of
Jan 12 17:43:43 <monochrom>	I wouldn't even talk about countability of a type.
Jan 12 17:44:00 <fen>	so then the countability, or indexing (fixing a counting) solves this issue to do with regularity?
Jan 12 17:44:00 <crestfallen>	Solonarv, ok, odd, so the list container is not by default a Set object
Jan 12 17:44:12 <mniip>	monochrom, you can model haskell with sets
Jan 12 17:44:13 <monochrom>	Like, next thing you know, let's discuss green kinds.
Jan 12 17:44:17 <mniip>	sets can have cardinality
Jan 12 17:44:21 <Solonarv>	crestfallen: of course not, [] and Set are different things
Jan 12 17:44:27 <Solonarv>	how's that odd?
Jan 12 17:44:30 *	o1lo01ol1o (~o1lo01ol1@cpe-74-72-45-166.nyc.res.rr.com) has joined
Jan 12 17:44:43 <mniip>	fen, no!
Jan 12 17:44:45 <fen>	mniip: is that where infinity categories enter pitcure?
Jan 12 17:44:51 <mniip>	jeez
Jan 12 17:45:15 <fen>	sets containing sets of lower cardinality
Jan 12 17:45:17 <crestfallen>	its fine, I'm glad to make the distinction.
Jan 12 17:45:22 <crestfallen>	thanks Solonarv 
Jan 12 17:46:02 <crestfallen>	I've been studying math out of a book so I was blurry
Jan 12 17:47:15 <fen>	i wish to define functions based on how they change other functions
Jan 12 17:47:36 <fen>	that this action be their defining property
Jan 12 17:47:48 <monochrom>	Math usually doesn't talk about lists at all.
Jan 12 17:47:59 <mniip>	monochrom, free monoid?
Jan 12 17:48:02 <fen>	but then it seems they need another piece of information, which could be to do with how they are indexed, or identified 
Jan 12 17:48:18 <monochrom>	mniip, usually?
Jan 12 17:48:28 <hpc>	fen: writing functions in that style doesn't require anything complicated at all - look up semantic editor combinators
Jan 12 17:48:39 <mniip>	well math doesn't talk about anything usually
Jan 12 17:48:43 <hpc>	the most complicated thing in that style of programming is (.)
Jan 12 17:48:50 <Solonarv>	mniip: ouch ;)
Jan 12 17:48:53 <mniip>	it's too diverse for any single topic to pop up in all of the fields
Jan 12 17:49:03 <ski>	(hm, doesn't Cantor work on the type `Nat -> Bool' ?)
Jan 12 17:49:04 <monochrom>	It talks about sets and functions most of the time.
Jan 12 17:49:08 <mniip>	Solonarv, pay attention to the quantifiers
Jan 12 17:49:09 *	marco_t (~marco_t@181.231.118.54) has joined
Jan 12 17:49:19 *	binq has quit (Remote host closed the connection)
Jan 12 17:49:34 <Solonarv>	ski: IIRC that is indeed what Cantor sequences are
Jan 12 17:49:41 <fen>	hpc: it seems like quite a jump from describing functions over vectors to logic 
Jan 12 17:50:05 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Jan 12 17:50:07 *	ski was merely trying to sensibly interpret "all haskell types are countable"
Jan 12 17:50:16 <hpc>	i have no idea how any of that relates to what i said
Jan 12 17:50:18 <monochrom>	I mean you could easily go to a math library and count books and count how many use natural numbers, how many use sets, how many use lists, how many use free monoids...
Jan 12 17:50:55 <monochrom>	You don't have to polarize everything by oversimplifying everything to booleans.  There is such a thing as statistics and percentage.
Jan 12 17:51:12 *	atondwal has quit (Ping timeout: 258 seconds)
Jan 12 17:51:53 <mniip>	ski, well the set of elements of a type is the quotient set of all expressions of that type over the alpha/beta/eta/... equivalence relations
Jan 12 17:51:55 <monochrom>	Why does everything booleanize everything to create polarization?  Is this a new kind of boolean blindness?
Jan 12 17:52:05 <mniip>	which is necessarily countable because the set of expressions is countable
Jan 12 17:53:39 <mniip>	and once you have elements of types that you can't write down - that's when you know you've left haskell and entered mathematics
Jan 12 17:53:44 <mniip>	/s
Jan 12 17:53:49 <hpc>	monochrom: they must be using the law of the excluded middle
Jan 12 17:53:56 <hpc>	which is a very unconstructive way of thinking if you ask me :P
Jan 12 17:54:00 <crestfallen>	Solonarv,   wondering also what "as" keyword is and why ghci doesn't accept this command:     ' λ > import qualified Data.Set (Set) as Set  '
Jan 12 17:54:01 *	orion[sf] (c61bbd15@gateway/web/freenode/ip.198.27.189.21) has left
Jan 12 17:54:28 <Solonarv>	crestfallen: the 'as' keyword is only used in import statements, IIRC
Jan 12 17:54:39 *	wroathe has quit (Ping timeout: 258 seconds)
Jan 12 17:54:41 <hpc>	the syntax is import qualified Data.Set as Set (Set)
Jan 12 17:54:45 <geekosaur>	it has to be in the proper order.
Jan 12 17:54:51 <hpc>	"as" names the module you're importing
Jan 12 17:55:02 *	notzmv has quit (Ping timeout: 244 seconds)
Jan 12 17:55:04 <ski>	mniip : assuming you only consider values that can be "defined" by expressions
Jan 12 17:55:04 <hpc>	@let import qualified Data.Set as OogaBooga
Jan 12 17:55:06 <lambdabot>	 Defined.
Jan 12 17:55:14 <hpc>	:k OogaBooga.Set
Jan 12 17:55:15 <lambdabot>	* -> *
Jan 12 17:55:19 <geekosaur>	and "as" isn't rewally a keyword which is why it is only recognozed in the right place in the importy
Jan 12 17:55:24 <mniip>	ski, so as I said
Jan 12 17:55:29 <ski>	mniip : also, doesn't quotients of countable being countable rely on excluded middle ?
Jan 12 17:55:33 <mniip>	if you can't write them down
Jan 12 17:55:39 <Solonarv>	@let import qualified Data.Set as Useless (Set)
Jan 12 17:55:40 <lambdabot>	 Defined.
Jan 12 17:55:48 <Solonarv>	:t Useless.fromList
Jan 12 17:55:50 <lambdabot>	error:
Jan 12 17:55:50 <lambdabot>	    Not in scope: ‘Useless.fromList’
Jan 12 17:55:50 <lambdabot>	    No module named ‘Useless’ is imported.
Jan 12 17:56:06 <Solonarv>	:k Useless.Set
Jan 12 17:56:07 <lambdabot>	* -> *
Jan 12 17:56:21 <Solonarv>	so, while you can write those imports, they're not particularly useful ;)
Jan 12 17:56:35 *	carif (~mcarifio@cpe-67-246-228-200.rochester.res.rr.com) has joined
Jan 12 17:56:40 *	Zoddo (Zoddo@bfnt/member/zoddo) has joined
Jan 12 17:56:54 <monochrom>	It is still best to put your code in a file and use :load
Jan 12 17:56:57 *	mulk has quit (Ping timeout: 258 seconds)
Jan 12 17:57:09 <mniip>	ski, well even if you can't construct a bijection into N, you can show a monomorphism into N
Jan 12 17:57:15 <mniip>	and that has similar power
Jan 12 17:57:32 <hpc>	the even easierer way is put your code in a file, "ghci file.hs", and use :r
Jan 12 17:57:44 <ski>	one could imagine an interpretation of e.g. `Nat -> Bool' which included input streams to the program, fed from some external sensor. and presumably we're not assuming that physical processes must be algorithmic ?
Jan 12 17:57:46 *	notzmv (~zmv@unaffiliated/zmv) has joined
Jan 12 17:57:47 <hpc>	then you don't even have to remember if it's "load or "m
Jan 12 17:57:49 <hpc>	:m
Jan 12 17:58:03 *	mulk (~mulk@p2E51B4AE.dip0.t-ipconnect.de) has joined
Jan 12 17:58:19 *	carlomagno has quit (Quit: Leaving.)
Jan 12 17:59:00 <crestfallen>	got it! thanks Solonarv geekosaur I swear I dread the possibility I am dyslexic - very sorry
Jan 12 17:59:05 <fen>	the problem is that there are too many L to feasibly supply all of them to some L -> L to find out what it does, or "identify" it
Jan 12 17:59:22 <mniip>	ski, such a process would need to be infinite
Jan 12 17:59:35 *	simukis has quit (Quit: simukis)
Jan 12 17:59:46 *	Nexilva has quit (Remote host closed the connection)
Jan 12 17:59:53 <Solonarv>	and before you say "infinite precision": actually, quantum mechanics forbids this.
Jan 12 17:59:53 <ski>	(at least i remember that subsets of finite sets doesn't (in a weak sense) necessarily have to be finite, barring excluded middle)
Jan 12 18:00:02 Python interface unloaded
Jan 12 18:00:02 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sat Jan 12 18:00:02 2019

**** BEGIN LOGGING AT Sat Jun 29 17:35:04 2019

Jun 29 17:35:04 *	Now talking on #haskell
Jun 29 17:35:04 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Jun 29 17:35:04 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Jun 29 17:35:04 *	Channel #haskell url: http://www.haskell.org/
Jun 29 17:37:37 <crestfallen>	hi lines 82 and 84 are not clear to me. this is an unbeatable tic tac toe game. one question is ' all isDigit xs ' doesn't seem to work with any input http://sprunge.us/cqXUxq   THANKS
Jun 29 17:38:12 <crestfallen>	all isDigit xs is on line 84
Jun 29 17:38:38 *	Disconnected ()
**** ENDING LOGGING AT Sat Jun 29 17:38:38 2019

**** BEGIN LOGGING AT Sat Jun 29 17:42:00 2019

Jun 29 17:42:00 *	Now talking on #haskell
Jun 29 17:42:00 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Jun 29 17:42:00 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Jun 29 17:42:01 *	Channel #haskell url: http://www.haskell.org/
Jun 29 17:42:37 *	johnjay (~pi@38.120.10.99) has joined
Jun 29 17:43:13 *	yyy has quit (Ping timeout: 248 seconds)
Jun 29 17:43:37 <crestfallen>	sorry I was disconnected my question is at http://sprunge.us/cqXUxq   It's the last function getNat
Jun 29 17:44:17 <crestfallen>	what input does  all isDigit xs   take?
Jun 29 17:45:23 *	nineonine (~nineonine@64-46-10-64.dyn.novuscom.net) has joined
Jun 29 17:46:47 <crestfallen>	this is an unbeatable ticTacToe game. I don't see what getNat prompt does, and the if statement after the && operator
Jun 29 17:47:41 *	Ytteb has quit (Ping timeout: 258 seconds)
Jun 29 17:49:51 *	jluttine (~jluttine@109.204.147.177) has joined
Jun 29 17:49:58 *	kav has quit (Remote host closed the connection)
Jun 29 17:51:07 <remexre>	is there a version of `at` that's a prism instead of a Lens' _ (Maybe _) ?
Jun 29 17:52:48 <glguy>	remexre: No, it doesn't quite make sense as a prism
Jun 29 17:52:51 <glguy>	what are you trying to do?
Jun 29 17:52:57 *	nbloomf (~nbloomf@104-183-67-6.lightspeed.fyvlar.sbcglobal.net) has joined
Jun 29 17:53:07 <remexre>	get from a map entry
Jun 29 17:54:09 <remexre>	I guess prism is the wrong notion
Jun 29 17:54:11 <remexre>	or 
Jun 29 17:54:13 <remexre>	wait
Jun 29 17:54:19 <remexre>	at key . _Just is what I want, innit
Jun 29 17:54:54 <andreabedini>	remexre: that's the same misconception I had until ~ a month ago. A prism refers to the whole thing, while clearly a map can have more entries 
Jun 29 17:55:51 <andreabedini>	having a Prism Map Entry would imply that a Map is one Entry
Jun 29 17:55:59 <shachaf>	"at key . _Just" is also called "ix key"
Jun 29 17:56:01 <crestfallen>	since isDigit returns a Bool whether one character is a single digit, how can you use all there? : ' all isDigit xs '
Jun 29 17:56:08 *	kav (~kari@dsl-hkibng42-567330-153.dhcp.inet.fi) has joined
Jun 29 17:56:21 *	GhettoCode (~gcode@cpe-2606-A000-1222-807B-18FA-9F6F-AA42-D9A.dyn6.twc.com) has joined
Jun 29 17:56:31 *	jluttine has quit (Ping timeout: 244 seconds)
Jun 29 17:56:41 *	sindrip (b2133eee@238-62-19-178.xdsl.simafelagid.is) has joined
Jun 29 17:58:38 <crestfallen>	any help appreciated
Jun 29 17:58:44 *	Ariakenom has quit (Quit: Leaving)
Jun 29 17:59:07 *	s00pcan_ (~chris@96-35-68-144.dhcp.bycy.mi.charter.com) has joined
Jun 29 18:00:15 *	jluttine (~jluttine@109.204.147.177) has joined
Jun 29 18:01:38 Python interface unloaded
**** ENDING LOGGING AT Sat Jun 29 18:01:38 2019

**** BEGIN LOGGING AT Wed Jul  3 18:10:44 2019

Jul 03 18:10:44 *	Now talking on #haskell
Jul 03 18:10:44 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Jul 03 18:10:44 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Jul 03 18:10:45 *	Channel #haskell url: http://www.haskell.org/
Jul 03 18:12:17 *	shutdown_-h_now (~arjan@2001:1c06:1301:30e2:bdd3:11f5:abfb:705) has joined
Jul 03 18:12:57 *	heatsink (~heatsink@2600:1700:bef1:5e10:8d43:4051:d77d:0) has joined
Jul 03 18:13:39 *	cybai (~cybai@240d:1b:42:7800:f9c1:814:a44b:c8fe) has joined
Jul 03 18:13:49 <crestfallen>	hi not sure what is happening on lines 81-88 , the last function listed. The first line of the if statement is ... && all isDigit xs .. that doesn't look right to me        https://github.com/varreli/haskell/blob/master/hutton/84_chapt11/ticTacToe.hs 
Jul 03 18:14:14 *	freeside has quit (Ping timeout: 272 seconds)
Jul 03 18:15:04 *	millerti has quit (Quit: Textual IRC Client: www.textualapp.com)
Jul 03 18:15:25 <Axman6>	what's wrong with it?
Jul 03 18:16:27 *	lucasb has quit (Quit: Connection closed for inactivity)
Jul 03 18:16:44 <Axman6>	xs is :: String, a.k.a, :: [Char]. The if statement checks that the string isn't empty, and that all the Chars in the String are digits
Jul 03 18:17:08 *	Zialus_PT has quit (Ping timeout: 245 seconds)
Jul 03 18:17:08 *	pdxleif has quit (Ping timeout: 245 seconds)
Jul 03 18:17:10 *	shutdown_-h_now has quit (Ping timeout: 252 seconds)
Jul 03 18:17:28 <c_wraith>	crestfallen, is it failing to work somehow, or are you unsure why it works?
Jul 03 18:17:32 <ski>	(in your case, `[]' can be written as `""', in `xs /= []'. however, generally, `xs /= []' is better written as `not (null xs)'. but if you can sensibly use pattern-matching instead, that's commonly even better than `null')
Jul 03 18:17:32 *	heatsink has quit (Ping timeout: 252 seconds)
Jul 03 18:17:36 *	freeside (~mengwong@158.140.136.247) has joined
Jul 03 18:18:11 *	conal has quit (Quit: Computer has gone to sleep.)
Jul 03 18:18:16 *	Zialus (~RMF@158.29.166.178.rev.vodafone.pt) has joined
Jul 03 18:18:27 <crestfallen>	Axman6, thanks but it seems to only take a one-digit string like "4". But there is the all predicate there
Jul 03 18:18:37 <crestfallen>	c_wraith, ^
Jul 03 18:18:48 *	otto_s has quit (Ping timeout: 245 seconds)
Jul 03 18:18:54 <ski>	@src intersperse
Jul 03 18:18:54 <lambdabot>	intersperse _   []     = []
Jul 03 18:18:54 <lambdabot>	intersperse _   [x]    = [x]
Jul 03 18:18:54 <lambdabot>	intersperse sep (x:xs) = x : sep : intersperse sep xs
Jul 03 18:19:00 <Axman6>	what happens when you put in 44?
Jul 03 18:19:34 *	saurabhnanda (~saurabhna@42.106.202.243) has joined
Jul 03 18:19:39 *	pdxleif (~pdxleif@ec2-54-68-166-10.us-west-2.compute.amazonaws.com) has joined
Jul 03 18:19:40 <c_wraith>	crestfallen, is that observed behavior or what you think?
Jul 03 18:19:42 *	Haydos (uid356478@gateway/web/irccloud.com/x-orxiadzejdardoha) has joined
Jul 03 18:19:44 *	otto_s (~user@p4FF27360.dip0.t-ipconnect.de) has joined
Jul 03 18:20:25 <crestfallen>	I understood mostly everything up to this point in the program.
Jul 03 18:20:50 *	jeltsch has quit (Ping timeout: 252 seconds)
Jul 03 18:20:57 <ski>	> Data.List.Split.chunksOf 3 "abcdefgh"
Jul 03 18:21:00 <lambdabot>	 ["abc","def","gh"]
Jul 03 18:21:09 <Axman6>	> read "123" :: Int
Jul 03 18:21:12 <lambdabot>	 123
Jul 03 18:21:16 <c_wraith>	crestfallen, in what way does what it does differ from what you expected? is observed, expected, or neither of the above correct?
Jul 03 18:21:37 *	sleepnap has quit (Ping timeout: 248 seconds)
Jul 03 18:22:23 <crestfallen>	one moment please
Jul 03 18:22:40 *	petersen has quit (Ping timeout: 244 seconds)
Jul 03 18:22:44 <c_wraith>	crestfallen, try to be specific. it really helps us figure out how to fill in the gaps. when you tell us the gap is "I don't get it," that's too big to quickly help with.
Jul 03 18:22:54 *	shutdown_-h_now (~arjan@2001:1c06:1301:30e2:bdd3:11f5:abfb:705) has joined
Jul 03 18:23:02 <crestfallen>	understood one moment please
Jul 03 18:23:22 <c_wraith>	if the gap is "I don't understand how it handles multi-digit numbers", that's much easier to approach.
Jul 03 18:24:47 <ski>	instead of `valid :: Grid -> Int -> Bool', you could have `update :: Int -> (Player -> Maybe Player) -> Grid -> Maybe Grid' (e.g.). then you wouldn't need the `splitAt' in `move', in addition to the `(!!)' in `valid'
Jul 03 18:24:48 *	ddellacosta (~dd@193.148.18.211) has joined
Jul 03 18:25:11 *	jgt (~jgt@2a02:a31b:8542:b480:84a6:e430:7d07:a95) has joined
Jul 03 18:25:24 *	jusss (~user@unaffiliated/jusss) has joined
Jul 03 18:26:16 *	freeside has quit (Ping timeout: 272 seconds)
Jul 03 18:26:22 *	milanj has quit (Quit: This computer has gone to sleep)
Jul 03 18:26:58 <MarcelineVQ>	To add something I think is helpful, all sides of a conversation should strive to avoid the word 'it'
Jul 03 18:27:10 *	sword865 (uid208942@gateway/web/irccloud.com/x-pweesdflqfcxgefg) has joined
Jul 03 18:27:38 *	tromp (~tromp@2a02:a210:1585:3200:9d8e:8dc7:899c:f471) has joined
Jul 03 18:28:47 <crestfallen>	so basically all is does is make sure the player's input is a digit, to indicate the space on the game board
Jul 03 18:29:12 <c_wraith>	well. it makes sure the input is *all* digits.
Jul 03 18:29:22 <Axman6>	it makes sure that all the characters in the player's input are digits, and that they input something
Jul 03 18:29:38 *	jgt has quit (Ping timeout: 252 seconds)
Jul 03 18:29:46 *	freeside (~mengwong@158.140.136.247) has joined
Jul 03 18:29:50 <c_wraith>	remember, getLine :: IO String
Jul 03 18:29:55 <crestfallen>	right in the case where it's a 4X4 board you would have two digit inputs
Jul 03 18:30:03 *	shutdown_-h_now has quit (Ping timeout: 264 seconds)
Jul 03 18:30:07 <Axman6>	if you entered the string 123, it would recieve '1':'2':'3':[], a.k.a, "123"
Jul 03 18:30:44 <crestfallen>	so Axman6 that is a very large ticTacToe board right?
Jul 03 18:30:46 <Axman6>	which is not empty, and all the characters are digits. so read "123" returns 123
Jul 03 18:31:06 <Axman6>	I guess... I  guess I don't understand what problem you're having
Jul 03 18:31:28 <crestfallen>	we are looking at coordinate spaces on a ticTacToe board are we not?
Jul 03 18:31:32 <c_wraith>	crestfallen, that function isn't concerned with the number fitting on a board.
Jul 03 18:31:47 <c_wraith>	crestfallen, all it does is prompt until you input a number.
Jul 03 18:31:52 *	tromp has quit (Ping timeout: 252 seconds)
Jul 03 18:31:58 *	hive-mind has quit (Ping timeout: 272 seconds)
Jul 03 18:32:01 <c_wraith>	bounds checking must be done by the caller.
Jul 03 18:33:31 <crestfallen>	hold on so if we are playing on a normal ticTacToe board with 9 boxes, and you want to put your "O" in the last space at bottom right, you wouldn't enter a 9 ?
Jul 03 18:34:58 <Axman6>	are you expecting to now understand this whole program and not just the function getNat?
Jul 03 18:35:02 <crestfallen>	anyway I can figure that out later. you helped me see that the all function is returning a Bool. I thought there was a mapping or a functor or something else going on. thanks ALL I can move on.
Jul 03 18:35:05 <Axman6>	expecting us*
Jul 03 18:35:26 <c_wraith>	heck, it doesn't even prevent negative inputs...
Jul 03 18:35:29 <c_wraith>	> read "9223372036854775808" :: Int
Jul 03 18:35:31 <lambdabot>	 -9223372036854775808
Jul 03 18:35:42 <Axman6>	D:
Jul 03 18:35:50 <c_wraith>	it just makes you encode them in a funny way. :)
Jul 03 18:35:53 *	shutdown_-h_now (~arjan@2001:1c06:1301:30e2:bdd3:11f5:abfb:705) has joined
Jul 03 18:36:42 *	Lord_of_Life has quit (Ping timeout: 245 seconds)
Jul 03 18:36:58 <MarcelineVQ>	Was your questions actually"what is all?"
Jul 03 18:37:55 <Axman6>	it was either that or "how does this whole program work", and somehow not somewhere inbetween
Jul 03 18:38:05 <crestfallen>	well I see what all is doing in any case. also ...
Jul 03 18:38:06 *	garthvader (~garthvade@c-68-82-100-162.hsd1.pa.comcast.net) has joined
Jul 03 18:38:16 <Axman6>	:t all
Jul 03 18:38:17 <lambdabot>	Foldable t => (a -> Bool) -> t a -> Bool
Jul 03 18:38:27 <Axman6>	% :t all @[]
Jul 03 18:38:27 <yahb>	Axman6: (a -> Bool) -> [a] -> Bool
Jul 03 18:38:30 <crestfallen>	yes thanks .. also ..
Jul 03 18:38:41 <crestfallen>	I don't think isDigit will accept a negative digit
Jul 03 18:39:26 *	hive-mind (pranq@rrcs-67-53-148-69.west.biz.rr.com) has joined
Jul 03 18:39:42 <Axman6>	:t isDigit
Jul 03 18:39:43 *	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has joined
Jul 03 18:39:44 <lambdabot>	Char -> Bool
Jul 03 18:39:52 <Axman6>	> isDigit '-'
Jul 03 18:39:54 <lambdabot>	 False
Jul 03 18:39:55 *	MoarSpaceFi has quit (Read error: Connection reset by peer)
Jul 03 18:39:58 <Axman6>	> isDigit '1'
Jul 03 18:40:01 <lambdabot>	 True
Jul 03 18:40:03 *	garthvader (~garthvade@c-68-82-100-162.hsd1.pa.comcast.net) has left ("Leaving...")
Jul 03 18:40:15 *	Snircle has quit (Quit: Textual IRC Client: www.textualapp.com)
Jul 03 18:40:16 <Axman6>	> map isDigit "-123"
Jul 03 18:40:19 <lambdabot>	 [False,True,True,True]
Jul 03 18:40:24 <Axman6>	> all isDigit "-123"
Jul 03 18:40:27 <lambdabot>	 False
Jul 03 18:40:29 <Axman6>	> all isDigit "123"
Jul 03 18:40:33 *	merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Jul 03 18:40:33 <lambdabot>	 True
Jul 03 18:40:42 <crestfallen>	that is helpful, interesting. one moment
Jul 03 18:42:01 <c_wraith>	technically, there arent negative digits. at least in the most common systems.
Jul 03 18:42:18 *	emptyfl4sk (~jon@66.64.40.19) has joined
Jul 03 18:42:22 <c_wraith>	(balanced base 3 is cool, but not common)
Jul 03 18:42:22 <crestfallen>	so wait then you couldn't enter a negative number in any way right?
Jul 03 18:42:27 <Axman6>	c_wraith: until read is call, everything is Chars
Jul 03 18:42:33 *	tabemann (~tabemann@2600:1700:7990:24e0:c0e1:24dd:e827:bbef) has joined
Jul 03 18:42:45 <Axman6>	there's no such thing as a negative string
Jul 03 18:42:46 <dmwit>	crestfallen: c_wraith already showed you how to get around it.
Jul 03 18:42:56 <c_wraith>	crestfallen, that's the intention, though it's technically incorrect because of how read works.
Jul 03 18:43:03 <c_wraith>	see my example above.
Jul 03 18:43:12 <crestfallen>	sorry may have missed it..
Jul 03 18:43:30 <c_wraith>	> read "9223372036854775808" :: Int
Jul 03 18:43:33 <lambdabot>	 -9223372036854775808
Jul 03 18:43:50 <c_wraith>	that's how read handles Int overflow
Jul 03 18:43:50 <pong>	nice symmetry
Jul 03 18:44:20 <Axman6>	> read "10e10"
Jul 03 18:44:23 <lambdabot>	 *Exception: Prelude.read: no parse
Jul 03 18:44:24 <Axman6>	> read "10e10" :: Int
Jul 03 18:44:27 <lambdabot>	 *Exception: Prelude.read: no parse
Jul 03 18:44:53 *	merijn has quit (Ping timeout: 244 seconds)
Jul 03 18:45:50 <crestfallen>	> read "9223372036854775808" :: Int
Jul 03 18:45:53 *	Gurkenglas has quit (Ping timeout: 245 seconds)
Jul 03 18:45:54 *	jmcarthur (~jmcarthur@2601:86:100:1620::1) has joined
Jul 03 18:45:54 <lambdabot>	 -9223372036854775808
Jul 03 18:46:17 *	freeside has quit (Ping timeout: 245 seconds)
Jul 03 18:46:28 <crestfallen>	I'm not getting that in prelude
Jul 03 18:46:46 <crestfallen>	I'm getting 0 .. sorry don't know what's going on
Jul 03 18:47:08 <ski>	> 10e10 :: Int
Jul 03 18:47:09 <dmwit>	If you are using a 32-bit GHC (you are), try reading 4294967296.
Jul 03 18:47:12 <lambdabot>	 error:
Jul 03 18:47:12 <lambdabot>	     • No instance for (Fractional Int) arising from the literal ‘10e10’
Jul 03 18:47:12 <lambdabot>	     • In the expression: 10e10 :: Int
Jul 03 18:47:20 <ski>	% :set -XNumDecimals
Jul 03 18:47:20 <yahb>	ski: 
Jul 03 18:47:29 <ski>	% 10e10 :: Int
Jul 03 18:47:29 <yahb>	ski: 100000000000
Jul 03 18:47:39 <dmwit>	Sorry, I mean 2147483648, not 4294967296.
Jul 03 18:47:41 *	xff0x has quit (Quit: xff0x)
Jul 03 18:48:17 <crestfallen>	working..
Jul 03 18:48:18 *	tromp (~tromp@2a02:a210:1585:3200:e153:1223:26e8:3de1) has joined
Jul 03 18:49:01 <crestfallen>	dmwit, yeah that works so I don't have the firepower
Jul 03 18:49:05 <crestfallen>	thanks
Jul 03 18:49:40 *	ym555_ has quit (Quit: leaving...)
Jul 03 18:49:48 <crestfallen>	thanks ALL calling all tutors in the SF Bay Area
Jul 03 18:50:01 *	freeside (~mengwong@158.140.136.247) has joined
Jul 03 18:50:14 *	pfurla_ (~pfurla@ec2-18-208-170-161.compute-1.amazonaws.com) has joined
Jul 03 18:51:40 *	shutdown_-h_now has quit (Ping timeout: 252 seconds)
Jul 03 18:52:46 *	tromp has quit (Ping timeout: 252 seconds)
Jul 03 18:53:29 *	merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Jul 03 18:54:33 *	fragamus (~michaelgo@96.71.200.251) has joined
Jul 03 18:54:40 <crestfallen>	ok so now, why does this evaluate to a negative number? :
Jul 03 18:54:49 <crestfallen>	> read "2147483648" :: Int
Jul 03 18:54:52 <lambdabot>	 2147483648
Jul 03 18:54:59 <crestfallen>	wtf
Jul 03 18:55:00 *	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined
Jul 03 18:55:24 *	keep_learning_M (~keep_lear@150.203.68.111) has joined
Jul 03 18:55:35 *	nshepperd has quit (Quit: bye)
Jul 03 18:56:11 <crestfallen>	> read "9223372036854775808" :: Int
Jul 03 18:56:13 <lambdabot>	 -9223372036854775808
Jul 03 18:56:37 <crestfallen>	what's going on
Jul 03 18:56:48 <turab>	So, I have been reading about dynamic vs static linking to try to understand some issues I was having
Jul 03 18:57:25 <turab>	One main issue was the cabal new-install {package} would fail to install some dependency because Prelude wasn't found
Jul 03 18:57:26 <c_wraith>	crestfallen, look up "2's complement signed integers"
Jul 03 18:57:29 <turab>	Which seems odd
Jul 03 18:57:34 <c_wraith>	(it's a big topic)
Jul 03 18:57:40 <crestfallen>	> read "2147483648" :: Int
Jul 03 18:57:43 <lambdabot>	 2147483648
Jul 03 18:57:50 *	hellozee has quit (Remote host closed the connection)
Jul 03 18:58:12 <turab>	Then after some Googlefu, I found out that I can toggle dynamic linking by default in lib/ghc/platformConstants
Jul 03 18:58:23 <turab>	Is it okay to do that?
Jul 03 18:58:28 *	hellozee (~hellozee@2409:4066:13:994:2c88:ea58:15e2:bc3f) has joined
Jul 03 18:58:47 *	shutdown_-h_now (~arjan@2001:1c06:1301:30e2:bdd3:11f5:abfb:705) has joined
Jul 03 18:58:51 <crestfallen>	c_wraith thanks will do. that number resolves to negative in prelude .. :/
Jul 03 18:59:49 *	petersen (~petersen@redhat/juhp) has joined
Jul 03 19:00:27 *	zacts has quit (Quit: WeeChat 2.4)
Jul 03 19:01:17 <dmwit>	turab: Is it possible you're on Arch?
Jul 03 19:01:29 <turab>	Manjaro (so yes I guess)
Jul 03 19:01:50 <dmwit>	If so, I think there's some pretty detailed info on the Arch wiki about what to do. But you might consider just installing your own GHC not through the package manager as a simple way to get everything Just Working.
Jul 03 19:02:18 *	Robin_Jadoul (~robin@158.241.231.35.bc.googleusercontent.com) has joined
Jul 03 19:03:10 <c_wraith>	crestfallen, you're on a 32-bit build of ghc. lambdabot is using a 64-bit build. one of the few places you can see the difference easily is the behavior of Int on overflows.
Jul 03 19:04:39 <c_wraith>	crestfallen, and specifically, when overflows happen. with 32 bits, it's a little over 2 billion. with 64...uh ,its bigger. I never bothered to memorize it. :)
Jul 03 19:04:56 <crestfallen>	c_wraith thanks kindly. I'll climb that mountain when I get to it. appreciated..
Jul 03 19:05:22 *	Slyda1 (~IceChat9@pa49-197-126-94.pa.qld.optusnet.com.au) has joined
Jul 03 19:05:27 *	emptyfl4sk has quit (Ping timeout: 245 seconds)
Jul 03 19:05:45 <Slyda1>	I am facing malicious activity by the Government and have the proof. I need help tracing their IP's, can someone help?
Jul 03 19:07:48 *	shutdown_-h_now has quit (Ping timeout: 252 seconds)
Jul 03 19:08:59 <turab>	dmwit: Thanks for the response. Once I have time I will give that a shot. Arch wiki has been detailed about the linking issue but I couldn't really find a good way to have dynamic linking by default.
Jul 03 19:09:28 <turab>	Wait, maybe adding the -dynamic in .cabal file might help?
Jul 03 19:12:35 *	Saulzar_ (~oliver@132.181.15.24) has joined
Jul 03 19:13:31 *	vjacob has quit (Ping timeout: 258 seconds)
Jul 03 19:13:35 *	dax (dax@freenode/staff/dax) has joined
Jul 03 19:13:42 <turab>	nvm
Jul 03 19:13:51 *	shutdown_-h_now (~arjan@2001:1c06:1301:30e2:bdd3:11f5:abfb:705) has joined
Jul 03 19:14:39 *	freeside has quit (Ping timeout: 258 seconds)
Jul 03 19:15:03 *	hellozee has quit (Remote host closed the connection)
Jul 03 19:15:08 *	alp has quit (Ping timeout: 252 seconds)
Jul 03 19:15:14 *	dddddd has quit (Remote host closed the connection)
Jul 03 19:16:00 *	hellozee (~hellozee@2409:4066:13:994:2c88:ea58:15e2:bc3f) has joined
Jul 03 19:16:58 <lyxia>	The first section mentions .cabal/config
Jul 03 19:18:20 *	freeside (~mengwong@158.140.136.247) has joined
Jul 03 19:19:29 *	jgt (~jgt@2a02:a31b:8542:b480:84a6:e430:7d07:a95) has joined
Jul 03 19:21:44 *	heatsink (~heatsink@2600:1700:bef1:5e10:8d43:4051:d77d:0) has joined
Jul 03 19:21:59 *	coffeecow (~coffeecow@gateway/tor-sasl/coffeecow) has joined
Jul 03 19:22:36 *	chalkmonster has quit (Quit: WeeChat 2.5)
Jul 03 19:22:39 *	saurabhnanda has quit (Remote host closed the connection)
Jul 03 19:22:50 *	shutdown_-h_now has quit (Ping timeout: 252 seconds)
Jul 03 19:23:18 *	pfurla (~pfurla@ool-182ed2e2.dyn.optonline.net) has joined
Jul 03 19:23:28 *	mostendocrine has quit (Ping timeout: 246 seconds)
Jul 03 19:23:44 *	eiGHttt_ (~eiGHttt@185.232.59.52) has joined
Jul 03 19:24:03 *	jgt has quit (Ping timeout: 264 seconds)
Jul 03 19:24:37 *	pfurla_ has quit (Ping timeout: 258 seconds)
Jul 03 19:25:28 *	s00pcan has quit (Ping timeout: 245 seconds)
Jul 03 19:25:52 *	mostendocrine (~mostendoc@ip-99-203-10-33.pools.cgn.spcsdns.net) has joined
Jul 03 19:25:55 *	jluttine (~jluttine@109.204.147.177) has joined
Jul 03 19:26:14 <turab>	A question about cabal. From my understanding, once a cabal sandbox is setup, all cabal installs should install in the sandbox. However, I can see some binaries under ~/.cabal/bin. Is this normal?
Jul 03 19:26:32 Python interface unloaded
**** ENDING LOGGING AT Wed Jul  3 19:26:32 2019

**** BEGIN LOGGING AT Fri Jul  5 11:14:37 2019

Jul 05 11:14:37 *	Now talking on #haskell
Jul 05 11:14:37 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Jul 05 11:14:37 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Jul 05 11:14:37 *	Channel #haskell url: http://www.haskell.org/
Jul 05 11:15:14 *	wildtrees (~wildtrees@unaffiliated/wildtrees) has joined
Jul 05 11:16:31 *	wildtrees has quit (Max SendQ exceeded)
Jul 05 11:16:46 *	blazered_ has quit (Ping timeout: 252 seconds)
Jul 05 11:17:04 *	wildtrees (~wildtrees@unaffiliated/wildtrees) has joined
Jul 05 11:17:24 <crestfallen>	hi I'm beyond this function but have another question about it. thanks for the help the other day. the first condition of the if statement is xs /= []. however getNat [] does not produce an error. so the empty list [] has a different meaning from "" in this func. http://sprunge.us/zLV3k8
Jul 05 11:17:58 <MarcelineVQ>	in getNat [], it's prompt that is []
Jul 05 11:18:04 <MarcelineVQ>	not xs
Jul 05 11:18:20 *	nitrix is now known as pragma-
Jul 05 11:18:30 *	pragma- is now known as nitrix
Jul 05 11:18:47 <Rembane>	shapr: Yes! Or thread the data as an argument through all the functions that might need it.
Jul 05 11:20:15 *	cjenn (~cjenn@2600:380:6768:d954:2cc6:961e:739e:7191) has joined
Jul 05 11:20:17 <crestfallen>	prompt is [] ? please elaborate MarcelineVQ 
Jul 05 11:21:50 <MarcelineVQ>	getNat prompt = ... means that the first argument to getNat is called prompt. so if we apply getNat to [], prompt is []
Jul 05 11:23:29 *	verement has quit (Quit: verement)
Jul 05 11:23:55 <MarcelineVQ>	getNat doesn't parse its String argument into a number, the argument is to create a custom text prompt for the user, you'd know this or at least suspect this if you played with the function in ghci. xs comes from getLine, which accepts input from the user
Jul 05 11:24:33 <crestfallen>	that's weird, I've been playing with it. hold on please
Jul 05 11:24:42 *	cosimone has quit (Quit: WeeChat 2.4)
Jul 05 11:24:52 *	merijn has quit (Ping timeout: 272 seconds)
Jul 05 11:25:52 *	daissgr_work has quit (Read error: Connection reset by peer)
Jul 05 11:26:02 *	cosimone (~cosimone@2001:b07:ae5:db26:9520:741c:a5e9:2223) has joined
Jul 05 11:26:14 *	daissgr_work (~user@pcsgs10.informatik.uni-stuttgart.de) has joined
Jul 05 11:31:25 *	isovector1 (~isovector@2607:fea8:c3a0:7cd::3) has joined
Jul 05 11:31:48 *	shutdown_-h_now has quit (Ping timeout: 252 seconds)
Jul 05 11:33:23 <crestfallen>	there's no account for prompt in the type declaration... the logical && in the if statement is the condition that xs /= [] . these two points are throwing me off  
Jul 05 11:34:17 *	agander_ (agander@gateway/vpn/protonvpn/agander) has joined
Jul 05 11:34:22 *	lastmanstanding has quit (Ping timeout: 272 seconds)
Jul 05 11:35:18 <crestfallen>	so ' do putStr prompt ' is IO and is not needed in the type signature I guess 
Jul 05 11:35:47 <dmwit>	"There's no account for prompt in the type declaration." Yes, there is.
Jul 05 11:35:50 *	Lauwenmark1 (~Lauwenmar@195.206.169.238) has joined
Jul 05 11:36:02 <crestfallen>	where/how
Jul 05 11:36:32 <dmwit>	getNat :: {- starting here -} String {- ending here -} -> IO Int
Jul 05 11:36:36 <isovector1>	glguy: we've run into a problem using th-abstraction where our datacon tyvars get the names of the tycon tyvars. eg `data State s m a where  Get :: State s m s` after some processing gets type `forall a r. MemberWithError (State a) r => Sem r a` rather than `forall a r. MemberWithError (State s) r => Sem r s`. are we just doing something stupid?
Jul 05 11:36:55 <isovector1>	* should be `forall s r. MemberWithError (State s) r => Sem r s`
Jul 05 11:37:30 *	zacts (~zacts@dragora/developer/zacts) has joined
Jul 05 11:37:44 <crestfallen>	dmwit thanks working on it
Jul 05 11:37:52 *	shutdown_-h_now (~arjan@2001:1c06:1301:30e2:3441:4385:77f3:bade) has joined
Jul 05 11:38:10 *	tput (~user@S0106a84e3fe54613.ed.shawcable.net) has joined
Jul 05 11:38:17 <dmwit>	I don't know what "the logical && in the if statement is the condition that xs /= []" means. The logical && combines two conditions, and xs /= [] is one of them. (But why would that throw you off?)
Jul 05 11:38:50 *	matt___ (~matt@85-237-234-145.dynamic.orange.sk) has joined
Jul 05 11:39:14 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jul 05 11:39:14 *	butterth_ has quit (Remote host closed the connection)
Jul 05 11:39:23 <dmwit>	`putStr prompt` has type `IO ()`. I don't know what "is not needed in the type signature" means. Computations never appear in type signatures in Haskell.
Jul 05 11:40:34 *	agander_ has quit (Ping timeout: 246 seconds)
Jul 05 11:40:36 *	rogerjbf7 has quit ()
Jul 05 11:41:34 <crestfallen>	in the if statement [] == "" , but "" causes an error while [] does not
Jul 05 11:41:35 *	wroathe has quit (Read error: Connection reset by peer)
Jul 05 11:41:57 <dmwit>	The claim '"" causes an error while [] does not' is unfounded (and incorrect).
Jul 05 11:42:10 *	o1lo01ol1o (~o1lo01ol1@178.221.62.94.rev.vodafone.pt) has joined
Jul 05 11:42:22 *	nbloomf (~nbloomf@wsip-70-163-46-162.ks.ks.cox.net) has joined
Jul 05 11:43:37 <ski>	crestfallen : btw, as mentioned last time, you should get into a habit of using `null' in such cases
Jul 05 11:44:10 <dmwit>	I suspect crestfallen didn't write this code.
Jul 05 11:44:13 <MarcelineVQ>	ski: think this is a book example, huttons iirc
Jul 05 11:44:35 <dmwit>	(And anyway I think it's fine here, because the list is monomorphic anyway.)
Jul 05 11:44:40 <ski>	mhm
Jul 05 11:44:55 *	ski still thinks it's a good habit to cultivate
Jul 05 11:46:31 *	o1lo01ol1o has quit (Ping timeout: 246 seconds)
Jul 05 11:48:53 *	emptyfl4sk (~jon@66.64.40.19) has joined
Jul 05 11:50:56 *	lucasb (uid333435@gateway/web/irccloud.com/x-yqaurqvsogtkpqab) has joined
Jul 05 11:51:13 *	hc has quit (Remote host closed the connection)
Jul 05 11:51:19 *	fragamus (~michaelgo@96.77.195.227) has joined
Jul 05 11:52:42 *	cjenn has quit (Ping timeout: 252 seconds)
Jul 05 11:53:01 <crestfallen>	thanks ALL still working
Jul 05 11:53:58 *	emptyfl4sk has quit (Ping timeout: 268 seconds)
Jul 05 11:54:09 *	kritzefitz (~kritzefit@dslb-178-009-152-005.178.009.pools.vodafone-ip.de) has joined
Jul 05 11:54:20 <crestfallen>	I hope you can at least understand my confusion here
Jul 05 11:54:51 *	ircd (~ircd@unaffiliated/hc) has joined
Jul 05 11:55:19 <MarcelineVQ>	Well, not by this point, this is a combination of stuff you've been spoonfed many times by this point
Jul 05 11:55:41 <MarcelineVQ>	Over many seperate problems
Jul 05 11:55:54 Python interface unloaded
Jul 05 11:55:54 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri Jul  5 11:55:54 2019

**** BEGIN LOGGING AT Tue Jul  9 11:10:47 2019

Jul 09 11:10:47 *	Now talking on #haskell
Jul 09 11:10:47 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Jul 09 11:10:47 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Jul 09 11:10:47 *	Channel #haskell url: http://www.haskell.org/
Jul 09 11:10:56 <vaibhavsagar>	it's not urgent or important, just weird that it's failing for me in this way
Jul 09 11:11:17 <cocreature>	That fails trying to find ghc-parser for me
Jul 09 11:11:23 *	chongliang (~chonglian@59.42.21.235) has joined
Jul 09 11:11:39 *	emptyfl41 has quit (Quit: WeeChat 2.5)
Jul 09 11:11:47 <vaibhavsagar>	cocreature: it's in the `ghc-parser` folder, I thought `cabal.project` would take care of that
Jul 09 11:11:51 *	Sgeo_ (~Sgeo@ool-18b98455.dyn.optonline.net) has joined
Jul 09 11:11:58 *	chalkmonster (~chalkmons@unaffiliated/chalkmonster) has joined
Jul 09 11:12:03 *	ilmu (~ilmu@echelon.c-base.org) has joined
Jul 09 11:12:03 <vaibhavsagar>	can you comment out the `ihaskell-display/*` packages?
Jul 09 11:12:15 *	involans (~involans@2603:3003:397:8000::7543) has joined
Jul 09 11:12:15 <vaibhavsagar>	`static-canvas` hasn't been updated in a while so it fails
Jul 09 11:12:21 <jgt>	lavalike: yeah, I know I missed the newline. Didn't see that until after it was merged :(
Jul 09 11:12:39 <cocreature>	ah yeah I think that’s it
Jul 09 11:14:10 *	Ariakenom has quit (Quit: Leaving)
Jul 09 11:14:16 *	pankajgodbole has quit (Ping timeout: 272 seconds)
Jul 09 11:15:20 *	fitz (~fairleigh@116.125.21.107) has left
Jul 09 11:15:36 *	polman has quit (Ping timeout: 244 seconds)
Jul 09 11:15:43 <crestfallen>	hi I have some questions about the structure of the list comprehension on line 146. the function 'prunes' the depth of a data tree. ts is named on the lhs and each t is then passed to the recursive part of the list comprehension. t looks strange to me because what's passed is not in notation similar to the x in (x:xs). so what does haskell do there to separate the nodes?    https://github.com/varreli/haskell/blob/master/hutton/84_c
Jul 09 11:15:43 <crestfallen>	hapt11/ticTacToe.hs 
Jul 09 11:16:01 *	Sgeo__ has quit (Ping timeout: 268 seconds)
Jul 09 11:16:37 <crestfallen>	for lack of a better way to ask it ...
Jul 09 11:16:52 <wildtrees>	crestfallen, that link seems broken 
Jul 09 11:16:52 *	cosimone (~cosimone@2001:b07:ae5:db26:73a:8101:bd0:2ff9) has joined
Jul 09 11:16:58 <crestfallen>	dang
Jul 09 11:17:00 <wildtrees>	oh
Jul 09 11:17:07 *	zariuq has quit (Ping timeout: 245 seconds)
Jul 09 11:17:08 <wildtrees>	it got split
Jul 09 11:17:21 <crestfallen>	yeah can you get it?
Jul 09 11:17:31 <wildtrees>	could just paste the link alone on a line? 
Jul 09 11:17:36 <crestfallen>	sure
Jul 09 11:17:44 <crestfallen>	https://github.com/varreli/haskell/blob/master/hutton/84_chapt11/ticTacToe.hs
Jul 09 11:18:12 <cocreature>	vaibhavsagar: hm it got as far as trying to build zeromq which failed since I don’t have the things available in the nix-shell
Jul 09 11:18:29 *	ashesham` (~user@ptr-e1lysav5mf0m0ayr505.18120a2.ip6.access.telenet.be) has joined
Jul 09 11:18:29 <cocreature>	vaibhavsagar: Do you have anything in your env vars? maybe try a "env | grep opt"
Jul 09 11:18:34 *	Vikfret (~Vikfret@189.216.87.63) has joined
Jul 09 11:19:09 <vaibhavsagar>	cocreature: nope
Jul 09 11:19:13 <vaibhavsagar>	I just tried `env | grep opt`
Jul 09 11:19:31 <vaibhavsagar>	good to know it worked for you though
Jul 09 11:20:09 <cocreature>	weird :/
Jul 09 11:20:17 <wildtrees>	crestfallen, starts at line 130, I believe that is called a rose tree, has an element at each node, and a list of other nodes, so I think the ts from 146 is just a list of nodes, its bound in the pattern match to the function
Jul 09 11:20:42 *	polman (~ananevtem@2.95.142.173) has joined
Jul 09 11:21:03 <crestfallen>	wildtrees, one moment please
Jul 09 11:21:15 <vaibhavsagar>	I also tried `nix-shell --pure -p ghc cabal-install` and that failed the same way, so I'm reasonably sure it's not environment variables
Jul 09 11:21:23 <wildtrees>	afk a min
Jul 09 11:21:25 *	heatsink (~heatsink@2600:1700:bef1:5e10:75ac:ca72:1d9d:a36a) has joined
Jul 09 11:21:51 <cocreature>	vaibhavsagar: which cabal and ghc version are you using?
Jul 09 11:22:02 *	pfurla_ (~pfurla@ec2-18-208-170-161.compute-1.amazonaws.com) has joined
Jul 09 11:22:55 <vaibhavsagar>	cocreature: ghc 8.6.4, cabal-install 2.4.1.0
Jul 09 11:23:21 *	yyy- has quit (Ping timeout: 244 seconds)
Jul 09 11:23:46 *	pfurla has quit (Ping timeout: 272 seconds)
Jul 09 11:23:46 *	themsay has quit (Ping timeout: 272 seconds)
Jul 09 11:23:54 *	o1lo01ol1o (~o1lo01ol1@178.221.62.94.rev.vodafone.pt) has joined
Jul 09 11:23:56 *	jackhill_ is now known as jackhill
Jul 09 11:24:10 *	denis (~christie5@116.125.21.107) has joined
Jul 09 11:25:09 <cocreature>	hm I have 8.6.5 but that hardly seems like it should be the difference here. fwiw in "nix-shell -p ghc cabal-install zlib pkg-config zeromq" I was able to run "cabal new-build exe:ihaskell" successfully after removing all the ihaskell-display stuff from cabal.project
Jul 09 11:25:54 *	heatsink has quit (Ping timeout: 252 seconds)
Jul 09 11:27:52 <fragamus>	hi I have an ADT and I need a tuple of the args of its constructor
Jul 09 11:28:34 <fragamus>	I have a string identifying the constructor if that helps
Jul 09 11:29:23 <wildtrees>	crestfallen, back for a few if you still need help, ping my name in the channel 
Jul 09 11:29:39 *	andreas31 has quit (Remote host closed the connection)
Jul 09 11:29:47 <crestfallen>	yes thanks wildtrees, the rhs we have Node x which is like the head I suppose. 
Jul 09 11:29:50 <vaibhavsagar>	cocreature: thanks :)! I do have some of that stuff in `stack.yaml`
Jul 09 11:30:47 <wildtrees>	crestfallen, no Node is a constructor, prune is traversing a Tree recursively and reconstructing another tree that looks to be only so deep 
Jul 09 11:30:56 <fragamus>	i am doing this     moduleArgsTuple = ast ^? _Ctor @"Module"     to get the tuple
Jul 09 11:31:00 *	denis (~christie5@116.125.21.107) has left
Jul 09 11:31:03 <cocreature>	vaibhavsagar: sorry for not providing any actual help. I’m a bit lost at this point :)
Jul 09 11:31:36 <fragamus>	but the problem is that I dont know the constructor name until runtime
Jul 09 11:31:37 <vaibhavsagar>	cocreature: no worries, something must be funky with my laptop
Jul 09 11:31:50 <crestfallen>	ok, thanks wildtrees  so one thing is, is that technically lazy evaluation when we have a base case defined on line 145?
Jul 09 11:32:00 <vaibhavsagar>	I was just trying to see how easy `cabal new-build` is to use
Jul 09 11:32:01 *	ddellacosta has quit (Ping timeout: 248 seconds)
Jul 09 11:32:36 <solonarv>	fragamus: can't be done. how should GHC figure out what type that returns?
Jul 09 11:32:38 *	rblaze has quit (Remote host closed the connection)
Jul 09 11:32:46 <crestfallen>	i.e. does that work just like take does in an infinite list say? 
Jul 09 11:32:47 *	rblaze (~blazered@2620:10d:c091:500::1:c762) has joined
Jul 09 11:32:57 <cocreature>	vaibhavsagar: if it works it’s usually quite easy ;)
Jul 09 11:33:09 <solonarv>	however I seem to recall that you are actually only interested in a specific field and you don't care at all which constructor you have
Jul 09 11:33:10 <wildtrees>	crestfallen, should be, haskell is lazy by default, you can use seq and different datatypes for some strictness though
Jul 09 11:33:13 <solonarv>	is that correct?
Jul 09 11:33:30 <fragamus>	yes
Jul 09 11:33:54 *	v01d4lph4 has quit (Remote host closed the connection)
Jul 09 11:34:24 <crestfallen>	ok what I'm asking is , are lazy evaluation and setting a base case the same thing . because recursion is a different approach to termination I thought wildtrees 
Jul 09 11:34:43 <vaibhavsagar>	cocreature: I tried building `ghcid` the same way, and you're right :)
Jul 09 11:34:44 <fragamus>	well I want all of the fields
Jul 09 11:34:49 <solonarv>	in that case you probably want to use 'typed @(TypeOfTheFieldYouWant)' instead of messing around with picking uot a specific constructor but actually deciding which constructor you're picking out based on which constructor you have
Jul 09 11:34:59 <solonarv>	...you want all the fields? how is that supposed to work
Jul 09 11:35:12 <fragamus>	I guess it cant be dome
Jul 09 11:35:17 <fragamus>	done even
Jul 09 11:35:28 *	Boarders (d849f8ba@216-73-248-186.dynamic.amnh.org) has left
Jul 09 11:35:37 <solonarv>	well, I suppose it could be done if your constructors all have the same fields
Jul 09 11:35:44 <dmwit>	No, lazy evaluation is not the same as creating a base case.
Jul 09 11:35:46 <fragamus>	the dont
Jul 09 11:35:49 <dmwit>	Heck, one is a noun and one is a verb.
Jul 09 11:36:32 <dmwit>	Lazy evaluation is an order in which reductions are done. Choosing a base case identifies the result of a particular reduction.
Jul 09 11:36:58 <wildtrees>	crestfallen, haskell will build up a series of "thunks" to evaluate latter to get an answer when requested, it will only recurse as far as you are requesting answers from the IO monad at the top, iirc, there are ways to force evaluation to different degrees but I am not up to speed on all of them
Jul 09 11:37:06 *	dscho (~dscho@141.98.101.133) has joined
Jul 09 11:37:25 <solonarv>	I would recommend the following: if you have 'ast' and you want the field of type 'Foo', just write 'ast ^? typed @Foo'; similarly if you want the field of type 'Bar' just write 'ast ^? typed @Bar'
Jul 09 11:37:28 *	ralejs (~ralejs@148.252.129.218) has joined
Jul 09 11:37:29 <dmwit>	It is a bit like asking "is writing right-to-left the same as deciding to write down the word 'reverse'?".
Jul 09 11:37:41 <wildtrees>	crestfallen, you should be able to generate an infinite (rose) Tree as defined from a function and prune it to a required finite depth
Jul 09 11:37:51 <solonarv>	(these expressions have types 'Maybe Foo' and 'Maybe Bar', respectively)
Jul 09 11:38:08 <jle`>	crestfallen: lazy evaluation and having a base case isn't quite the same thing
Jul 09 11:38:12 <dmwit>	One talk about a particular choice about how to write. The other talks about what to write using that choice.
Jul 09 11:38:26 <fragamus>	solonarv: ok I was writing a log of code for all of the zoo of ADTs in the tree
Jul 09 11:38:41 <dmwit>	Same with lazy evaluation vs. base cases. One is a choice about how to compute. The other says what to compute.
Jul 09 11:38:54 *	CodeKiwi is now known as DigitalKiwi
Jul 09 11:39:01 <fragamus>	I learned a way to get the name of the constructor as a string and that was helpful in a small way
Jul 09 11:39:03 *	crobbins has quit (Remote host closed the connection)
Jul 09 11:39:18 *	v01d4lph4 (~v01d4lph4@106.51.22.56) has joined
Jul 09 11:39:20 <fragamus>	I guess I have to go back to writing the zoo code
Jul 09 11:39:37 <crestfallen>	thanks a lot wildtrees jle`    one sec
Jul 09 11:39:54 <crestfallen>	also dmwit  ...
Jul 09 11:40:26 <isovector1>	does anyone know offhand whether text+bytestring are smart enough to fuse together?
Jul 09 11:40:31 <solonarv>	you just want to log? as a first approach, what's wrong with simply 'show' ing the value you have?
Jul 09 11:40:34 <wildtrees>	crestfallen, you are welcome :) 
Jul 09 11:40:38 <dmwit>	isovector1: They do not fuse.
Jul 09 11:40:43 <fragamus>	solonarv: I understand why it can't work
Jul 09 11:41:21 <isovector1>	dmwit: thanks! i found slow af janky-ass code that converts willy-nilly between text.builders, lazy and strict texts, AND between all of the same bytestring concepts
Jul 09 11:41:30 <isovector1>	i'll bet that's why
Jul 09 11:41:30 <jle`>	crestfallen: looking at your original ink, lazy evaluation doesn't really have anything to do with what is going on, logically
Jul 09 11:41:56 <jle`>	crestfallen: what's going on is just list comprehension syntax
Jul 09 11:42:23 <jle`>	> let myFunc xs = [ negate x | x <- xs ] in myFunc [1,2,3,4]
Jul 09 11:42:26 <lambdabot>	 [-1,-2,-3,-4]
Jul 09 11:42:38 <jle`>	do you see how this is not passed in as "(x:xs)" ?
Jul 09 11:42:50 <jle`>	that's just how list comprehension syntax works, you don't really need to pattern match on the input list to use it
Jul 09 11:43:35 <crestfallen>	jle`, I don't think I've seen the recursive element inside the list comprehension. one moment please I'm looking at what dmwit said above    yes jle` I had an intuition about the distinction there
Jul 09 11:43:45 *	v01d4lph4 has quit (Ping timeout: 248 seconds)
Jul 09 11:43:53 <jle`>	crestfallen: right, but recursion doesn't have anything to do with it
Jul 09 11:43:55 *	saurabhnanda has quit (Remote host closed the connection)
Jul 09 11:43:59 <jle`>	that's one of the nice things about list comprehensions
Jul 09 11:44:06 <jle`>	you can be recursive in them and it doesn't matter, it's all the same
Jul 09 11:44:27 <crestfallen>	has nothing to do with it in your example you mean?
Jul 09 11:44:42 <jle`>	crestfallen: it has nothing to do with your example
Jul 09 11:44:49 <jle`>	the fact that it's recursive doesn't change anything about the list comprehension
Jul 09 11:44:56 <jle`>	it's still just a normal list comprehension :)
Jul 09 11:45:05 <jle`>	it doesn't become magically different just because there is a recursive call
Jul 09 11:45:08 <fragamus>	solonarv: so in the end, generics get me nowhere
Jul 09 11:45:19 *	ddellacosta (~dd@193.148.18.211) has joined
Jul 09 11:45:27 *	gerhardt (~casar94@116.125.21.107) has joined
Jul 09 11:45:49 <jle`>	crestfallen: as for strict vs. lazy, one way to look at it might be that prune could be defined in this way for both strict and lazy contexts; the base case doesn't have anything to do with strict vs. lazy
Jul 09 11:46:03 <jle`>	crestfallen: but we can imagine what the difference would be in a strict vs. lazy evaluation model
Jul 09 11:46:08 *	raichoo (~raichoo@dslb-084-062-122-223.084.062.pools.vodafone-ip.de) has joined
Jul 09 11:46:13 *	natrys (~natrys@116.206.252.68) has joined
Jul 09 11:46:33 <jle`>	crestfallen: in a strict model, the person who *uses* `prune 4 xs` would have to wait until the entire result tree was being finished pruning before being able to do anything with the resulting tree
Jul 09 11:46:43 <crestfallen>	right so consuming a list or a tree what have you is just consuming. I think the author may have mentioned lazy in this function I have to go back and reread...
Jul 09 11:47:03 <jle`>	crestfallen: in a non-strict or lazy model, the person who *uses* `prune 4 ts` can start using the parts of the tree (like the value in the node) without waiting for the entire tree to finish evaluating
Jul 09 11:47:13 <jle`>	crestfallen: lazyness vs. strictness doesn't have anything to do with how 'prune' is written here
Jul 09 11:47:25 <jle`>	prune can be written as-is in both a lazy and strict context
Jul 09 11:47:45 <jle`>	you can have a base case in a strict evaluation setting, as well
Jul 09 11:47:57 <jle`>	and unless your tree is infinite, they'll basically work both the same way
Jul 09 11:48:10 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jul 09 11:48:14 <jle`>	so 'base case = lazy' isn't quite true.  you can have a base case in both lazy and strict settings
Jul 09 11:48:25 <jle`>	they are unrelated concepts
Jul 09 11:48:56 *	Ariakenom (~Ariakenom@h-158-174-187-253.NA.cust.bahnhof.se) has joined
Jul 09 11:49:00 <jle`>	crestfallen: in this setting, when we are looking at how 'prune' is defined, looking at lazy/strict doesn't really matter
Jul 09 11:49:05 *	andreas303 (~andreas@gateway/tor-sasl/andreas303) has joined
Jul 09 11:49:07 *	andreas303 has quit (Client Quit)
Jul 09 11:49:16 <jle`>	it only matters at the places where you want to *use* prune
Jul 09 11:49:23 *	andreas303 (~andreas@gateway/tor-sasl/andreas303) has joined
Jul 09 11:49:25 *	involans has quit (Quit: involans)
Jul 09 11:49:38 <crestfallen>	ok that's a bit tricky. I was making a hard and fast distinction..   one moment please jle` trying to take that all in.
Jul 09 11:50:48 *	dansho (~dansho4@71-84-161-204.dhcp.astr.or.charter.com) has joined
Jul 09 11:50:59 <jle`>	i could define prune in the same way in ocaml, where everything is strict.  you can have a base case, a recursive case, and everything.
Jul 09 11:51:04 <dmwit>	(I think it's a bit unusual to write `prune` like this in a strict language. In a strict language, one wants to `prune` while generating the tree, to avoid the extra work. However I agree it could be done.)
Jul 09 11:51:20 <solonarv>	fragamus: I'm quite sure they could help you reduce boilerplate, but right now I don't know what you are trying to accomplish
Jul 09 11:51:47 <solonarv>	so it is a bit difficult to say "ah, here is how you could do this"
Jul 09 11:52:01 *	gerhardt (~casar94@116.125.21.107) has left
Jul 09 11:52:02 *	dstolfa has quit (Quit: ZNC 1.7.3 - https://znc.in)
Jul 09 11:52:16 *	zacts (~zacts@dragora/developer/zacts) has joined
Jul 09 11:52:46 *	ashesham` has quit (Remote host closed the connection)
Jul 09 11:52:59 *	pfurla (~pfurla@104.36.2.146) has joined
Jul 09 11:53:02 *	jeltsch (~wolfgang@355c-02f2-8415-75d4-3e80-82b2-07d0-2001.dyn.estpak.ee) has joined
Jul 09 11:53:03 *	ashesham` (~user@ptr-e1lysav5mf0m0ayr505.18120a2.ip6.access.telenet.be) has joined
Jul 09 11:53:44 <crestfallen>	jle`, so when you said ' you don't really need to pattern match on the input list to use it '   above ...
Jul 09 11:54:03 *	agander (agander@gateway/vpn/protonvpn/agander) has joined
Jul 09 11:54:10 <crestfallen>	the <-    element of syntax is what is doing the work there
Jul 09 11:54:16 *	involans (~involans@pool-72-66-99-184.washdc.fios.verizon.net) has joined
Jul 09 11:54:25 *	pfurla_ has quit (Ping timeout: 248 seconds)
Jul 09 11:54:27 <crestfallen>	'element of' syntax*
Jul 09 11:54:32 *	garthvader (~garthvade@c-68-82-100-162.hsd1.pa.comcast.net) has joined
Jul 09 11:54:50 <jle`>	you can think of it that way, i suppose. it's what drives the iteration
Jul 09 11:55:18 <jle`>	and semantically it binds a name to an item in the list
Jul 09 11:55:30 *	themsay (~themsay@149.254.235.25) has joined
Jul 09 11:55:33 <jle`>	so you can use that item
Jul 09 11:55:55 <jle`>	s/use/refer to
Jul 09 11:55:59 *	solonarv likes reading 'x <- blah' as 'x taken from blah' or 'take x from blah'
Jul 09 11:56:15 <crestfallen>	thank you the syntax is arbitrary you could write tt <- ts there 
Jul 09 11:57:00 <tabaqui>	but things are getting interesting in case of Arrows
Jul 09 11:57:09 <tabaqui>	a <- func -< datum
Jul 09 11:57:21 <crestfallen>	yes the syntax for a list is a little cleaner it seems (x:xs)
Jul 09 11:57:32 <tabaqui>	it is almost the same
Jul 09 11:57:34 <dmwit>	crestfallen: You could, provided you changed that name consistently in the rest of the comprehension.
Jul 09 11:57:41 *	cosimone has quit (Quit: WeeChat 2.4)
Jul 09 11:57:51 *	Madderote (~madderote@2001:1c03:12:200:f9da:cfe1:dbf7:6ba) has joined
Jul 09 11:58:43 *	dstolfa (~dstolfa@heimdall.ownbsd.org) has joined
Jul 09 11:59:13 <crestfallen>	Ok, maybe this was answered above, but say in recursion theory, would the idea of lazy evaluation be considered as part of it theoretically ?
Jul 09 11:59:13 *	garthvader has quit (Ping timeout: 248 seconds)
Jul 09 11:59:49 <kritzefitz>	Is there something I can do when GHC doesn't inline `foo` marked with {-# INLINE foo #-}, but I REALLY want `foo` inlined?
Jul 09 12:01:22 <cocreature>	kritzefitz: depends on why it doesn’t get inlined
Jul 09 12:01:29 *	HarveyPwca has quit (Quit: Leaving)
Jul 09 12:01:35 <dmwit>	You could always inline it yourself.
Jul 09 12:01:44 *	fmixing (~fmixing@5.18.219.156) has joined
Jul 09 12:01:51 <cocreature>	kritzefitz: possible reasons are: foo is recursive, your call to foo is not fully applied, …
Jul 09 12:01:53 <int-e>	kritzefitz: maybe foo is recursive?
Jul 09 12:01:53 *	benedicto (~louie835@116.125.21.107) has joined
Jul 09 12:02:00 <kritzefitz>	dmwit, inlining it myself actually gives the desired result.
Jul 09 12:02:12 *	Madderote has quit (Ping timeout: 252 seconds)
Jul 09 12:02:37 <kritzefitz>	But I wanted o avoid inlining myself.
Jul 09 12:02:44 *	dmwit nods
Jul 09 12:02:52 <int-e>	let foo = go where go = [definition]  may do the trick
Jul 09 12:02:54 *	benedicto (~louie835@116.125.21.107) has left
Jul 09 12:03:21 *	fphilipe (~phil@81.6.34.65) has joined
Jul 09 12:03:24 *	benedicto (~louie835@116.125.21.107) has joined
Jul 09 12:04:37 *	rblaze has quit (Remote host closed the connection)
Jul 09 12:04:37 <kritzefitz>	`foo` doesn't take arguments, so it's definitely fully applied and I think it isn't recursive, because it's exported “inline definition“ consists of a single call to another function.
Jul 09 12:04:42 *	wildtrees has quit (Quit: Leaving)
Jul 09 12:04:49 *	rblaze (~blazered@2620:10d:c091:500::1:c762) has joined
Jul 09 12:04:56 *	ralejs has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jul 09 12:06:19 <dmwit>	Is it class-polymorphic?
Jul 09 12:06:31 *	rblaze has quit (Remote host closed the connection)
Jul 09 12:06:40 <dmwit>	(Perhaps you also need to SPECIALISE it?)
Jul 09 12:06:48 *	loller (uid358106@gateway/web/irccloud.com/x-jmadbofpzkxnnteq) has joined
Jul 09 12:06:51 *	rblaze (~blazered@2620:10d:c091:500::2:8051) has joined
Jul 09 12:08:06 *	forgottenone has quit (Read error: Connection reset by peer)
Jul 09 12:08:10 *	conal (~conal@172.98.86.92) has joined
Jul 09 12:08:30 <kritzefitz>	`foo` itself is not polymorphic, but it passes polymorphic stuff around internally.
Jul 09 12:08:31 *	fphilipe has quit (Ping timeout: 246 seconds)
Jul 09 12:08:48 *	forgottenone (~forgotten@176.88.102.125) has joined
Jul 09 12:08:52 *	chaosmasttter (~chaosmast@p200300C4A741EF010000000000000001.dip0.t-ipconnect.de) has joined
Jul 09 12:09:04 <kritzefitz>	Though in the optimized code for `foo` (produced by GHC) the polymorphic stuff has been properly inlined.
Jul 09 12:09:24 <isovector1>	kritzefitz: what's the definition of foo?
Jul 09 12:09:42 <kritzefitz>	isovector1, give me a second, I'll post a snippet...
Jul 09 12:10:23 <Ariakenom>	kritzefitz: interesting, how did u check the polymorphism was gone?
Jul 09 12:11:02 *	ashesham` has quit (Ping timeout: 252 seconds)
Jul 09 12:11:17 <kritzefitz>	Ariakenom, I looked at the output of -ddump-simpl.
Jul 09 12:13:13 <dmwit>	Wait. Is foo a CAF?
Jul 09 12:13:42 *	bodisiw (~bodiskw@128.163.238.12) has joined
Jul 09 12:13:48 <dmwit>	I wonder if GHC avoids inlining CAFs, since they're supposed to be memoized...?
Jul 09 12:13:50 *	nbloomf (~nbloomf@wsip-70-163-46-162.ks.ks.cox.net) has joined
Jul 09 12:13:54 <kritzefitz>	I'm not sure I remember the exact meaning of CAF correctly, but I think it is.
Jul 09 12:14:08 <kritzefitz>	Though I had no problem inlining other CAFs.
Jul 09 12:14:10 <Ariakenom>	kritzefitz: nice
Jul 09 12:14:12 <dmwit>	hrm
Jul 09 12:14:39 <kritzefitz>	But GHC might deem this specific definition complicated enough to think that memoization is worth not inlining.
Jul 09 12:14:41 *	theelous3 (~theelous3@unaffiliated/theelous3) has joined
Jul 09 12:14:59 <crestfallen>	jle`, so to be sure, whether the consumption of the list or tree is lazy or recursive with a base case written on the subsequent line, that doesn't define whether the function as a whole is seen as lazy or strict?  
Jul 09 12:15:23 *	kwantam has quit (Quit: WeeChat 2.5)
Jul 09 12:15:28 *	raichoo has quit (Quit: Lost terminal)
Jul 09 12:15:31 *	benedicto has quit (Ping timeout: 246 seconds)
Jul 09 12:15:43 <isovector1>	kritzefitz: do `-fspecialise-aggressively` and/or `-flate-specialisation` help?
Jul 09 12:15:44 <kritzefitz>	isovector1, https://gitlab.com/snippets/1873635 , I want the definition of `shownNaturals` to inline into `naturalsString`
Jul 09 12:16:27 *	fragamus has quit (Ping timeout: 268 seconds)
Jul 09 12:16:42 <isovector1>	kritzefitz: also can you share the dump-simpl?
Jul 09 12:16:51 *	lucasb has quit (Quit: Connection closed for inactivity)
Jul 09 12:17:30 *	caa51h has quit (Quit: leaving)
Jul 09 12:17:41 <Ariakenom>	would making it a () -> Infinite String do anything?
Jul 09 12:19:01 <isovector1>	^ that's my guess
Jul 09 12:19:08 *	yyy- (~yyy@unaffiliated/tinnotl) has joined
Jul 09 12:19:29 <kritzefitz>	isovector1, I added the compiler output as a comment below the snippet.
Jul 09 12:21:05 *	arty (~leland308@116.127.73.30) has joined
Jul 09 12:21:17 <Ariakenom>	what about a rewrite rule to the definition?
Jul 09 12:21:30 *	fragamus (~michaelgo@c-98-244-6-56.hsd1.ca.comcast.net) has joined
Jul 09 12:21:35 <kritzefitz>	Ariakenom, making it a `() -> Infinite String` worked.
Jul 09 12:22:40 *	Azel has quit (Ping timeout: 272 seconds)
Jul 09 12:24:43 <kritzefitz>	Rewriting to the definition via rules also works.
Jul 09 12:24:48 <Ariakenom>	:D
Jul 09 12:25:25 <kritzefitz>	isovector1, dmwit, Ariakenom, int-e, cocreature Thanks for figuring this out!
Jul 09 12:26:26 *	justanotheruser (justanothe@gateway/vpn/nordvpn/justanotheruser) has joined
Jul 09 12:27:29 *	arty (~leland308@116.127.73.30) has left
Jul 09 12:27:45 *	conal has quit (Quit: Computer has gone to sleep.)
Jul 09 12:27:53 <Ariakenom>	now I'm interested in whether isovector1's flags work though
Jul 09 12:31:50 *	Boarders (d849f8ba@216-73-248-186.dynamic.amnh.org) has joined
Jul 09 12:32:25 Python interface unloaded
**** ENDING LOGGING AT Tue Jul  9 12:32:25 2019

**** BEGIN LOGGING AT Sat Jul 13 11:28:38 2019

Jul 13 11:28:38 *	Now talking on #haskell
Jul 13 11:28:38 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Jul 13 11:28:38 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Jul 13 11:28:38 *	Channel #haskell url: http://www.haskell.org/
Jul 13 11:29:51 *	jgt1 (~jgt@2a02:a31b:8542:b480:1d1b:9699:687e:24f9) has joined
Jul 13 11:30:21 *	barrenba` has quit (Read error: Connection reset by peer)
Jul 13 11:30:26 *	oish_ has quit (Ping timeout: 248 seconds)
Jul 13 11:30:37 *	barrenba` (~user@180.168.253.65) has joined
Jul 13 11:31:45 <crestfallen>	hi considering these notes http://sprunge.us/CtgVap a member helped me with the other day, I lost my way with the following minimax program (again) https://github.com/varreli/haskell/blob/master/hutton/84_chapt11/ticTacToe.hs     my question follows:
Jul 13 11:32:01 *	oish has quit (Ping timeout: 248 seconds)
Jul 13 11:32:10 *	oish (~charlie@84.16.242.77) has joined
Jul 13 11:32:28 *	jgt has quit (Ping timeout: 252 seconds)
Jul 13 11:32:35 *	w1d3m0d3 has quit (Quit: bye)
Jul 13 11:32:36 <crestfallen>	please see the two lines of comments in the posted notes. Is that correct?
Jul 13 11:33:19 <crestfallen>	the minimax program begins on line 155
Jul 13 11:33:28 *	ilikeheaps (~sushi@188.146.164.149.nat.umts.dynamic.t-mobile.pl) has joined
Jul 13 11:34:15 <crestfallen>	using map drops the root node from the list but I'm not sure how
Jul 13 11:35:03 *	fendor has quit (Ping timeout: 245 seconds)
Jul 13 11:35:30 <crestfallen>	or using map is supposed to drop the root node, but I'm getting different results
Jul 13 11:37:07 *	wildtrees (~wildtrees@unaffiliated/wildtrees) has joined
Jul 13 11:37:11 *	oish_ (~charlie@84.16.242.77) has joined
Jul 13 11:37:14 *	oish has quit (Ping timeout: 272 seconds)
Jul 13 11:38:46 <crestfallen>	so I'm trying to see how line 164 in the where statement works.
Jul 13 11:39:58 <crestfallen>	its a case where I thought I understood it 48 hours ago, and on revisiting I got lost
Jul 13 11:42:04 *	Logan_ (~Logan_@199.19.94.16) has joined
Jul 13 11:42:54 *	Madderote (~madderote@2001:1c03:12:200:21de:91be:2bb4:4de) has joined
Jul 13 11:44:15 *	w1d3m0d3 (~w1d3m0d3@unaffiliated/w1d3m0d3) has joined
Jul 13 11:44:19 *	Lycurgus has quit (Quit: Exeunt)
Jul 13 11:44:53 *	z0 (~zzz@2a03:b0c0:3:d0::3095:3001) has joined
Jul 13 11:45:46 *	chaosmasttter (~chaosmast@p200300C4A70492010000000000000001.dip0.t-ipconnect.de) has joined
Jul 13 11:46:08 *	cosimone has quit (Quit: WeeChat 2.4)
Jul 13 11:46:10 *	butterthebuddha (~butterthe@2601:400:c100:c70:54a1:d623:585c:9e73) has joined
Jul 13 11:47:27 *	Madderote has quit (Ping timeout: 264 seconds)
Jul 13 11:47:47 *	oish (~charlie@84.16.242.77) has joined
Jul 13 11:48:33 *	zzz has quit (Ping timeout: 248 seconds)
Jul 13 11:48:34 *	z0 is now known as zzz
Jul 13 11:50:58 *	oish_ has quit (Ping timeout: 246 seconds)
Jul 13 11:53:25 *	jao has quit (Ping timeout: 246 seconds)
Jul 13 11:53:44 *	njay0009 has quit (Ping timeout: 258 seconds)
Jul 13 11:54:06 *	njay0009 (~androirc@2401:4900:2349:6cd:21a3:63fc:7972:f7a0) has joined
Jul 13 11:55:39 *	fragamus has quit (Ping timeout: 258 seconds)
Jul 13 12:03:24 *	oish_ (~charlie@84.16.242.77) has joined
Jul 13 12:06:52 *	oish has quit (Ping timeout: 268 seconds)
Jul 13 12:08:54 *	slack1256 has quit (Ping timeout: 272 seconds)
Jul 13 12:09:22 *	gxt has quit (Quit: WeeChat 2.5)
Jul 13 12:09:52 *	slack1256 (~slack1256@186-78-66-53.baf.movistar.cl) has joined
Jul 13 12:11:00 *	oish (~charlie@84.16.242.77) has joined
Jul 13 12:11:41 <argent0>	crestfallen: should't you have 'map minmax (gametree ...)' and also a Functor instance for Tree?
Jul 13 12:12:05 <argent0>	different to 'map minmax [gametree ...]'
Jul 13 12:12:56 *	gxt (~gxt@gateway/tor-sasl/gxt) has joined
Jul 13 12:13:12 <argent0>	in the later case there is no root node as: `data Tree a = Node a [Tree a]`
Jul 13 12:13:22 <argent0>	and you only have [Tree a]
Jul 13 12:14:26 *	oish_ has quit (Ping timeout: 258 seconds)
Jul 13 12:17:09 <crestfallen>	argent0, sorry one moment I just closed all my windows. THANKS ....
Jul 13 12:18:00 *	b0b1_ (~b0b1@45.5.195.129) has joined
Jul 13 12:19:17 *	dale (~dale@unaffiliated/dale) has joined
Jul 13 12:19:25 <crestfallen>	argent0, this is a book example Functors haven't been covered yet...
Jul 13 12:19:30 <crestfallen>	also
Jul 13 12:20:26 *	b0b1 has quit (Ping timeout: 268 seconds)
Jul 13 12:20:54 *	fmixing (~fmixing@5.18.219.156) has joined
Jul 13 12:21:30 <crestfallen>	argent0, please indicate the line number of my error
Jul 13 12:22:57 *	Neo-- (~neo@77.38.35.238) has joined
Jul 13 12:25:26 *	dale has quit (Quit: My computer has gone to sleep)
Jul 13 12:25:36 *	oish_ (~charlie@84.16.242.77) has joined
Jul 13 12:26:18 *	cosimone (~cosimone@2001:b07:ae5:db26:9520:741c:a5e9:2223) has joined
Jul 13 12:26:26 *	dale (~dale@unaffiliated/dale) has joined
Jul 13 12:27:10 *	tristah (~tristah@bl23-118-235.dsl.telepac.pt) has joined
Jul 13 12:28:48 *	oish has quit (Ping timeout: 245 seconds)
Jul 13 12:28:48 *	Tuplanolla has quit (Read error: Connection reset by peer)
Jul 13 12:30:29 <ski>	crestfallen : i don't see the problem with your first two examples
Jul 13 12:30:54 <ski>	crestfallen : however, i think that "the root node is dropped" suggests a misunderstanding about what that example does
Jul 13 12:31:19 *	darjeeling_ (~darjeelin@c-73-97-157-215.hsd1.wa.comcast.net) has joined
Jul 13 12:33:51 *	perrier-jouet has quit (Quit: WeeChat 2.5)
Jul 13 12:34:13 *	chadd has quit (Ping timeout: 245 seconds)
Jul 13 12:34:27 *	quarters has quit (Changing host)
Jul 13 12:34:27 *	quarters (Elite20921@unaffiliated/quarters) has joined
Jul 13 12:34:27 *	quarters has quit (Changing host)
Jul 13 12:34:27 *	quarters (Elite20921@gateway/shell/elitebnc/x-biaeenjtylyfdtcd) has joined
Jul 13 12:35:38 *	rsoeldner has quit (Remote host closed the connection)
Jul 13 12:35:47 *	grumble has quit (Quit: Don't forget to like, comment and subscribe!)
Jul 13 12:35:59 *	vimto (~vimto@unaffiliated/vimto) has joined
Jul 13 12:36:00 *	b0b1_ has quit (Quit: leaving)
Jul 13 12:36:10 *	p0lyph3m (~p0lyph3m@2a02:810d:640:776c:76d7:55f6:f85b:c889) has joined
Jul 13 12:36:38 <crestfallen>	ski really appreciate it hold on please
Jul 13 12:36:48 *	ski holds off
Jul 13 12:37:23 <crestfallen>	you're saying the root node is not dropped 
Jul 13 12:40:06 *	dfeuer (~dfeuer@wikimedia/Dfeuer) has joined
Jul 13 12:40:15 <crestfallen>	ski the root node needs to be included in the list, since it is getting labeled as well with all the child nodes
Jul 13 12:43:10 <crestfallen>	that was "hold on" btw
Jul 13 12:43:13 *	durumi (~quassel@pool-173-79-209-241.washdc.fios.verizon.net) has joined
Jul 13 12:43:23 *	darjeeling_ has quit (Ping timeout: 245 seconds)
Jul 13 12:44:45 *	CSP-SOFTWARE (~uwx@172.245.163.218) has joined
Jul 13 12:45:03 *	grumble (~grumble@freenode/staff/grumble) has joined
Jul 13 12:46:20 <nshepperd>	crestfallen: at line 164, what is 'ts'?
Jul 13 12:47:16 *	yyy- (~yyy@unaffiliated/tinnotl) has joined
Jul 13 12:47:30 *	ggole has quit (Quit: Leaving)
Jul 13 12:47:57 *	acarrico has quit (Ping timeout: 245 seconds)
Jul 13 12:49:10 <crestfallen>	a member helped me with this nshepperd the other day. I believe it is ...
Jul 13 12:49:46 *	ilikeheaps has quit (Ping timeout: 246 seconds)
Jul 13 12:50:08 <crestfallen>	given the 'initial grid' I have commented on line 133 ...
Jul 13 12:51:16 *	laem has quit (Ping timeout: 268 seconds)
Jul 13 12:51:50 *	s00pcan_ (~chris@104.254.90.86) has joined
Jul 13 12:52:23 *	s00pcan has quit (Ping timeout: 258 seconds)
Jul 13 12:52:37 *	s00pcan_ is now known as s00pcan
Jul 13 12:53:14 <ski>	crestfallen : "the root node" is included in both of the first two examples in your paste
Jul 13 12:53:54 *	unfixpoint (d13a90e7@209.58.144.231) has joined
Jul 13 12:53:58 *	laem (~laem@unaffiliated/laem) has joined
Jul 13 12:55:17 *	Tuplanolla (~Tuplanoll@91-157-159-198.elisa-laajakaista.fi) has joined
Jul 13 12:55:27 <crestfallen>	http://sprunge.us/s8XtGV this is the result I get with map minimax [(gametree [initial grid] O)]
Jul 13 12:56:02 <crestfallen>	ski you mean the 2 commented lines in the notes?
Jul 13 12:56:38 <ski>	how about with your first example, `minimax (gametree [[O,O,B],[X,X,O],[X,O,B]] O)' ?
Jul 13 12:57:32 *	njay0009 has quit (Ping timeout: 252 seconds)
Jul 13 12:57:50 *	njay0009 (~androirc@2401:4900:2349:4519:c1d:7d41:9199:d0f7) has joined
Jul 13 12:58:07 <argent0>	`map f [a] == [f a]`
Jul 13 12:58:22 <crestfallen>	ski nshepperd so yeah I think I see what's happening ...
Jul 13 12:58:40 <ski>	can you explain it, in your own words ?
Jul 13 12:58:59 <crestfallen>	that's exactly what I want to do, I can ...
Jul 13 12:59:38 <crestfallen>	because of the data Tree a definition ...
Jul 13 13:00:30 <crestfallen>	there is a pattern match occurring ...
Jul 13 13:00:50 <crestfallen>	so ... 
Jul 13 13:02:02 <halogenandtoast>	are there any builtins that do something like (a, b, c) -> (a, b) ?
Jul 13 13:02:33 <halogenandtoast>	I assume not, but figured I would ask
Jul 13 13:02:37 <halogenandtoast>	easy enough function to write
Jul 13 13:02:43 <ski>	halogenandtoast : hm, someone asked that recently (as in within the last two weeks)
Jul 13 13:02:45 <fresheyeball>	halogenandtoast: what is a builtin?
Jul 13 13:02:58 <halogenandtoast>	fresheyeball: something in the base package
Jul 13 13:03:07 <fresheyeball>	Then no
Jul 13 13:03:29 <ski>	halogenandtoast : i figured out two "advanced" ways to do it (for fun), but i think the conclusion was that a lambda was probably the best way
Jul 13 13:03:45 <halogenandtoast>	I essentially want the (year, month) from a UTCTime
Jul 13 13:03:50 <crestfallen>	so without map and the gametree argument in brackets, minimax (gametree arguments) leaves out the root node but the Node constructor remains. So we don't want this latter scenario.
Jul 13 13:03:58 *	ralejs (~ralejs@185.69.144.107) has joined
Jul 13 13:04:05 <halogenandtoast>	toGregorian gives me (y,m,d) but I wanted to drop the d
Jul 13 13:04:07 <ski>	  \(year,month,_day) -> (year,month)
Jul 13 13:04:15 <fresheyeball>	Does anyone have a good understanding of what GC waiting means in threadscope?
Jul 13 13:04:15 <dmwit>	But UTCTime is not a triple?
Jul 13 13:04:18 <crestfallen>	ski nshepperd ^
Jul 13 13:04:29 <halogenandtoast>	dmwit: toGregorian turns it into one
Jul 13 13:04:38 *	cosimone has quit (Quit: WeeChat 2.4)
Jul 13 13:04:45 <halogenandtoast>	well toGregorian . utctDay
Jul 13 13:04:52 <ski>	crestfallen : "without map and the gametree argument in brackets, minimax (gametree arguments) leaves out the root node" -- no, that's not what's happening
Jul 13 13:05:19 <dmwit>	Anyway, \(a,b,c) -> (a,b) is about as good as it gets.
Jul 13 13:05:30 <dmwit>	There are other ways, with some libraries, but even those other ways aren't really better.
Jul 13 13:05:41 <halogenandtoast>	dmwit, ski: Thanks for the confirmation
Jul 13 13:05:54 *	agnki has quit (Ping timeout: 272 seconds)
Jul 13 13:06:01 <dmwit>	And arguably giving meaningful names like \(y,m,d) -> (y,m) is pretty decent documentation of what you're doing.
Jul 13 13:07:42 <crestfallen>	it doesn't leave out the root node, but map needs to iterate over the list, so the root node must be included within the brackets
Jul 13 13:08:10 *	jgt1 has quit (Ping timeout: 252 seconds)
Jul 13 13:08:17 <mpickering>	Is there an empty constraint of kind `* -> * -> Constraint` defined in `generics-sop`?
Jul 13 13:08:32 <halogenandtoast>	anything I could improve here (given a list of timestamps, I want to find which day occurs the most for each month): https://gist.github.com/halogenandtoast/a98ba6eb28233d50448927ac30e89455
Jul 13 13:08:47 *	cosimone (~cosimone@2001:b07:ae5:db26:9520:741c:a5e9:2223) has joined
Jul 13 13:09:29 *	kupi (uid212005@gateway/web/irccloud.com/x-zhtbraexouqrnrwj) has joined
Jul 13 13:10:03 *	nshepperd2 (~nshepperd@gorgon.zlkj.in) has joined
Jul 13 13:10:44 *	lucasb has quit (Quit: Connection closed for inactivity)
Jul 13 13:11:49 *	oish (~charlie@84.16.242.77) has joined
Jul 13 13:12:21 *	Ariakenom has quit (Quit: Leaving)
Jul 13 13:12:33 <halogenandtoast>	I did find it particularly fun to have a use for uncurry3
Jul 13 13:13:22 *	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has joined
Jul 13 13:13:53 *	Jesin has quit (Quit: Leaving)
Jul 13 13:14:01 *	butterthebuddha has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jul 13 13:14:15 *	fphilipe_ (~phil@81.6.34.65) has joined
Jul 13 13:14:37 *	khisanth_ has quit (Ping timeout: 258 seconds)
Jul 13 13:15:00 *	oish_ has quit (Ping timeout: 258 seconds)
Jul 13 13:15:09 <ski>	crestfallen : yes
Jul 13 13:15:16 *	dfeuer has quit (Ping timeout: 244 seconds)
Jul 13 13:15:40 *	ryantrinkle has quit (Ping timeout: 246 seconds)
Jul 13 13:15:57 <int-e>	Your code traverses the list 12 times. That's a bit wasteful.
Jul 13 13:16:14 *	sagax has quit (Quit: Konversation terminated!)
Jul 13 13:16:16 *	ralejs has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jul 13 13:16:35 <crestfallen>	ski ok thanks, there's something wrong though I believe ...
Jul 13 13:17:13 <crestfallen>	I changed the initial grid and the behavior looks different
Jul 13 13:17:20 *	N3RGY (~n3rgy@rrcs-50-74-182-107.nyc.biz.rr.com) has joined
Jul 13 13:17:26 <int-e>	halogenandtoast: I would map each timestamp to a (month, day) pair, and then count those (probably using Data.Map.Strict.fromListWith), and then extract the result from that.
Jul 13 13:18:02 *	N3RGY has quit (Client Quit)
Jul 13 13:18:16 *	N3RGY (~N3RGY@rrcs-50-74-182-107.nyc.biz.rr.com) has joined
Jul 13 13:18:30 <halogenandtoast>	int-e: I'll look into using fromListWith
Jul 13 13:19:24 *	fphilipe_ has quit (Ping timeout: 244 seconds)
Jul 13 13:19:51 <int-e>	(possibly using Vector instead of Data.Map.Strict: https://hackage.haskell.org/package/vector-0.12.0.3/docs/Data-Vector.html#v:accum)
Jul 13 13:20:01 *	Jesin (~Jesin@pool-72-83-101-226.washdc.east.verizon.net) has joined
Jul 13 13:21:20 *	oish_ (~charlie@84.16.242.77) has joined
Jul 13 13:21:47 *	argent0 has quit (Remote host closed the connection)
Jul 13 13:22:17 *	agander has quit (Ping timeout: 258 seconds)
Jul 13 13:23:22 <crestfallen>	so ski, on the lhs on line 164, is ts already fully in brackets due to the definition of data Tree a , or does map apply the brackets around (gametree [initial grid] O)    ?
Jul 13 13:23:31 <crestfallen>	sorry rhs *
Jul 13 13:24:33 *	oish has quit (Ping timeout: 248 seconds)
Jul 13 13:26:20 *	oish (~charlie@84.16.242.77) has joined
Jul 13 13:27:35 <dmwit>	halogenandtoast: I commented with how I'd do it.
Jul 13 13:27:39 *	wroathe has quit (Ping timeout: 258 seconds)
Jul 13 13:28:17 *	oish_ has quit (Ping timeout: 248 seconds)
Jul 13 13:28:22 *	forgottenone has quit (Quit: Konversation terminated!)
Jul 13 13:28:25 *	njay0009 has quit (Ping timeout: 276 seconds)
Jul 13 13:28:32 *	njay0009 (~androirc@2401:4900:234a:692e:7b4e:960f:164c:4276) has joined
Jul 13 13:28:33 <nshepperd2>	'in brackets' is rather the wrong question... is the misunderstanding about how map and lists work?
Jul 13 13:29:28 *	agander (agander@gateway/vpn/protonvpn/agander) has joined
Jul 13 13:30:57 *	oish has quit (Ping timeout: 248 seconds)
Jul 13 13:30:58 *	agander_ (~agander@193.46.28.34) has joined
Jul 13 13:31:12 *	Madderote (~madderote@2001:1c03:12:200:21de:91be:2bb4:4de) has joined
Jul 13 13:31:20 *	oish (~charlie@84.16.242.77) has joined
Jul 13 13:31:56 <crestfallen>	nshepperd2, I'm trying to understand exactly what (Node g ts) looks like on line 160, to see how map minimax ts works
Jul 13 13:32:00 *	argent0 (~argent0@191.81.239.3) has joined
Jul 13 13:32:28 *	sagax (~sagax_nb@213.138.71.146) has joined
Jul 13 13:32:32 *	khisanth_ (~Khisanth@pool-108-46-4-129.nycmny.east.verizon.net) has joined
Jul 13 13:32:32 *	subttle (~anonymous@unaffiliated/subttle) has joined
Jul 13 13:33:37 *	njay0009 has quit (Ping timeout: 276 seconds)
Jul 13 13:33:56 <crestfallen>	I'm confused about ts , partially because gametree is not passed into minimax explicitly.
Jul 13 13:33:57 *	njay0009 (~androirc@2401:4900:2349:a9ad:7066:1c31:cd63:73ac) has joined
Jul 13 13:34:03 *	tristah has quit (Quit: Lost terminal)
Jul 13 13:34:08 <crestfallen>	nshepperd2, ^
Jul 13 13:34:10 *	agander has quit (Ping timeout: 258 seconds)
Jul 13 13:34:23 *	tristah (~tristah@bl23-118-235.dsl.telepac.pt) has joined
Jul 13 13:34:25 *	Neuromancer is now known as tibdit
Jul 13 13:34:33 *	Wamanuz has quit (Ping timeout: 258 seconds)
Jul 13 13:34:44 *	lnostdal has quit (Quit: "Fascism, Nazism, Communism and Socialism are only superficial variations of the same monstrous theme—collectivism." -- Ayn Rand)
Jul 13 13:35:28 *	BaneAliens has quit (Ping timeout: 245 seconds)
Jul 13 13:35:40 *	Madderote has quit (Ping timeout: 252 seconds)
Jul 13 13:35:44 <halogenandtoast>	dmwit: Thanks, definitely interesting to see another approach.
Jul 13 13:36:08 *	lnostdal (~lnostdal@77.70.119.51) has joined
Jul 13 13:36:21 *	oish_ (~charlie@84.16.242.77) has joined
Jul 13 13:36:29 *	BaneAliens (~BaneAlien@c-67-180-76-129.hsd1.ca.comcast.net) has joined
Jul 13 13:36:49 *	oish has quit (Ping timeout: 248 seconds)
Jul 13 13:37:44 *	N3RGY has quit (Remote host closed the connection)
Jul 13 13:38:57 *	agander_ has quit (Read error: Connection reset by peer)
Jul 13 13:39:05 *	N3RGY (~N3RGY@rrcs-50-74-182-107.nyc.biz.rr.com) has joined
Jul 13 13:39:56 *	dmwit ponders writing `data MapWithKey a where MapWithKey :: Map k v -> MapWithKey (k,v)` just to have something to hang a Foldable instance off of
Jul 13 13:40:27 *	jeyr (~jeyr@103.218.227.234) has joined
Jul 13 13:40:40 *	Wamanuz (~wamanuz@78-70-34-81-no84.tbcn.telia.com) has joined
Jul 13 13:41:11 <N3RGY>	Hey all, I recently wrote a little minimal Haskell command line tool to perform set/map operations on text files. Would appreciate any comments/suggestions. https://github.com/wyager/smap
Jul 13 13:41:39 <N3RGY>	It's basically intended to replace sort, uniq, awk, etc. for my day-to-day text munging
Jul 13 13:43:13 *	donotturnoff has quit (Ping timeout: 248 seconds)
Jul 13 13:44:55 *	SoundLogic (~SoundLogi@97-88-43-13.dhcp.roch.mn.charter.com) has joined
Jul 13 13:45:50 <fresheyeball>	holy crap 
Jul 13 13:45:55 <fresheyeball>	profiling haskell is so painful
Jul 13 13:46:07 *	oish_ has quit (Ping timeout: 246 seconds)
Jul 13 13:46:11 <crestfallen>	nshepperd2, I think I see. map is not iterating over the root node, there is only Node remaining before the list begins. The root node is already labeled with O. map iterates once it hits the first bracket and cannot iterate over Node ([initial grid],O)
Jul 13 13:46:14 <fresheyeball>	does anyone know where there is a doc that just tells you how to read the report?
Jul 13 13:46:18 *	Tuplanolla has quit (Read error: Connection reset by peer)
Jul 13 13:46:20 <fresheyeball>	what does "productivity" mean?
Jul 13 13:46:28 <fresheyeball>	I can't even find the basics in the docs
Jul 13 13:46:34 <N3RGY>	What are you reading fresheyball? The output of +RTS -s?
Jul 13 13:46:45 <N3RGY>	I believe productivity is percent of time not spent GCing
Jul 13 13:46:53 *	oish (~charlie@88.202.183.24) has joined
Jul 13 13:46:57 *	Tuplanolla (~Tuplanoll@91-157-159-198.elisa-laajakaista.fi) has joined
Jul 13 13:46:59 *	nist778 (~nist778@181.231.53.134) has joined
Jul 13 13:47:06 <crestfallen>	is that correct nshepperd2 ^   ?
Jul 13 13:47:10 *	mastarija (~mastarija@cm-2160.cable.globalnet.hr) has joined
Jul 13 13:47:21 *	nist778 (~nist778@181.231.53.134) has left
Jul 13 13:47:26 <fresheyeball>	N3RGY: yes, but really I want to know where to doc is that describes productivity
Jul 13 13:47:41 *	nist778 (~nist778@181.231.53.134) has joined
Jul 13 13:47:42 <fresheyeball>	what is MUT? where is the doc that explains what any of this output actually means?
Jul 13 13:48:32 <N3RGY>	fresheyeball: This isn't really intended for in-depth profiling. You should build with profiling enabled and look at the file generated by +RTS -p
Jul 13 13:48:53 <N3RGY>	That will give you a really in-depth and easy to understand breakdown
Jul 13 13:49:24 *	butterthebuddha (~butterthe@35.1.206.49) has joined
Jul 13 13:49:40 <N3RGY>	Well, easy to understand unless the optimizer does its job a bit too well :)
Jul 13 13:51:24 <mastarija>	Anyone working on a Windows machine? I'm having a problem when I run my servant project in GHCi (with cabal new-repl). I start my servant server from GHCi for testing, but when I attempt to interrupt it by pressing Ctrl+c I seemingly shut down whole GHCi instead of just servant / warp function and get kicked out into a windows prompt. If I try to type some commands, terminal switches between GHCi and the console and half of a command 
Jul 13 13:51:24 <mastarija>	goes to GHCi and half goes to the host windows terminal.
Jul 13 13:51:39 <argent0>	N3RGY: https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/runtime_control.html
Jul 13 13:52:14 *	jeyr has quit (Quit: jeyr)
Jul 13 13:52:16 <N3RGY>	argent0: I think you mean @fresheyeball
Jul 13 13:52:17 <argent0>	fresheyeball: ^
Jul 13 13:52:41 <halogenandtoast>	dmwit, int-e: based on your suggestions and/or encouragement, I rewrote it to this (which I think looks nicer): https://gist.github.com/halogenandtoast/a98ba6eb28233d50448927ac30e89455
Jul 13 13:52:47 *	ilikeheaps (~sushi@176.120.120.135.telemedia.pl) has joined
Jul 13 13:52:49 <nshepperd2>	crestfallen: maybe, but you've described it strangely so I'm not sure
Jul 13 13:53:03 <halogenandtoast>	will probably change some $ around there
Jul 13 13:53:35 <nshepperd2>	crestfallen: what map does is: it takes a function, and a list, and it applies the function to each value in the list, and returns a list of the results
Jul 13 13:54:25 *	khisanth_ has quit (Ping timeout: 248 seconds)
Jul 13 13:54:49 *	jgt1 (~jgt@2a02:a31b:8542:b480:1d1b:9699:687e:24f9) has joined
Jul 13 13:54:57 *	vlatkoB has quit (Remote host closed the connection)
Jul 13 13:55:04 *	njay0009 has quit (Ping timeout: 276 seconds)
Jul 13 13:55:14 *	njay0009 (~androirc@2401:4900:234b:619f:2e47:2d0d:6c41:9741) has joined
Jul 13 13:55:21 *	fendor (~fendor@bl7-138-102.dsl.telepac.pt) has joined
Jul 13 13:56:33 <nshepperd2>	> let friends = ["moon", "mouse", "house"] in map ("goodnight " ++) friends  -- crestfallen, for example
Jul 13 13:56:37 <lambdabot>	 ["goodnight moon","goodnight mouse","goodnight house"]
Jul 13 13:56:37 *	knupfer (~Thunderbi@200116b824e2f000f69634fffef0b45f.dip.versatel-1u1.de) has joined
Jul 13 13:58:26 *	alp (~alp@2a01:e35:242b:9f0:2900:164:9af4:dbf0) has joined
Jul 13 13:58:49 *	khisanth_ (~Khisanth@pool-108-46-4-129.nycmny.east.verizon.net) has joined
Jul 13 13:58:52 <int-e>	halogenandtoast: looks reasonable to me, except that you almost definitely should use Data.Map.Strict to avoid the accumulation of thunks of the for 1+1+1+...+1 in the map.
Jul 13 13:59:37 *	jgt1 has quit (Ping timeout: 276 seconds)
Jul 13 13:59:45 <nshepperd2>	crestfallen: when you see "map minimax ts", you should think "Ah, ts is a list. But a list of what?"
Jul 13 14:00:02 *	Logan_ has quit ()
Jul 13 14:01:06 *	jgt1 (~jgt@2a02:a31b:8542:b480:1d1b:9699:687e:24f9) has joined
Jul 13 14:01:29 <halogenandtoast>	int-e: I am importing those function from Data.Map.Strict
Jul 13 14:02:14 <crestfallen>	nshepperd2, yes that's the trouble .. thanks ...
Jul 13 14:02:56 <crestfallen>	it's a list of child nodes, not including the "head" which is the root node
Jul 13 14:03:06 <c_wraith>	based on the name "minimax", I'd assume it's possible next moves in a game
Jul 13 14:03:08 *	BaneAliens has quit (Read error: Connection reset by peer)
Jul 13 14:03:11 <halogenandtoast>	int-e: but that is a good point to keep in mind for why to use strict there
Jul 13 14:03:26 <int-e>	halogenandtoast: oj. the paste had Data.Map which is the lazy one.
Jul 13 14:03:33 *	BaneAliens (~BaneAlien@c-67-180-76-129.hsd1.ca.comcast.net) has joined
Jul 13 14:04:03 <halogenandtoast>	int-e: you must mean the comment from dmwit
Jul 13 14:04:20 <halogenandtoast>	I didn't list any imports in my gist
Jul 13 14:05:15 *	ryantrinkle (~ryan@cpe-68-173-35-198.nyc.res.rr.com) has joined
Jul 13 14:06:28 *	jgt1 has quit (Ping timeout: 252 seconds)
Jul 13 14:06:28 <dmwit>	halogenandtoast: Looks a lot better!
Jul 13 14:06:43 <dmwit>	halogenandtoast: bimap id = fmap, by the way
Jul 13 14:07:09 <nshepperd2>	crestfallen: so 'ts' is the list of child nodes, which means 'map minimax ts' is...? (note: to properly answer this question you will first need to answer "what does minimax do, conceptually? what is its input and output?")
Jul 13 14:07:17 <dmwit>	(and likely fmap = map, though I haven't managed to do all the mental type inference needed to be sure yet)
Jul 13 14:07:56 <halogenandtoast>	dmwit: right, that's true here (it's on a tuple so I don't think map works since that is specialized to list)
Jul 13 14:07:57 *	tristah has quit (Quit: Lost terminal)
Jul 13 14:08:13 <int-e>	halogenandtoast: maybe
Jul 13 14:08:48 <dmwit>	map definitely won't work if it's a tuple.
Jul 13 14:08:50 <int-e>	halogenandtoast: indeed. paying attention to nicks is hard.
Jul 13 14:08:51 <dmwit>	But fmap still will.
Jul 13 14:09:14 *	khisanth_ has quit (Ping timeout: 272 seconds)
Jul 13 14:10:40 *	tabemann has quit (Ping timeout: 276 seconds)
Jul 13 14:11:01 *	ht_ has quit (Quit: ht_)
Jul 13 14:12:02 *	blas_ (~blas@80-162-27-72-cable.dk.customer.tdc.net) has joined
Jul 13 14:12:07 <ysangkok>	how do i find out why cabal v2-build wants to build a certain package? i found some instructions using ghc-pkg, but that only covers installed stuff, right?
Jul 13 14:12:46 *	blas_ is now known as flatMapper
Jul 13 14:12:57 <ysangkok>	i am trying to build hie-lsif with cabal-install from master and somehow it is building cabal-doctest (which seems depreacted since cabal now has its own doctest). so i want to find out why this dependency is being built
Jul 13 14:13:16 *	Sonderblade has quit (Quit: Konversation terminated!)
Jul 13 14:13:37 *	flatMapper has quit (Client Quit)
Jul 13 14:13:40 <__monty__>	ysangkok: cabal-plan usually helps with that.
Jul 13 14:13:58 <crestfallen>	c_wraith, nshepperd2  still working really appreciate it. it's dawning on me.
Jul 13 14:14:09 *	khisanth_ (~Khisanth@pool-108-46-4-129.nycmny.east.verizon.net) has joined
Jul 13 14:14:54 *	flatMapper (~blas@80-162-27-72-cable.dk.customer.tdc.net) has joined
Jul 13 14:15:02 *	flatMapper (~blas@80-162-27-72-cable.dk.customer.tdc.net) has left
Jul 13 14:15:28 *	fphilipe_ (~phil@81.6.34.65) has joined
Jul 13 14:17:20 *	xkapastel has quit (Quit: Connection closed for inactivity)
Jul 13 14:17:27 *	jjb2 (~jjb@w.kuhu.org) has joined
Jul 13 14:18:24 *	nineonine has quit (Remote host closed the connection)
Jul 13 14:18:28 *	bmull (~brent@65.129.91.43) has joined
Jul 13 14:19:20 *	nineonine (~nineonine@64-46-10-64.dyn.novuscom.net) has joined
Jul 13 14:20:03 <crestfallen>	nshepperd2, what it's doing is determining whether to label a child node with 'O' or 'X' 
Jul 13 14:20:41 *	fphilipe_ has quit (Ping timeout: 268 seconds)
Jul 13 14:21:18 *	yyy- has quit (Ping timeout: 245 seconds)
Jul 13 14:21:30 *	danvet has quit (Ping timeout: 252 seconds)
Jul 13 14:22:40 <crestfallen>	so it starts iterations more shallow in the tree, and goes down in depth until the winning base case is reached nshepperd2 
Jul 13 14:23:28 *	nineonine has quit (Ping timeout: 244 seconds)
Jul 13 14:23:32 <nshepperd2>	crestfallen: it may be a productive exercise to go through every identifier in the definition of 'minimax' and write down 1. its name 2. its type 3. what it means. for example "ts is of type [Tree Grid], and is the list of child nodes (possible next moves) of the input to minimax"
Jul 13 14:24:09 <nshepperd2>	crestfallen: so for minimax, the input is _? and the output is _?
Jul 13 14:24:38 <crestfallen>	ok, what I wrote above is that correct nshepperd2 ?
Jul 13 14:25:32 *	fendor has quit (Ping timeout: 258 seconds)
Jul 13 14:26:58 *	dansho (~dansho4@71-84-161-204.dhcp.astr.or.charter.com) has joined
Jul 13 14:27:28 *	oish has quit (Ping timeout: 268 seconds)
Jul 13 14:28:05 *	descender has quit (Ping timeout: 268 seconds)
Jul 13 14:29:26 *	tristah (~tristah@bl23-118-235.dsl.telepac.pt) has joined
Jul 13 14:29:47 <ocharles>	Can anyone here remember the name of the package that gives you IO, but with a kind of "data types a la carte" approach to split it up (e.g., IO that can only use IORefs)
Jul 13 14:29:58 <ocharles>	it's *somewhere* on Hackage and quite old, but I can't remember the name of the damn thing
Jul 13 14:30:43 <__monty__>	ocharles: Something like Free or Freer?
Jul 13 14:31:05 <ocharles>	Nothing quite that general
Jul 13 14:31:09 *	durumi has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
Jul 13 14:31:12 <ocharles>	but that idea
Jul 13 14:31:44 <nshepperd2>	crestfallen: by 'it' you meant "map minimax ts" in the above?
Jul 13 14:32:38 *	butterthebuddha has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jul 13 14:34:17 <crestfallen>	yes that is the meat of the program that eventually passes the empty list to the two guards with the wins function nshepperd2 
Jul 13 14:34:46 <crestfallen>	for lack of a better way to say it
Jul 13 14:35:19 *	tibdit is now known as Neuromancer
Jul 13 14:35:33 <ocharles>	__monty__: I think it's this: https://hackage.haskell.org/package/base-io-access-0.4.0.0/docs/Access-System-CPUTime.html
Jul 13 14:35:40 *	butterthebuddha (~butterthe@35.1.206.49) has joined
Jul 13 14:36:27 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Jul 13 14:36:45 <ocharles>	Oh no, it's https://hackage.haskell.org/package/IOSpec
Jul 13 14:37:14 <nshepperd2>	crestfallen: then yes, sort of. but you've described it in a very imperative way. minimax takes as input a game tree, and produces the same game tree with each node labeled with the winning player, right?
Jul 13 14:38:16 *	uelen[m]1 (uelenmatri@gateway/shell/matrix.org/x-xyaboqgzbbpvzxxj) has joined
Jul 13 14:39:35 <nshepperd2>	crestfallen: ts is the list of children, so map minimax ts is a list of the children labeled with the winning player
Jul 13 14:40:41 <nshepperd2>	i think haskell programs are best understood by those sort of "is" statements
Jul 13 14:40:52 *	wroathe has quit (Ping timeout: 245 seconds)
Jul 13 14:41:15 <ysangkok>	__monty__: thanks, works!
Jul 13 14:42:15 *	Lycurgus (~niemand@98.4.103.219) has joined
Jul 13 14:42:20 <crestfallen>	only the child nodes of the winning player is ultimately returned? nshepperd2 
Jul 13 14:42:26 <crestfallen>	are*
Jul 13 14:42:32 *	yaewa has quit (Quit: Leaving...)
Jul 13 14:43:01 <crestfallen>	from map minimax ts I mean
Jul 13 14:43:14 *	takuan has quit (Remote host closed the connection)
Jul 13 14:43:35 *	is_null (~jpic@pdpc/supporter/professional/is-null) has joined
Jul 13 14:43:51 *	fmixing has quit (Remote host closed the connection)
Jul 13 14:44:16 *	butterthebuddha has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jul 13 14:44:30 *	fmixing (~fmixing@5.18.219.156) has joined
Jul 13 14:45:26 <nshepperd2>	crestfallen: all of the child nodes are included. i mean that they are labeled with the player that would win if you started from the node's state
Jul 13 14:47:14 <__monty__>	ysangkok: np
Jul 13 14:47:49 <nshepperd2>	crestfallen: eg. (Node [[X,X,X],[B,O,O],[B,B,O]]] []) would be labeled with X. because that grid is one where X has won
Jul 13 14:48:20 *	Shouou (~Shou@89.34.165.49) has joined
Jul 13 14:48:30 *	azahi has quit (Quit: ZNC - http://znc.in)
Jul 13 14:48:38 *	azahi (~azahi@2001:19f0:5001:29f2:5400:1ff:fed1:4b27) has joined
Jul 13 14:48:38 *	azahi has quit (Changing host)
Jul 13 14:48:38 *	azahi (~azahi@unaffiliated/azahi) has joined
Jul 13 14:48:49 *	fmixing has quit (Ping timeout: 248 seconds)
Jul 13 14:49:13 *	rfold has quit (Ping timeout: 245 seconds)
Jul 13 14:49:22 *	nineonine (~nineonine@64-46-10-64.dyn.novuscom.net) has joined
Jul 13 14:51:41 <crestfallen>	yes copy that. really appreciate it nshepperd2 . a final remark ... 
Jul 13 14:52:53 <crestfallen>	the way data Tree a is structured makes it difficult to see how map is traversing the list. do you agree?
Jul 13 14:53:13 *	blas_ (~blas@80-162-27-72-cable.dk.customer.tdc.net) has joined
Jul 13 14:53:32 *	blas_ has quit (Client Quit)
Jul 13 14:54:12 *	nineonine has quit (Ping timeout: 272 seconds)
Jul 13 14:55:03 *	Goplat (~goplat@reactos/developer/Goplat) has joined
Jul 13 14:55:14 *	knupfer has quit (Ping timeout: 252 seconds)
Jul 13 14:55:34 <nshepperd>	not really
Jul 13 14:55:46 <nshepperd>	are you familiar with list comprehensions?
Jul 13 14:56:48 <crestfallen>	yes
Jul 13 14:56:49 <nshepperd>	a different way to write 'map minimax ts' which means exactly the same thing is [minimax child | child <- ts]
Jul 13 14:58:49 *	butterthebuddha (~butterthe@35.1.206.49) has joined
Jul 13 14:59:11 <crestfallen>	thanks kindly I'm going to go over that tonight nshepperd . it looks like a welcome addition 
Jul 13 14:59:29 *	wroathe (~wroathe@23-30-253-203-static.hfc.comcastbusiness.net) has joined
Jul 13 15:00:39 *	jgt1 (~jgt@2a02:a31b:8542:b480:1d1b:9699:687e:24f9) has joined
Jul 13 15:02:21 *	bmull has quit (Read error: No route to host)
Jul 13 15:02:22 *	__monty__ has quit (Quit: leaving)
Jul 13 15:02:40 *	N3RGY has quit (Remote host closed the connection)
Jul 13 15:02:40 *	bmull (~brent@65.129.91.43) has joined
Jul 13 15:02:46 *	dansho has quit (Ping timeout: 246 seconds)
Jul 13 15:02:53 *	flatMapper (~blas@80-162-27-72-cable.dk.customer.tdc.net) has joined
Jul 13 15:03:36 *	hololeap (~hololeap@unaffiliated/hololeap) has joined
Jul 13 15:03:56 *	khorben1 (~khorben@139.28.218.198) has joined
Jul 13 15:05:10 *	jgt1 has quit (Ping timeout: 252 seconds)
Jul 13 15:05:16 *	njay0009 has quit (Ping timeout: 276 seconds)
Jul 13 15:05:40 *	njay0009 (~androirc@2401:4900:2348:379a:179d:b1a9:1a08:e09d) has joined
Jul 13 15:05:53 *	flatMapper has quit (Read error: Connection reset by peer)
Jul 13 15:07:51 *	asymptotically has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
Jul 13 15:08:43 *	flatMapper (~blas@80-162-27-72-cable.dk.customer.tdc.net) has joined
Jul 13 15:09:10 *	yyy- (~yyy@unaffiliated/tinnotl) has joined
Jul 13 15:10:24 *	uelen[m] (uelenriotf@gateway/shell/matrix.org/x-amddwbyjypaxtsha) has joined
Jul 13 15:10:24 *	fendor (~fendor@bl7-138-102.dsl.telepac.pt) has joined
Jul 13 15:11:00 *	njay0009 has quit (Ping timeout: 252 seconds)
Jul 13 15:11:43 Python interface unloaded
**** ENDING LOGGING AT Sat Jul 13 15:11:43 2019

**** BEGIN LOGGING AT Sun Jul 21 12:22:35 2019

Jul 21 12:22:35 *	Now talking on #haskell
Jul 21 12:22:35 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Jul 21 12:22:35 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Jul 21 12:22:35 *	Channel #haskell url: http://www.haskell.org/
Jul 21 12:22:44 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Jul 21 12:23:58 *	ChanServ removes channel operator status from glguy
Jul 21 12:24:42 *	ChanServ removes channel operator status from glguy[m]
Jul 21 12:24:50 *	oish_ has quit (Ping timeout: 248 seconds)
Jul 21 12:24:50 *	Lord_of_Life has quit (Ping timeout: 248 seconds)
Jul 21 12:24:58 *	Lord_of_Life_ is now known as Lord_of_Life
Jul 21 12:25:52 *	o1lo01ol1o has quit (Ping timeout: 245 seconds)
Jul 21 12:26:00 <crestfallen>	hi quick question: I have these notes on logical constructors. on line 47 is that how I would express Nothing: " Left () (True) " , at least in the context of those notes preceding? thanks     https://github.com/varreli/haskell/blob/master/logic/03.txt
Jul 21 12:26:21 *	glguy[m] has quit (Quit: issued !quit command)
Jul 21 12:26:29 *	oish_ (~charlie@84.16.242.71) has joined
Jul 21 12:26:43 *	oish has quit (Ping timeout: 245 seconds)
Jul 21 12:27:01 *	fragamus has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jul 21 12:27:37 *	hololeap (~hololeap@unaffiliated/hololeap) has joined
Jul 21 12:27:57 *	slack1256 (~slack1256@186-78-86-209.baf.movistar.cl) has joined
Jul 21 12:28:24 *	wroathe has quit (Ping timeout: 268 seconds)
Jul 21 12:30:04 <crestfallen>	i.e. is (True) ~ a      in that line?
Jul 21 12:30:25 <crestfallen>	that looks wrong to me
Jul 21 12:31:10 *	raichoo (~raichoo@dslb-178-009-073-015.178.009.pools.vodafone-ip.de) has joined
Jul 21 12:31:35 *	Stanley00 has quit (Remote host closed the connection)
Jul 21 12:31:45 *	yqt (~yqt@81.88.230.28) has joined
Jul 21 12:32:15 *	sushi_ is now known as ilikeheaps
Jul 21 12:32:35 *	Guest25 (~textual@136.61.128.155) has joined
Jul 21 12:33:08 *	Max (~max@cpe-94-253-230-46.st.cable.xnet.hr) has joined
Jul 21 12:33:31 *	Max is now known as Guest64822
Jul 21 12:33:49 <ski>	crestfallen : i have no idea why they wrote `(True)' on that line
Jul 21 12:34:31 *	phreedom (~quassel@gateway/tor-sasl/phreedom) has joined
Jul 21 12:34:48 <slack1256>	What are the common complains against the singletons kind (heh) of type level programming? I've been playing with agda lastly and surely it's more ergonomic to refer to the same `f` at term level and type-level, but it makes difficult to know when types are erased
Jul 21 12:34:49 *	wildlander has quit (Quit: Konversation terminated!)
Jul 21 12:35:07 <ski>	crestfallen : ignoring that, i'd say `Nothing ~ Left ()' and `Right a ~ a' is misleading, since they used `~' before for isomorphism, but here it clearly doesn't mean that
Jul 21 12:35:50 <Cale>	slack1256: It's just awkward to the point that what it's buying you typically isn't worth what it's costing you. Haskell's type level is not an ergonomic place to program.
Jul 21 12:36:06 *	oish (~charlie@84.16.242.71) has joined
Jul 21 12:36:14 *	merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Jul 21 12:36:35 <ski>	crestfallen : also i have no idea why they wrote `Bool = R unit T | L unit F' (in particular), it looks weird to me
Jul 21 12:36:52 *	Guest25 has quit (Client Quit)
Jul 21 12:37:17 <crestfallen>	ski thanks kindly one moment
Jul 21 12:38:50 *	Lord_of_Life has quit (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
Jul 21 12:39:02 <ski>	crestfallen : writing the sum notation as `oo Sum n = 0  a^n' looks confusing to me. i think they should either use something like the LaTeX notation, or just law it out two-dimensionally (in ascii)
Jul 21 12:39:13 *	oish_ has quit (Ping timeout: 244 seconds)
Jul 21 12:39:55 <ski>	crestfallen : oh, and in the end, they say e.g. `1 + a + 2a + 3a (...)', but surely they really meant `1 + a + a^2 + a^3 (...)' ?
Jul 21 12:40:04 <Cale>	slack1256: Also, usually in cases where it *is* getting you something, there tends to be a way to use GADTs and end up with something much nicer. I use a lot of DMap and DSum, but avoid singletons.
Jul 21 12:40:07 *	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has joined
Jul 21 12:40:46 *	merijn has quit (Ping timeout: 244 seconds)
Jul 21 12:41:31 <ski>	(crestfallen : and why do they say `[singleton]' instead of `[a]' ? .. but they haven't explained the notation like `[a,a]',`[a,a,a]', what it's meant to denote)
Jul 21 12:41:51 *	Stanley00 (~Stanley00@unaffiliated/stanley00) has joined
Jul 21 12:42:23 *	portnov has quit (Remote host closed the connection)
Jul 21 12:42:32 *	orion (~orion@c-76-19-238-5.hsd1.nh.comcast.net) has joined
Jul 21 12:42:32 *	orion has quit (Changing host)
Jul 21 12:42:32 *	orion (~orion@unaffiliated/orion) has joined
Jul 21 12:42:36 <ski>	crestfallen : perhaps they have the right ideas (probably they have at least some), but at least the presentation looks confused to me. which suggests that perhaps also some of the thinking may be confused
Jul 21 12:42:50 *	wroathe (~wroathe@23-30-253-203-static.hfc.comcastbusiness.net) has joined
Jul 21 12:43:22 <ski>	crestfallen : this is of course not a whole-sale criticism, they do show they have gotten some ideas (right)
Jul 21 12:44:14 <ski>	(crestfallen : also, it's often not that simple to explain things. especially not to an audience you're not used to addressing)
Jul 21 12:44:36 *	oish_ (~charlie@84.16.242.71) has joined
Jul 21 12:44:53 <crestfallen>	ski thanks some of that notation is my own little private sort.. including singleton [there] .. I will fix the a^2,a^3 part ... let me fix line 47 if you're still on the channel in a bit .. thanks
Jul 21 12:45:10 <crestfallen>	oops I meant [singleton]
Jul 21 12:45:17 *	rsoeldner has quit (Remote host closed the connection)
Jul 21 12:46:46 <crestfallen>	ski so if I get rid of (True) on line 47 ... thats what looked wrong..
Jul 21 12:47:46 *	oish has quit (Ping timeout: 248 seconds)
Jul 21 12:48:05 <ski>	crestfallen : the connection between the (binary) sum type being associative, and this `Triple' type (which really ought to include the `data' keyword in its definition, since it's using the Haskell Algebraic Data Type syntax) isn't clear
Jul 21 12:48:59 <wroathe>	Is there a way to configure how record accessors get generated in Haskell?
Jul 21 12:49:16 <ski>	(also, sometimes `=' seems to be used for type isomorhism, sometimes `~' ? is there a reason for having two notations for what seems to be the same thing ? if they're meant to be the same, it would be less confusing to consistently use the same notation, in the document)
Jul 21 12:49:24 <wroathe>	Like if I have a data Foo f = Foo { a :: f Int, b :: f String }
Jul 21 12:49:32 <wroathe>	and a function that goes from a Foo Maybe -> Foo Identity
Jul 21 12:50:02 <wroathe>	I'd prefer a and b to implicitly runIdentity, rather than having to deal with Identity in the consuming code
Jul 21 12:50:03 *	Lord_of_Life has quit (Ping timeout: 245 seconds)
Jul 21 12:50:59 <ski>	(i'm not sure why some of the type equations are commented out)
Jul 21 12:51:14 *	oish (~charlie@84.16.242.71) has joined
Jul 21 12:51:26 *	___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
Jul 21 12:51:29 *	ggVGc (~ggVGc@unaffiliated/walt) has joined
Jul 21 12:51:43 <ski>	also, perhaps `()  +  ()' ought to be `Either () ()' ? why mix the mathy notation of `+' with the non-mathy Haskell notation of `()' ?
Jul 21 12:52:00 *	thunderrd (~thunderrd@61.7.186.104) has joined
Jul 21 12:52:26 <Cale>	wroathe: You can do some BS with a type family that special-cases Identity, but I don't think I can recommend it.
Jul 21 12:52:27 *	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has joined
Jul 21 12:53:05 <crestfallen>	ski thanks one sec you've given me a lot to consider.
Jul 21 12:53:13 <Cale>	(It will make it more annoying to write programs which operate on general Foo f values)
Jul 21 12:53:29 <ski>	crestfallen : btw, the `Nothing ~ Left ()' and `Right a ~ a' suggests thinking about the correspondence at the level of values, for the isomorphism in question. but then i'd rather rename `a' to `x' there, to stress that it's not a type (variable) (not being the same as the tyvar `a' just mentioned before)
Jul 21 12:54:13 <ski>	crestfallen : unless the reader is already clear with this distinction, not using a separate name there may well continue to confuse this matter in their head
Jul 21 12:54:17 <wroathe>	Cale: Yeah... I think I might just need to have two ADTs, one pre-validation with Maybe fields, and one post-validation
Jul 21 12:54:38 *	oish_ has quit (Ping timeout: 258 seconds)
Jul 21 12:54:39 <wroathe>	Config and ValidConfig, or something like that
Jul 21 12:54:45 <ski>	crestfallen : similarly, i think the notation `[a,a]',`[a,a,a]' seems to suggest a similar confusion between types and values of those types
Jul 21 12:54:51 <crestfallen>	ski which lines are you referring to here? :     the connection between the (binary) sum type being associative, and this `Triple' type (which really ought to include the `data' keyword in its definition, since it's using the Haskell Algebraic Data Type syntax) isn't clear
Jul 21 12:55:40 *	phreedom has quit (Ping timeout: 260 seconds)
Jul 21 12:56:24 *	knupfer (~Thunderbi@200116b82c039000f69634fffef0b45f.dip.versatel-1u1.de) has joined
Jul 21 12:56:38 <ski>	crestfallen : the only lines that mention "associative" and `Triple', close to the top
Jul 21 12:57:43 *	kaiser0 has quit (Quit: Leaving)
Jul 21 12:57:46 *	oish_ (~charlie@84.16.242.71) has joined
Jul 21 12:57:51 <ski>	crestfallen : oh, and `(+)   a  ()  = a' is actually incorrect (apart from using a confusing mix of notations)
Jul 21 12:59:01 <ski>	hm, and `data Either () a' should probably not use the `data' keyword, since it's not a `data' type definition
Jul 21 12:59:03 <wroathe>	Cale: Actually nevermind. I'm being dumb. I just need to stop with this Semigroup Maybe stuff and that'll solve all my problems :P
Jul 21 12:59:30 <crestfallen>	oh man ..
Jul 21 13:00:23 <ski>	(the last derivation with `L(a)' is missing a closing bracket .. and i'm not quite sure what the `OO' at the end is supposed to mean. presumably it has something to do with infinity, but what ?)
Jul 21 13:00:53 *	oish has quit (Ping timeout: 245 seconds)
Jul 21 13:01:16 <crestfallen>	I was trying to emulate the math notation in vim editor. it just means infinite list I guess
Jul 21 13:01:39 *	Guest64822 has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jul 21 13:01:44 *	jathan (~jathan@conference/debconf/x-ogmplsubhtgkliqb) has joined
Jul 21 13:01:46 *	heatsink (~heatsink@2600:1700:bef1:5e10:99df:281c:7081:36d7) has joined
Jul 21 13:01:47 *	o1lo01ol1o (~o1lo01ol1@178.221.62.94.rev.vodafone.pt) has joined
Jul 21 13:02:04 <ski>	i would probably just have written `= ...' on the next row, if they just meant to suggest that we can expand this further, along the same pattern
Jul 21 13:02:31 <ski>	(and then perhaps follow that with `= 1 + a + a^2 + a^3 + ...' on the next row)
Jul 21 13:02:39 *	howdoi has quit (Quit: Connection closed for inactivity)
Jul 21 13:02:56 *	fragamus (~textual@adsl-99-155-168-153.dsl.scrm01.sbcglobal.net) has joined
Jul 21 13:03:18 <ski>	`(a, (List a) )' could be just `(a,List a)' (redundant brackets in the former)
Jul 21 13:04:12 *	Max___ (~max@cpe-94-253-230-46.st.cable.xnet.hr) has joined
Jul 21 13:04:18 <ski>	crestfallen : i suppose those are most of the things that immediately strike my mine as being strange in this text
Jul 21 13:04:31 <ski>	s/my mine/me/
Jul 21 13:04:37 *	revprez_1nzio has quit (Ping timeout: 245 seconds)
Jul 21 13:05:37 *	revprez_anzio (~revprez_a@static-173-76-190-156.bstnma.ftas.verizon.net) has joined
Jul 21 13:05:38 <ski>	(then, one could perhaps argue about related things that could be added, perhaps structure of the presentation, perhaps explanations or elaborations)
Jul 21 13:06:35 *	oofp (63e5807f@CPE64777d6265e3-CM64777d6265e0.cpe.net.cable.rogers.com) has joined
Jul 21 13:06:42 *	o1lo01ol1o has quit (Ping timeout: 245 seconds)
Jul 21 13:06:49 <crestfallen>	ok I'm going to fix everything you've mentioned to the best of my knowledge. though I'm still sketchy on your comments re: isomorphism. 
Jul 21 13:06:51 <crestfallen>	ski
Jul 21 13:07:15 <ski>	do you mean re `Triple' ?
Jul 21 13:08:08 *	Max___ has quit (Client Quit)
Jul 21 13:08:14 <ski>	crestfallen : not all of the things i mentioned are necessarily bad things about the presentation. but may require further elaboration about what you intend
Jul 21 13:08:23 *	oish (~charlie@84.16.242.71) has joined
Jul 21 13:08:33 *	vjacob (~vjacob@95.168.185.225) has joined
Jul 21 13:08:41 <crestfallen>	well, when I wrote "up to isomorphism", I was just parroting the speaker on a video. so I don't really understand that section with Triple.
Jul 21 13:09:37 <ski>	oh .. also, i suppose usually one'd say "commutative", rather than "symmetric", for non-relations
Jul 21 13:10:05 <crestfallen>	I was sort of trying to get the notes down . the speaker used symmetric .. non-relations ??
Jul 21 13:10:16 <ski>	anyway, commutativity of addition in math is usually expressed like `x + y = y + x'. and associativity like `(x + y) + z = x + (y + x)'
Jul 21 13:10:28 <crestfallen>	copy that
Jul 21 13:10:44 <ski>	you could talk about what the latter equation would mean, in terms of `Either'
Jul 21 13:11:07 <ski>	then, to what extent this would be related to this `Triple' type, would perhaps be a further comment
Jul 21 13:11:09 <crestfallen>	yes that last point I get
Jul 21 13:11:46 *	oish_ has quit (Ping timeout: 244 seconds)
Jul 21 13:12:13 <crestfallen>	second to last*
Jul 21 13:12:50 *	fphilipe_ has quit (Ping timeout: 248 seconds)
Jul 21 13:15:03 *	falafel (~falafel@cm-93-156-183-162.telecable.es) has joined
Jul 21 13:15:37 *	o1lo01ol1o (~o1lo01ol1@178.221.62.94.rev.vodafone.pt) has joined
Jul 21 13:15:43 *	nineonine (~nineonine@64-46-10-64.dyn.novuscom.net) has joined
Jul 21 13:16:27 <ski>	well, if you say, in an integral domain, that `m | n' ("`m' divides `n'") is to mean that there is some `k' such that `k * m = n'. and then further you define `m ~ n' ("`m' is associated to `n'") to mean that both `m | n' and `n | m'
Jul 21 13:17:05 <ski>	then this `~' relation satisfies `m ~ n  <=>  n ~ m'. we would say that the relation is symmetric
Jul 21 13:17:20 <ski>	we could also say it is commutative
Jul 21 13:18:01 <ski>	but, as far as i have seen, people tend to (mostly ?) reserve the term "symmetric", when they talk about relations
Jul 21 13:18:40 <ski>	(well, there's stuff like "symmetric polynomials", which would seem to violate this)
Jul 21 13:18:47 *	___laika has quit (Ping timeout: 245 seconds)
Jul 21 13:19:38 <crestfallen>	ski well at least I am motivated to get this stuff. But in the larger picture, I understand why logical OR and logical AND are important data types, but in terms of logical reasoning, why is an infinite list important?
Jul 21 13:19:46 *	falafel has quit (Ping timeout: 248 seconds)
Jul 21 13:20:25 *	o1lo01ol1o has quit (Remote host closed the connection)
Jul 21 13:20:48 *	nineonine has quit (Ping timeout: 272 seconds)
Jul 21 13:20:52 *	Thra11 has quit (Quit: WeeChat 2.5)
Jul 21 13:21:22 <crestfallen>	like i.e. how would you use a list in implication, or a simple example?
Jul 21 13:21:24 *	fenedor (~fendor@91.141.2.233.wireless.dyn.drei.com) has joined
Jul 21 13:22:09 <ski>	crestfallen : infinite list ?
Jul 21 13:22:12 *	matheus has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
Jul 21 13:22:15 <Cale>	crestfallen: Well, [a] is trivial as a proposition.
Jul 21 13:22:26 *	ski didn't see any mention of infinite lists, in that document
Jul 21 13:22:33 <Cale>	[] is a proof of it, so if all we care about is truth, it's uninteresting
Jul 21 13:22:49 *	Max___ (~max@cpe-94-253-230-46.st.cable.xnet.hr) has joined
Jul 21 13:23:38 *	mrossinek (~znc@80-218-161-176.dclient.hispeed.ch) has joined
Jul 21 13:24:32 *	matheus (hydraz@unaffiliated/demhydraz) has joined
Jul 21 13:24:35 <lyxia>	phadej: I meant that to do whatever generic-lens "types" does, it has to crawl recursively through all the types that are involved in a given type, that's at least 50% of what is needed to implement what bitonic is looking for.
Jul 21 13:24:36 *	ggole has quit (Quit: Leaving)
Jul 21 13:25:08 *	fendor has quit (Ping timeout: 268 seconds)
Jul 21 13:25:12 *	yyy (~yyy@unaffiliated/tinnotl) has joined
Jul 21 13:25:43 <crestfallen>	yeah an infinite list like the example that the algebra for an infinite list : L(a) = 1 + a * L(a)   
Jul 21 13:25:51 <crestfallen>	that is*
Jul 21 13:26:25 <ski>	that type equation is satisfied by a type `L(a)' of *finite* lists of elements of type `a'
Jul 21 13:26:53 <ski>	(it's also satisfied by a type of infinite lists. the equation has more than one solution)
Jul 21 13:27:01 <sicklorkin>	Does anyone know of a library like `auto-update` but Lifted?
Jul 21 13:27:22 *	fenedor is now known as fendor
Jul 21 13:27:33 *	Max___ has quit (Client Quit)
Jul 21 13:27:43 *	phreedom (~quassel@gateway/tor-sasl/phreedom) has joined
Jul 21 13:27:52 <ski>	`L(a) = 1 + a + a^2 + a^3 + ...' doesn't mean we're talking about infinite lists. it just means every finite length is allowed
Jul 21 13:28:04 *	nineonine (~nineonine@64-46-10-64.dyn.novuscom.net) has joined
Jul 21 13:28:07 *	perrier-jouet has quit (Quit: WeeChat 2.5)
Jul 21 13:28:15 *	nineonine has quit (Remote host closed the connection)
Jul 21 13:28:20 <ski>	(so, that would be unbounded (but finite) lists, in that case)
Jul 21 13:28:36 <Cale>	sicklorkin: can't you just apply liftIO yourself?
Jul 21 13:28:37 *	phreedom has quit (Remote host closed the connection)
Jul 21 13:28:41 *	nineonine (~nineonine@64-46-10-64.dyn.novuscom.net) has joined
Jul 21 13:28:49 <crestfallen>	huh?
Jul 21 13:29:19 *	dale (~dale@unaffiliated/dale) has joined
Jul 21 13:29:28 <crestfallen>	I couldn't have gotten it that wrong. That's why I was using OO there
Jul 21 13:29:43 <sicklorkin>	Cale: humm... do you mean liftbase?
Jul 21 13:30:01 <ski>	crestfallen : oh, so you did mean ``L(a) = 1 + a + a^2 + a^3 + ... + a^oo', then ?
Jul 21 13:30:04 *	heatsink has quit (Remote host closed the connection)
Jul 21 13:30:34 *	heatsink (~heatsink@2600:1700:bef1:5e10:99df:281c:7081:36d7) has joined
Jul 21 13:30:49 <Cale>	sicklorkin: no, just liftIO
Jul 21 13:30:58 <Cale>	sicklorkin: What thing are you trying to lift?
Jul 21 13:31:04 <crestfallen>	yeah I'm pretty certain the video (watched months ago) was describing the algebra of an infinite list
Jul 21 13:31:41 <crestfallen>	so the notation is wrong it should be a^oo
Jul 21 13:31:50 *	phreedom (~quassel@gateway/tor-sasl/phreedom) has joined
Jul 21 13:32:27 <sicklorkin>	Cale: auto-update (Reaper) has a reaperAction function that runs in IO. Inside that IO function I want to run some function that are higher on the stack, specifiy ClientF Free
Jul 21 13:32:56 <ski>	the type of potentially finite lists (also including the infinite ones), is constructed as a coalgebraic type, not an algebraic type
Jul 21 13:33:22 *	AfRc7dIXJ7 has quit (Quit: AfRc7dIXJ7)
Jul 21 13:33:28 *	nineonine has quit (Ping timeout: 272 seconds)
Jul 21 13:33:43 <ski>	the type of finite lists would be `mu r. 1 + a * r', while the other one i just mentioned would be `nu s. 1 + a * s'
Jul 21 13:34:00 <ski>	(the important difference being `mu' vs. `nu'. least vs. greatest fixed point)
Jul 21 13:34:10 <Cale>	sicklorkin: That might not be meaningful -- you'd need to reinterpret your Free ClientF into an IO action
Jul 21 13:34:17 <Cale>	(it's just a weird data structure)
Jul 21 13:35:04 *	falafel (~falafel@128.pool85-48-188.static.orange.es) has joined
Jul 21 13:35:19 <sicklorkin>	Cale: if Reaper ran in MonadBaseControl IO m; for exqample, i'd be fine
Jul 21 13:35:51 <crestfallen>	ski uh oh now the fixed point aspect ...
Jul 21 13:35:53 <Cale>	Would you?
Jul 21 13:35:58 <sicklorkin>	Cale: does that make sense or should I get my rubber ducky out and 
Jul 21 13:36:22 <Cale>	Free isn't an instance of MonadBaseControl IO
Jul 21 13:36:49 *	raichoo has quit (Quit: Lost terminal)
Jul 21 13:36:58 *	merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Jul 21 13:37:15 <Cale>	The thing about MonadBaseControl IO is that it only ever does in a confusing way things that you can easily do by hand.
Jul 21 13:37:25 <ski>	crestfallen : well, the mention of "infinite list" more or less automatically tailed into that :)
Jul 21 13:37:31 <Cale>	(by running monads)
Jul 21 13:37:58 <Cale>	and it often does almost but not quite the right thing
Jul 21 13:38:05 <Cale>	in ways that are hard to predict
Jul 21 13:38:15 <sicklorkin>	Cale: I'm confusing you.. 
Jul 21 13:38:55 <Boarders>	I was testing some benchmarks and came across this behaviour: https://gist.github.com/Boarders/007002d32abf91d10ac12af8335f1fd1
Jul 21 13:39:07 <Cale>	I pretty much always recommend against MonadBaseControl/MonadTransControl because they're an abstraction too far -- making more specific type classes for the higher order operations we want to operate across different monads tends to produce a better result and is less bug-prone.
Jul 21 13:39:21 <Boarders>	The second function here is about four times faster than the first and I wonder if anyone who understand performance matters knows why
Jul 21 13:39:42 *	kritzefitz has quit (Remote host closed the connection)
Jul 21 13:39:42 <ski>	crestfallen : also, perhaps it should be stated, that when we're doing this type algebra thing, we're glossing over that Haskell is not a total language, that there are partial values (like "bottom") in the language. taking these into account the type `Maybe ()' doesn't allow for the same information to be expressed as does `Bool'. because the former has `_|_',`Nothing',`Just _|_',`Just ()' as inhabitants, while the latter only has `_|_',`False',`True'
Jul 21 13:39:52 *	jrm has quit (Ping timeout: 258 seconds)
Jul 21 13:40:12 *	fphilipe_ (~phil@81.6.34.65) has joined
Jul 21 13:40:34 <ski>	however, you could perhaps check out
Jul 21 13:40:35 <ski>	@google fast loose morally correct
Jul 21 13:40:36 <lambdabot>	https://www.cs.ox.ac.uk/jeremy.gibbons/publications/fast+loose.pdf
Jul 21 13:41:01 <Cale>	So, it could be that you really want this Reaper thing to be lifted, but the right way to do that likely isn't to have it use MonadBaseControl/MonadTransControl, but rather for it to have its own type class.
Jul 21 13:41:18 <Cale>	But it's unclear that's really necessary yet :)
Jul 21 13:41:39 <crestfallen>	yes I vaguely follow that. as for fixed-point I understand it as generalized recursion and have an example where I evaluated something by hand.
Jul 21 13:41:43 *	merijn has quit (Ping timeout: 245 seconds)
Jul 21 13:41:54 <sicklorkin>	not Free CLientF.. my stack is `M s = FooT (Bar Baz s)` where Bar has MOnadBase, MOnadBaseControl, MOnadUnlifeIO 
Jul 21 13:42:37 *	justanotheruser has quit (Read error: Connection reset by peer)
Jul 21 13:42:45 *	jneira (501e649b@80.30.100.155) has joined
Jul 21 13:42:54 *	oo_miguel has quit (Quit: WeeChat 1.6)
Jul 21 13:43:35 <Boarders>	could someone remind me how I do -ddump-simpl to a file
Jul 21 13:43:48 <Cale>	-ddump-to-file I think
Jul 21 13:44:14 <sicklorkin>	Cale: I think my best option will be to roll my own task scheduler.
Jul 21 13:44:19 <crestfallen>	ski something like this though I haven't looked at it in a while :   https://github.com/varreli/haskell/blob/master/handEval/fixpoint.hs
Jul 21 13:44:56 <sicklorkin>	Cale: going back to my original query.. are there any other packages that do task scheduling that aren't restricted to IO
Jul 21 13:45:03 <Cale>	sicklorkin: Maybe... but my first question would be "how can I remove this awful dependency on MonadUnliftIO, MonadBaseControl, etc." :D
Jul 21 13:46:14 <sicklorkin>	Cale: Serialise, Async-pool are the main reasons for the monstrosity
Jul 21 13:46:21 *	kingofmemes (~kingofmem@2605:a601:a386:2500:d8b1:e850:25ec:df05) has joined
Jul 21 13:46:40 <sicklorkin>	and Stream
Jul 21 13:46:52 *	knupfer has quit (Ping timeout: 264 seconds)
Jul 21 13:46:55 <Cale>	Well, I've definitely used serialise without...
Jul 21 13:47:17 <sicklorkin>	Cale: yes.. you're right.. i'm miss remembering..
Jul 21 13:47:44 <sicklorkin>	Cale: i'm not sure i'm ready for that refactor quiet yet.
Jul 21 13:47:45 <Cale>	async is exactly the kind of thing I would be extremely worried to use with MonadBaseControl
Jul 21 13:48:20 <sicklorkin>	Cale: tests pass - i made sure to cover this very carefully
Jul 21 13:48:25 <Cale>	Concurrency + running monad transformers automatically is a recipe for making incorrect things happen
Jul 21 13:48:31 *	fragamus has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Jul 21 13:48:40 <sicklorkin>	mvars
Jul 21 13:48:49 <Cale>	It's maybe possibly okay if they're all MonadReaders for things that don't involve mutable state
Jul 21 13:49:11 *	taiite has quit (Quit: WeeChat 2.5)
Jul 21 13:49:13 *	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has joined
Jul 21 13:49:26 <crestfallen>	tbh ski  ,  I cannot read that article. that is way over my head
Jul 21 13:49:28 <sicklorkin>	my types protect me mostly.. forcing readers on one end, writers on the toher
Jul 21 13:49:50 <crestfallen>	but thanks kindly for your help and patience !!
Jul 21 13:50:10 *	jathan has quit (Ping timeout: 248 seconds)
Jul 21 13:50:42 *	o1lo01ol1o (~o1lo01ol1@178.221.62.94.rev.vodafone.pt) has joined
Jul 21 13:51:12 *	chaosmasttter (~chaosmast@p200300C4A70492010000000000000003.dip0.t-ipconnect.de) has joined
Jul 21 13:51:18 *	yyy has quit (Ping timeout: 245 seconds)
Jul 21 13:51:34 <solonarv>	Cale: MonadUnliftIO is fine, all its instances are ReaderT-like
Jul 21 13:51:43 <solonarv>	in fact that is a large portion of why it exists
Jul 21 13:52:33 <Cale>	Even ReaderT-like things aren't necessarily a good idea to auto-lift through
Jul 21 13:52:40 *	d34df00d (~d34df00d@172.58.225.62) has joined
Jul 21 13:53:11 <Cale>	You have to think about what the operations you're lifting really mean, and what the instances are doing.
Jul 21 13:53:55 <d34df00d>	Hi!
Jul 21 13:54:05 <sicklorkin>	Cale: Fortunately for me i'm not performing rocker surgery, so a few hand jerks isn't the end-all.
Jul 21 13:54:31 <sicklorkin>	but all of your points are valid
Jul 21 13:54:47 <d34df00d>	I'm trying to write a Generic implementation for a type class that projects some value of a given type out of a data structure (think the Has pattern for MonadReader).
Jul 21 13:54:49 <Boarders>	I am doing: cabal new-build --ghc-options="-ddump-simpl -ddump-to-file"
Jul 21 13:55:01 <Boarders>	but this produces nothing, could someone let me know what I am doing wrong
Jul 21 13:55:15 <d34df00d>	What'd be the right way to handle product types (:*:), going left if the LHS supports this extraction, and going right otherwise (assuming the RHS supports this extraction)?
Jul 21 13:56:05 *	falafel has quit (Remote host closed the connection)
Jul 21 13:56:17 <wroathe>	Is there something different about performing surgery on rockers than regular surgery?
Jul 21 13:56:33 *	falafel (~falafel@128.pool85-48-188.static.orange.es) has joined
Jul 21 13:56:42 <sicklorkin>	wroathe: one you kill the person the other you kill yourself.
Jul 21 13:56:42 <d34df00d>	wroathe: different neck structure from all the head banging.
Jul 21 13:58:22 *	danvet has quit (Ping timeout: 252 seconds)
Jul 21 13:58:27 <Boarders>	reposting: does anyone know why the let rather than case binding goes about 4 times faster: https://gist.github.com/Boarders/007002d32abf91d10ac12af8335f1fd1
Jul 21 13:58:28 <sicklorkin>	wroathe: furthermore rocket surgery requires several disaplines 
Jul 21 14:00:01 *	qwertytest has quit (Ping timeout: 246 seconds)
Jul 21 14:00:02 *	LoRez1 has quit (Read error: Connection reset by peer)
Jul 21 14:00:03 *	dale has quit (Quit: My computer has gone to sleep)
Jul 21 14:00:48 <d34df00d>	Well, in other words, how do I write an instance of some GClass (l :*: r) that requires either `l` or `r` to implement GClass (but not necessarily both at the same time), and recurses on the corresponding part of the structure depending on which one supports GClass?
Jul 21 14:00:56 <lyxia>	d34df00d: use a type family to compute a boolean that tells you which way to go
Jul 21 14:01:26 <sicklorkin>	Boarders: that's interesting.. can you paste the core too?
Jul 21 14:01:32 Python interface unloaded
Jul 21 14:01:32 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sun Jul 21 14:01:32 2019

**** BEGIN LOGGING AT Sat Aug  3 13:38:25 2019

Aug 03 13:38:25 *	Now talking on #haskell
Aug 03 13:38:25 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Aug 03 13:38:25 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Aug 03 13:38:25 *	Channel #haskell url: http://www.haskell.org/
Aug 03 13:38:45 *	elwyn (~glenn@125.132.36.155) has left
Aug 03 13:39:26 *	nahcetan (~natechan@2600:1702:a20:5610:a854:4e1a:e40a:4186) has joined
Aug 03 13:40:02 *	colluphid has quit (Ping timeout: 245 seconds)
Aug 03 13:40:20 *	rruizt (~rruizt@83-84-23-124.cable.dynamic.v4.ziggo.nl) has joined
Aug 03 13:40:34 <crestfallen>	http://paste.debian.net/1094278/    hi I'm having trouble seeing how the where statement works lines 28-30. I see that its substituting for (++) but I find this very hard to follow. please see lines 18,19 as well, so that I can evaluate it systematically. thanks
Aug 03 13:41:31 <crestfallen>	i.e. I'd like to use the technique on lines 18,19 but am somewhat confused by that
Aug 03 13:42:22 *	colluphid (axel@gateway/vpn/protonvpn/colluphid) has joined
Aug 03 13:42:38 <Cale>	crestfallen: I'm not sure I understand what you're confused by...
Aug 03 13:42:53 <Cale>	You can't actually eliminate the definition of app by substitution because it's recursive
Aug 03 13:43:18 *	dfeuer (~dfeuer@wikimedia/Dfeuer) has joined
Aug 03 13:43:33 <Cale>	(and besides that, you can't match a pattern, so you'd be substituting in a case expression, matching on the fmap g xs)
Aug 03 13:43:42 *	Gurkenglas has quit (Remote host closed the connection)
Aug 03 13:44:05 *	Gurkenglas (~Gurkengla@dslb-178-005-217-175.178.005.pools.vodafone-ip.de) has joined
Aug 03 13:44:07 *	chalkmonster (~chalkmons@unaffiliated/chalkmonster) has joined
Aug 03 13:44:54 <Cale>	You could, however, lift the definition of app out of the where clause, placing it at the top level. It's a useful function on lists in its own right.
Aug 03 13:45:16 *	nahcetan has quit (Ping timeout: 276 seconds)
Aug 03 13:46:12 *	machinedgod has quit (Ping timeout: 272 seconds)
Aug 03 13:46:27 *	cosimone (~cosimone@2001:b07:ae5:db26:5cfc:b197:9d8e:9cbb) has joined
Aug 03 13:46:54 *	cosimone has quit (Client Quit)
Aug 03 13:49:40 <crestfallen>	Cale thanks one moment
Aug 03 13:50:23 *	ford (~bren@121.143.137.20) has joined
Aug 03 13:51:03 <crestfallen>	Cale this is the solution of another member. do you think this is the best/most obvious solution to break the fmap id rule?
Aug 03 13:51:04 *	huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
Aug 03 13:51:36 <Cale>	There's an easier one
Aug 03 13:51:48 <Cale>	fmap g = Nil
Aug 03 13:52:12 *	sternmull has quit (Ping timeout: 258 seconds)
Aug 03 13:53:08 <crestfallen>	tbh I'm pretty confused. line 29 has app Nil ys on the lhs ..
Aug 03 13:53:18 <Cale>	But the one which reverses the list will also fail to have fmap f . fmap g = fmap (f . g)
Aug 03 13:53:32 <Cale>	because the left side will reverse twice, and the right side will reverse only once
Aug 03 13:53:45 *	captjakk has quit (Quit: Leaving...)
Aug 03 13:54:03 <Cale>	Yeah, that's saying that appending Nil to ys results in ys
Aug 03 13:55:28 *	Gurkenglas has quit (Changing host)
Aug 03 13:55:28 *	Gurkenglas (~Gurkengla@unaffiliated/gurkenglas) has joined
Aug 03 13:56:58 *	fphilipe_ has quit (Ping timeout: 272 seconds)
Aug 03 13:58:03 <crestfallen>	so first off, line 26 reverses it the first time, since ' Cons (g x) Nil ' is listed last
Aug 03 13:59:02 *	wildtrees_ is now known as wildtrees
Aug 03 13:59:26 *	fphilipe_ (~phil@81.6.34.65) has joined
Aug 03 13:59:45 *	ford (~bren@121.143.137.20) has left
Aug 03 13:59:47 <Cale>	crestfallen: Yeah, it's saying "In order to fmap g over (Cons x xs), take the result of fmapping g over xs, and append the list (Cons (g x) Nil) to the end
Aug 03 14:00:19 <Cale>	Which will mean that g applied to the first element of the input list ends up at the end of the resulting list.
Aug 03 14:00:38 <crestfallen>	right ok so far so good
Aug 03 14:01:22 <crestfallen>	I'd like to experiment with your suggestion: running app as a separate func...
Aug 03 14:01:36 <crestfallen>	...
Aug 03 14:04:45 *	fphilipe_ has quit (Ping timeout: 268 seconds)
Aug 03 14:04:55 *	_kwstas (~konstanti@ppp079166111192.access.hol.gr) has joined
Aug 03 14:07:52 *	heatsink (~heatsink@2600:1700:bef1:5e10:e969:44bf:5dd1:54dc) has joined
Aug 03 14:08:54 *	conal has quit (Quit: Computer has gone to sleep.)
Aug 03 14:09:54 *	dada_cetacean has quit (Remote host closed the connection)
Aug 03 14:10:01 *	Guest_57 (44ad10ee@cpe-68-173-16-238.nyc.res.rr.com) has joined
Aug 03 14:10:11 <crestfallen>	Cale ok so app works precisely like (++) with our differing type constructors
Aug 03 14:10:12 *	Guest_57 has quit (Remote host closed the connection)
Aug 03 14:10:30 *	vidovic (~seward@121.180.138.156) has joined
Aug 03 14:10:47 <crestfallen>	if I express it correctly
Aug 03 14:11:06 *	hackage can-i-haz 0.1.0.1 - Generic implementation of the Has pattern  https://hackage.haskell.org/package/can-i-haz-0.1.0.1 (0xd34df00d)
Aug 03 14:11:20 <lavalike>	o_O
Aug 03 14:11:40 <crestfallen>	Cale do I speak truthfully?
Aug 03 14:11:54 <Cale>	crestfallen: Yeah, it's an implementation of append on lists
Aug 03 14:12:12 <Cale>	Only for your new list type, rather than the built-in one
Aug 03 14:12:27 <crestfallen>	thanks right. what was your easier solution about?
Aug 03 14:13:33 <Cale>	Well, if fmap g xs = Nil for any xs, then fmap id (Cons u us) = Nil which is not the same as Cons u us
Aug 03 14:14:36 *	captjakk (~captjakk@75-166-173-191.hlrn.qwest.net) has joined
Aug 03 14:14:58 <crestfallen>	hold on please I'm tripping
Aug 03 14:15:35 <crestfallen>	this regards line 29 right?
Aug 03 14:16:13 *	laem_ (~laem@unaffiliated/laem) has joined
Aug 03 14:16:24 <Cale>	no
Aug 03 14:16:39 <crestfallen>	the initial base case
Aug 03 14:16:40 <Cale>	This regards the entirety of the definition of fmap
Aug 03 14:16:54 <Cale>	You could replace the entire definition of fmap with fmap f xs = Nil
Aug 03 14:17:10 <Cale>	and it wouldn't satisfy the law that fmap id xs = xs
Aug 03 14:17:23 <crestfallen>	youre joking hold on trying to see this
Aug 03 14:18:19 *	laem has quit (Ping timeout: 268 seconds)
Aug 03 14:18:33 <crestfallen>	your variable names u us I'm still on that..
Aug 03 14:18:43 <Cale>	They're arbitrary
Aug 03 14:19:00 <crestfallen>	yes thanks working..
Aug 03 14:19:15 <Cale>	If you prefer a concrete example,  fmap id (Cons 1 Nil) = Nil
Aug 03 14:19:29 *	ht_ has quit (Quit: ht_)
Aug 03 14:19:43 *	rom1504 has quit (Quit: WeeChat 1.6)
Aug 03 14:20:05 *	vidovic (~seward@121.180.138.156) has left
Aug 03 14:24:57 *	rom1504 (rom1504@rom1504.fr) has joined
Aug 03 14:26:16 *	heatsink has quit (Remote host closed the connection)
Aug 03 14:26:22 *	nahcetan (~natechan@2600:1702:a20:5610:9027:95a8:229b:39b2) has joined
Aug 03 14:27:48 *	christos (~justus@121.180.138.156) has joined
Aug 03 14:29:39 *	wroathe has quit (Read error: Connection reset by peer)
Aug 03 14:30:26 *	raimondoisd6 (~rudolph@121.180.138.156) has joined
Aug 03 14:31:19 *	hnd^ (hnd@ip98-186-247-88.mc.at.cox.net) has joined
Aug 03 14:31:26 *	xkapastel has quit (Quit: Connection closed for inactivity)
Aug 03 14:31:50 *	supercoven_ has quit (Read error: Connection reset by peer)
Aug 03 14:32:50 *	christos has quit (Ping timeout: 258 seconds)
Aug 03 14:33:08 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Aug 03 14:33:12 <crestfallen>	Cale that last post of yours, you're saying that if you set any lhs to Nil , you'll get Nil
Aug 03 14:33:40 *	heatsink (~heatsink@2600:1700:bef1:5e10:e969:44bf:5dd1:54dc) has joined
Aug 03 14:33:42 *	cosimone (~cosimone@2001:b07:ae5:db26:9520:741c:a5e9:2223) has joined
Aug 03 14:33:44 *	Azel has quit (Ping timeout: 268 seconds)
Aug 03 14:35:35 *	hiroaki has quit (Ping timeout: 268 seconds)
Aug 03 14:35:49 *	descender has quit (Ping timeout: 246 seconds)
Aug 03 14:36:38 *	laem (~laem@unaffiliated/laem) has joined
Aug 03 14:37:02 *	fphilipe_ (~phil@81.6.34.65) has joined
Aug 03 14:38:03 *	laem_ has quit (Ping timeout: 268 seconds)
Aug 03 14:38:18 *	lprd (~jon@92.184.101.27) has joined
Aug 03 14:38:45 *	FreeBirdLjj (~freebirdl@180.172.138.136) has joined
Aug 03 14:39:24 *	s00pcan has quit (Ping timeout: 272 seconds)
Aug 03 14:39:37 *	takuan has quit (Ping timeout: 245 seconds)
Aug 03 14:39:47 *	jeet has quit (Ping timeout: 248 seconds)
Aug 03 14:40:05 *	raimondoisd6 (~rudolph@121.180.138.156) has left
Aug 03 14:40:27 *	wroathe has quit (Ping timeout: 245 seconds)
Aug 03 14:40:37 *	conal (~conal@64.71.133.70) has joined
Aug 03 14:41:49 *	tabemann has quit (Ping timeout: 276 seconds)
Aug 03 14:42:45 *	bolichep has quit (Ping timeout: 250 seconds)
Aug 03 14:42:57 *	FreeBirdLjj has quit (Ping timeout: 245 seconds)
Aug 03 14:43:18 *	enoq has quit (Remote host closed the connection)
Aug 03 14:44:03 *	sbdchd (~sbdchd@pool-96-237-63-46.bstnma.fios.verizon.net) has joined
Aug 03 14:44:31 *	tirrell (~adolphe@59.28.236.34) has joined
Aug 03 14:44:58 <Cale>	crestfallen: Yeah, and in particular, you'll get Nil even if you fmap id over a Cons, which will break the law
Aug 03 14:46:11 *	s00pcan (~chris@75-133-56-178.dhcp.trcy.mi.charter.com) has joined
Aug 03 14:46:39 *	takuan (~takuan@178-118-90-225.access.telenet.be) has joined
Aug 03 14:48:02 *	Ranhir has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
Aug 03 14:48:40 *	chaosmasttter has quit (Ping timeout: 264 seconds)
Aug 03 14:50:20 *	DarTar (~DarTar@141.98.101.133) has joined
Aug 03 14:50:25 *	iphy (uid67735@gateway/web/irccloud.com/x-qofzcstrifowzfop) has joined
Aug 03 14:50:53 *	dfeuer has quit (Ping timeout: 245 seconds)
Aug 03 14:54:19 *	tirrell (~adolphe@59.28.236.34) has left
Aug 03 14:55:12 <crestfallen>	Cale very sorry its not working . please let me paste ... 
Aug 03 14:56:04 <crestfallen>	http://paste.debian.net/1094284/
Aug 03 14:56:36 *	cmgn (~cmgn@87.86.104.116) has joined
Aug 03 14:56:44 *	nineonine has quit (Remote host closed the connection)
Aug 03 14:57:35 *	butterthebuddha has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Aug 03 14:57:41 <crestfallen>	this gives a warning ' No explicit implementation for 'Prelude.fmap'   but then loads .. then when I run fmap id (Cons 1 Nil) I get the Ambiguous occurrence 'fmap' error
Aug 03 14:57:46 *	agander has quit (Ping timeout: 272 seconds)
Aug 03 14:58:25 *	xkapastel (uid17782@gateway/web/irccloud.com/x-pormjzewkotiusdb) has joined
Aug 03 14:58:32 <infinisil>	crestfallen: Indentation matters
Aug 03 14:58:38 <infinisil>	You forgot to indent the fmap definition
Aug 03 14:58:41 <Cale>	crestfallen: You didn't indent your definition of fmap, so it's not part of the instance declaration
Aug 03 14:58:45 <crestfallen>	dangit
Aug 03 14:59:27 <crestfallen>	4 spaces standard in that case?
Aug 03 14:59:37 *	lprd has quit (Ping timeout: 246 seconds)
Aug 03 14:59:53 <Cale>	I usually go with 2 spaces
Aug 03 15:00:01 <infinisil>	2 as well here
Aug 03 15:00:02 *	ski would do two, but different people prefer different amounts
Aug 03 15:00:10 <crestfallen>	getting new error..
Aug 03 15:00:19 <ski>	that's progress :)
Aug 03 15:00:29 <Cale>	It doesn't really matter, so long as it starts in a deeper column and things line up correctly
Aug 03 15:00:30 <crestfallen>	Illegal type signature in instance declaration :)
Aug 03 15:00:52 <crestfallen>	fmap :: (a -> b) -> List a -> List b
Aug 03 15:01:14 <ski>	add `{-# LANGUAGE InstanceSigs #-}' to the top of your file, to allow them
Aug 03 15:01:26 *	heatsink has quit (Remote host closed the connection)
Aug 03 15:01:29 *	kreetx has quit (Ping timeout: 268 seconds)
Aug 03 15:01:33 *	ddellacosta has quit (Quit: WeeChat 2.2)
Aug 03 15:02:20 <_kwstas>	hi there! I have a list `[3,4,5,2,3,4,5]` and I want to take all the elements after the first occurrence of 5. Apart from `dropWhile`, `span` etc (which will require to drop the head) is there any other function in base that can do the desired functionality?
Aug 03 15:03:32 <ski>	> head [xs | 5:xs <- tails [3,4,5,2,3,4,5]]
Aug 03 15:03:35 <lambdabot>	 [2,3,4,5]
Aug 03 15:04:01 *	natechan (~natechan@2600:1702:a20:5610:2c2a:3083:2a35:73e0) has joined
Aug 03 15:04:02 <crestfallen>	ski but why didn't I have that issue with the reverse implementation we all love?
Aug 03 15:04:02 *	panda_man has quit (Quit: Connection closed for inactivity)
Aug 03 15:04:10 *	Thra11 has quit (Ping timeout: 246 seconds)
Aug 03 15:04:17 <Cale>	crestfallen: I think you had the signature commented out
Aug 03 15:04:27 <ski>	`reverse' wasn't a class method ?
Aug 03 15:04:34 <Cale>	crestfallen: Usually you're not allowed to write type signatures inside instance declarations
Aug 03 15:04:40 <Cale>	(without that extension)
Aug 03 15:04:41 <crestfallen>	oh yes thats it Cale
Aug 03 15:04:51 *	ski hasn't been following along, hasn't seen crestfallen's `reverse'
Aug 03 15:04:56 <crestfallen>	so please bear with me..
Aug 03 15:05:08 <Cale>	ski: There was another example fmap which breaks the Functor laws, which also reversed the list, earlier
Aug 03 15:05:11 *	zerotech1 has quit (Ping timeout: 268 seconds)
Aug 03 15:05:22 <crestfallen>	I have to look at the book..
Aug 03 15:05:23 <ski>	i'm not sure they didn't allow such signatures in the base language, to begin with
Aug 03 15:05:54 <ski>	s/sure/sure why/
Aug 03 15:06:04 *	nahcetan has quit (Ping timeout: 264 seconds)
Aug 03 15:06:41 <_kwstas>	ski: thx ,but no, I do not like list comprehensions. I was hoping for an existing function ;)
Aug 03 15:07:46 <crestfallen>	http://paste.debian.net/1094285/   ski
Aug 03 15:09:06 *	hackage cmake-syntax 0.1.0.0 - Parser for the CMake syntax (CMakeLists.txt and .cmake files)  https://hackage.haskell.org/package/cmake-syntax-0.1.0.0 (0xd34df00d)
Aug 03 15:09:19 <ski>	crestfallen : did you try enabling `InstanceSigs', yet ?
Aug 03 15:10:15 *	ddellacosta (~dd@193.148.18.211) has joined
Aug 03 15:11:15 *	fphilipe_ has quit (Ping timeout: 248 seconds)
Aug 03 15:11:23 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Aug 03 15:13:25 *	FreeBirdLjj (~freebirdl@180.172.138.136) has joined
Aug 03 15:14:00 *	fphilipe_ (~phil@81.6.34.65) has joined
Aug 03 15:14:14 *	duncanfjq6 (~ive@p605060-ipngn200412kanazawa.ishikawa.ocn.ne.jp) has joined
Aug 03 15:14:52 *	lambda-11235 has quit (Quit: Bye)
Aug 03 15:15:01 *	mcc has quit (Quit: Nettalk6 - www.ntalk.de)
Aug 03 15:15:22 <crestfallen>	yeah ski that worked thanks .. however I'm trying to understand Cale 's example .. the first rule states that ...
Aug 03 15:15:43 *	wroathe has quit (Ping timeout: 246 seconds)
Aug 03 15:17:24 *	linarcx has quit (Ping timeout: 272 seconds)
Aug 03 15:17:37 <crestfallen>	in ' fmap id = id ' the two id 's are not the same type. we have a -> a and then f a -> f a 
Aug 03 15:17:42 *	takuan has quit (Ping timeout: 244 seconds)
Aug 03 15:17:57 *	FreeBirdLjj has quit (Ping timeout: 245 seconds)
Aug 03 15:17:57 <crestfallen>	which I understand fine
Aug 03 15:18:41 *	cosimone1 (~cosimone@2001:b07:ae5:db26:5cfc:b197:9d8e:9cbb) has joined
Aug 03 15:18:57 *	ski nods
Aug 03 15:20:08 <crestfallen>	so Ca.le's example beginning with {-# LANGUAGE InstanceSigs #-}
Aug 03 15:20:17 *	cosimone1 has quit (Client Quit)
Aug 03 15:20:46 <crestfallen>	what are we doing there? in regards to the reverse fmap breaking the rule
Aug 03 15:20:49 *	_kwstas has quit (Quit: _kwstas)
Aug 03 15:21:17 *	fphilipe_ has quit (Ping timeout: 245 seconds)
Aug 03 15:22:02 <ski>	in that paste, you also reverse the list ?
Aug 03 15:22:11 *	ski isn't sure what crestfallen is asking
Aug 03 15:22:46 *	jao (~jao@pdpc/supporter/professional/jao) has joined
Aug 03 15:22:51 <crestfallen>	Ca.le gave me this as a simpler example of fmap, but I don't see how it relates to the reverse fmap
Aug 03 15:23:05 <infinisil>	crestfallen: `fmap id = id` is just a functor law, and if your type's fmap doesn't work for it, it breaks the law
Aug 03 15:23:26 <infinisil>	And that's the case for the reversing fmap
Aug 03 15:23:29 *	ski assumes Cale might be more equipped to answer what they had in mind
Aug 03 15:24:11 <infinisil>	Because `fmap id [1, 2, 3]` will be `[3, 2, 1]`, whereas according to the functor law it should be `fmap id [1, 2, 3] = id [1, 2, 3] = [1, 2, 3]`
Aug 03 15:24:43 <crestfallen>	that part I understand infinisil 
Aug 03 15:25:39 <infinisil>	Then I don't understand what you don't understand
Aug 03 15:25:41 *	asymptotically has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
Aug 03 15:26:04 *	duncanfjq6 (~ive@p605060-ipngn200412kanazawa.ishikawa.ocn.ne.jp) has left
Aug 03 15:27:56 *	DirefulSalt (DirefulSal@gateway/vpn/privateinternetaccess/direfulsalt) has joined
Aug 03 15:28:19 *	heatsink (~heatsink@2600:1700:bef1:5e10:e969:44bf:5dd1:54dc) has joined
Aug 03 15:28:42 *	gobby (8a3b190b@138.59.25.11) has joined
Aug 03 15:28:44 <gobby>	I'm using `servant-server` and currently I have an API that fetches things from a db. However I would also like to upload images to this db. I understand that I cannot incorporate file uploads to the same API, but I was wondering how is this usually done?Do people usually run a separate API specifically for file uploads and have it listen on a diff
Aug 03 15:28:44 <gobby>	erent port?
Aug 03 15:30:49 <jle`>	gobby: is this a general web architecture question?
Aug 03 15:31:00 <gobby>	jle`, yep
Aug 03 15:31:24 <gobby>	but specific to `servant`
Aug 03 15:31:49 <gobby>	it seems like you can't have file uploads and other HTTP requests in the same `API`
Aug 03 15:32:07 *	griffiergn9 (~bax317@p605060-ipngn200412kanazawa.ishikawa.ocn.ne.jp) has joined
Aug 03 15:32:07 <crestfallen>	infinisil, *sorry*   .    I asked Ca.le if the reversal fmap was the most obvious solution. And I thought he suggested the ' fmap g xs = Nil ' as a simpler solution. so I'm confused once again. ski   
Aug 03 15:32:36 *	ski idly wonders why crestfallen writes "Ca.le", rather than "Cale"
Aug 03 15:32:38 <gobby>	obviously you would want one `API` but I was wondering what is the best practice here
Aug 03 15:32:39 *	griffiergn9 has quit (Client Quit)
Aug 03 15:32:56 <crestfallen>	cuz I pinged him enough today
Aug 03 15:33:09 <crestfallen>	now its *your* turn :)
Aug 03 15:33:22 *	huxing has quit (Remote host closed the connection)
Aug 03 15:33:29 *	huxing_ (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
Aug 03 15:33:30 <ski>	crestfallen : `fmap g xs = Nil' is a simpler solution for *breaking* the law `fmap id = id', yes
Aug 03 15:33:50 <crestfallen>	oh its another way to break the law
Aug 03 15:34:08 *	toblorone (~toblorone@157-131-244-95.fiber.dynamic.sonic.net) has joined
Aug 03 15:35:20 <infinisil>	Even simpler: `fmap = undefined` :)
Aug 03 15:36:06 <crestfallen>	I was asking with something specific in mind, how to implement the reverse fmap, so that is why I was confused. ski thanks ALL I see now. fmap = undefined   ..  ? infinisil 
Aug 03 15:36:42 <infinisil>	`fmap = undefined` is another way to break the functor law, which is even simpler
Aug 03 15:37:19 <ski>	yea, but that's partial, so "cheating" :)
Aug 03 15:38:01 *	pavonia (~user@unaffiliated/siracusa) has joined
Aug 03 15:38:15 *	Max (~max@cpe-94-253-156-229.zg.cable.xnet.hr) has joined
Aug 03 15:38:30 <infinisil>	Fair enough
Aug 03 15:38:39 <crestfallen>	also app Nil ys = ys in the where statement  ..  that's still bugging me
Aug 03 15:38:39 *	Max is now known as Guest33846
Aug 03 15:38:55 <infinisil>	I remember there being some flag or so that warns on undefined's
Aug 03 15:39:08 <merijn>	Or just never use undefined :p
Aug 03 15:39:43 *	gobby has quit (Remote host closed the connection)
Aug 03 15:40:27 <hpc>	holes are better anyway
Aug 03 15:40:55 <hpc>	or error
Aug 03 15:41:06 <merijn>	Yeah, I was thinking holes
Aug 03 15:41:09 <cjay->	how are holes better when you want to implement something else first?
Aug 03 15:41:14 <crestfallen>	that's not a base case then on line 29 , or is it?  http://paste.debian.net/1094278/
Aug 03 15:41:20 <infinisil>	I do like myself some holes to fill
Aug 03 15:41:25 *	jao has quit (Remote host closed the connection)
Aug 03 15:41:46 <merijn>	cjay-: Well, unlike undefined holes have a corresponding warning, so theyre strictly better than undefined :p
Aug 03 15:41:48 <crestfallen>	reel it in .. :)
Aug 03 15:42:27 <cjay->	merijn: yeah, but when working on something else, I don't want my warnings and errors cluttered with other stuff
Aug 03 15:42:52 <merijn>	cjay-: That's why you use -Wno-typed-holes while working on other things and only enable them again at the end :p
Aug 03 15:43:23 *	rruizt has quit (Ping timeout: 245 seconds)
Aug 03 15:43:33 <crestfallen>	never mind I see it. thanks!!
Aug 03 15:43:52 *	Max__ (~max@159.220.75.4) has joined
Aug 03 15:44:02 <cjay->	merijn: what if I want holes while working on the other thing? :p
Aug 03 15:44:20 <merijn>	cjay-: That just disables the warning, not the holes
Aug 03 15:44:58 <cjay->	hmm ok I could use editor integration to query the type of specific holes I guess
Aug 03 15:45:16 *	Guest33846 has quit (Ping timeout: 268 seconds)
Aug 03 15:45:22 <infinisil>	cjay-: Yeah I often use undefined and then let HIE tell me the type of it
Aug 03 15:45:27 <merijn>	You can even use -fdefer-typed-holes to run code that has holes unfilled
Aug 03 15:46:17 *	sullysuh9 (~stanwood@210.99.121.116) has joined
Aug 03 15:46:20 *	rruizt (~rruizt@83-84-23-124.cable.dynamic.v4.ziggo.nl) has joined
Aug 03 15:47:02 *	lprd (~jon@92.184.100.216) has joined
Aug 03 15:47:39 <iqubic>	How?
Aug 03 15:47:48 <iqubic>	Will they just be treated as thunks?
Aug 03 15:47:58 <iqubic>	they == the holes.
Aug 03 15:48:03 <merijn>	iqubic: They'll turn into runtime exceptions
Aug 03 15:48:20 <merijn>	iqubic: So they throw an exception with the warning text at runtime when you try to evaluate them
Aug 03 15:48:31 <merijn>	It's basically -fdefer-type-errors, but for holes only
Aug 03 15:48:31 <iqubic>	Ah. One of the rare times Haskell will produce a runtime exception.
Aug 03 15:49:08 <iqubic>	Does division by 0 throw a runtime error?
Aug 03 15:49:15 <merijn>	yeah
Aug 03 15:49:20 <merijn>	> 5 `div` 0
Aug 03 15:49:22 <lambdabot>	 *Exception: divide by zero
Aug 03 15:50:01 <cjay->	most partial functions throw runtime errors
Aug 03 15:50:41 <ski>	> 5 `mod` 0  -- ought to give `5', imho
Aug 03 15:50:44 <lambdabot>	 *Exception: divide by zero
Aug 03 15:50:47 <iqubic>	Nope.
Aug 03 15:51:04 *	jgt has quit (Ping timeout: 264 seconds)
Aug 03 15:51:32 *	chalkmonster has quit (Quit: WeeChat 2.5)
Aug 03 15:51:33 *	Max__ has quit (Read error: Connection reset by peer)
Aug 03 15:52:07 *	nowhere_man (~pierre@2a01:e35:2fb8:7200:d660:91c8:d729:e155) has joined
Aug 03 15:52:08 *	o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined
Aug 03 15:52:22 <hpc>	> 5 `divMod` 0 -- it comes from this, i suspect
Aug 03 15:52:24 <lambdabot>	 *Exception: divide by zero
Aug 03 15:52:34 *	acidjnk has quit (Ping timeout: 258 seconds)
Aug 03 15:53:35 *	sullysuh9 (~stanwood@210.99.121.116) has left
Aug 03 15:53:38 <nil>	ski: why should 5 mod 0 be 5?
Aug 03 15:53:45 *	fphilipe_ (~phil@81.6.34.65) has joined
Aug 03 15:54:32 *	conal has quit (Quit: Computer has gone to sleep.)
Aug 03 15:58:13 *	zacts (~zacts@dragora/developer/zacts) has joined
Aug 03 15:58:57 <ski>	nil : because ⌜ℤ ∕ (0⋅ℤ)⌝ is isomorphic (as a ring) to ⌜ℤ⌝ ?
Aug 03 15:59:17 *	conal (~conal@64.71.133.70) has joined
Aug 03 16:00:06 <ski>	of course, we still have
Aug 03 16:00:11 <ski>	> 0 * undefined
Aug 03 16:00:15 <lambdabot>	 *Exception: Prelude.undefined
Aug 03 16:00:19 <jle`>	i normally expect x `div` y to never return a value equal to or greater than y
Aug 03 16:00:27 <jle`>	er, `mod`
Aug 03 16:00:28 *	merijn has quit (Ping timeout: 245 seconds)
Aug 03 16:00:32 <nil>	i guess that's true
Aug 03 16:01:11 <ski>	so  d * (n `div` d) + n `mod` d = n  would still fail, when `d = 0'
Aug 03 16:02:27 *	troydm has quit (Ping timeout: 248 seconds)
Aug 03 16:02:48 <crestfallen>	apparently in middle school math, a teacher must accept this as correct:
Aug 03 16:03:09 <crestfallen>	> 8 / 2*(2*2)
Aug 03 16:03:13 <lambdabot>	 16.0
Aug 03 16:03:29 *	Amras (~Amras@unaffiliated/amras0000) has joined
Aug 03 16:03:34 <crestfallen>	since the student should not have to understand precedence rules
Aug 03 16:03:39 <crestfallen>	is that wrong?
Aug 03 16:03:41 <Cale>	> 8/2
Aug 03 16:03:42 *	bolichep (~bolichep@2802:8000:27fc:2f00:f031:b463:7eb6:509a) has joined
Aug 03 16:03:44 <lambdabot>	 4.0
Aug 03 16:03:50 <MarcelineVQ>	is what wrong, specifically
Aug 03 16:03:53 <Cale>	> 4*(2*2)
Aug 03 16:03:55 <lambdabot>	 16
Aug 03 16:03:59 <iqubic>	It's not wrong.
Aug 03 16:04:08 *	shiradz (~shiradz@45.222.25.114) has joined
Aug 03 16:04:22 *	cosimone has quit (Ping timeout: 276 seconds)
Aug 03 16:04:25 <crestfallen>	> div 8 (2*(2*2))
Aug 03 16:04:29 <lambdabot>	 1
Aug 03 16:04:36 <iqubic>	Most middle school math students are required to understand order of operations.
Aug 03 16:04:36 <Cale>	* and / are both infixl 7
Aug 03 16:04:59 <Cale>	If you wanted 8 / (2*(2*2)) you should have written that :)
Aug 03 16:05:02 <iqubic>	> 8 / (2*(2*2)) == div 8 (2*(2*2))
Aug 03 16:05:06 <lambdabot>	 error:
Aug 03 16:05:06 <lambdabot>	     • Ambiguous type variable ‘a0’ arising from the literal ‘8’
Aug 03 16:05:06 <lambdabot>	       prevents the constraint ‘(Num a0)’ from being solved.
Aug 03 16:05:07 *	shiradz has quit (Remote host closed the connection)
Aug 03 16:05:13 <iqubic>	Huh??
Aug 03 16:05:20 <Cale>	There's no way that can typecheck
Aug 03 16:05:25 <iqubic>	Why?
Aug 03 16:05:37 <Cale>	 / can only produce instances of Fractional and div can only produce instances of Integral
Aug 03 16:05:37 *	lprd has quit (Ping timeout: 268 seconds)
Aug 03 16:05:40 <iqubic>	I see.
Aug 03 16:05:46 <ski>	`div' is integral division. `(/)' is exact (more or less) division
Aug 03 16:05:47 *	shiradz (~shiradz@45.222.25.114) has joined
Aug 03 16:05:47 <hpc>	beyond that, it doesn't know what Num instance to use
Aug 03 16:05:54 <Cale>	(and those classes have no instances in common)
Aug 03 16:06:01 *	rosterok has quit (Quit: Connection closed for inactivity)
Aug 03 16:06:10 <iqubic>	> fromIntergral $ 8 / (2*(2*2)) == fromIntergral $ div 8 (2*(2*2))
Aug 03 16:06:13 <lambdabot>	 error:
Aug 03 16:06:13 <lambdabot>	     • Variable not in scope: fromIntergral :: t0 -> t
Aug 03 16:06:13 <lambdabot>	     • Perhaps you meant ‘fromIntegral’ (imported from Prelude)error:
Aug 03 16:06:14 *	petersen has quit (Ping timeout: 268 seconds)
Aug 03 16:06:29 <iqubic>	> fromIntegral $ 8 / (2*(2*2)) == fromIntegral $          div 8 (2*(2*2))
Aug 03 16:06:32 <lambdabot>	 error:
Aug 03 16:06:32 <lambdabot>	     • Couldn't match expected type ‘Integer -> Integer’
Aug 03 16:06:32 <lambdabot>	                   with actual type ‘Bool’
Aug 03 16:06:37 <iqubic>	Huh???
Aug 03 16:06:48 <Cale>	Now your problem is that $ has lower precedence than ==
Aug 03 16:07:02 <iqubic>	> fromIntegral (8 / (2*(2*2))) == fromIntegral          (div 8 (2*(2*2)))
Aug 03 16:07:06 <lambdabot>	 error:
Aug 03 16:07:06 <lambdabot>	     • Ambiguous type variable ‘a0’ arising from a use of ‘fromIntegral’
Aug 03 16:07:06 <lambdabot>	       prevents the constraint ‘(Integral a0)’ from being solved.
Aug 03 16:07:12 <iqubic>	Huh???
Aug 03 16:07:18 *	Clint chuckles.
Aug 03 16:07:34 <iqubic>	look. Numbers are confusing.
Aug 03 16:08:05 <crestfallen>	but if parentheses exist anywhere, shouldn't the student resolve that first, if the precedence is the same? or is that just CS?
Aug 03 16:08:43 <ski>	> 8 `div'` (2*(2*2)) == 8 `div` (2*(2*2))
Aug 03 16:08:47 <lambdabot>	 True
Aug 03 16:09:19 <ski>	(perhaps `fDiv',`fMod',`fDivMod' could have been better names ?)
Aug 03 16:10:04 <jle`>	iqubic: remember that $ is just a normal operator
Aug 03 16:10:30 <jle`>	iqubic: so fromIntegral $ x == y is fromIntegral (x == y)
Aug 03 16:11:10 *	rorochan has quit (Ping timeout: 268 seconds)
Aug 03 16:11:18 <MarcelineVQ>	crestfallen: yes, they should, and would get 16 given 8 / 2*(2*2)
Aug 03 16:11:49 <iqubic>	jle`: I recall that.
Aug 03 16:11:58 *	rorochan (~kinbiko@host-92-29-117-204.as13285.net) has joined
Aug 03 16:12:10 *	o1lo01ol1o has quit (Remote host closed the connection)
Aug 03 16:12:55 <iqubic>	Relevant YouTube video: https://www.youtube.com/watch?v=vaitsBUyiNQ
Aug 03 16:14:36 <MarcelineVQ>	crestfallen: however the precedence isn't the same for the student, pedmas puts division before multplication
Aug 03 16:14:53 *	o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined
Aug 03 16:15:23 <hpc>	i suppose the most complete answer here is
Aug 03 16:15:40 <hpc>	if you're doing computations, write it in the form the computer expects
Aug 03 16:15:54 <hpc>	if you're just writing it on paper, the only consumer of it is people, so write it so people can understand it
Aug 03 16:15:56 <crestfallen>	...
Aug 03 16:16:08 <iqubic>	MarcelineVQ: I think nowadays young students are taught that multiplication and division should be evaluated from left to right.
Aug 03 16:16:24 *	oish (~charlie@88.202.181.11) has joined
Aug 03 16:16:29 <MarcelineVQ>	iqubic: alright, 16 is still correct in that case though
Aug 03 16:16:40 <MarcelineVQ>	8 / 2*(2*2) ~> 8 / 2*4 ~> 4*4 ~> 16
Aug 03 16:16:42 <crestfallen>	iqubic, yeah a NYT article was explaining it according to my landlady
Aug 03 16:16:46 *	bolichep has quit (Ping timeout: 252 seconds)
Aug 03 16:16:52 <iqubic>	Yes. Correct.
Aug 03 16:19:18 *	conal has quit (Quit: Computer has gone to sleep.)
Aug 03 16:19:48 *	rorochan has quit (Ping timeout: 268 seconds)
Aug 03 16:20:17 *	tabemann (~tabemann@rrcs-98-100-171-35.central.biz.rr.com) has joined
Aug 03 16:20:23 *	shiradz has quit (Quit: shiradz)
Aug 03 16:23:58 *	laem has quit (Ping timeout: 246 seconds)
Aug 03 16:23:59 *	laem_ (~laem@unaffiliated/laem) has joined
Aug 03 16:24:18 *	rorochan (~kinbiko@host-92-29-117-204.as13285.net) has joined
Aug 03 16:25:03 *	oish has quit (Ping timeout: 245 seconds)
Aug 03 16:25:37 *	o1lo01ol1o has quit (Remote host closed the connection)
Aug 03 16:26:42 *	fphilipe_ has quit (Ping timeout: 245 seconds)
Aug 03 16:27:07 *	Aftermath has quit (Quit: Connection error?!)
Aug 03 16:27:07 *	tabemann has quit (Read error: Connection reset by peer)
Aug 03 16:27:36 *	tabemann (~tabemann@rrcs-98-100-171-35.central.biz.rr.com) has joined
Aug 03 16:27:49 *	yaroot has quit (Quit: The Lounge - https://thelounge.github.io)
Aug 03 16:28:49 *	fphilipe_ (~phil@81.6.34.65) has joined
Aug 03 16:29:03 *	rorochan has quit (Ping timeout: 268 seconds)
Aug 03 16:31:01 *	siwica (~user@p200300F613D8F50094E3EB8EB824D8E4.dip0.t-ipconnect.de) has joined
Aug 03 16:31:02 *	jgt (~jgt@2a02:a31b:8542:b480:5c6:3cbf:34ba:d7cf) has joined
Aug 03 16:31:04 <siwica>	Is there an irc channel concerned with language-agnostic questions regarding software architecture/design principles/language choice?
Aug 03 16:31:17 *	reactormonk has quit (Ping timeout: 245 seconds)
Aug 03 16:31:32 *	yaroot (~yaroot@softbank126021027007.bbtec.net) has joined
Aug 03 16:32:51 *	merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Aug 03 16:34:02 *	fphilipe_ has quit (Ping timeout: 272 seconds)
Aug 03 16:34:25 *	reactormonk (~tass@ip5f5bf788.dynamic.kabel-deutschland.de) has joined
Aug 03 16:35:10 *	kori has quit (Quit: WeeChat 2.5)
Aug 03 16:35:25 *	jao (~jao@pdpc/supporter/professional/jao) has joined
Aug 03 16:37:41 *	merijn has quit (Ping timeout: 268 seconds)
Aug 03 16:38:45 *	huxing_ has quit (Quit: Going to… sle… ep.)
Aug 03 16:38:49 <crestfallen>	> (2*2)*2 / 8
Aug 03 16:38:51 <lambdabot>	 1.0
Aug 03 16:39:14 <nil>	siwica: ##programming?
Aug 03 16:39:35 *	DirefulSalt has quit (Quit: Leaving)
Aug 03 16:41:03 Python interface unloaded
**** ENDING LOGGING AT Sat Aug  3 16:41:03 2019

**** BEGIN LOGGING AT Sun Aug  4 18:26:32 2019

Aug 04 18:26:32 *	Now talking on #haskell
Aug 04 18:26:32 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Aug 04 18:26:32 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Aug 04 18:26:44 *	Channel #haskell url: http://www.haskell.org/
Aug 04 18:28:36 *	___laika has quit (Ping timeout: 268 seconds)
Aug 04 18:28:54 *	milanj has quit (Quit: This computer has gone to sleep)
Aug 04 18:29:00 <crestfallen>	@let fmap3 :: Applicative f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d; fmap3 g x y z = pure g <*> x <*> y <*> z
Aug 04 18:29:04 <lambdabot>	 Defined.
Aug 04 18:29:32 *	ericsagnes (~ericsagne@2400:7800:4def:9800:124a:7dff:feb2:75fa) has joined
Aug 04 18:29:39 <crestfallen>	how in the holy buddha's mind do I utilize this . anyone thanks
Aug 04 18:30:07 <Cale>	How do you make use of fmap3?
Aug 04 18:30:17 <crestfallen>	yes thanks
Aug 04 18:30:30 <crestfallen>	sorry for my silly preamble
Aug 04 18:30:38 <Cale>	We could use it with the list monad to play Mad Libs
Aug 04 18:31:01 <crestfallen>	monads come next in my book
Aug 04 18:31:25 *	machinedgod (~machinedg@134.41.46.111) has joined
Aug 04 18:32:01 <Cale>	Basically, it's a way to apply a function to the results of 3 actions.
Aug 04 18:32:49 <Cale>	I wouldn't recommend learning Applicative before Monad, since the things which are instances of Applicative but not Monad are few and far between and you almost never have to deal with something in that way.
Aug 04 18:33:11 <lyxia>	> fmap3 (\x y z -> x + y + z) (Just a) (Just b) (Just c)
Aug 04 18:33:14 <lambdabot>	 Just (a + b + c)
Aug 04 18:33:35 <Cale>	> fmap3 (\x y z -> x + y + z) [1,2,3] [40,50,60], [700,800,900]
Aug 04 18:33:38 <lambdabot>	 <hint>:1:47: error: parse error on input ‘,’
Aug 04 18:33:41 <Cale>	> fmap3 (\x y z -> x + y + z) [1,2,3] [40,50,60] [700,800,900]
Aug 04 18:33:44 <lambdabot>	 [741,841,941,751,851,951,761,861,961,742,842,942,752,852,952,762,862,962,743...
Aug 04 18:34:29 <crestfallen>	Dr Hutton is known for solid pedagogic methods . oh thanks studying that lyxia Cale 
Aug 04 18:34:53 <Cale>	Yeah, I wouldn't agree on this one in particular though
Aug 04 18:35:42 <crestfallen>	so the operator (addition) is the same for three variables of the same type...
Aug 04 18:36:27 <jackdk>	Cale: interesting you'd say that. I bounced off Monad a few times, but going via Applicative broke it down into manageable steps. It's not a perfect experiment, since that was the time where I actually wrote out all the instances along the way...
Aug 04 18:36:34 *	care (~ricoriki@59.21.100.134) has joined
Aug 04 18:37:01 <crestfallen>	I'll say one thing kind people... I'm gonna learn this stuff if it kills me
Aug 04 18:37:26 <crestfallen>	I just had a horrible hour. that wasn't in the introduction :)
Aug 04 18:38:17 <Cale>	jackdk: I would suspect it's the instances (and just having examples in general) which helped more than Applicative itself. Understanding the examples is way more important than anything else.
Aug 04 18:38:54 <Cale>	The type of (<*>) is a little fancier than (>>=), because it involves an application of the functor to a function type
Aug 04 18:38:58 <Cale>	:t (<*>)
Aug 04 18:39:01 <lambdabot>	Applicative f => f (a -> b) -> f a -> f b
Aug 04 18:39:05 <Cale>	:t (>>=)
Aug 04 18:39:07 <lambdabot>	Monad m => m a -> (a -> m b) -> m b
Aug 04 18:39:43 <jackdk>	I only recently noticed the following teaching pattern which I quite like: 1. present the typeclass. 2. what things have instances? 3. knowing only that we have an instance, what useful things can we say?
Aug 04 18:40:11 <crestfallen>	thanks anyway I can run with (\x y z -> x + y + z)  hey can you write any of this stuff in terms of lambda calculus? I still don't understand the first chapter of haskellbook
Aug 04 18:40:22 <crestfallen>	but I want to go back to what jackdk just said
Aug 04 18:40:41 <Cale>	Maybe even present the instances first, and give the eventual type class methods without talking about the class at first :)
Aug 04 18:41:02 <crestfallen>	all the stuff about free and bound variables
Aug 04 18:42:40 *	stepnem (~stepnem@185.112.167.114) has joined
Aug 04 18:42:49 <crestfallen>	"  it involves an application of the functor to a function type "   so that takes the lambda expression you wrote above Cale and turns it into an Applicative?
Aug 04 18:43:16 <Cale>	What lambda expression?
Aug 04 18:43:39 <crestfallen>	(\x y z -> x + y + z)
Aug 04 18:43:49 *	care has quit (K-Lined)
Aug 04 18:43:51 <Cale>	Well, first we applied pure to it
Aug 04 18:43:58 <Cale>	pure :: a -> f a
Aug 04 18:44:01 *	FreeBirdLjj (~freebirdl@180.172.138.136) has joined
Aug 04 18:44:08 *	liberiga (~liberiga@gateway/tor-sasl/liberiga) has joined
Aug 04 18:44:35 <crestfallen>	Cale so that is a "computational context" for the expression
Aug 04 18:44:46 <Cale>	That's a pretty terrible word for it
Aug 04 18:44:57 <Cale>	But yeah, if you prefer to call it that
Aug 04 18:44:58 <crestfallen>	oh better than container though?
Aug 04 18:45:05 *	heatsink (~heatsink@2600:1700:bef1:5e10:edfb:794b:7bd5:72c2) has joined
Aug 04 18:45:09 <crestfallen>	I read it, I didn't make it up :)
Aug 04 18:45:47 <crestfallen>	so <*> needs to take that functorial , it can't be a "naked" function
Aug 04 18:45:55 <Cale>	I mean, "container" can be an okay analogy, but the sorts of "container" we end up dealing with are rather weird.
Aug 04 18:46:15 <Cale>	"Computational context" usually doesn't mean anything to anyone starting out though
Aug 04 18:46:38 *	FreeBirdLjj has quit (Remote host closed the connection)
Aug 04 18:46:40 <Cale>	and probably has an even worse chance of being misinterpreted than "container" tbh
Aug 04 18:47:08 *	BaneAliens (~BaneAlien@c-67-180-76-129.hsd1.ca.comcast.net) has joined
Aug 04 18:47:09 <crestfallen>	well "computational context" from what I understand is a structure that is more easily stored in memory, because of its inherent structure
Aug 04 18:47:13 <Cale>	I like referring to the values being manipulated in these cases as "actions"
Aug 04 18:47:28 <crestfallen>	not sure I follow that
Aug 04 18:47:43 *	captjakk (~captjakk@75-166-173-191.hlrn.qwest.net) has joined
Aug 04 18:47:44 <Cale>	So, we can describe pure (or return, from Monad) as taking a value, and producing the action which does nothing except to have that value as its result.
Aug 04 18:48:14 <Cale>	and (<*>) :: Applicative f => f (a -> b) -> f a -> f b
Aug 04 18:48:33 <Cale>	takes an action which produces a function as its result, and an action which produces a potential argument to that function
Aug 04 18:48:45 *	dill (~barthel@121.182.24.185) has joined
Aug 04 18:48:48 <crestfallen>	yikes
Aug 04 18:48:50 <Cale>	and combines them together into an action which does both things and applies the function to the argument
Aug 04 18:49:00 <Cale>	in order to produce its result
Aug 04 18:49:04 *	neightchan (~natechan@2600:1702:a20:5610:c183:be1f:c5cf:8e0d) has joined
Aug 04 18:50:00 *	captjakk has quit (Remote host closed the connection)
Aug 04 18:50:08 <crestfallen>	ie <*> needs the curried function to be in the form of a functorial already
Aug 04 18:50:29 <Cale>	In the case of lists, "performing" or "running" a list, means to pick one element from the list in all possible ways
Aug 04 18:50:31 *	sytherax (~sytherax@203.63.221.152) has joined
Aug 04 18:50:37 <Cale>	Let's take a look at an example:
Aug 04 18:50:55 <Cale>	> [id, (+2), (*2), (^2), (2^)] <*> [5]
Aug 04 18:50:58 <lambdabot>	 [5,7,10,25,32]
Aug 04 18:51:08 <Cale>	> [id, (+2), (*2), (^2), (2^)] <*> [5, 100]
Aug 04 18:51:11 <lambdabot>	 [5,100,7,102,10,200,25,10000,32,1267650600228229401496703205376]
Aug 04 18:51:47 <crestfallen>	thanks so in those cases...
Aug 04 18:51:57 <Cale>	> [f x | f <- [id, (+2), (*2), (^2), (2^)], x <- [5, 100]]
Aug 04 18:52:00 <lambdabot>	 [5,100,7,102,10,200,25,10000,32,1267650600228229401496703205376]
Aug 04 18:52:12 <crestfallen>	the list is already in list structure so we don't need pure
Aug 04 18:52:17 <Cale>	yeah
Aug 04 18:52:18 *	BaneAliens has quit (Ping timeout: 272 seconds)
Aug 04 18:52:26 <Cale>	> pure 5 :: [Integer]
Aug 04 18:52:27 <crestfallen>	ok copy that. that is cool
Aug 04 18:52:29 <lambdabot>	 [5]
Aug 04 18:52:36 *	xff0x has quit (Quit: xff0x)
Aug 04 18:52:44 <crestfallen>	this is key
Aug 04 18:52:53 <Axman6>	> [id, (+2), (*2), (^2), (2^)] <*> [a,b]
Aug 04 18:52:59 <lambdabot>	 mueval-core: Time limit exceeded
Aug 04 18:53:04 <Axman6>	> [id, (+2), (*2), (^2), (2^)] <*> [a,b] :: [Expr]
Aug 04 18:53:10 <lambdabot>	 mueval-core: Time limit exceeded
Aug 04 18:53:13 <Cale>	hmm
Aug 04 18:53:17 <crestfallen>	perdon?
Aug 04 18:53:20 *	Axman6 glares
Aug 04 18:53:23 <Cale>	Ohh, (2^)
Aug 04 18:53:31 <Cale>	is probably problematic with Expr?
Aug 04 18:53:36 <Axman6>	> [id, (+2), (*2), (^2)] <*> [a,b] :: [Expr]
Aug 04 18:53:38 <lambdabot>	 [a,b,a + 2,b + 2,a * 2,b * 2,a * a,b * b]
Aug 04 18:53:50 <Cale>	yeah, it's actually *performing* the exponentiations :D
Aug 04 18:54:03 *	neightchan has quit (Ping timeout: 250 seconds)
Aug 04 18:54:09 <crestfallen>	hold on please..
Aug 04 18:54:26 <crestfallen>	how do we get that first entry: a,b,a  ?
Aug 04 18:54:40 <Cale>	That's the first two entries and part of the third
Aug 04 18:54:50 *	sytherax has quit (Ping timeout: 258 seconds)
Aug 04 18:55:02 *	fphilipe has quit (Ping timeout: 245 seconds)
Aug 04 18:55:26 <Axman6>	> map Just $  [id, (+2), (*2), (^2)] <*> [a,b] :: [Maybe Expr]
Aug 04 18:55:26 *	conal has quit (Quit: Computer has gone to sleep.)
Aug 04 18:55:29 <lambdabot>	 [Just a,Just b,Just (a + 2),Just (b + 2),Just (a * 2),Just (b * 2),Just (a *...
Aug 04 18:55:33 <crestfallen>	don't follow that. dang the cafe is closing :(
Aug 04 18:55:44 <crestfallen>	keep letting them come! fire when ready!
Aug 04 18:56:10 <lyxia>	amazing enthusiasm
Aug 04 18:56:10 *	tabemann has quit (Read error: Connection reset by peer)
Aug 04 18:56:10 <crestfallen>	wait the first 2 entries and part of the third? Cale
Aug 04 18:56:21 <Cale>	List elements are separated by commas
Aug 04 18:56:35 *	acarrico (~acarrico@dhcp-68-142-35-239.greenmountainaccess.net) has joined
Aug 04 18:56:37 *	dill (~barthel@121.182.24.185) has left
Aug 04 18:57:16 *	tabemann (~tabemann@rrcs-162-155-170-75.central.biz.rr.com) has joined
Aug 04 18:57:54 <crestfallen>	thanks kindly I gotta go Cale Axman6 lyxia 
Aug 04 18:57:59 *	tabemann has quit (Remote host closed the connection)
Aug 04 18:58:06 <crestfallen>	that is interesting
Aug 04 18:58:26 Python interface unloaded
Aug 04 18:58:26 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sun Aug  4 18:58:26 2019

**** BEGIN LOGGING AT Sun Aug  4 20:10:42 2019

Aug 04 20:10:42 *	Now talking on #haskell
Aug 04 20:10:43 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Aug 04 20:10:43 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Aug 04 20:10:43 *	Channel #haskell url: http://www.haskell.org/
Aug 04 20:10:53 *	ltriant has quit (Ping timeout: 245 seconds)
Aug 04 20:10:59 <crestfallen>	I wonder if Cale is still on or Axman6 https://paste.ee/p/qNztJ
Aug 04 20:11:13 <crestfallen>	and/or lyxia 
Aug 04 20:11:23 <turab>	do { let collector = if flag then DS1 else DS2 }
Aug 04 20:11:39 <crestfallen>	still don't see what's going on in that paste
Aug 04 20:12:00 <Axman6>	> map Just $  [id, (+2), (*2), (^2)] <*> [a,b] :: [Maybe Expr]
Aug 04 20:12:05 <lambdabot>	 [Just a,Just b,Just (a + 2),Just (b + 2),Just (a * 2),Just (b * 2),Just (a *...
Aug 04 20:12:22 *	lastmanstanding (~arjoonn@103.79.223.74) has joined
Aug 04 20:12:43 <dmwit>	turab: Hm. Does "I was being stupid" imply "I am no longer being stupid and have solved my problem", or should I talk some more?
Aug 04 20:13:36 *	hackage RSolve 2.0.0.0 -   https://hackage.haskell.org/package/RSolve-2.0.0.0 (ice1000)
Aug 04 20:13:44 <turab>	I currently have a work around but it doesn't really use two different data strucutres
Aug 04 20:13:54 *	sytherax (~sytherax@203.63.221.152) has joined
Aug 04 20:14:13 <dmwit>	Okay, I don't really understand why you want to use two different data structures.
Aug 04 20:14:24 *	xff0x (~fox@210.57.57.162) has joined
Aug 04 20:14:34 <dmwit>	I'm also not super certain whether "two different data structures" means "values of two different types" or just "two different values of the same type".
Aug 04 20:15:43 <turab>	Let me ask my question in a different way
Aug 04 20:15:43 <dmwit>	My current operating assumption is that the thing you don't like about this code is the repeated `intercalate "\n" . map show`. Is that actually the case, or is it something else?
Aug 04 20:16:10 <crestfallen>	@let fmap3 :: Applicative f => (a -> b -> c -> d) ->       f a -> f b -> f c -> f d; fmap3 g x y z = pure g <*> x <*> y <*> z
Aug 04 20:16:11 <lambdabot>	 .L.hs:179:1: error:
Aug 04 20:16:11 <lambdabot>	     Duplicate type signatures for ‘fmap3’
Aug 04 20:16:11 <lambdabot>	     at .L.hs:176:1-5
Aug 04 20:16:33 <crestfallen>	@let fmapp :: Applicative f => (a -> b -> c -> d) ->       f a -> f b -> f c -> f d; fmap3 g x y z = pure g <*> x <*> y <*> z
Aug 04 20:16:35 <lambdabot>	 .L.hs:179:1: error:
Aug 04 20:16:35 <lambdabot>	     The type signature for ‘fmapp’ lacks an accompanying binding
Aug 04 20:16:35 <lambdabot>	     |
Aug 04 20:16:37 *	ddellacosta has quit (Ping timeout: 246 seconds)
Aug 04 20:16:39 <turab>	Lets say I was writing a graph traversal program, but I want to be able to decide whether I should use BFS or DFS based on arguments to an executable
Aug 04 20:16:49 <crestfallen>	@let fmapp :: Applicative f => (a -> b -> c -> d) ->       f a -> f b -> f c -> f d; fmapp g x y z = pure g <*> x <*> y <*> z
Aug 04 20:16:50 <lambdabot>	 Defined.
Aug 04 20:17:10 <crestfallen>	Axman6, that's what I started with .. not sure if you saw that ^
Aug 04 20:17:23 *	bolichep has quit (Ping timeout: 248 seconds)
Aug 04 20:17:37 <turab>	My inituition is that I will either pass in a queue or a stack
Aug 04 20:17:57 <dmwit>	If so... `let {(cspedExps, FAS free _) = ...; freeExps = map defineFreeVar free; definitions = (if defineFree then freeExps else mempty) <> cpsedExps}; writeFile op . unlines . map show $ definitions`
Aug 04 20:18:14 <crestfallen>	Axman6, was your example just now essentially the same?
Aug 04 20:18:23 *	sytherax has quit (Ping timeout: 245 seconds)
Aug 04 20:18:59 *	Voker571 (~Voker57@184.75.223.219) has joined
Aug 04 20:20:02 *	otto_s (~user@p4FF27CA8.dip0.t-ipconnect.de) has joined
Aug 04 20:20:45 <turab>	I will continue this discussion again. I feel sleepy and I would rather ask better questions instead of asking bad ones
Aug 04 20:20:50 <dmwit>	(I... wouldn't expect to have to pass a queue or a stack to a search routine. But I'm willing to proceed under the assumption that for some reason the graph library's API has been written to demand this.)
Aug 04 20:22:16 <dmwit>	crestfallen: His example was not particularly related to your fmap3 or fmapp.
Aug 04 20:22:47 *	paquito (~filberte@211.230.83.129) has joined
Aug 04 20:23:14 <Axman6>	> map Just $  [(+), (*), (^)] <*> [a,b] <*> [1,2,3] :: [Maybe Expr]
Aug 04 20:23:16 <lambdabot>	 [Just (a + 1),Just (a + 2),Just (a + 3),Just (b + 1),Just (b + 2),Just (b + ...
Aug 04 20:23:16 *	otto_s_ has quit (Ping timeout: 246 seconds)
Aug 04 20:23:33 <Axman6>	> [(+), (*), (^)] <*> [a,b] <*> [1,2,3] :: [Expr]
Aug 04 20:23:35 <lambdabot>	 [a + 1,a + 2,a + 3,b + 1,b + 2,b + 3,a * 1,a * 2,a * 3,b * 1,b * 2,b * 3,a,a...
Aug 04 20:23:45 <turab>	dmwit: I see. I think what i am looking for is... how would an experienced haskeller do what I am trying to do
Aug 04 20:25:11 <dmwit>	I think you haven't said what you're trying to do yet!
Aug 04 20:25:23 <dmwit>	Or, you have, but I don't understand it.
Aug 04 20:25:47 <turab>	No I am just kindof exhausted :(
Aug 04 20:25:50 *	nbloomf (~nbloomf@2600:1700:83e0:1f40:e918:8eeb:aead:279b) has joined
Aug 04 20:26:04 *	dmwit nods sympathetically.
Aug 04 20:26:14 <turab>	I will definitely talk about this again. Thanks for the feedback so far, I really really appreciate it
Aug 04 20:26:30 *	Wizek (uid191769@gateway/web/irccloud.com/x-mrdoxvmcfqqnnksw) has joined
Aug 04 20:26:45 *	conal has quit (Quit: Computer has gone to sleep.)
Aug 04 20:27:41 <crestfallen>	>fmapp  [(+), (*), (^)] <*> [a,b] <*> [1,2,3] :: [Expr]
Aug 04 20:27:58 <crestfallen>	> fmapp  [(+), (*), (^)] <*> [a,b] <*> [1,2,3] :: [Expr]
Aug 04 20:28:01 <lambdabot>	 error:
Aug 04 20:28:01 <lambdabot>	     • Couldn't match expected type ‘[Expr -> Integer -> Expr]’
Aug 04 20:28:01 <lambdabot>	                   with actual type ‘f0 a0 -> f0 b0 -> f0 c0 -> f0 d0’
Aug 04 20:28:39 *	paquito (~filberte@211.230.83.129) has left
Aug 04 20:28:54 <crestfallen>	I don't understand this then
Aug 04 20:30:09 <crestfallen>	> [(+), (*), (^)] <*> [a,b] <*> [1,2,3] :: [Expr]
Aug 04 20:30:12 <lambdabot>	 [a + 1,a + 2,a + 3,b + 1,b + 2,b + 3,a * 1,a * 2,a * 3,b * 1,b * 2,b * 3,a,a...
Aug 04 20:31:17 <crestfallen>	> pure (+), (*), (^)
Aug 04 20:31:20 <lambdabot>	 <hint>:1:9: error: parse error on input ‘,’
Aug 04 20:31:38 *	ltriant (~ltriant@210-10-238-100.cust.static-ipl.aapt.com.au) has joined
Aug 04 20:31:43 <crestfallen>	> pure ((+) (*) (^))
Aug 04 20:31:47 <lambdabot>	 error:
Aug 04 20:31:47 <lambdabot>	     • Ambiguous type variable ‘f0’ arising from a use of ‘show_M588739310295...
Aug 04 20:31:47 <lambdabot>	       prevents the constraint ‘(Show
Aug 04 20:31:53 *	kinbiko (~kinbiko@host-92-29-117-204.as13285.net) has joined
Aug 04 20:32:09 <crestfallen>	> pure [(+), (*), (^)]
Aug 04 20:32:12 <lambdabot>	 error:
Aug 04 20:32:12 <lambdabot>	     • Ambiguous type variable ‘f0’ arising from a use of ‘show_M139633020093...
Aug 04 20:32:12 <lambdabot>	       prevents the constraint ‘(Show
Aug 04 20:33:10 <crestfallen>	Axman6, how do you use fmapp with your example?
Aug 04 20:33:29 <dmwit>	You don't.
Aug 04 20:33:33 <crestfallen>	if the functions are not in a list
Aug 04 20:34:22 *	fphilipe (~phil@81.6.34.65) has joined
Aug 04 20:35:02 *	laem has quit (Quit: quit)
Aug 04 20:35:21 *	neightchan (~natechan@108-233-125-227.lightspeed.sntcca.sbcglobal.net) has joined
Aug 04 20:35:28 *	texasmynsted_ (~texasmyns@c-24-11-206-84.hsd1.tn.comcast.net) has joined
Aug 04 20:35:49 *	laem (~laem@unaffiliated/laem) has joined
Aug 04 20:36:03 *	texasmynsted has quit (Ping timeout: 248 seconds)
Aug 04 20:36:24 *	quarters has quit (Changing host)
Aug 04 20:36:24 *	quarters (Elite20921@unaffiliated/quarters) has joined
Aug 04 20:36:24 *	quarters has quit (Changing host)
Aug 04 20:36:24 *	quarters (Elite20921@gateway/shell/elitebnc/x-vaaxdusmjiweqgtb) has joined
Aug 04 20:36:34 *	kinbiko has quit (Ping timeout: 246 seconds)
Aug 04 20:36:52 <crestfallen>	dmwit, but what was he trying to show Me?
Aug 04 20:37:08 *	conal (~conal@64.71.133.70) has joined
Aug 04 20:37:33 <dmwit>	I suspect he was trying to add enough "stuff" to the result to clear up whatever confusion it was that led you to believe that "a,b,a" was a single result in an earlier query.
Aug 04 20:38:02 <dmwit>	From your previous visit to #haskell.
Aug 04 20:38:09 *	fog (b9ccd44d@185.204.212.77) has joined
Aug 04 20:38:29 <crestfallen>	yeah sorry I was rushing in a cafe that was closing so I'm a bit stumped
Aug 04 20:39:01 <fog>	i was a bit worried about the idea of backpack being used to "rip off" other peoples software. i guess that if the software isnt proprietary its ok right?
Aug 04 20:39:25 <Axman6>	> fmapp (\x y z -> x * y + x) (Just 10) (Just 3) (Just 7)
Aug 04 20:39:27 <lambdabot>	 Just 40
Aug 04 20:39:29 <dmwit>	What the heck? How could backpack be at all to blame for something like that?
Aug 04 20:39:41 <Axman6>	wait what?
Aug 04 20:39:50 <MarcelineVQ>	fog: if that's not bait it's something special, what makes you ask this?
Aug 04 20:40:09 <Axman6>	o.O
Aug 04 20:40:14 <dmwit>	Axman6: (Perhaps you meant ...+z instead of ...+x ?)
Aug 04 20:40:25 <Axman6>	> fmapp (\x y z -> x * y + z) (Just 10) (Just 3) (Just 7)
Aug 04 20:40:28 <lambdabot>	 Just 37
Aug 04 20:40:34 <fog>	like, if i use matlab algorithms as a guideline for a haskell implementation (swapping out using FFI and backpack tool being developed) matlab doesnt *own* the *algorithms* do they? like, when they charge users its for support and the interface which then shouldnt be ripped  
Aug 04 20:40:51 <Axman6>	> fmapp (\x y z -> x * y + z) [10,100,1000] [3,4,5] [7,8,9]
Aug 04 20:40:54 <lambdabot>	 [37,38,39,47,48,49,57,58,59,307,308,309,407,408,409,507,508,509,3007,3008,30...
Aug 04 20:41:11 *	ltriant has quit (Ping timeout: 268 seconds)
Aug 04 20:41:15 <Axman6>	fog: what are you talking about
Aug 04 20:41:17 <dmwit>	Presumably you would consult the license for whatever algorithm you're looking at. This is true no matter how you were planning to reproduce that algorithm, with backpack or otherwise. It's completely orthogonal.
Aug 04 20:41:21 <MarcelineVQ>	backpack is for writing your code generically over haskell libraries
Aug 04 20:41:37 <fog>	well the algorithms are just maths
Aug 04 20:41:46 <MarcelineVQ>	if some given library is violating something that's nothing to do with backpack
Aug 04 20:41:52 <fog>	so it kind of defines some kind of "commons"
Aug 04 20:41:55 <dmwit>	It turns out that "just maths" can still be copyrighted. That is a fact about our world.
Aug 04 20:42:10 *	turab has quit (Ping timeout: 246 seconds)
Aug 04 20:42:12 <fog>	but if its published or has long open source history
Aug 04 20:42:25 <fog>	like, standard linear algebra... 
Aug 04 20:42:46 *	jluttine (~jluttine@109.204.147.177) has joined
Aug 04 20:42:50 <dmwit>	"Open source" does not save you. However, "free" (not "gratis") can save you. But the difference between "open source" and "free" is in the license.
Aug 04 20:43:03 <crestfallen>	 > fmapp (\x y z -> x * y + z) (Just 10) (Just 3) (Just 7)
Aug 04 20:43:05 <fog>	i dont know about matlab actually paying royalties to anyone, so i guess they *only* use this kind of maths...
Aug 04 20:43:37 <crestfallen>	> fmapp (\x y z -> x * y + z) (Just 10) (Just 3) (Just 7)
Aug 04 20:43:42 <lambdabot>	 Just 37
Aug 04 20:43:46 *	machinedgod has quit (Ping timeout: 272 seconds)
Aug 04 20:43:54 <fog>	dmwit: but maths algorithms dont have a licence, often they can be algebraically derived from optimality criteria 
Aug 04 20:44:01 <dmwit>	1. I reject the assumption that if the folks that matlab were paying royalties to someone, you would definitely know about it. 2. I don't see how it's relevant anyway, and I'm starting to lose the thread of what you're asking and how it's related to Haskell.
Aug 04 20:44:25 <fog>	ok
Aug 04 20:44:34 <Axman6>	I ask again, what are you on about fog
Aug 04 20:44:37 <dmwit>	The categorical statement "maths algorithms don't have a licence" is, frankly, wrong.
Aug 04 20:45:08 <Axman6>	there's a lot of premises missing from your questions, and seemingly a fundamental lack of understanding of I'm not sure what
Aug 04 20:45:09 <fog>	its about developing the haskell mixins FFI tool that would basically be to facilitate ripping off other epoples software and i really want to make sure there is a legitimate use for it which does not violate copyright law
Aug 04 20:45:32 <fog>	i could describe that tool more if it was sure it was a good idea...
Aug 04 20:45:44 <dmwit>	Certainly there is a legitimate use that does not violate copyright law: when the license for the thing you are "ripping off" is sufficiently free.
Aug 04 20:45:46 <Axman6>	fog: have you ever written software?
Aug 04 20:46:08 *	kinbiko (~kinbiko@host-92-29-117-204.as13285.net) has joined
Aug 04 20:46:14 <fog>	not published with a licence and revenue
Aug 04 20:46:19 <dmwit>	Or when, for example, you have paid whatever licensing fee is needed in case the license is both not free and not gratis.
Aug 04 20:46:33 <Axman6>	languages have had foreign function interfaces for decades - backpack has nothing to do with this. Licensing is what differentiates between "ripping off" and having permission to use other people's software
Aug 04 20:47:25 <fog>	dmwit: ok, so then the real question is specifically about matlab which i know is liscenced but i know incorperates linear algorithms which are specifically the thing i want to translate to haskell
Aug 04 20:47:46 <dmwit>	Perhaps you should speak with an actual lawyer.
Aug 04 20:47:47 <Axman6>	Also, linking to someone's else's code does not have anything to do with copyright - publishing it and claiming it as your own may but that's different
Aug 04 20:48:11 <Axman6>	we already have linear algebra libraries in Haskell
Aug 04 20:48:23 <fog>	Axman6: backpack was just for "swapping" the backend between the actual code (via FFI) and the haskell implementation being developed for use with quickcheck 
Aug 04 20:48:28 <Axman6>	that make use of stanrd interfaces like blas and lapack
Aug 04 20:48:46 <Axman6>	standard*
Aug 04 20:49:43 <dmwit>	Now I have twice as many questions. For example: why wouldn't you be able to use the actual code with quickcheck?
Aug 04 20:49:43 <Axman6>	some implementations of blas and lapack are proprietary and require a license to use (like Intel's MKL), but there are also open source implementations like OpenBLAS and a plethora of others
Aug 04 20:50:23 <fog>	im assuming there are algorithms implemented in matlab and nowhere else, by people employed by the company and specifically licensed and that copying them would be tantamount to theft, but that also if it can be deemed that the algorithms is "commons" then it is safe to directly translate without reference
Aug 04 20:50:23 *	conal has quit (Quit: Computer has gone to sleep.)
Aug 04 20:50:28 <crestfallen>	> [id, (+2), (*2), (^2)] <*> [a,b] :: [Expr]
Aug 04 20:50:31 <lambdabot>	 [a,b,a + 2,b + 2,a * 2,b * 2,a * a,b * b]
Aug 04 20:50:58 <fog>	dmwit: quickcheck was for both backpack signature implementations
Aug 04 20:51:07 <crestfallen>	dmwit sorry to bother you .. a,b,a  comes from what exactly?
Aug 04 20:51:08 *	Tops2 has quit (Read error: Connection reset by peer)
Aug 04 20:51:13 <dmwit>	I think you are assuming too many things, and should speak with a lawyer, who will be able to set you straight on the actual facts of how matlab's license works.
Aug 04 20:51:28 <fog>	i have
Aug 04 20:51:41 <Axman6>	crestfallen: there're from a package that lambdabot has imported, I can't remember which package it is though
Aug 04 20:51:41 <MarcelineVQ>	crestfallen: not a,b,a a,b and a + 2, b + 2 etc
Aug 04 20:51:42 <dmwit>	crestfallen: "a,b,a" is not a chunk. "a" is a chunk. "b" is a chunk. "a + 2" is a chunk.
Aug 04 20:51:42 <fog>	not about this, but its on legal advice that i suppose what i do
Aug 04 20:51:57 *	kinbiko has quit (Read error: Connection reset by peer)
Aug 04 20:52:00 <fog>	i know *basically* how this stuff works
Aug 04 20:52:08 <dmwit>	crestfallen: These chunks are separated by commas, because that is the Haskell syntax for lists: square brackets around the whole list, commas between list elements.
Aug 04 20:52:23 *	kinbiko (~kinbiko@host-92-29-117-204.as13285.net) has joined
Aug 04 20:52:23 *	ltriant (~ltriant@210-10-238-100.cust.static-ipl.aapt.com.au) has joined
Aug 04 20:52:26 <Axman6>	> a:b:c:[]
Aug 04 20:52:29 <lambdabot>	 [a,b,c]
Aug 04 20:52:43 <Axman6>	that is a list with three elements, a, b and c
Aug 04 20:52:52 <Axman6>	> a:b:c:a+2:[]
Aug 04 20:52:54 <lambdabot>	 [a,b,c,a + 2]
Aug 04 20:53:16 <Axman6>	that is a list with four elements, a, b, c and a + 2
Aug 04 20:53:30 <fog>	and its pretty straitforward. they down *own* matrix multiplication, yet it forms part of their code, and copying their implementation would be just fine, but if there is a sophisticated proprietary implementation they distribute, translating it would not be ok - by definition of its being proprietary. thats all that a lawyer could say
Aug 04 20:53:59 <crestfallen>	Axman6, dmwit thanks kindly I'll get it when I'm fresh in the morning. pax
Aug 04 20:54:09 <MarcelineVQ>	fog: what else do you need to hear?
Aug 04 20:54:24 <dmwit>	That's... not even right.
Aug 04 20:54:32 <dmwit>	Copying their implementation may not be fine.
Aug 04 20:54:36 <MarcelineVQ>	"and copying their implementation would be just fine" sounds a bit spicy
Aug 04 20:54:47 <Axman6>	yeah that's definitely not correct
Aug 04 20:54:47 <MarcelineVQ>	a hot take, as the kids say
Aug 04 20:54:53 <dmwit>	(N.B. Writing your own implementation, and then discovering later that it turns out to be identical to theirs, *might* be fine depending!)
Aug 04 20:54:57 *	InvertAlwaysInve (~InvertAlw@2406:7400:5a:bb1b:485b:4723:4fb0:1709) has joined
Aug 04 20:55:05 <Axman6>	unless there are patents
Aug 04 20:55:15 <dmwit>	As I said: depending.
Aug 04 20:56:04 *	sytherax (~sytherax@203.63.221.152) has joined
Aug 04 20:57:14 <crestfallen>	ok duh yeah I see it thanks again
Aug 04 20:57:25 <fog>	ok so two threads just emerged. MarcelineVQ asks why consider this, and is it a question. basically the motivation is just that i would feel more comfortable discussing the development of tools that *could* be misused to directly translate proprietary code if its established to a reasonable extent that there is a legitimate use for the tool so that
Aug 04 20:57:26 <fog>	 it is not being developed dubiously
Aug 04 20:57:30 <Axman6>	fog: can you give any more details about what in particular in matlab you're interested in?
Aug 04 20:57:47 <fog>	then there is a question about copying an implementation of a "commons" algorithm... 
Aug 04 20:58:05 <dmwit>	But backpack doesn't even help with this process of copying!
Aug 04 20:58:12 *	Saukk has quit (Remote host closed the connection)
Aug 04 20:58:26 <dmwit>	So for the purposes of "should I be ethically ok with helping develop backpack" who gives a flying... ?
Aug 04 20:58:29 <MarcelineVQ>	No I'm asking what else you need to know if a lawyer has layed it out
Aug 04 20:58:43 <Axman6>	I'd be pretty surprised if there were a need to copy anything to be honest, if the problem is just linear algebra algorithms - use an existing, appropriately licensed implementation
Aug 04 20:58:49 <fog>	sure it does! being able to develop this comparison quickcheck of variable backpack signature implementations is the whole tool
Aug 04 20:59:25 <Axman6>	you definitely don't need backpack for this btw
Aug 04 20:59:49 <Axman6>	even if you want to compare two imeplementations of the same thing, where one is in Haskell and another is calling the FFI
Aug 04 21:00:09 <Axman6>	records of functions give you this, so do type classes
Aug 04 21:00:20 <fog>	well no backpack is like a class! you could say someone would use a function to do wrong by that logic... thats taking it too far, we are specifically talking about a tool designed to ease the direct translation of code, which *is* at least possibly contentious  
Aug 04 21:00:55 <Axman6>	I still have no idea what you're talking about then
Aug 04 21:00:57 <fog>	Axman6: the comparison between classes records and backpack signatures has been discussed and there is utility of backpack
Aug 04 21:00:57 <maerwald>	when you change a file that is listed in extra-source-files cabal does not rebuild the modules that use TH to include it seems
Aug 04 21:01:08 *	sytherax has quit (Ping timeout: 248 seconds)
Aug 04 21:01:08 <Axman6>	of course there is
Aug 04 21:01:58 <fog>	Axman6: sorry that was in response to dmwits comment about if backpack itself could be considered a tool specifically for translation, to which the answer is no
Aug 04 21:01:58 *	alicemaz has quit (Read error: Connection reset by peer)
Aug 04 21:01:59 <Axman6>	maerwald: I think there's a way in TH to specify that its result depends on another file. I'm like 80% sure I didn't just imagine that
Aug 04 21:02:07 *	kinbiko has quit (Ping timeout: 246 seconds)
Aug 04 21:03:12 <fog>	i guess thats the simplest hypothetical realisation - literally just a drag and drop C to haskell translator. and sure, that could be deemed dubious because of the ease that it facilitates copyright infringement. 
Aug 04 21:03:29 *	andreas303 has quit (Remote host closed the connection)
Aug 04 21:03:33 *	captjakk has quit (Remote host closed the connection)
Aug 04 21:03:49 <maerwald>	Axman6: and what would that be?
Aug 04 21:04:03 *	alicemaz (~alice@ennoia.rheo.space) has joined
Aug 04 21:04:06 *	captjakk (~captjakk@75-166-173-191.hlrn.qwest.net) has joined
Aug 04 21:04:51 <fog>	but anyway, that would be down to the user, and then the point is that as both the user and developer of a less extreme (and less useful!) version of this (a kind of assistant for human translation) with the intent to use it on matlab - which is liscenced, the question really is about which parts of matlab i can translate
Aug 04 21:05:01 *	bolichep (~bolichep@186.61.58.20) has joined
Aug 04 21:05:04 *	MonkeyNOS has quit (Ping timeout: 276 seconds)
Aug 04 21:05:07 <fog>	then you can observe the existence of an open source version called octave
Aug 04 21:05:22 *	Sheilong has quit ()
Aug 04 21:05:32 <fog>	and make a similar comparison between openoffice and microsoft word - ie they dont *own* the idea of a word processor 
Aug 04 21:05:53 <dmwit>	I don't get it. Backpack presumably would let you easily switch between a translation and an original. But it wouldn't help you create the translation in the first place.
Aug 04 21:06:08 <Axman6>	I think deciding that you are going to translate matlab as a starting point is likely to get you into trouble
Aug 04 21:06:10 <fog>	i want to emulate matlab functionality in haskell - so i think the parts i would be copying do not strey into their property 
Aug 04 21:06:19 *	jluttine has quit (Ping timeout: 246 seconds)
Aug 04 21:06:39 *	andreas303 (~andreas@gateway/tor-sasl/andreas303) has joined
Aug 04 21:06:43 <fog>	as this is basically just a convinient language syntax built around common maths
Aug 04 21:07:01 <Axman6>	then copy the maths
Aug 04 21:07:06 <fog>	its precisely because of its common nature that it is desirable to copy
Aug 04 21:07:23 *	InvertAlwaysInve has quit (Remote host closed the connection)
Aug 04 21:07:27 <fog>	yeah, i would, by running a tool over the matlab code that implemented it to use it as a standard
Aug 04 21:07:43 <fog>	ensuring it didnt accidentally rip off their aerospace packages...
Aug 04 21:08:12 *	texasmynsted_ is now known as texasmynsted
Aug 04 21:08:28 *	fphilipe has quit (Ping timeout: 244 seconds)
Aug 04 21:08:34 <fog>	anyway, its not just matrix multiplication, its specifically some tools for greedy sparse optimisation i want to implement from papers
Aug 04 21:08:41 *	InvertAlwaysInve (~InvertAlw@2406:7400:5a:bb1b:485b:4723:4fb0:1709) has joined
Aug 04 21:08:56 <fog>	there are standard references for how to implement SVD for example, but it might be easier to just copy the matlab code
Aug 04 21:08:56 *	captjakk has quit (Ping timeout: 268 seconds)
Aug 04 21:09:00 *	ddellacosta (~dd@193.148.18.211) has joined
Aug 04 21:09:04 <fog>	its easier to read than the fortran blas...
Aug 04 21:09:11 *	InvertAlwaysInve has quit (Remote host closed the connection)
Aug 04 21:09:50 <Axman6>	I don't think the translation from the papers into Haskell should be too difficult, I've done that plenty of times
Aug 04 21:09:52 <fog>	so thats a good example, i can be sure they down own SVD
Aug 04 21:10:02 *	InvertAlwaysInve (~InvertAlw@2406:7400:5a:bb1b:485b:4723:4fb0:1709) has joined
Aug 04 21:10:19 <fog>	Axman6: certainly more work than a semi-automated translator from an existing implementation
Aug 04 21:10:44 *	InvertAlwaysInve has quit (Remote host closed the connection)
Aug 04 21:11:02 <fog>	do i have to *copy* from an open source implementation?
Aug 04 21:11:21 *	InvertAlwaysInve (~InvertAlw@2406:7400:5a:bb1b:485b:4723:4fb0:1709) has joined
Aug 04 21:11:23 <fog>	i guess thats the point that was raised before
Aug 04 21:11:37 <fog>	about *their implementation* 
Aug 04 21:11:52 *	kinbiko (~kinbiko@host-92-29-117-204.as13285.net) has joined
Aug 04 21:12:17 *	sytherax (~sytherax@203.63.221.152) has joined
Aug 04 21:12:32 <fog>	i think the idea is that as long as there is no *novelty* to their implementation then they cant claim ownership
Aug 04 21:13:55 *	ddellacosta has quit (Ping timeout: 248 seconds)
Aug 04 21:14:13 *	dansho (~dansho4@71-84-161-204.dhcp.astr.or.charter.com) has joined
Aug 04 21:14:27 <fog>	like, if you gain nothing from the readability (it being written in matlab and not fortran not being a property of the implementation itself - like they still multiply everything together in the same order, even if it has nicer syntax) in terms of implementation details, then i think its ok
Aug 04 21:16:35 *	liberiga has quit (Remote host closed the connection)
Aug 04 21:16:40 *	sytherax has quit (Ping timeout: 258 seconds)
Aug 04 21:16:42 *	kinbiko has quit (Ping timeout: 272 seconds)
Aug 04 21:16:43 <fog>	so with that, it establishes a reasonable good faith intention, and i think it could be ok to copy their SVD implementation  
Aug 04 21:17:04 *	chew2 (64065d52@pool-100-6-93-82.pitbpa.fios.verizon.net) has joined
Aug 04 21:17:07 <Axman6>	They can claim copyright, and copying from their implementation would probably violate their copyright. copying from a publicly available source may not vialoate any copyright, and academic papers are usually a pretty good source. IANAL though (despite being a former patent examiner)
Aug 04 21:17:16 <dmwit>	I have never seen a license that had a "good faith intention" clause in it.
Aug 04 21:17:38 *	kinbiko (~kinbiko@host-92-29-117-204.as13285.net) has joined
Aug 04 21:17:41 <fog>	well it helps if your not going out of your way to put someone out of business and taking care not to!
Aug 04 21:17:49 <Axman6>	"I think it's ok" and "it's legal" are very different things
Aug 04 21:18:07 <Axman6>	that's irrelevant
Aug 04 21:18:11 <dmwit>	It may help with them not caring to enforce the law. It does not help make the thing you're doing legal.
Aug 04 21:18:11 *	safe has quit (Ping timeout: 268 seconds)
Aug 04 21:18:23 *	xff0x has quit (Ping timeout: 245 seconds)
Aug 04 21:18:40 <dmwit>	And even then, I only say it *may* help. It may not. Is that a risk you're into?
Aug 04 21:18:45 *	gxt has quit (Ping timeout: 260 seconds)
Aug 04 21:18:46 <fog>	compared to copying the algorithm i need, a project like Octave which is more or less a whole sale rip off is way more contentious and establishes  a precedent as far as i can tell
Aug 04 21:19:07 *	v01d4lph4 (~v01d4lph4@125.16.234.60) has joined
Aug 04 21:20:12 <Axman6>	"But but but, they did something I think is worse" is not a good defence...
Aug 04 21:20:18 *	MonkeyNOS (~VladPutin@2604:2000:1484:26:a125:ae7a:44f3:bddb) has joined
Aug 04 21:20:37 <fog>	like, clearly a matlab torrent with fake licence number is illegal, and anyone using such a thing is blatantly aware of that - but using octave, or eg open office, i dont think the same applies. the proprietary aspect is more to do with support, active development, being bug0free etc
Aug 04 21:20:48 *	gxt (~gxt@gateway/tor-sasl/gxt) has joined
Aug 04 21:20:54 <dmwit>	Indeed. Even "but but but, they did something I think is more illegal" is not a good defense.
Aug 04 21:21:14 <dmwit>	And I don't think you have grasped the law well enough to judge whether what the octave developers did was illegal or not.
Aug 04 21:21:27 <Axman6>	your views on the law sound very disconnected from the realities of the law
Aug 04 21:21:38 *	BaneAliens (~BaneAlien@c-67-180-76-129.hsd1.ca.comcast.net) has joined
Aug 04 21:21:38 *	xff0x (~fox@210.57.57.162) has joined
Aug 04 21:21:52 *	v01d4lph4 has quit (Remote host closed the connection)
Aug 04 21:21:56 <Axman6>	Pro tip: what Octave have done is almost certainly not illegal
Aug 04 21:22:21 <fog>	Axman6 in an open source software community, tools like open office set a widely held understanding as what constitutes fair practice. i dont think Apache, as microsoft *competitors* that decided to open-source their code, could be seen as violating any part of the law. 
Aug 04 21:22:28 *	v01d4lph4 (~v01d4lph4@125.16.234.60) has joined
Aug 04 21:22:30 <chew2>	hello, I was reading https://en.wikibooks.org/w/index.php?title=Haskell/Denotational_semantics&stable=1#Partial_Functions_and_the_Semantic_Approximation_Order and I was wondering why it's not the case that 1 ⊑ 2 and 2 ⊑ 1. Are these numbers not the same in informational quantity as the article says?
Aug 04 21:23:29 <fog>	but then maybe if they were reading directly from microsoft-word source code during development that wouldnt be the case...
Aug 04 21:23:42 <fog>	but thats not matrix multiplication...
Aug 04 21:24:13 *	jluttine (~jluttine@109.204.147.177) has joined
Aug 04 21:24:22 <Axman6>	that would almost cvertainly be copyright infringement, so may be illegal. 
Aug 04 21:24:32 <dmwit>	chew2: I find the sentence that includes "equal in terms of information quantity" highly suspect, and to have a dangling pointer (what is the "this" in "a quick way to remember this"?). I would ignore that entire sentence if I were you.
Aug 04 21:24:35 <fog>	this is a special consideration concerning mathmatically established syntax and algorithms that matlab cant just suddenly acquire from established commons, and the law supports that 
Aug 04 21:24:48 <fog>	so its a case of using that to fight the other thing and seeing where is the lne
Aug 04 21:25:32 <Axman6>	reading matlab's implementation of implementing it would also be the same, and liklely violates the license you have with matlab. reading from a publicly available paper something which doesn't have any other protections would probably be ok though
Aug 04 21:25:55 *	BaneAliens has quit (Ping timeout: 246 seconds)
Aug 04 21:26:03 <dmwit>	chew2: The one that says "Here, a [ b denotes that b is more defined than a. Likewise, a [= b will denote that either b is more defined than a or both are equal." is much better.
Aug 04 21:26:27 <fog>	then, there is defiantly the case of intentions, being reasonably well convinced by justifiable logic, combined with playing it safe, i dont think there could be any cause for concern.
Aug 04 21:26:28 <dmwit>	chew2: Since 1 and 2 are not equal, and 1 is not more defined than 2, we don't have 1 [= 2.
Aug 04 21:26:37 *	v01d4lph4 has quit (Ping timeout: 246 seconds)
Aug 04 21:26:57 *	kreetx (~markus@193-40-178-118.sookure.net.edu.ee) has joined
Aug 04 21:27:00 <chew2>	dmwit: 1 is not more defined than 2 and 2 is not more defined than 1, so they are equally defined right?
Aug 04 21:27:06 *	hackage monoidal-containers 0.5.0.1 - Containers with monoidal accumulation  https://hackage.haskell.org/package/monoidal-containers-0.5.0.1 (abrar)
Aug 04 21:27:10 <Axman6>	the law is all about intentions - and I'd warn you that this channel is public, and probably recorded, so your intentions are publicly known
Aug 04 21:27:11 <dmwit>	chew2: That does not follow, no.
Aug 04 21:27:14 <fog>	Axman6: what about plugging both into quickcheck and using it as a black box to test functionality?
Aug 04 21:55:42 *	Disconnected ()
**** ENDING LOGGING AT Sun Aug  4 21:55:42 2019

**** BEGIN LOGGING AT Sun Aug  4 21:56:08 2019

Aug 04 21:56:08 *	Now talking on #haskell
Aug 04 21:56:08 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Aug 04 21:56:08 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Aug 04 21:56:09 *	Channel #haskell url: http://www.haskell.org/
Aug 04 21:56:09 *	xff0x (~fox@210.57.57.162) has joined
Aug 04 21:56:41 *	neightchan (~natechan@2600:1702:a20:5610:505c:7de2:6719:8272) has joined
Aug 04 21:56:47 *	danvet (~Daniel@2a02:168:569e:0:3106:d637:d723:e855) has joined
Aug 04 21:56:50 *	chew2 has quit (Remote host closed the connection)
Aug 04 21:57:21 <fog>	also, there are 2 different aspects, one is to do with using their implementation to understand an algorithm, the other is to do with using their implementation to check a result
Aug 04 21:59:11 Python interface unloaded
**** ENDING LOGGING AT Sun Aug  4 21:59:11 2019

**** BEGIN LOGGING AT Mon Sep  2 15:35:46 2019

Sep 02 15:35:46 *	Now talking on #haskell
Sep 02 15:35:46 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Sep 02 15:35:46 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Sep 02 15:35:46 *	Channel #haskell url: http://www.haskell.org/
Sep 02 15:36:27 *	evanjs has quit (Quit: Configuring ZNC, sorry for the joins/quits!)
Sep 02 15:37:10 *	evanjs (~evanjs@75.129.188.19) has joined
Sep 02 15:37:16 *	mostendocrine has quit (Ping timeout: 264 seconds)
Sep 02 15:37:58 *	fizbin_ has quit (Ping timeout: 245 seconds)
Sep 02 15:38:13 *	mostendocrine (~mostendoc@2607:b400:24:0:78cd:dde5:8d43:2dfc) has joined
Sep 02 15:38:22 *	Myhlamaeus4 has quit (Ping timeout: 245 seconds)
Sep 02 15:38:55 *	Somniad has quit (Remote host closed the connection)
Sep 02 15:39:06 <crestfallen>	hi I've been trying to write the last function using <*> instead of the liftA2 (lifter) function. the exercise oddly asked to do a single Die roll and return a list (rollNDieIO). the rollNDiceIO function I just added the list of tuples. is it possible? I don't understand replicateM and liftA2 well enough to do it, thanks.   https://termbin.com/bi37
Sep 02 15:39:44 <crestfallen>	if its possible
Sep 02 15:39:52 *	Cele[m] (celematrix@gateway/shell/matrix.org/x-gidksyksofaluyhq) has joined
Sep 02 15:40:05 *	brandly (~brandly@c-24-61-240-6.hsd1.ma.comcast.net) has joined
Sep 02 15:40:08 *	hackage hvega 0.4.0.0 - Create Vega-Lite visualizations (version 3) in Haskell.  https://hackage.haskell.org/package/hvega-0.4.0.0 (DouglasBurke)
Sep 02 15:40:32 *	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has joined
Sep 02 15:41:03 *	freeman42[NixOS] (~freeman42@89.137.217.223) has joined
Sep 02 15:41:03 *	mildocjr (~mildocjr@143.59.17.13) has left
Sep 02 15:42:59 *	dbaldwin (~dbaldwin@2607:fea8:e380:3f:75a7:890b:651e:b704) has joined
Sep 02 15:43:23 <crestfallen>	also if concat is possible to use to return a list similar to single die toss-    :: Int -> IO [Int] 
Sep 02 15:45:44 *	heatsink (~heatsink@2600:1700:bef1:5e10:c8e2:dd31:f80d:f0c7) has joined
Sep 02 15:46:09 *	csadilek (~csadilek@184.75.223.235) has joined
Sep 02 15:46:39 *	jedws (~jedws@121.216.14.132) has joined
Sep 02 15:47:22 *	reallymemorable has quit (Quit: reallymemorable)
Sep 02 15:48:36 *	BaneAliens (~BaneAlien@cpe-172-91-22-149.socal.res.rr.com) has joined
Sep 02 15:50:18 *	freeman42[NixOS] has quit (Ping timeout: 244 seconds)
Sep 02 15:50:27 *	heatsink has quit (Ping timeout: 264 seconds)
Sep 02 15:50:37 *	jedws has quit (Client Quit)
Sep 02 15:50:38 *	hackage happstack-server 7.5.2 - Web related tools and services.  https://hackage.haskell.org/package/happstack-server-7.5.2 (JeremyShaw)
Sep 02 15:52:22 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  2 15:52:22 2019

**** BEGIN LOGGING AT Mon Sep  2 15:54:22 2019

Sep 02 15:54:22 *	Now talking on #haskell
Sep 02 15:54:22 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Sep 02 15:54:22 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Sep 02 15:54:22 *	Channel #haskell url: http://www.haskell.org/
Sep 02 15:54:47 *	rruizt (~rruizt@83-84-23-124.cable.dynamic.v4.ziggo.nl) has joined
Sep 02 15:54:48 Python interface unloaded
Sep 02 15:54:48 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Mon Sep  2 15:54:48 2019

**** BEGIN LOGGING AT Mon Sep  2 15:55:44 2019

Sep 02 15:55:44 *	Now talking on #haskell
Sep 02 15:55:44 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Sep 02 15:55:44 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Sep 02 15:55:44 *	Channel #haskell url: http://www.haskell.org/
Sep 02 15:56:03 *	evanjs has quit (Quit: Configuring ZNC, sorry for the joins/quits!)
Sep 02 15:56:06 >freenode<	identify myoho
Sep 02 15:56:18 *	You are now known as crestfallen
Sep 02 15:56:31 <MarcelineVQ>	crestfallen: what is the exercise text? or an example of the output you should be producing
Sep 02 15:56:31 *	jgt1 has quit (Ping timeout: 252 seconds)
Sep 02 15:57:15 *	evanjs (~evanjs@75.129.188.19) has joined
Sep 02 15:58:20 <MarcelineVQ>	Asking that because I'm not quite sure what you're asking, you said "is it possible?" but I'm not sure what 'it' is here
Sep 02 15:59:18 <crestfallen>	sorry I was disconnected if anyone responded. oh thanks MarcelineVQ the output should be as in the first two functions. the third one I wanted to change to a list of tuples, because I thought rollNDieIO (a single die , n times) was odd
Sep 02 16:00:09 *	hackage getopt-generics 0.13.0.4 - Create command line interfaces with ease  https://hackage.haskell.org/package/getopt-generics-0.13.0.4 (SoenkeHahn)
Sep 02 16:00:12 *	o1lo01ol1o has quit (Remote host closed the connection)
Sep 02 16:00:27 *	merijn has quit (Ping timeout: 245 seconds)
Sep 02 16:00:31 <crestfallen>	the 3rd one works at the moment, but I was trying to flatten the tuples into a list, using concat and such, but I'm a bit foggy
Sep 02 16:01:21 <dmwit>	There are two questions here.
Sep 02 16:01:23 *	o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined
Sep 02 16:01:54 <dmwit>	1. Can I do without lifter? 2. Can I turn an IO [(Int, Int)] into an IO [Int] that includes all the Int's in the input's result?
Sep 02 16:02:16 <crestfallen>	I was hoping to do something like (randomRIO (1,6)) <*> (randomRIO (1,6))    but I know that's wrong. 
Sep 02 16:02:42 *	BaneAliens has quit (Ping timeout: 244 seconds)
Sep 02 16:02:51 <dmwit>	For 1. you can just inline the definition of lifter. lifter f u x = f <$> u <*> v, so lifter (,) (randomRIO (1,6)) (randomRIO (1,6)) = (,) <$> (randomRIO (1,6)) <*> (randomRIO (1,6))
Sep 02 16:03:00 <dmwit>	s/x/v/ obviously
Sep 02 16:04:09 *	o1lo01ol1o has quit (Remote host closed the connection)
Sep 02 16:04:12 <dmwit>	For 2. I recommend that you first write a function of type (Int, Int) -> [Int]. Then write [(Int, Int)] -> [Int]. Then write IO [(Int, Int)] -> IO [Int].
Sep 02 16:04:13 *	brandly has quit (Remote host closed the connection)
Sep 02 16:04:20 <dmwit>	Let us know where along that path you have trouble.
Sep 02 16:05:08 <crestfallen>	thanks dmwit that looks rough. I'm really struggling with applicative
Sep 02 16:05:15 *	o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined
Sep 02 16:07:05 <dmwit>	I'm gonna go out on a limb here and say this has nothing to do with applicative.
Sep 02 16:07:29 *	conal (~conal@209.209.238.165) has joined
Sep 02 16:07:51 *	mostendocrine has quit (Ping timeout: 264 seconds)
Sep 02 16:07:57 *	m0rphism1 has quit (Ping timeout: 245 seconds)
Sep 02 16:08:07 *	mastarija (~mastarija@cm-2179.cable.globalnet.hr) has joined
Sep 02 16:08:09 *	mostendocrine (~mostendoc@2607:b400:24:0:4527:42ba:3ea9:bc24) has joined
Sep 02 16:08:14 <dmwit>	If I write a function definition in math like f(x) = 5*x^2/2 + 3*x + x, and then ask you what f(5) is, you don't need to even know how (*) or (+) or (^) work to answer that f(5) = 5*5^2/2 + 3*5 + 5
Sep 02 16:09:23 <dmwit>	This is exactly the same thing. When you write `lifter f u v = f <$> u <*> v`, then that means when you see `lifter (complicated expression 1) (c. e. 2) (c. e. 3)`, you don't need to know anything about how `(<$>)` and `(<*>)` work to know that's *exactly* the same thing as `(c. e. 1) <$> (c. e. 2) <*> (c. e. 3)`.
Sep 02 16:09:34 *	o1lo01ol1o has quit (Ping timeout: 258 seconds)
Sep 02 16:09:49 <dmwit>	You just plug in the argument expressions in the spots where the variables appear.
Sep 02 16:10:07 <MarcelineVQ>	where c. e. is short for complicated expression
Sep 02 16:10:08 *	BaneAliens (~BaneAlien@cpe-172-91-22-149.socal.res.rr.com) has joined
Sep 02 16:10:09 *	thc202 has quit (Ping timeout: 250 seconds)
Sep 02 16:11:21 <crestfallen>	ok but I was hoping to do away with lifter, I believe that was my intent.
Sep 02 16:11:41 *	crobbins has quit (Remote host closed the connection)
Sep 02 16:11:45 <crestfallen>	I was tinkering, but concat is not the way I guess
Sep 02 16:11:50 <dmwit>	Yes. And the text "lifter" does not appear in the result `(c. e. 1) <$> (c. e. 2) <*> (c. e. 3)`.
Sep 02 16:12:34 *	valdyn has quit (Ping timeout: 246 seconds)
Sep 02 16:12:36 *	libertyprime (~libertypr@101.98.42.91) has joined
Sep 02 16:13:06 <crestfallen>	what is going on? last night I needed a sandbox to run randomRIO. today on a 32bit machine I do not....
Sep 02 16:13:11 <dmwit>	(Yes, yes, fellow denizens, I know: complicated expressions might mention lifter. Please don't sidetrack us with this unenlightening quibble.)
Sep 02 16:13:22 *	valdyn (~valdyn@host-88-217-143-53.customer.m-online.net) has joined
Sep 02 16:14:13 <dmwit>	crestfallen: That is explainable. Is it the thing you are most interested in understanding right now?
Sep 02 16:14:38 <dmwit>	I'm going to bet no, and so let's ignore it.
Sep 02 16:14:46 <crestfallen>	no I'm just tripping. really appreciate it. you are deep dmwit I'm working on what you've said
Sep 02 16:15:08 *	Guest20 (b3b6cac6@gateway/web/cgi-irc/kiwiirc.com/ip.179.182.202.198) has joined
Sep 02 16:20:23 *	conal has quit (Quit: Computer has gone to sleep.)
Sep 02 16:20:28 *	mostendocrine has quit (Ping timeout: 264 seconds)
Sep 02 16:22:01 *	Gurkenglas has quit (Ping timeout: 246 seconds)
Sep 02 16:22:52 *	doublex has quit (Ping timeout: 264 seconds)
Sep 02 16:23:14 <MarcelineVQ>	crestfallen: made any progress based on what dmwit mentioned?
Sep 02 16:23:45 *	hiroaki_ has quit (Ping timeout: 258 seconds)
Sep 02 16:24:20 <crestfallen>	MarcelineVQ, I'm having logistical troubles in this blasted cafe.
Sep 02 16:24:42 *	dbaldwin (~dbaldwin@2607:fea8:e380:3f:75a7:890b:651e:b704) has joined
Sep 02 16:26:12 *	mostendocrine (~mostendoc@c-73-152-143-55.hsd1.va.comcast.net) has joined
Sep 02 16:26:43 *	deviantfero has quit (Ping timeout: 245 seconds)
Sep 02 16:26:45 <Guest20>	https://pastebin.com/r8j48Y3G
Sep 02 16:26:49 <Guest20>	Is this bad practice?
Sep 02 16:27:31 <Guest20>	Too convoluted?
Sep 02 16:28:01 *	tsaka__ has quit (Ping timeout: 244 seconds)
Sep 02 16:29:01 <Guest20>	I'm new to Haskell, I'd like to have that SingTransfusionPieceI constraint in the BloodDonor datatype.
Sep 02 16:29:12 <Guest20>	A GADT is better in this case or is Dict passing ok?
Sep 02 16:29:31 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Sep 02 16:30:09 <Guest20>	I know I can just require the constraint in functions, but I'd like it to be mandatory and preferentially at the datatype.
Sep 02 16:30:48 *	merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Sep 02 16:31:28 *	BaneAliens has quit (Ping timeout: 246 seconds)
Sep 02 16:32:08 *	falafel has quit (Ping timeout: 245 seconds)
Sep 02 16:33:34 *	fizbin (~fizbin@c-98-221-75-24.hsd1.nj.comcast.net) has joined
Sep 02 16:34:06 *	wroathe has quit (Ping timeout: 258 seconds)
Sep 02 16:34:18 *	falafel (~falafel@static-176-185-149-136.axione.abo.bbox.fr) has joined
Sep 02 16:35:03 *	merijn has quit (Ping timeout: 245 seconds)
Sep 02 16:36:32 <crestfallen>	If you could give a hint, do I need concat to do (Int,Int) -> [Int]    ?
Sep 02 16:37:33 <boxscape>	Guest20 why not juts write `data BloodDonor (idx :: Symbol) a = SingTransfusionPieceI idx a => BloodDonor <...>`?
Sep 02 16:37:57 *	fizbin has quit (Ping timeout: 245 seconds)
Sep 02 16:38:26 <Guest20>	boxscape: any downsides to that?
Sep 02 16:38:47 <Guest20>	The WIP code is: https://pastebin.com/4YMcHVz5
Sep 02 16:39:17 <boxscape>	to be honest I haven't done much with explicit dictionaries so I'm not entirely sure if they have any specific advantages, but I'm not aware of any real downsides
Sep 02 16:39:36 *	brandly (~brandly@c-24-61-240-6.hsd1.ma.comcast.net) has joined
Sep 02 16:39:37 <Guest20>	I'm new to Haskell, so I'd appreciate any feedback.
Sep 02 16:39:58 <Guest20>	First time I dabble with "intermediate haskell" and many of these language extensions.
Sep 02 16:43:40 *	fizbin (~fizbin@c-98-221-75-24.hsd1.nj.comcast.net) has joined
Sep 02 16:45:47 *	lagothrix has quit (Quit: lagothrix)
Sep 02 16:46:01 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Sep 02 16:46:03 *	dbaldwin has quit (Quit: Leaving)
Sep 02 16:46:18 *	ziyourenxiang (~ziyourenx@unaffiliated/ziyourenxiang) has joined
Sep 02 16:46:38 *	mastarija has quit (Remote host closed the connection)
Sep 02 16:47:01 *	mastarija (~mastarija@cm-2179.cable.globalnet.hr) has joined
Sep 02 16:48:17 *	fizbin has quit (Ping timeout: 258 seconds)
Sep 02 16:51:10 <dmwit>	crestfallen: Let me turn the question around on you. If your (Int,Int) -> [Int] uses concat, presumably it will be at the type [[Int]] -> [Int]. So if you want to use concat, then you have changed your problem from implementing (Int,Int) -> [Int] to implementing (Int,Int) -> [[Int]]. Does that seem easier to you?
Sep 02 16:51:16 *	evanjs| has quit (Ping timeout: 244 seconds)
Sep 02 16:51:17 *	plutoniix (~q@175.176.222.7) has joined
Sep 02 16:51:49 *	singleton (be73269f@190.115.38.159) has joined
Sep 02 16:53:15 <sm[m]>	is it possible to correct a changelog (extra-source-files) on hackage, through the web UI, without a release ?
Sep 02 16:53:22 *	dbaldwin (~dbaldwin@2607:fea8:e380:3f:75a7:890b:651e:b704) has joined
Sep 02 16:53:51 <crestfallen>	dmwit, I'm just in the dark. I can't keep it all in my head
Sep 02 16:54:36 *	lagothrix has quit (Quit: lagothrix)
Sep 02 16:54:37 *	nineonine has quit (Read error: Connection reset by peer)
Sep 02 16:55:03 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Sep 02 16:55:11 *	nineonine (~nineonine@216.81.48.202) has joined
Sep 02 16:56:00 *	unyu (~user@unaffiliated/pyon) has joined
Sep 02 16:56:18 <crestfallen>	no I don't want to use concat if not needed
Sep 02 16:56:47 *	AviD (~host@cpe-67-255-102-247.stny.res.rr.com) has joined
Sep 02 16:57:15 *	unlink2 (~unlink2@p5DC0A486.dip0.t-ipconnect.de) has joined
Sep 02 16:57:28 *	unlink_ has quit (Ping timeout: 244 seconds)
Sep 02 16:57:40 *	fizbin (~fizbin@c-98-221-75-24.hsd1.nj.comcast.net) has joined
Sep 02 16:57:49 *	lucasb has quit (Quit: Connection closed for inactivity)
Sep 02 17:00:02 *	csadilek has quit ()
Sep 02 17:00:19 <crestfallen>	the other thing is dmwit , there's no IO in the signature like (Int,Int) -> IO [Int]     ?
Sep 02 17:00:34 *	mastarija has quit (Ping timeout: 244 seconds)
Sep 02 17:00:44 <dmwit>	Do you think it would be easier if there were?
Sep 02 17:01:09 <dmwit>	sm[m]: I don't think so.
Sep 02 17:01:23 <sm[m]>	thx
Sep 02 17:01:53 *	hiroaki (~hiroaki@ip4d168e05.dynamic.kabel-deutschland.de) has joined
Sep 02 17:02:07 *	fizbin has quit (Ping timeout: 245 seconds)
Sep 02 17:02:07 *	mostendocrine has quit (Ping timeout: 244 seconds)
Sep 02 17:02:31 *	andgate has quit (Ping timeout: 260 seconds)
Sep 02 17:02:50 *	mostendocrine (~mostendoc@2601:5c0:c100:ece0:4527:42ba:3ea9:bc24) has joined
Sep 02 17:02:56 *	ktonga (~quassel@2001:8003:300c:aa00:70f1:a7f1:ac5b:b74c) has joined
Sep 02 17:03:12 <sim590>	https://paste.debian.net/1098475/. I want to make a sum of a given number of doubles I get on the command line. I want the code to be easily maintainable (easy to add support for anohter number) and avoid using intermediary numbers (like definition of doublesSum'''). Can it be done?
Sep 02 17:03:24 <sim590>	See the alternatives I have gone through in https://paste.debian.net/1098475/.
Sep 02 17:03:42 *	fizbin (~fizbin@c-98-221-75-24.hsd1.nj.comcast.net) has joined
Sep 02 17:03:55 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Sep 02 17:04:07 *	AviD has quit (Quit: Konversation terminated!)
Sep 02 17:04:09 <sim590>	Alternatives are named doublesSum (with quotes at the end or not).
Sep 02 17:04:25 *	AviD (~host@cpe-67-255-102-247.stny.res.rr.com) has joined
Sep 02 17:04:34 <sim590>	doublesSum' and doublesSum'' are just horrible. 
Sep 02 17:05:49 *	conal (~conal@209.209.238.165) has joined
Sep 02 17:05:54 <sim590>	doublesSum is OK (reminds me of imperative code, while I know that it's not the case and that it's all syntaxic sugar of the do block for the Applicative type class.
Sep 02 17:06:00 <sim590>	)
Sep 02 17:06:34 *	heatsink (~heatsink@2600:1700:bef1:5e10:c8e2:dd31:f80d:f0c7) has joined
Sep 02 17:06:49 <sim590>	However, doublesSum shows a warning saying I'M shadowing "s" which is obvious, but it behaves in the way that I want it (kind of like imperative style).
Sep 02 17:07:14 <dmwit>	doublesSum = go 0 where go s [] = pure s; go s (i:is) = do { n <- askForDouble i; go (s+n) is }
Sep 02 17:07:32 <dmwit>	Call it like `doublesSum ["premier", "second", "troisieme", "quatrieme"]`.
Sep 02 17:07:52 *	fizbin has quit (Ping timeout: 246 seconds)
Sep 02 17:08:02 <dmwit>	You'll probably want some strictness thing in there at some point, too, maybe `go !s (i:is) = ...` or similar.
Sep 02 17:08:24 <dmwit>	:t foldM
Sep 02 17:08:26 <lambdabot>	(Foldable t, Monad m) => (b -> a -> m b) -> b -> t a -> m b
Sep 02 17:08:49 <crestfallen>	dmwit I don't understand the line of your question
Sep 02 17:09:18 *	pipqw (~pqzx@unaffiliated/pqzx) has joined
Sep 02 17:09:20 <dmwit>	:t foldM (\s i -> (s+) <$> (putStrLn i >> readLn)) 0 ["premier", "second", "troisieme", "quatrieme"]
Sep 02 17:09:22 <lambdabot>	(Num b, Read b) => IO b
Sep 02 17:09:38 <dmwit>	sim590: ^ even better. replace putStrLn/readLn with your askForDouble
Sep 02 17:09:46 *	wroathe has quit (Ping timeout: 258 seconds)
Sep 02 17:09:48 *	muzzle`` (~user@2001:16b8:a03b:1200:bd50:b1fb:ce3c:da51) has joined
Sep 02 17:09:56 <dmwit>	No idea what that does about strictness though.
Sep 02 17:10:00 <dmwit>	Consult the source to be sure.
Sep 02 17:10:18 *	alx741 (~alx741@181.196.68.197) has joined
Sep 02 17:10:48 <dmwit>	crestfallen: You ask, "Why not use the type signature (Int,Int) -> IO [Int] instead?". I answer, "Go ahead, if you think that will make your job easier.".
Sep 02 17:12:08 *	kish has quit (Ping timeout: 245 seconds)
Sep 02 17:12:10 *	MoarSpaceFi (~Forgot_my@65.155.84.20) has joined
Sep 02 17:12:28 *	xdelta (~xdelta@2600:1:f52b:9a81:6770:4d8c:c483:e274) has joined
Sep 02 17:12:28 *	nbloomf (~nbloomf@2600:1700:83e0:1f40:b5b0:429d:4ae3:a50c) has joined
Sep 02 17:12:45 *	cybai has quit (Remote host closed the connection)
Sep 02 17:13:19 *	cybai (~cybai@2400:4050:3122:900:a3:4f06:99a2:3cf) has joined
Sep 02 17:13:32 <EvanR>	things are hard, one may think adding IO might make things easier, then it doesn't. Therefore haskell is hard
Sep 02 17:13:41 *	reallymemorable (~reallymem@static-100-12-4-211.nycmny.fios.verizon.net) has joined
Sep 02 17:14:11 *	doublex (~doublex@2601:542:c480:6ee0:9d2f:6b6b:75d1:6338) has joined
Sep 02 17:14:46 <sim590>	dmwit: thanks. I'm just learning about monads and all. Actually, I'm only at functors and applicatives. The answer you're giving me is quite naturally consistent with my knowledge about foldables.
Sep 02 17:15:27 <dmwit>	I can spell my answer in terms of Applicative instead if you want.
Sep 02 17:16:05 *	libertyprime has quit (Remote host closed the connection)
Sep 02 17:16:30 *	Cthalupa has quit (Ping timeout: 268 seconds)
Sep 02 17:16:30 *	tchakka has quit (Ping timeout: 268 seconds)
Sep 02 17:16:39 *	magicman (~tchakkazu@static-47-180-28-65.lsan.ca.frontiernet.net) has joined
Sep 02 17:16:50 <dmwit>	Wait, no, I'm confused.
Sep 02 17:17:06 <dmwit>	You say you want only Applicative, not Monad. But your example code uses Monad.
Sep 02 17:17:44 <sim590>	It's alright. I don't mind about monads. I may not be really accurate about what I'm using.
Sep 02 17:18:03 *	cybai has quit (Ping timeout: 264 seconds)
Sep 02 17:18:38 <sim590>	I thought I was only using applicatives with IO, but yeah I'm using >>=.
Sep 02 17:18:41 <dmwit>	?src foldM
Sep 02 17:18:41 <lambdabot>	foldM _ a []     = return a
Sep 02 17:18:41 <lambdabot>	foldM f a (x:xs) = f a x >>= \fax -> foldM f fax xs
Sep 02 17:18:57 *	mmfood has quit (Ping timeout: 258 seconds)
Sep 02 17:19:07 <crestfallen>	EvanR, depressing
Sep 02 17:19:32 <EvanR>	my proof was satirical
Sep 02 17:20:01 *	ShadowNET (~theshadow@cpe-104-229-39-40.rochester.res.rr.com) has joined
Sep 02 17:20:05 *	ShadowNET (~theshadow@cpe-104-229-39-40.rochester.res.rr.com) has left
Sep 02 17:20:27 *	jedws (~jedws@121.216.14.132) has joined
Sep 02 17:21:21 *	Cthalupa (~cthulhu@47.186.0.195) has joined
Sep 02 17:22:44 *	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has joined
Sep 02 17:23:17 *	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has left
Sep 02 17:23:23 *	doublex has quit (Ping timeout: 250 seconds)
Sep 02 17:23:44 *	luisjira[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	steamedbun[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	jesusvega[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	rgamma[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	alana[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	neat72[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	JulesRen-Georges has quit (Remote host closed the connection)
Sep 02 17:23:44 *	Kit[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	hogarth[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	jlvvlj[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	godzilla[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	brandon123[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	Hakan[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	danielbmarkham[m has quit (Remote host closed the connection)
Sep 02 17:23:44 *	PrimeSeeker[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	petrolifero[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	asayers[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	Syllo[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	deikatsuo[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	odd13[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	korlaplankton[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	bt[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	keith[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	GhostofaConsole[ has quit (Remote host closed the connection)
Sep 02 17:23:44 *	blake_rain[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	dice[m]1 has quit (Remote host closed the connection)
Sep 02 17:23:44 *	AaronWeiss[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	torkel[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	Vincent[m]1 has quit (Remote host closed the connection)
Sep 02 17:23:44 *	vespuccy[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	periapseez[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	peel has quit (Remote host closed the connection)
Sep 02 17:23:44 *	mouse008[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	lmolr[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	markus[m]3 has quit (Remote host closed the connection)
Sep 02 17:23:44 *	jwerner[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	k4l1gr4[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	jumzi[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	intellection3to3 has quit (Remote host closed the connection)
Sep 02 17:23:44 *	Grgoire[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	gmips[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	cale[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	M|GNUisnotLinux[ has quit (Remote host closed the connection)
Sep 02 17:23:44 *	dlilja[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	georgescratcherd has quit (Remote host closed the connection)
Sep 02 17:23:44 *	rainbyte[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	Mesa[m]1 has quit (Remote host closed the connection)
Sep 02 17:23:44 *	afontain[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	jochens[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	imdoor[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	joe[m]3 has quit (Remote host closed the connection)
Sep 02 17:23:44 *	aquarial[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	hifutakiko[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	xalek[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	bobach[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	Surgeon[m] has quit (Remote host closed the connection)
Sep 02 17:23:44 *	jak[m]1 has quit (Remote host closed the connection)
Sep 02 17:23:44 *	jwaksbaum[m] has quit (Remote host closed the connection)
Sep 02 17:23:45 *	JoGoSi[m] has quit (Remote host closed the connection)
Sep 02 17:23:45 *	wobbol[m] has quit (Remote host closed the connection)
Sep 02 17:23:45 *	ilmu[m] has quit (Remote host closed the connection)
Sep 02 17:23:45 *	ghastfilms[m] has quit (Remote host closed the connection)
Sep 02 17:23:45 *	vancha112[m] has quit (Remote host closed the connection)
Sep 02 17:23:45 *	souldev[m] has quit (Remote host closed the connection)
Sep 02 17:23:45 *	gandi[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:46 *	avocado has quit (Read error: Connection reset by peer)
Sep 02 17:23:46 *	buggeas40d[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:46 *	jibby has quit (Read error: Connection reset by peer)
Sep 02 17:23:46 *	betz[m]2 has quit (Write error: Connection reset by peer)
Sep 02 17:23:46 *	kitsune[m]1 has quit (Read error: Connection reset by peer)
Sep 02 17:23:46 *	freu[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:46 *	blakec[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:46 *	josef[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:47 *	noteventime has quit (Read error: Connection reset by peer)
Sep 02 17:23:47 *	thekyriarchy has quit (Read error: Connection reset by peer)
Sep 02 17:23:47 *	afk[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:47 *	AMlivinfree[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:47 *	dumuzid[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:49 *	zmlww[m]1 has quit (Remote host closed the connection)
Sep 02 17:23:50 *	iffsid has quit (Read error: Connection reset by peer)
Sep 02 17:23:50 *	thekyriarchy[m]1 has quit (Remote host closed the connection)
Sep 02 17:23:50 *	neurocyte[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:51 *	PoopSick[m] has quit (Remote host closed the connection)
Sep 02 17:23:51 *	simbergm has quit (Read error: Connection reset by peer)
Sep 02 17:23:51 *	suppenkasper[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:51 *	thosgood[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:51 *	vikraman has quit (Write error: Connection reset by peer)
Sep 02 17:23:51 *	weebull[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:51 *	nh2[m] has quit (Remote host closed the connection)
Sep 02 17:23:52 *	cepxuo has quit (Read error: Connection reset by peer)
Sep 02 17:23:52 *	alexfmpe[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:52 *	schum has quit (Read error: Connection reset by peer)
Sep 02 17:23:53 *	vorbex[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	supersweetsweetc has quit (Remote host closed the connection)
Sep 02 17:23:53 *	unitymember[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	rowan[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	pqwy[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	MichalLaskus[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	rahduro[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	laniusfnv[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	Tom[m]7 has quit (Remote host closed the connection)
Sep 02 17:23:53 *	Lite[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	tarigo[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	lihram has quit (Remote host closed the connection)
Sep 02 17:23:53 *	laith1[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	jdks[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	kumarbis[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	ldesgoui[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	jennie[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	grorg[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	entropi[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	charliebucket[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	danielemarsella[ has quit (Remote host closed the connection)
Sep 02 17:23:53 *	chris[m]14 has quit (Remote host closed the connection)
Sep 02 17:23:53 *	vars[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	popo[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	Mougan[m] has quit (Remote host closed the connection)
Sep 02 17:23:53 *	beatricejensen[m has quit (Remote host closed the connection)
Sep 02 17:23:54 *	tmallard[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	unrooted[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	foxadee[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	GNULizard[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	wildtrees[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	than1133[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	teaknow[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	rinor[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	Chromad[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	limabeans[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	markalanrichards has quit (Remote host closed the connection)
Sep 02 17:23:54 *	jhgarner[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	hovgaard[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	nybble41[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	kupo_[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	gswuichet[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	GreenKarm[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	dxml[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	Pete[m]1 has quit (Remote host closed the connection)
Sep 02 17:23:54 *	kai10[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	cjskaggs[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	Alec[m]1 has quit (Remote host closed the connection)
Sep 02 17:23:54 *	tempaccount1[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	kxra[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	edwel[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	admdch[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	Rama[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	shanesveller[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	Paavo[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	kerru[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	abdolence[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	Jonathan[m]3 has quit (Remote host closed the connection)
Sep 02 17:23:54 *	Cloud[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	mssx89m[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	kaster[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	talvdav[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	gentlehelm[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	dustyp[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	zorkedon[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	Cenion[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	rihardsk[m] has quit (Remote host closed the connection)
Sep 02 17:23:54 *	nartir[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:54 *	reedhhw[m] has quit (Write error: Broken pipe)
Sep 02 17:23:54 *	tindvik[m] has quit (Remote host closed the connection)
Sep 02 17:23:55 *	alxev[m] has quit (Remote host closed the connection)
Sep 02 17:23:55 *	miseenplace[m] has quit (Remote host closed the connection)
Sep 02 17:23:55 *	cosson[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:55 *	pothyurf[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:55 *	yoltid[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:55 *	kadoban has quit (Write error: Connection reset by peer)
Sep 02 17:23:55 *	texpat[m] has quit (Remote host closed the connection)
Sep 02 17:23:55 *	shiroeni[m] has quit (Remote host closed the connection)
Sep 02 17:23:56 *	hjoest[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:56 *	masaeedu[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:56 *	fgaz has quit (Read error: Connection reset by peer)
Sep 02 17:23:56 *	joenase[m] has quit (Read error: Connection reset by peer)
Sep 02 17:23:56 *	potato44[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:56 *	94KAAIPS2 has quit (Write error: Connection reset by peer)
Sep 02 17:23:56 *	mattia[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:56 *	josiah_sama has quit (Write error: Connection reset by peer)
Sep 02 17:23:56 *	DenisLehmann[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:56 *	vkleen has quit (Write error: Connection reset by peer)
Sep 02 17:23:56 *	vaibhavsagar has quit (Write error: Connection reset by peer)
Sep 02 17:23:56 *	pigmej[m] has quit (Write error: Broken pipe)
Sep 02 17:23:57 *	SFL[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:57 *	NickHu has quit (Write error: Connection reset by peer)
Sep 02 17:23:58 *	Bimmie[m] has quit (Remote host closed the connection)
Sep 02 17:23:58 *	sphalerit has quit (Remote host closed the connection)
Sep 02 17:23:58 *	Noughtmare[m] has quit (Remote host closed the connection)
Sep 02 17:23:58 *	Ericson2314 has quit (Remote host closed the connection)
Sep 02 17:23:58 *	cesar[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:58 *	iarp[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:58 *	Cele[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:58 *	sayukimans[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:58 *	kylos[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:58 *	coil[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:58 *	mithrandi[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:58 *	unclechu has quit (Read error: Connection reset by peer)
Sep 02 17:23:58 *	ShujaRafi[m] has quit (Write error: Connection reset by peer)
Sep 02 17:23:59 *	sm[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:00 *	steshaw[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:00 *	M0ddba11[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:01 *	sielicki has quit (Write error: Connection reset by peer)
Sep 02 17:24:01 *	freeman42x[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:01 *	aearnus[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:01 *	abbe[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:01 *	roninkaizen[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:01 *	macerbi[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:01 *	hdurer[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:03 *	deklund[m] has quit (Remote host closed the connection)
Sep 02 17:24:03 *	pebeto[m] has quit (Remote host closed the connection)
Sep 02 17:24:03 *	matrixyz[m] has quit (Remote host closed the connection)
Sep 02 17:24:04 *	cyclops19[m] has quit (Remote host closed the connection)
Sep 02 17:24:04 *	phanimahesh[m] has quit (Remote host closed the connection)
Sep 02 17:24:04 *	asonixDogHeThey[ has quit (Remote host closed the connection)
Sep 02 17:24:04 *	mujx[m]2 has quit (Remote host closed the connection)
Sep 02 17:24:04 *	krhubert[m] has quit (Remote host closed the connection)
Sep 02 17:24:04 *	alex[m]13 has quit (Remote host closed the connection)
Sep 02 17:24:04 *	atpotts has quit (Remote host closed the connection)
Sep 02 17:24:04 *	ajirx[m] has quit (Remote host closed the connection)
Sep 02 17:24:04 *	gspia[m] has quit (Remote host closed the connection)
Sep 02 17:24:04 *	anton-latukha[m] has quit (Remote host closed the connection)
Sep 02 17:24:04 *	Hanma[m] has quit (Remote host closed the connection)
Sep 02 17:24:04 *	pagoda_5b[m] has quit (Remote host closed the connection)
Sep 02 17:24:04 *	GregKNicholson[m has quit (Write error: Connection reset by peer)
Sep 02 17:24:04 *	coldpress[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:04 *	dude[m]1 has quit (Write error: Connection reset by peer)
Sep 02 17:24:04 *	amb007[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:04 *	sergiotarxz[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	imposs[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	ludovicdanjoumad has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	kicker22004[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	WeiTang[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	Mitch[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	adziahel[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	tomtau[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	bee[m]1 has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	jibby[m]1 has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	kaychaks[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	corin[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	yrid[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	yur3shmukcik[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	sudorebootnowsud has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	n0ma_d[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	MerlinGttlinger[ has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	javjarfer[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	hsw[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	friedm[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	fiddeldibu[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	vk3wtf[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:05 *	pleasesendnudes[ has quit (Remote host closed the connection)
Sep 02 17:24:06 *	PhilipWhite[m] has quit (Remote host closed the connection)
Sep 02 17:24:06 *	homebeach[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:06 *	krowlan3[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:08 *	etjet[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:08 *	undu[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:08 *	midi[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:08 *	stan[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:08 *	m00n[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:08 *	MonsieurArcher[m has quit (Write error: Connection reset by peer)
Sep 02 17:24:08 *	ppseafield[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:08 *	qasim[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:08 *	MarquisKurt[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:08 *	vigilian[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:08 *	hkimhvyh[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:08 *	reconmaster[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:09 *	ookfof[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:09 *	glothit7ok[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:10 *	humanwire[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	sriehl[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:10 *	godva[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:10 *	jonreeve[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:10 *	dbaldwin has quit (Quit: WeeChat 2.5)
Sep 02 17:24:10 *	xethrog42[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	mat8913[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	johanejg[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	fswalker[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	inflationova[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	maxmaguire[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	null14[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	biox[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	Artifth[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	imp0s5ible has quit (Remote host closed the connection)
Sep 02 17:24:10 *	JakeO[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	soaoaig[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	peter-js[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	triste[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	aitzol[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	xlogan[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	ChrisPenner[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	haskelllisp[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	themadman[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	brevalda[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	buster528[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	papazeus[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	Kimani[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	oniani[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	shachiku[m] has quit (Remote host closed the connection)
Sep 02 17:24:10 *	Richy[m] has quit (Remote host closed the connection)
Sep 02 17:24:11 *	davex32[m] has quit (Remote host closed the connection)
Sep 02 17:24:11 *	jak[m] has quit (Remote host closed the connection)
Sep 02 17:24:11 *	Brio[m] has quit (Remote host closed the connection)
Sep 02 17:24:11 *	roberth has quit (Remote host closed the connection)
Sep 02 17:24:11 *	vsts[m] has quit (Remote host closed the connection)
Sep 02 17:24:11 *	Kenneth[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	MartinKlimi[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	Godel[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	aquarial has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	fulgjon has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	mujx[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	whoops has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	keep-learning[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	lierdakil[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	EuAndreh[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	paulus[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	jrozanski has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	luminousnine[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	EmilKarlson has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	maigel[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	boistordu has quit (Read error: Connection reset by peer)
Sep 02 17:24:11 *	twom[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	olmvnec[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	grag[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	ad5twoknebor[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	LasEspuelas has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	mmynsted[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:11 *	PonyLoop1000[m] has quit (Remote host closed the connection)
Sep 02 17:24:12 *	Ekho[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:13 *	VaNilLa[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:13 *	aloiscochard[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:13 *	max3raza[m] has quit (Remote host closed the connection)
Sep 02 17:24:13 *	themsay[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:14 *	siraben has quit (Write error: Connection reset by peer)
Sep 02 17:24:14 *	aqtusia[m] has quit (Write error: Broken pipe)
Sep 02 17:24:14 *	nonlinear[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:14 *	d1mur4tdj[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:14 *	eyenx[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:14 *	kaiyou[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:14 *	Rich[m]1 has quit (Remote host closed the connection)
Sep 02 17:24:14 *	JoelMcCracken[m] has quit (Remote host closed the connection)
Sep 02 17:24:14 *	kyleondy[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:14 *	tuxsoy has quit (Read error: Connection reset by peer)
Sep 02 17:24:14 *	NickHu1 has quit (Read error: Connection reset by peer)
Sep 02 17:24:14 *	luftmensch[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:14 *	Wizek[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:14 *	M31violet13[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:14 *	somni[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:15 *	SmiVan[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	heyakyra[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:15 *	lukasubo[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:15 *	nalix[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:15 *	sylvie[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:15 *	iantownsend has quit (Read error: Connection reset by peer)
Sep 02 17:24:15 *	AkikoHimenokoji[ has quit (Remote host closed the connection)
Sep 02 17:24:15 *	cbg[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:15 *	alibabzo has quit (Read error: Connection reset by peer)
Sep 02 17:24:15 *	ciet[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:15 *	natmac[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:15 *	testacc3[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	yi[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	aruncom2006[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	jg[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	corin[m]1 has quit (Remote host closed the connection)
Sep 02 17:24:15 *	adaizen[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	pietromrtn[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	benzoid[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	eckt[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	amerocu[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	alko[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	abc123zzz[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	lions[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	actartis[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	jlorand[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	sputny[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	hackeryarn[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	arianvp[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	link2xt[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	derberg[m]1 has quit (Write error: Broken pipe)
Sep 02 17:24:15 *	M2en[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	blackspider76[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	beaverfever[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	ovigren[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	lapav[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:15 *	nolep[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:15 *	dag[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:15 *	labs[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:15 *	ircer[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:15 *	jeeg[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:15 *	ist5shreawf[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:15 *	zopsi[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	triskeon[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	wrunt[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	akt[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	pschooom[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	runningriot9[m] has quit (Remote host closed the connection)
Sep 02 17:24:15 *	apurvapavaskar has quit (Remote host closed the connection)
Sep 02 17:24:16 *	neiluj[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	spacekitteh[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	contrun[m] has quit (Read error: Connection reset by peer)
Sep 02 17:24:16 *	vpei[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	TheD6[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	PotatoRick[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	Godslatestgift[m has quit (Remote host closed the connection)
Sep 02 17:24:16 *	tops[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	AGmotive[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	kahuna[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:16 *	ChristopherBurg[ has quit (Write error: Connection reset by peer)
Sep 02 17:24:16 *	tejok[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	bkl[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	rgh[m]2 has quit (Remote host closed the connection)
Sep 02 17:24:16 *	gkobeaga[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	javbit[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	gd2398[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	tswett[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	ClownMaster[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	likliklik has quit (Remote host closed the connection)
Sep 02 17:24:16 *	BaMaung[m] has quit (Remote host closed the connection)
Sep 02 17:24:16 *	iceychris[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	Orbstheorem[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	GNULambda[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	patonw[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	tkots[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	cawal[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:17 *	fiberpunk[m] has quit (Write error: Connection reset by peer)
Sep 02 17:24:17 *	hans[m]4 has quit (Remote host closed the connection)
Sep 02 17:24:17 *	pineapple[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	wuxianhuiyi[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	arturo[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	supersven[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	jonge[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	domenkozar[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	ninjatrappeur[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	giuseppe[m] has quit (Remote host closed the connection)
Sep 02 17:24:17 *	sepp2k has quit (Remote host closed the connection)
Sep 02 17:24:17 *	atopuzov[m] has quit (Remote host closed the connection)
Sep 02 17:24:41 *	fizbin (~fizbin@c-98-221-75-24.hsd1.nj.comcast.net) has joined
Sep 02 17:25:13 *	conal has quit (Quit: Computer has gone to sleep.)
Sep 02 17:25:22 *	carlomagno has quit (Ping timeout: 246 seconds)
Sep 02 17:25:22 *	sektor has quit (Ping timeout: 246 seconds)
Sep 02 17:25:37 *	hiroaki has quit (Remote host closed the connection)
Sep 02 17:26:41 *	nineonine has quit (Remote host closed the connection)
Sep 02 17:26:52 *	hiroaki (~hiroaki@77.22.142.5) has joined
Sep 02 17:27:23 *	tsrt^ has quit (Ping timeout: 258 seconds)
Sep 02 17:27:49 *	conal (~conal@209.209.238.165) has joined
Sep 02 17:28:12 *	singleton (be73269f@190.115.38.159) has left
Sep 02 17:28:16 *	verement (~anonymous@cpe-76-167-227-46.san.res.rr.com) has joined
Sep 02 17:28:25 *	tsrt^ (tsrt@ip98-186-247-88.mc.at.cox.net) has joined
Sep 02 17:28:48 *	fizbin has quit (Ping timeout: 245 seconds)
Sep 02 17:32:36 *	aloiscochard[m] (aloiscocha@gateway/shell/matrix.org/x-uqfqnnzapfuyvzqo) has joined
Sep 02 17:33:04 *	mostendocrine has quit (Ping timeout: 264 seconds)
Sep 02 17:33:21 *	mostendocrine (~mostendoc@c-73-171-123-243.hsd1.va.comcast.net) has joined
Sep 02 17:33:36 *	boxscape has quit (Remote host closed the connection)
Sep 02 17:33:42 *	fizbin (~fizbin@c-98-221-75-24.hsd1.nj.comcast.net) has joined
Sep 02 17:35:46 *	M0ddba11[m] (m0ddba11ma@gateway/shell/matrix.org/x-fgkabtebniwhxqfx) has joined
Sep 02 17:36:32 Python interface unloaded
**** ENDING LOGGING AT Mon Sep  2 17:36:32 2019

**** BEGIN LOGGING AT Mon Sep  2 17:42:19 2019

Sep 02 17:42:19 *	Now talking on #haskell
Sep 02 17:42:19 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Sep 02 17:42:19 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Sep 02 17:42:19 *	Channel #haskell url: http://www.haskell.org/
Sep 02 17:43:40 *	fizbin (~fizbin@c-98-221-75-24.hsd1.nj.comcast.net) has joined
Sep 02 17:44:28 *	muzzle`` has quit (Ping timeout: 264 seconds)
Sep 02 17:46:57 *	doomas (~doomas@141.98.102.235) has joined
Sep 02 17:47:41 Python interface unloaded
Sep 02 17:47:41 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Mon Sep  2 17:47:41 2019

**** BEGIN LOGGING AT Sat Sep 28 12:15:39 2019

Sep 28 12:15:39 *	Now talking on #haskell
Sep 28 12:15:39 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Sep 28 12:15:39 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Sep 28 12:15:39 *	Channel #haskell url: http://www.haskell.org/
Sep 28 12:15:51 <monochrom>	It's incomprehensible to me every time there is lens, Kan extensions, Yoneda's lemma, HoTT, stack, nix, or webapps.
Sep 28 12:16:16 <EvanR>	for the most part agree
Sep 28 12:16:20 <crestfallen>	hi real quick what's happening with this list comprehension and the wildcard? :
Sep 28 12:16:31 <crestfallen>	> [ 1  | _ <- [4,5]]
Sep 28 12:16:33 <lambdabot>	 [1,1]
Sep 28 12:16:36 <heatsink>	How did Haskell get related to nix?
Sep 28 12:16:50 <crestfallen>	> sum [ 1  | _ <- [4,5]]
Sep 28 12:16:51 <ggVGc>	crestfallen: it generates a list of two values, and outputs 1 for each of them
Sep 28 12:16:54 <lambdabot>	 2
Sep 28 12:16:56 <monochrom>	Like [ 1 | v <- [4,5] ]
Sep 28 12:16:57 <geekosaur>	it's easier to build some packages via nix than trying to get all the pieces together yourself
Sep 28 12:16:58 *	pie_ (~pie_@unaffiliated/pie-/x-0787662) has joined
Sep 28 12:17:09 <geekosaur>	reflex and ghcjs come to mind
Sep 28 12:17:29 <heatsink>	Hm.  So nix was kind of an alternative to cabal/stack?
Sep 28 12:17:48 <heatsink>	I guess nix predates stack
Sep 28 12:17:48 <hololeap>	crestfallen: it could be rewritten as  map (\_ -> 1) [4,5]
Sep 28 12:17:53 *	mbrock has quit (Ping timeout: 276 seconds)
Sep 28 12:17:55 <geekosaur>	sort of. except it's not just about haskell stuff, it tries to "sandbox" an entire OS
Sep 28 12:17:59 <ggVGc>	crestfallen: [ 1  | _ <- [4,5]] is saying "Iterate over the list [4,5], and for each iteration put the value in _ (e.g ignore the value). And for each value, output 1
Sep 28 12:17:59 <geekosaur>	userspace, at least
Sep 28 12:18:03 <ggVGc>	so you get [1,1]
Sep 28 12:18:27 <geekosaur>	this can be useful when there are non-Haskell components to whatever you're building
Sep 28 12:18:44 <ggVGc>	geekosaur: or when have to run npm but refuse to have any node on your system...
Sep 28 12:19:25 <heatsink>	That makes sense
Sep 28 12:19:27 <ggVGc>	or when you have to format your code with exact compiler version x.y.z to make it go through CI 
Sep 28 12:19:30 *	[Leary] (~leary@122-58-40-123-vdsl.sparkbb.co.nz) has joined
Sep 28 12:19:36 <ggVGc>	but your system compiler version is a.b
Sep 28 12:19:54 <crestfallen>	ggVGc, but in this case: 
Sep 28 12:20:02 <crestfallen>	> sum [ 1  | _ <- [4,5]]
Sep 28 12:20:03 <geekosaur>	stack handles that. cabal doesn't but you can use ghcup or hvr's repo or etc. to get multiple versions
Sep 28 12:20:05 <lambdabot>	 2
Sep 28 12:20:13 <ggVGc>	crestfallen: yes, you are summing [1, 1]
Sep 28 12:20:16 <ggVGc>	e.g 1 + 1
Sep 28 12:20:19 *	Lears has quit (Read error: Connection reset by peer)
Sep 28 12:20:22 <ggVGc>	which is 2
Sep 28 12:20:25 *	slack1256 has quit (Ping timeout: 265 seconds)
Sep 28 12:20:54 <crestfallen>	but wouldn't [4,5] be 2 iterations to be added to 1?
Sep 28 12:21:27 <ggVGc>	you already saw the result of [ 1  | _ <- [4,5]]  is [1,1]
Sep 28 12:21:29 <ggVGc>	right?
Sep 28 12:21:34 <ggVGc>	so you're just calling sum on [1,1]
Sep 28 12:21:55 *	[Leary] has quit (Remote host closed the connection)
Sep 28 12:22:11 *	Lears (~leary@122-58-40-123-vdsl.sparkbb.co.nz) has joined
Sep 28 12:22:19 <ggVGc>	also, this is a very strange construction, and you'd never see it in normal haskell code
Sep 28 12:22:41 <crestfallen>	but wait sorry..
Sep 28 12:23:02 <crestfallen>	is it only sending 1 to the left of the pipe?
Sep 28 12:23:30 <crestfallen>	to be cons to the 1 like 1:[1] ?
Sep 28 12:23:30 <ggVGc>	crestfallen: the left part of a list comprehension is the expression outputted for each iteration. It has access to the variables you define in the right part of the expression
Sep 28 12:23:41 <ggVGc>	the right part is how you populate the values for each iteration
Sep 28 12:24:03 <EvanR>	[ 1 | _ <- [p, not p] ]
Sep 28 12:24:03 <ggVGc>	you are outputting a constant 1 for any iteration
Sep 28 12:24:21 <crestfallen>	oh so its not a seed, it's like a quantifier?
Sep 28 12:24:24 <monochrom>	You get [1,1], as opposed to [1,1,1,1,1], precisely because there are two iterations.
Sep 28 12:24:51 *	greta[m] (gretautwen@gateway/shell/matrix.org/x-bxzsjfamkizuaeqr) has joined
Sep 28 12:25:05 *	geekosaur has quit (Ping timeout: 260 seconds)
Sep 28 12:25:31 <crestfallen>	so [1 | ... ] is like a quantifier so to speak 
Sep 28 12:25:33 <ggVGc>	btw, ignoring the value in the right part of the list comprehension is very strange, and defeats the whole purpose of using one
Sep 28 12:25:48 <ggVGc>	I'd almost argue what you're writing should be an error or at least a warning from the compiler
Sep 28 12:26:00 <EvanR>	crestfallen: it corresponds to set-builder notation, it stands for a method of building a lit
Sep 28 12:26:06 <EvanR>	list
Sep 28 12:26:36 <ggVGc>	crestfallen: what you are writing is exactly equivalent to:
Sep 28 12:26:37 <ggVGc>	replicate 2 1
Sep 28 12:26:40 <ggVGc>	> replicate 2 1
Sep 28 12:26:42 <lambdabot>	 [1,1]
Sep 28 12:26:53 <crestfallen>	so a quatifier or interval or what would you call it?
Sep 28 12:26:57 <ggVGc>	or rather
Sep 28 12:26:58 <monochrom>	These "like" analogies make you comfortable and at the same time are precisely the reason why you aren't learning.
Sep 28 12:27:07 <ggVGc>	> replicate (length [4,5]) 1
Sep 28 12:27:09 <lambdabot>	 [1,1]
Sep 28 12:27:18 <ggVGc>	^ crestfallen  this is what you are expressing
Sep 28 12:27:21 *	merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Sep 28 12:27:33 <hololeap>	crestfallen, have you seen a useful example of the list comprehension notation so you can see what it's used for?
Sep 28 12:27:34 <crestfallen>	no I get it .. it's not a seed, or the first element of a list to be summed
Sep 28 12:27:58 <ggVGc>	> [a + b | a <- [1,2], b <- [3,4]]
Sep 28 12:28:00 <lambdabot>	 [4,5,5,6]
Sep 28 12:28:02 *	perrier-jouet has quit (Quit: WeeChat 2.6)
Sep 28 12:28:09 *	CSP-SOFTWARE has quit (Ping timeout: 265 seconds)
Sep 28 12:28:11 <crestfallen>	yeah it's just in a little tutorial I found that has this example
Sep 28 12:28:19 <ggVGc>	it's a very strange example
Sep 28 12:28:35 <ggVGc>	if you're ignoring the values of the right side of a list comprehension, you're basically doing a replicate
Sep 28 12:28:36 *	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has joined
Sep 28 12:28:48 *	perrier-jouet has quit (Client Quit)
Sep 28 12:29:01 *	gobby has quit (Remote host closed the connection)
Sep 28 12:29:08 *	hackage poseidon 0.1.1.0 - Simple extensible library to run SQL file against PostgreSQL database.  https://hackage.haskell.org/package/poseidon-0.1.1.0 (FlogFR)
Sep 28 12:29:18 <crestfallen>	no the replicate comparison cleared it up thanks ALL
Sep 28 12:29:42 *	CSP-SOFTWARE (~uwx@172.245.163.218) has joined
Sep 28 12:29:53 <ggVGc>	cool :)
Sep 28 12:29:58 <ggVGc>	btw, list comprehensions are very useful
Sep 28 12:30:04 <ggVGc>	if used when they are suitable
Sep 28 12:30:27 <crestfallen>	I've seen a bunch I just didn't get what the 1 | .. stood for
Sep 28 12:30:59 *	cosimone (~cosimone@2001:b07:ae5:db26:9520:741c:a5e9:2223) has joined
Sep 28 12:31:38 <crestfallen>	having [1 | _ <- ..] actually afforded some insight, since normally it's [x | x <- ..]
Sep 28 12:32:31 *	fendor_ has quit (Ping timeout: 268 seconds)
Sep 28 12:32:33 <ggVGc>	crestfallen: list comprehensions are the most useful when the expression in the left part isn't just a simple "x"
Sep 28 12:32:35 *	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has joined
Sep 28 12:32:40 <ggVGc>	but an actual useful expression
Sep 28 12:32:50 <ggVGc>	e.g an arithmetic one, or a function application
Sep 28 12:32:50 *	zacts (~zacts@dragora/developer/zacts) has joined
Sep 28 12:33:04 <ggVGc>	or a data constructor
Sep 28 12:33:11 <hololeap>	> [(x,y) | x <- [1..4], y <- [1..4], x /= y]
Sep 28 12:33:13 <lambdabot>	 [(1,2),(1,3),(1,4),(2,1),(2,3),(2,4),(3,1),(3,2),(3,4),(4,1),(4,2),(4,3)]
Sep 28 12:33:22 <hololeap>	just a random example
Sep 28 12:33:31 *	fendor_ (~fendor@178.165.130.114.wireless.dyn.drei.com) has joined
Sep 28 12:33:48 <crestfallen>	yeah thanks I've seen those sorts, but not a data constructor I don't believe
Sep 28 12:34:13 <ggVGc>	creating a tuple is a data constructor
Sep 28 12:34:18 <ggVGc>	but
Sep 28 12:34:36 <ggVGc>	[Grid x y | x <- [1,2], y <- [1,2], x /= y]
Sep 28 12:34:47 <ggVGc>	for example
Sep 28 12:35:09 <crestfallen>	> [Grid x y | x <- [1,2], y <- [1,2], x /= y]
Sep 28 12:35:12 <lambdabot>	 error:
Sep 28 12:35:12 <lambdabot>	     Data constructor not in scope: Grid :: Integer -> Integer -> a
Sep 28 12:35:13 <EvanR>	a tuple is a data constructed
Sep 28 12:35:34 <ggVGc>	crestfallen: that's why I didn't use the bot :)
Sep 28 12:35:47 <crestfallen>	jumped the gun :)
Sep 28 12:36:18 *	cobreadmonster (uid150434@haskell/developer/breadmonster) has joined
Sep 28 12:36:22 <ggVGc>	the point is, list comprehensions are a concise way of creating a sequence of values based on some rules and lists of input values
Sep 28 12:36:28 <ggVGc>	rather than combining fmaps and folds
Sep 28 12:37:39 *	hackage poseidon-postgis 0.1.1.0 - Extension of Poseidon library for Postgis (Spatial and Geographic objects for PostgreSQL)  https://hackage.haskell.org/package/poseidon-postgis-0.1.1.0 (FlogFR)
Sep 28 12:38:02 *	ddellacosta has quit (Ping timeout: 240 seconds)
Sep 28 12:39:25 *	joaj (~joaj@154.200.115.89.rev.vodafone.pt) has joined
Sep 28 12:40:08 *	hackage basen 0.1.0.0 -   https://hackage.haskell.org/package/basen-0.1.0.0 (fabianhjr)
Sep 28 12:43:05 *	noam (~noam@77.137.90.19) has joined
Sep 28 12:43:10 <crestfallen>	ggVGc, that's interesting thanks, I need to contemplate that
Sep 28 12:43:45 *	ystael (~ystael@209.6.50.55) has joined
Sep 28 12:43:55 *	Nta1e (~Nta1e@154.227.179.188) has joined
Sep 28 12:44:42 *	geekosaur (42d52102@66.213.33.2) has joined
Sep 28 12:49:09 <EvanR>	well, comprehensions kind of can't fold can they. They can map, concat, and filter
Sep 28 12:49:59 <EvanR>	(i think the basic list processing operations don't get much attention in this channel)
Sep 28 12:50:21 <dsal>	I forgot how to lens again...  I've got an aeson blob in the form of   {"response": [{"id": "x"}]}   --how do I get a list of response.x ?
Sep 28 12:50:39 <monochrom>	comprehensions are exactly MonadPlus
Sep 28 12:50:58 <monochrom>	So, right, can't fold.
Sep 28 12:51:12 <monochrom>	We know think of fold as a separate Foldable.
Sep 28 12:51:14 *	ggole has quit (Quit: Leaving)
Sep 28 12:51:27 <fabianhjr[m]>	I fucked up and followed a help link from the preview page to the real upload page and ending up publishing my first package sooner (before I wrote the readme) than planned. :/
Sep 28 12:51:27 <fabianhjr[m]>	Oh well
Sep 28 12:52:02 <monochrom>	You can always push a new bug-fix release very quickly.
Sep 28 12:52:08 <fabianhjr[m]>	Good thing is that the tests of the few functions are green. xD
Sep 28 12:52:32 *	CSP-SOFTWARE has quit (Ping timeout: 245 seconds)
Sep 28 12:53:06 <fabianhjr[m]>	Thing is that I wanted to polish it way more before-hand. Dx
Sep 28 12:53:39 *	hackage mmsyn2 0.1.5.0 - The library that can be used for multiple (Ord a) => a -> b transformations  https://hackage.haskell.org/package/mmsyn2-0.1.5.0 (OleksandrZhabenko)
Sep 28 12:54:27 *	owlscientist (~owlscient@sburn/devel/name) has joined
Sep 28 12:55:17 *	ystael has quit (Ping timeout: 240 seconds)
Sep 28 12:55:38 *	poljar (~poljar@78-1-49-22.adsl.net.t-com.hr) has joined
Sep 28 12:55:47 <lyxia>	what a strange package name
Sep 28 12:56:11 *	poljar1 has quit (Ping timeout: 265 seconds)
Sep 28 12:56:25 *	machinedgod (~machinedg@hlfxns018gw-47-54-39-131.dhcp-dynamic.fibreop.ns.bellaliant.net) has joined
Sep 28 12:56:25 *	machinedgod has quit (Client Quit)
Sep 28 12:56:34 *	knupfer has quit (Ping timeout: 245 seconds)
Sep 28 12:56:38 *	machinedgod (~machinedg@hlfxns018gw-47-54-39-131.dhcp-dynamic.fibreop.ns.bellaliant.net) has joined
Sep 28 12:58:32 <fabianhjr[m]>	mmsyn2 or BaseN?
Sep 28 12:59:50 <lyxia>	mmsyn2
Sep 28 13:01:22 *	housecarpenter_ has quit (Quit: Connection closed for inactivity)
Sep 28 13:01:30 *	merijn has quit (Ping timeout: 265 seconds)
Sep 28 13:01:46 <crestfallen>	oh thanks for the additional input everyone
Sep 28 13:02:59 *	linarcx (~linarcx@151.240.254.112) has joined
Sep 28 13:03:11 *	noam[m] (noammatrix@gateway/shell/matrix.org/x-drayvrxaikjqsrlh) has joined
**** BEGIN LOGGING AT Thu Oct  3 18:55:03 2019

Oct 03 18:55:03 *	Now talking on #haskell
Oct 03 18:55:03 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Oct 03 18:55:03 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Oct 03 18:55:03 *	Channel #haskell url: http://www.haskell.org/
Oct 03 18:55:57 *	neildaemond (neildaemon@tilde.club) has joined
Oct 03 18:56:20 <novum>	anyone know how to take 8 bits and flip them around using bitwise operators such that if you start with 0b1000 then you get 0b0001 ... 0b0100 -> 0b0010 .. etc
Oct 03 18:57:50 <boxscape>	novum: if no one has implemented a haskell version yet this has a few good solutions that should be adaptable - but it doesn't look like there's anything that's both elegant and efficient https://stackoverflow.com/questions/2602823/in-c-c-whats-the-simplest-way-to-reverse-the-order-of-bits-in-a-byte
Oct 03 18:58:21 *	nullifidian_ (~nullifidi@unaffiliated/nullifidian) has joined
Oct 03 18:58:47 <novum>	thank you very much. it's for python also but I am trying to stay within the bit realm, for I am operating on bit boards. sorry for working in poopthon, don't kill me, it's for a group project *hides*
Oct 03 18:58:52 *	Saukk (~Saukk@2001:998:fe:2781:1c59:9bb5:b94c:2) has joined
Oct 03 18:58:54 *	aarvar has quit (Ping timeout: 265 seconds)
Oct 03 18:59:05 <novum>	I couldn't quite wrap my head around how to, and I guess that explains why .. 'preciate it a lot though
Oct 03 18:59:52 *	rruizt has quit (Ping timeout: 265 seconds)
Oct 03 19:00:00 <novum>	grrrrr I might just end up using  reversed('{:08b}'.format(the_number)))  how horrible .. I am converting it to a string anyway
Oct 03 19:00:09 <novum>	''.join(reversed(..))
Oct 03 19:00:33 *	wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined
Oct 03 19:00:49 *	rruizt (~rruizt@83-84-23-124.cable.dynamic.v4.ziggo.nl) has joined
Oct 03 19:01:19 *	nullifidian has quit (Ping timeout: 265 seconds)
Oct 03 19:02:29 *	spacefinner (~Sea@140.159.198.31) has joined
Oct 03 19:02:51 *	subttle has quit (Ping timeout: 240 seconds)
Oct 03 19:02:56 <crestfallen>	hi this compiles but I'm getting a hasCallStack error on line 8 (mappend = undefined). Should this work with the way I have main written?  https://termbin.com/6c20
Oct 03 19:03:25 *	oisdk (~oisdk@80.233.44.232) has joined
Oct 03 19:03:28 <EvanR>	novum: yep, reverse will reverse a string... of bits
Oct 03 19:03:32 *	aarvar (~foewfoiew@50.35.43.33) has joined
Oct 03 19:03:37 <EvanR>	> reverse "01000"
Oct 03 19:03:39 <lambdabot>	 "00010"
Oct 03 19:03:47 *	tabemann has quit (Ping timeout: 245 seconds)
Oct 03 19:03:57 <dmwit>	crestfallen: Suppose it did work. What would you expect it to do?
Oct 03 19:04:05 <dmwit>	(And why?)
Oct 03 19:04:05 <EvanR>	if you are working with machine words, your computer might have a bit reversal opcode
Oct 03 19:04:20 <novum>	yes but it's a number. So, I guess in haskell reverse $ show the_number and similar thing in python might be fastest, but that is sad
Oct 03 19:04:34 <novum>	*cries on inside*
Oct 03 19:04:51 *	wroathe has quit (Ping timeout: 240 seconds)
Oct 03 19:05:38 <Axman6>	crestfallen: what do youy expect it to do instead of throwing an error
Oct 03 19:05:44 <EvanR>	> let f = read . reverse . show in f 100100111
Oct 03 19:05:46 <lambdabot>	 *Exception: Prelude.read: no parse
Oct 03 19:05:49 <EvanR>	> let f = read . reverse . show in f 100100111 :: Int
Oct 03 19:05:50 *	lagothrix is now known as Guest43466
Oct 03 19:05:52 <lambdabot>	 111001001
Oct 03 19:05:55 <EvanR>	\o/
Oct 03 19:05:55 <crestfallen>	I don't know I figured it wouldn't work since mappend is undefined. the book says "expected output" the first one being Only (Sum {getSum = 2})
Oct 03 19:05:58 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Oct 03 19:06:27 <novum>	heck it. I am going to make a heckin' tuple that returns the appropriate string
Oct 03 19:06:31 *	oisdk_ (~oisdk@80.233.38.193) has joined
Oct 03 19:06:40 <crestfallen>	or in this case {getSum = 8}
Oct 03 19:06:45 <EvanR>	also this is funny, what is the opposite of \o/
Oct 03 19:06:48 <dmwit>	crestfallen: This is almost certainly intended to be an exercise, and the "expected output" is telling you a way to check if you got the exercise right.
Oct 03 19:06:49 <EvanR>	> reverse "\o/"
Oct 03 19:06:51 <lambdabot>	 <hint>:1:12: error:
Oct 03 19:06:51 <lambdabot>	     lexical error in string/character literal at character '/'
Oct 03 19:06:59 <dmwit>	> reverse "\\o/"
Oct 03 19:07:02 <lambdabot>	 "/o\\"
Oct 03 19:07:04 <EvanR>	game over gmane
Oct 03 19:07:07 <crestfallen>	the paragraph is written a bit convoluted or I'm reading it that way
Oct 03 19:08:05 *	oisdk has quit (Ping timeout: 265 seconds)
Oct 03 19:08:05 <crestfallen>	the main statement I wrote just hoping it would work
Oct 03 19:08:37 *	Guest43466 has quit (Ping timeout: 240 seconds)
Oct 03 19:08:58 <crestfallen>	but oh hold on sorry I see yeah I forgot this book writes undefined as the incompleted part
Oct 03 19:09:30 <dmwit>	> let f n = go 8 0 n; go 0 m _ = m; go i m n = go (i-1) (shiftL m 1 .|. (n .&. bit 0)) (shiftR n 1) in f 0b01000000
Oct 03 19:09:32 <lambdabot>	 error: Variable not in scope: b01000000
Oct 03 19:09:33 *	oisdk (~oisdk@80.233.48.110) has joined
Oct 03 19:09:45 <dmwit>	> let f n = go 8 0 n; go 0 m _ = m; go i m n = go (i-1) (shiftL m 1 .|. (n .&. bit 0)) (shiftR n 1) in f 0x40
Oct 03 19:09:47 <lambdabot>	 2
Oct 03 19:09:54 <dmwit>	novum: ^
Oct 03 19:10:31 <EvanR>	holy bejmoly
Oct 03 19:10:57 *	mindCrime_ (~prhodes@cpe-2606-A000-112A-8159-EA44-563A-99F1-DB26.dyn6.twc.com) has joined
Oct 03 19:11:19 <boxscape>	are there no binary literals in ghc?
Oct 03 19:11:26 <dmwit>	There are, but you need an extension turned on.
Oct 03 19:11:28 *	oisdk_ has quit (Ping timeout: 265 seconds)
Oct 03 19:11:30 <boxscape>	ah
Oct 03 19:11:33 *	abhixec (~abhixec@73.92.49.6) has joined
Oct 03 19:11:36 *	chalkmonster has quit (Quit: WeeChat 2.6)
Oct 03 19:11:53 <dmwit>	Wow, I really like the second answer at boxscape's link.
Oct 03 19:12:12 <EvanR>	optimizing a karnaugh map to do the reversal on N bits is like, digital logic 101
Oct 03 19:12:21 *	freeman42x has quit (Ping timeout: 246 seconds)
Oct 03 19:12:31 *	hpc has quit (Ping timeout: 246 seconds)
Oct 03 19:13:02 <EvanR>	or black magic depending on who is doing it
Oct 03 19:13:43 <boxscape>	yeah the second answer is neat
Oct 03 19:14:41 <crestfallen>	tbh dmwit I cannot follow the preceding text of that exercise   https://termbin.com/avez
Oct 03 19:15:16 <EvanR>	if only you could cross N wires on silicon, you could just do like Ж
Oct 03 19:15:46 <crestfallen>	its entitled reusing Algebras by asking for Algebras. that should stop anyone in their tracks
Oct 03 19:15:48 *	urodna has quit (Quit: urodna)
Oct 03 19:16:02 *	oisdk has quit (Ping timeout: 240 seconds)
Oct 03 19:16:57 <boxscape>	EvanR it should still be pretty simple to do on silicon if you don't insist on crossing them all at the same point, I would think
Oct 03 19:17:10 *	plutoniix (~q@175.176.222.7) has joined
Oct 03 19:17:13 *	silver_ has quit (Read error: Connection reset by peer)
Oct 03 19:17:14 <EvanR>	yeah i thought of that, but then you need to make all the wires the same length somehow
Oct 03 19:17:21 <EvanR>	if you don't want to introduce extra latency
Oct 03 19:17:38 <EvanR>	sounds like a good nerdsnipe
Oct 03 19:17:52 *	Rymden has quit (Ping timeout: 268 seconds)
Oct 03 19:18:38 <EvanR>	actually i already know what the shape looks like
Oct 03 19:18:47 <boxscape>	EvanR brute force solution would be to just introduce some serpentines into the shorter paths but I'm not sure if that's something people do on silicon or only on PCBs
Oct 03 19:19:07 <dmwit>	Why not use the shape suggested by the second answer in boxscape's link? ^_^
Oct 03 19:19:31 <boxscape>	I think that would need more real estate, and a lot more transistors than 0
Oct 03 19:19:42 <dmwit>	Why?
Oct 03 19:20:02 <boxscape>	Oh I guess you don't technically need the ORs, huh
Oct 03 19:20:07 <dmwit>	right
Oct 03 19:20:19 *	Ariakenom (~Ariakenom@h-98-128-229-79.NA.cust.bahnhof.se) has joined
Oct 03 19:20:25 <boxscape>	okay, fair enough, that could work
Oct 03 19:20:26 <EvanR>	ok this is wrong but is technically "swapping" https://imgur.com/a/fpKiQSv
Oct 03 19:20:29 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Oct 03 19:20:41 <boxscape>	pretty
Oct 03 19:21:06 *	Scavengers (~Scavenger@94.13.115.0) has joined
Oct 03 19:21:14 <boxscape>	that's step one of the second answer
Oct 03 19:21:23 <EvanR>	yeah i generated it with a quasi quoter with input [a b c d e f g h -> e f g h a b c d]
Oct 03 19:21:40 <boxscape>	@pl \a b c d e f g h -> e f g h a b c d
Oct 03 19:21:41 <EvanR>	let me try [a b c d e f g h -> h g f e d c d a]
Oct 03 19:21:41 <lambdabot>	((((flip . ((flip . ((flip . (flip .)) .)) .)) .) . flip . ((flip . ((flip . (flip .)) .)) .)) .) . flip . ((flip . ((flip . (flip .)) .)) .) . flip (flip . ((flip . (flip .)) .))
Oct 03 19:21:58 <EvanR>	yeah
Oct 03 19:22:26 <EvanR>	mine outputs adjacent swaps and identity
Oct 03 19:22:30 *	felixfoertsch has quit (Ping timeout: 246 seconds)
Oct 03 19:22:46 <EvanR>	and is way bigger
Oct 03 19:22:59 <crestfallen>	dmwit if you're defining mappend, I'm thinking we need 2 statements in a where clause
Oct 03 19:22:59 <EvanR>	but i tried to make sure it was "optimal"
Oct 03 19:23:14 <crestfallen>	since nada doesn't take a type
Oct 03 19:23:19 *	felixfoertsch (~felixfoer@2001:16b8:5030:e000:a997:9e50:4735:5344) has joined
Oct 03 19:23:55 <crestfallen>	or and if/else statement?
Oct 03 19:24:26 <crestfallen>	an*
Oct 03 19:25:57 *	Daquilla[m] (quevangelm@gateway/shell/matrix.org/x-cokvgnvwquydpplg) has joined
Oct 03 19:28:45 <MarcelineVQ>	if won't be useful to you for this exercise, you also don't require where or let, though you're welcome to use them if you do feel the need. start by spelling out the different cases that mappend can have, like Booly did above
Oct 03 19:30:52 *	mastarija has quit (Ping timeout: 252 seconds)
Oct 03 19:31:24 <EvanR>	boxscape: nice... just do a "half size" version of that picture on the two halfs, then do a "quarter size" version on the last 4 quarters... and all wires are the same length since they all undergo 3 "braidings"
Oct 03 19:31:35 <EvanR>	why don't more CPUs have this
Oct 03 19:31:45 <crestfallen>	to begin with I don't understand the constraint:     Monoid b => Monoid (a -> b) .. Monoid (a -> b) being the "larger" monoid
Oct 03 19:32:04 <boxscape>	EvanR yeah, that's kind of what I expected. I guess it's probably just not used that much in practice.
Oct 03 19:32:17 <crestfallen>	I don't know what going on from the beginner of this section.
Oct 03 19:32:25 <EvanR>	it makes homework problems too easy
Oct 03 19:32:33 <boxscape>	heh
Oct 03 19:32:55 <crestfallen>	beginning 
Oct 03 19:32:57 <Hoxtrop[m]>	Hyperactive group and I can't understand a thing. Be back once I'm actually learning Haskell.
Oct 03 19:33:02 *	Hoxtrop[m] (hoxtropmat@gateway/shell/matrix.org/x-sxqnmeaofkmrjqhn) has left ("User left")
Oct 03 19:33:38 *	hackage net-spider 0.3.2.1 - A graph database middleware to maintain a time-varying graph.  https://hackage.haskell.org/package/net-spider-0.3.2.1 (debugito)
Oct 03 19:34:07 <MarcelineVQ>	Monoid b => Monoid (a -> b) says that if b has a Monoid instance so does Monoid (a -> b). How this is useful is that since we have assumed that b has a Monoid instance we're allowed to use b's mappend and mempty in our implementation of Monoid (a -> b)
Oct 03 19:35:07 <boxscape>	I just finally really understood what I was confused about earlier with visible dependent quantification - I didn't fully grok that forall introduces a variable that the rest of the type can depend on, where -> doesn't
Oct 03 19:35:09 *	hackage net-spider-rpl 0.3.1.0 - NetSpider data model and utility for RPL networks  https://hackage.haskell.org/package/net-spider-rpl-0.3.1.0 (debugito)
Oct 03 19:35:41 <EvanR>	i'm wrong, they undergo distinct number of crossings
Oct 03 19:35:48 <boxscape>	huh
Oct 03 19:36:06 *	perrier-jouet has quit (Quit: WeeChat 2.6)
Oct 03 19:36:09 *	hackage net-spider-cli 0.1.0.2 - CLI option parsers for NetSpider objects  https://hackage.haskell.org/package/net-spider-cli-0.1.0.2 (debugito)
Oct 03 19:36:18 <EvanR>	um nevermind
Oct 03 19:36:32 <boxscape>	okay I was wondering how that's possible
Oct 03 19:36:41 <crestfallen>	MarcelineVQ, thanks, working... 
Oct 03 19:36:43 <EvanR>	they spend different times "going straight" but it adds up to the same
Oct 03 19:36:57 <boxscape>	(though you'd run into trouble if you wanted to reverse anything that's not 2^n bits, probably)
Oct 03 19:37:09 *	hackage net-spider-pangraph 0.1.1.1 - Conversion between net-spider and pangraph  https://hackage.haskell.org/package/net-spider-pangraph-0.1.1.1 (debugito)
Oct 03 19:37:12 <EvanR>	you still might end up in trouble at very high frequency
Oct 03 19:37:23 <boxscape>	what kind of trouble?
Oct 03 19:37:37 <EvanR>	let a binary number be a collection of "1 pulses" or nothing
Oct 03 19:37:45 <EvanR>	now the pulses will not travel together through this thing
Oct 03 19:37:50 *	mastarija (~mastarija@212.250.101.146) has joined
Oct 03 19:38:01 <EvanR>	they would arrive at the same time, if there wasn't some weird cross talk
Oct 03 19:38:09 *	hackage net-spider-rpl-cli 0.1.1.1 - CLI executable of NetSpider.RPL.  https://hackage.haskell.org/package/net-spider-rpl-cli-0.1.1.1 (debugito)
Oct 03 19:38:23 <boxscape>	hm
Oct 03 19:38:50 <EvanR>	works if the voltage is varying slowly 
Oct 03 19:39:02 *	dale (~dale@unaffiliated/dale) has joined
Oct 03 19:39:16 <EvanR>	thats just the case no matter what you're doing
Oct 03 19:39:24 <boxscape>	this is getting beyond my knowledge of electrical engineering
Oct 03 19:39:48 <EvanR>	yeah i think theyre at their frequency limit these days
Oct 03 19:40:30 *	abhixec has quit (Quit: leaving)
Oct 03 19:41:38 <crestfallen>	what a drag MarcelineVQ I don't understand the text. gotta go thanks for the help
Oct 03 19:41:42 <MarcelineVQ>	crestfallen: this is the literal meaning of "Reusing algebras by asking for algebras" Monoid b => Monoid (a -> b) can be read as asking to be allowed to use Monoid b's versions of mempty and mappend when we're working with Monoid (a -> b)
Oct 03 19:42:05 <MarcelineVQ>	re-read 12.2 if algebra is a scary word
Oct 03 19:42:09 <MarcelineVQ>	*15.2
Oct 03 19:42:39 *	andi- has quit (Remote host closed the connection)
Oct 03 19:43:03 <crestfallen>	ok will do thanks
Oct 03 19:43:14 Python interface unloaded
Oct 03 19:43:14 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Oct  3 19:43:15 2019

**** BEGIN LOGGING AT Fri Oct  4 19:32:12 2019

Oct 04 19:32:12 *	Now talking on #haskell
Oct 04 19:32:13 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Oct 04 19:32:13 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Oct 04 19:32:13 *	Channel #haskell url: http://www.haskell.org/
Oct 04 19:32:51 <dsal>	Why do you need guard?
Oct 04 19:33:10 *	xff0x_ (~fox@softbank126015143150.bbtec.net) has joined
Oct 04 19:33:14 <sim590>	dsal: To exit if it's `Nothing`.
Oct 04 19:33:22 <sim590>	Oh
Oct 04 19:33:28 <sim590>	Yeah I don't need it.
Oct 04 19:33:30 <sim590>	lol
Oct 04 19:33:48 <sim590>	dsal: thanks.
Oct 04 19:34:02 *	xkapastel has quit (Quit: Connection closed for inactivity)
Oct 04 19:34:07 *	nineonine has quit (Read error: Connection reset by peer)
Oct 04 19:34:16 <sim590>	Actually.
Oct 04 19:34:17 *	nineonine (~nineonine@216-19-190-182.dyn.novuscom.net) has joined
Oct 04 19:34:23 <sim590>	Now I need it for the reason I mentionned.
Oct 04 19:34:35 <sim590>	If the passphrase is bad, I don't want to return the passphrase, but `Nothing`.
Oct 04 19:36:26 *	nineonine has quit (Remote host closed the connection)
Oct 04 19:36:27 *	xff0x has quit (Ping timeout: 265 seconds)
Oct 04 19:37:11 *	dkeas has quit (Quit: dkeas)
Oct 04 19:37:14 *	nineonine (~nineonine@74.203.208.2) has joined
Oct 04 19:37:59 *	fewfwfewfergerg3 has quit (Ping timeout: 260 seconds)
Oct 04 19:39:02 *	Gurkenglas_ has quit (Ping timeout: 276 seconds)
Oct 04 19:39:41 *	Gurkenglas has quit (Ping timeout: 276 seconds)
Oct 04 19:41:01 <crestfallen>	hi on lines 5,6, 5 I believe is clear because g after f, then h, so that is a->b , b->c, c->d . But the application order on line 6 seems like the precedence of (h . g) would not have an 'a' for f.        https://paste.debian.net/1104605/
Oct 04 19:42:18 <shachaf>	h . (g . f) and (h . g) . f are equal and have the same type.
Oct 04 19:42:49 <shachaf>	I don't think the rest of that document makes sense. Certainly "=" is used with some bizarre meaning.
Oct 04 19:43:17 <crestfallen>	it seems like it would be b->c, c->d then f would need an 'a' :  f = a->b 
Oct 04 19:43:20 <crestfallen>	shachaf, 
Oct 04 19:43:35 <shachaf>	The words you're saying also don't make sense.
Oct 04 19:43:45 <shachaf>	I recommend being very careful and verbose.
Oct 04 19:44:01 *	reactormonk has quit (Ping timeout: 250 seconds)
Oct 04 19:44:11 *	MarcelineVQ has quit (Ping timeout: 265 seconds)
Oct 04 19:44:28 <glguy>	It's dangerous to go alone, take a towel
Oct 04 19:44:48 <crestfallen>	so if we compose h after g, we have b->c -> (c->d), right?
Oct 04 19:45:07 <crestfallen>	on line 6
Oct 04 19:45:37 *	poljar (~poljar@93-141-145-178.adsl.net.t-com.hr) has joined
Oct 04 19:46:05 *	MarcelineVQ (~anja@198.254.192.220) has joined
Oct 04 19:46:11 *	poljar1 has quit (Ping timeout: 276 seconds)
Oct 04 19:46:18 <shachaf>	You're continuing to say things that don't make sense. What do those arrows mean?
Oct 04 19:46:19 *	alicemaz has quit (Quit: WeeChat 2.6)
Oct 04 19:46:28 <ddk>	do you know about companies are using `Cloud Haskell` in Production, currently  ?
Oct 04 19:46:54 <shachaf>	Here are the kinds of statements you could be making that would make sense to me: "the type of f is a -> b; the type of g is b -> c; therefore the type of g . f is a -> c"
Oct 04 19:47:05 <shachaf>	Here "->" means the type of  function and nothing else.
Oct 04 19:47:05 <crestfallen>	(h . g) on line six means "h after g," right?
Oct 04 19:47:43 <crestfallen>	ok, let me put it this way:
Oct 04 19:47:59 <crestfallen>	the way I read (h . g) . f   is:
Oct 04 19:48:05 <shachaf>	"after" is an English word that you'll need to define if you want to use it. I recommend not using it.
Oct 04 19:48:40 <rotaerk>	(h . g) x = h (g x)
Oct 04 19:48:43 <crestfallen>	b->c->c->d->a->b , which seems wrong
Oct 04 19:49:34 <crestfallen>	shachaf, I read that (h . g) may be read: h after g
Oct 04 19:49:36 <shachaf>	That doesn't seem right or wrong to me.
Oct 04 19:49:55 <shachaf>	You'll have to explain what it means, if you want to write something like that. What do those arrows mean?
Oct 04 19:50:02 <shachaf>	(But I recommend not writing anything like that.)
Oct 04 19:50:23 <shachaf>	You can pronounce "." as "after" if you like, but that doesn't change anything.
Oct 04 19:50:58 <rotaerk>	I don't think you should get hung up on how-to-say the various elements of your code
Oct 04 19:51:06 <rotaerk>	you shouldn't be reading code aloud in general anyway
Oct 04 19:51:48 <crestfallen>	forget about that. I'm saying that when I try to write out the composition using -> "morphisms," I don't get a -> b -> c -> d
Oct 04 19:52:12 *	ddk has quit (Remote host closed the connection)
Oct 04 19:52:37 <crestfallen>	from (h . g) . f
Oct 04 19:52:52 *	heatsink (~heatsink@2600:1700:bef1:5e10:79f7:8d52:2040:4290) has joined
Oct 04 19:53:19 <shachaf>	You're saying thing like "a -> b -> c -> d" but you're not saying what they mean.
Oct 04 19:53:21 <rotaerk>	I don't know what it means to "write out the composition using -> morphisms", myself
Oct 04 19:53:57 <rotaerk>	when I see a -> b -> c -> d, I see (casually speaking) a 3-parameter function
Oct 04 19:53:59 <shachaf>	You should explain what that means, if you're saying it. It sure looks from here like you're just stringing together symbols randomly.
Oct 04 19:54:00 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Oct 04 19:54:23 <crestfallen>	thanks let me sort it out
Oct 04 19:54:47 *	GoldRin has quit (Ping timeout: 268 seconds)
Oct 04 19:55:33 <crestfallen>	please look at the entire document, about 1/3 down this paste https://termbin.com/3p3em
Oct 04 19:56:00 *	fphilipe_ has quit (Ping timeout: 246 seconds)
Oct 04 19:56:22 <crestfallen>	where it says Consider:   shachaf rotaerk 
Oct 04 19:57:15 *	theDon has quit (Ping timeout: 268 seconds)
Oct 04 19:57:20 <shachaf>	Did you write that or copy it from a book or something?
Oct 04 19:57:26 *	pera has quit (Quit: leaving)
Oct 04 19:57:39 *	heatsink has quit (Ping timeout: 264 seconds)
Oct 04 19:58:14 <crestfallen>	notes from a video I watched that I wrote
Oct 04 19:58:33 <rotaerk>	I think "a -> b -> c" just means a function (or generally, an arrow) from a -> b composed with another from b -> c
Oct 04 19:58:46 <rotaerk>	and thus a -> b -> c = a -> c
Oct 04 19:58:48 *	theDon (~td@94.134.91.18) has joined
Oct 04 19:59:42 <rotaerk>	I think i understand the "consider" section
Oct 04 20:00:01 *	DrGuschtel has quit ()
Oct 04 20:00:04 *	jgt (~jgt@2a02:a31b:8542:b480:489c:2e77:b6e5:cb9e) has joined
Oct 04 20:00:10 <crestfallen>	very sorry I must leave a cafe. I'll be on later in about 45 mins.  thanks kindly rotaerk shachaf 
Oct 04 20:00:19 Python interface unloaded
Oct 04 20:00:19 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Fri Oct  4 20:00:19 2019

**** BEGIN LOGGING AT Sat Oct 12 18:50:56 2019

Oct 12 18:50:56 *	Now talking on #haskell
Oct 12 18:50:56 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Oct 12 18:50:56 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Oct 12 18:50:56 *	Channel #haskell url: http://www.haskell.org/
Oct 12 18:51:41 *	lemmih (~lemmih@202.133.195.149) has joined
Oct 12 18:51:45 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Oct 12 18:51:50 *	toppler has quit (Ping timeout: 268 seconds)
Oct 12 18:52:10 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 12 18:52:31 <crestfallen>	https://termbin.com/iy89      hi I've been trying to get this construct to work in ghci. I'm assuming I need pure in the tuple of arguments there..or somewhere
Oct 12 18:53:23 <crestfallen>	I'm not sure what that program is supposed to do
Oct 12 18:53:49 <heatsink>	The program is supposed to do all combinations of the 3 inputs
Oct 12 18:53:59 *	wildtrees has quit (Quit: Leaving)
Oct 12 18:54:00 <heatsink>	f 3 2, f 4 2, g 3 2, g 4 2
Oct 12 18:54:05 <heatsink>	and put all the results into a list
Oct 12 18:54:15 <crestfallen>	right. what's my issue?
Oct 12 18:54:16 *	jao (~jao@pdpc/supporter/professional/jao) has joined
Oct 12 18:54:37 <crestfallen>	I thought I'd stick pure in the arguments but that didn't do it
Oct 12 18:54:56 <heatsink>	Just pass ((+), (*)) without pure, I think
Oct 12 18:55:20 <crestfallen>	tried that. one moment pls
Oct 12 18:55:23 <pikajude>	:t (<*>)
Oct 12 18:55:24 <lambdabot>	Applicative f => f (a -> b) -> f a -> f b
Oct 12 18:56:24 <heatsink>	> [(+), (*)] <*> [1, 5] <*> [1, 5]
Oct 12 18:56:27 <lambdabot>	 [2,6,6,10,1,5,5,25]
Oct 12 18:56:44 *	toppler has quit (Read error: Connection reset by peer)
Oct 12 18:57:03 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 12 18:57:07 <slack1256>	> :t (<*>)
Oct 12 18:57:09 <lambdabot>	 <hint>:1:1: error: parse error on input ‘:’
Oct 12 18:57:20 <heatsink>	For the list type, `pure x` is the same as `[x]`.  Since you have already put f and g in a list, you don't need pure.
Oct 12 18:58:37 *	m0rphism has quit (Ping timeout: 268 seconds)
Oct 12 18:58:57 <crestfallen>	@let tt = (\(f,g) -> [f,g] <*> [2,2] <*> [3,4]) ((*),(+)) 
Oct 12 18:58:58 <lambdabot>	 Defined.
Oct 12 18:59:04 <crestfallen>	> tt
Oct 12 18:59:06 <lambdabot>	 [6,8,6,8,5,6,5,6]
Oct 12 18:59:10 *	ericsagnes has quit (Quit: WeeChat 2.6)
Oct 12 18:59:59 <crestfallen>	thanks, weird. the hardest part of haskell for me is getting things to show or print, and IO   
Oct 12 19:00:33 <pikajude>	within programs you can use Debug.Trace which is quite nice
Oct 12 19:00:44 <pikajude>	it's like a very budget debugger
Oct 12 19:00:59 <novum>	Did I do that properly?  baby = Person "Baby" "Person" (Just mama) (Just papa)  ?
Oct 12 19:01:08 <sshine>	has anyone got a neat way to make TravisCI (or CircleCI) to display an icon on your GitHub that says how many of your tests that succeeded? my project is still very early stage, so I have a whole bunch of tests that fail, and I'd like to automate keeping track of how finished it is in terms of how many tests it fails.
Oct 12 19:01:10 *	fweht has quit (Quit: Connection closed for inactivity)
Oct 12 19:01:17 <novum>	is that the way one would construct such an instance?
Oct 12 19:01:17 *	toppler has quit (Ping timeout: 250 seconds)
Oct 12 19:01:39 *	Azel (~Thunderbi@ppp-115-87-121-204.revip4.asianet.co.th) has joined
Oct 12 19:02:02 <pikajude>	loosk good
Oct 12 19:02:07 *	nuncanada3 has quit (Quit: Leaving)
Oct 12 19:02:37 <novum>	I don't quite understand why you need `Just`
Oct 12 19:02:40 <crestfallen>	thanks pikajude. problem with Trace is .. how to know where to place showTrace within the program. never understood it
Oct 12 19:03:00 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 12 19:03:01 <slack1256>	On the expression you want to print.
Oct 12 19:03:13 <pikajude>	it's executed whenever thing is evaluated
Oct 12 19:03:39 *	hackage ghcjs-base-stub 0.3.0.2 - Allow GHCJS projects to compile under GHC and develop using intero.  https://hackage.haskell.org/package/ghcjs-base-stub-0.3.0.2 (louispan)
Oct 12 19:03:39 <c_wraith>	@quote oasis
Oct 12 19:03:39 <lambdabot>	chromatic says: My productivity increased when Autrijus told me about Haskell's trace function. He called it a refreshing desert in the oasis of referential transparency.
Oct 12 19:03:40 *	hackage language-ats 1.7.4.0, ats-pkg 3.2.6.1, ats-format 0.2.0.31 (vmchale)
Oct 12 19:04:06 <pikajude>	@src Maybe
Oct 12 19:04:06 <lambdabot>	data Maybe a = Nothing | Just a
Oct 12 19:04:10 <pikajude>	that's why
Oct 12 19:04:19 <pikajude>	if foo :: Person, Just foo :: Maybe Person
Oct 12 19:04:47 <novum>	yes I am familiar with the fact that Just is a value constructor for Maybe. I guess that is the only reason you need to use Just. To make it a Maybe Person. Is that all there is to it?
Oct 12 19:05:24 <pikajude>	yes
Oct 12 19:05:24 *	kleisli has quit (Ping timeout: 268 seconds)
Oct 12 19:05:26 <crestfallen>	ok thanks. maybe there's a tutorial on it somewhere
Oct 12 19:05:29 <slack1256>	let repeated = trace "Look at me, I am being executed" 2 in repeated + repeated
Oct 12 19:05:30 <EvanR>	you need that wrapper to know it's not Nothing
Oct 12 19:06:15 <slack1256>	It is good for debugging, but as a side effect it weird. That expression could be evaluated once or twice depending on what ghc decides to do.
Oct 12 19:06:21 <novum>	that last statement doesn't make much sense to me because a Person instance is clearly not Nothing
Oct 12 19:06:22 *	nbloomf (~nbloomf@2600:1700:83e0:1f40:d58:4278:6d1:f1bc) has joined
Oct 12 19:06:34 <EvanR>	the field is not type Person though
Oct 12 19:06:42 <slack1256>	But in debugging you are interested that at least prints once, so it works.
Oct 12 19:06:44 <EvanR>	if it were you won't need the wrapper
Oct 12 19:06:46 <novum>	yes. I see this now
Oct 12 19:06:49 <EvanR>	and it could not be Nothing
Oct 12 19:07:08 <EvanR>	Person can't be Nothing
Oct 12 19:07:23 *	toppler has quit (Read error: Connection reset by peer)
Oct 12 19:07:29 <EvanR>	one of the phenomena in haskell that you don't often get in other languages
Oct 12 19:07:37 *	silver has quit (Read error: Connection reset by peer)
Oct 12 19:07:40 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 12 19:08:49 <EvanR>	if you have a Person then you do not have Nothing, null pointer, null value, nil, a value of the wrong type entirely, or monkeys flying out of your nose
Oct 12 19:09:31 *	ericsagnes (~ericsagne@2400:7800:4def:9800:dc1d:eb22:d849:f739) has joined
Oct 12 19:09:42 <EvanR>	or in PHP, FALSE
Oct 12 19:09:55 *	slack1256 something, something, undefined, something...
Oct 12 19:09:57 <slack1256>	:-)
Oct 12 19:10:21 <EvanR>	at least undefined doesn't cause monkeys to fly out of your nose. In C this is actually a possible result of undefined
Oct 12 19:10:29 <EvanR>	behavior
Oct 12 19:10:42 <c_wraith>	I'm not sure it's possible.  But if it was possible, it would be valid.
Oct 12 19:11:07 *	dansho (~dansho4@71-84-161-204.dhcp.astr.or.charter.com) has joined
Oct 12 19:11:14 <EvanR>	cause your floppy drive to spin itself to smithereens
Oct 12 19:11:37 <pikajude>	has anyone actually written a C compiler that does rm -rf / whenever it encounters undefined behavior
Oct 12 19:11:38 *	conal has quit (Quit: Computer has gone to sleep.)
Oct 12 19:11:51 *	toppler has quit (Read error: Connection reset by peer)
Oct 12 19:11:51 <novum>	there is a shell similar to that
Oct 12 19:11:53 *	dansho_ has quit (Read error: Connection reset by peer)
Oct 12 19:12:00 <slack1256>	There was a version of ghc that deleted your file when it encountered type errors.
Oct 12 19:12:08 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 12 19:13:25 *	Disconnected ()
**** ENDING LOGGING AT Sat Oct 12 19:13:25 2019

**** BEGIN LOGGING AT Sat Oct 12 19:15:20 2019

Oct 12 19:15:20 *	Now talking on #haskell
Oct 12 19:15:20 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Oct 12 19:15:20 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Oct 12 19:15:20 *	Channel #haskell url: http://www.haskell.org/
Oct 12 19:15:39 <EvanR>	haskell is UP 2 DATE
Oct 12 19:16:23 *	toppler has quit (Read error: Connection reset by peer)
Oct 12 19:16:41 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 12 19:17:03 *	jgt1 has quit (Ping timeout: 246 seconds)
Oct 12 19:18:18 *	conal (~conal@64.71.133.70) has joined
Oct 12 19:18:20 *	libertyprime has quit (Ping timeout: 265 seconds)
Oct 12 19:19:52 <crestfallen>	pikajude, thing is, when I use ((pure (*)),(pure (+))) , I get an error. so it's not just superfluous, right?
Oct 12 19:20:05 <pikajude>	well because that's a tuple
Oct 12 19:20:13 <pikajude>	:t (pure (*), pure (+))
Oct 12 19:20:15 <lambdabot>	(Applicative f1, Applicative f2, Num a1, Num a2) => (f1 (a1 -> a1 -> a1), f2 (a2 -> a2 -> a2))
Oct 12 19:20:16 *	kleisli (~kleisli@mobile-107-107-56-73.mycingular.net) has joined
Oct 12 19:20:19 <pikajude>	:t [(*), (+)]
Oct 12 19:20:20 <lambdabot>	Num a => [a -> a -> a]
Oct 12 19:20:26 <pikajude>	completely different
Oct 12 19:20:50 *	toppler has quit (Ping timeout: 240 seconds)
Oct 12 19:21:28 <crestfallen>	so the pattern match doesn't doesn't convert that, as in \(f,g) -> [f,g] ... 
Oct 12 19:21:40 <pikajude>	oh, where is that
Oct 12 19:21:41 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 12 19:22:12 <crestfallen>	@let tt = (\(f,g) -> [f,g] <*> [2,2] <*> [3,4] ) ((*), (+))
Oct 12 19:22:13 <lambdabot>	 .L.hs:162:1: error:
Oct 12 19:22:13 <lambdabot>	     Multiple declarations of ‘tt’
Oct 12 19:22:13 <lambdabot>	     Declared at: .L.hs:161:1
Oct 12 19:22:21 <crestfallen>	@let ttt = (\(f,g) -> [f,g] <*> [2,2] <*> [3,4] ) ((*), (+))
Oct 12 19:22:23 <lambdabot>	 Defined.
Oct 12 19:22:27 <crestfallen>	ttt
Oct 12 19:22:39 <crestfallen>	> ttt
Oct 12 19:22:41 <lambdabot>	 [6,8,6,8,5,6,5,6]
Oct 12 19:22:55 <pikajude>	well if you do the substitution yourself, you'll see that it works out to [pure (+), pure (*)] and you just want [(+), (*)]
Oct 12 19:23:23 *	thc202 has quit (Ping timeout: 250 seconds)
Oct 12 19:24:41 *	Mr_Keyser_Soze has quit (Ping timeout: 276 seconds)
Oct 12 19:25:38 <crestfallen>	so it's the pattern match itself that lets you not need pure
Oct 12 19:26:03 *	toppler has quit (Ping timeout: 240 seconds)
Oct 12 19:26:12 <pikajude>	i'm not sure i understand
Oct 12 19:26:37 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 12 19:26:40 <pikajude>	what are you using pure for?
Oct 12 19:26:46 <crestfallen>	no prob, I only had a hunch that it would work either with or without pure
Oct 12 19:27:12 <pikajude>	no, any function taking a specific type should never work "with or without" pure
Oct 12 19:27:33 <crestfallen>	copy that, thanks
Oct 12 19:28:15 <crestfallen>	I was using pure pikajude , because...
Oct 12 19:29:45 <crestfallen>	my book says a common pattern is pure f <*> x1 <*> x2 <*> ... xn
Oct 12 19:30:34 <pikajude>	in my experience, it's more common to see f <$> x1 <*> x2 ...
Oct 12 19:30:38 <pikajude>	:t (<$>)
Oct 12 19:30:39 <lambdabot>	Functor f => (a -> b) -> f a -> f b
Oct 12 19:30:41 <pikajude>	:t (<*>)
Oct 12 19:30:42 <lambdabot>	Applicative f => f (a -> b) -> f a -> f b
Oct 12 19:30:45 <pikajude>	do you see the difference?
Oct 12 19:31:13 <pikajude>	`f <$> a` is equivalent to `pure f <*> a`
Oct 12 19:31:18 *	toppler has quit (Read error: Connection reset by peer)
Oct 12 19:31:37 <pikajude>	pure doesn't do anything magical that "makes" <*> work
Oct 12 19:31:37 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 12 19:32:19 <pikajude>	:t (<*>) `asAppliedTo` [(+), (*)]
Oct 12 19:32:20 <lambdabot>	Num a => [a -> a -> a] -> [a] -> [a -> a]
Oct 12 19:32:54 <pikajude>	this works because `[(+), (*)]` matches the type `Applicative f => f (a -> b) -> f a -> f b`
Oct 12 19:33:03 <pikajude>	in that case, f = the list type []
Oct 12 19:33:53 <crestfallen>	pure puts a pure function f into a context, so that it can be applied to the 'a' in f a ,etc.
Oct 12 19:34:24 <pikajude>	ya
Oct 12 19:34:34 <crestfallen>	so it's f (a->b) -> f a -> f b
Oct 12 19:34:51 <crestfallen>	thanks alot it was just the tuple that was throwing me off
Oct 12 19:35:03 <pikajude>	tuples can be tricky
Oct 12 19:35:35 <sshine>	I think sums are more tricky.
Oct 12 19:35:53 <pikajude>	anything can be tricky if you try hard enough
Oct 12 19:35:57 *	toppler has quit (Ping timeout: 240 seconds)
Oct 12 19:36:16 <slack1256>	SPJ said that non-strict-semantics lead to unrestricted beta substitution. I didn't know there was a restriction with strict semantics, is this documented somewhere?
Oct 12 19:36:25 <sshine>	parts of proofs that involve disjunction are always more elaborate than proofs that involve conjunction, I've lately experienced.
Oct 12 19:36:30 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 12 19:36:42 *	DrAwesomeClaws has quit (Ping timeout: 265 seconds)
Oct 12 19:36:50 *	hpc has quit (Ping timeout: 240 seconds)
Oct 12 19:36:54 <crestfallen>	no it taught me something about pattern matching, that is a sort I never came across \(f,g) -> [f,g]
Oct 12 19:37:08 <pikajude>	pattern matching is great
Oct 12 19:37:45 <crestfallen>	I finally met someone in person who is a haskell badass, so I'm feeling great in any case!
Oct 12 19:38:17 <sshine>	beauty is in the eye of the beholder.
Oct 12 19:38:36 <crestfallen>	meaning..
Oct 12 19:39:12 <sshine>	meaning I'd feel great too for recognizing someone who is good at something, because it says something good about my capacity to recognize it. :)
Oct 12 19:39:15 *	MoarSpaceFi (~Forgot_my@65.155.84.20) has joined
Oct 12 19:39:44 <pikajude>	oh, i thought it was a reference to pattern matching
Oct 12 19:39:55 *	libertyprime (~libertypr@101.98.42.91) has joined
Oct 12 19:40:21 *	jesse3141592 has quit (Quit: Quit)
Oct 12 19:40:21 <crestfallen>	I'll just say it was an absolute serendipity
Oct 12 19:40:40 <slack1256>	Who did you meet?
Oct 12 19:41:10 *	toppler has quit (Ping timeout: 268 seconds)
Oct 12 19:41:20 <crestfallen>	slack1256, if I may to decline to answer..
Oct 12 19:41:41 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 12 19:42:07 <slack1256>	OK, continue flexing then :-)
Oct 12 19:42:09 <novum>	awkwaaaaard
Oct 12 19:42:38 <crestfallen>	sorry novum, I should have kept silent. I work in a major university town
Oct 12 19:44:20 <sshine>	slack1256, I don't actually know what what you said means, but googling around a bit, it looks like "unrestricted" means that "any term may be substituted for any variable" (https://www.cs.ox.ac.uk/andrew.ker/docs/lambdacalculus-lecture-notes-ht2009.pdf ) -- I suppose you can't substitute freely under strict semantics because evaluation order necessitates evaluation before substitution in some nested cases
Oct 12 19:44:26 <sshine>	?
Oct 12 19:44:37 *	Amras has quit (Ping timeout: 240 seconds)
Oct 12 19:46:57 *	abra0 has quit (Quit: laters)
Oct 12 19:47:08 *	novum has quit (Ping timeout: 260 seconds)
Oct 12 19:47:52 *	Tesseraction_g (~Tesseract@unaffiliated/tesseraction) has joined
Oct 12 19:48:32 <sshine>	slack1256, I wonder if what he says should not appear naturally as part of the substitution semantics of a strictly typed lambda calculus, if one goes to look for one such thing.
Oct 12 19:48:40 *	novum (~novumsens@gateway/tor-sasl/novumsensum) has joined
Oct 12 19:49:11 *	theDon has quit (Ping timeout: 268 seconds)
Oct 12 19:49:12 <sshine>	s/typed/evaluated/
Oct 12 19:49:25 *	DrAwesomeClaws (DrAwesomeC@gateway/vpn/privateinternetaccess/drawesomeclaws) has joined
Oct 12 19:49:35 <slack1256>	I still don't know how `evaluation semantics` interact with lambda calculus, which in my mind only deals with substitutions.
Oct 12 19:49:40 *	abra0 (~abra0@unaffiliated/abra0) has joined
Oct 12 19:49:48 <slack1256>	But it can be what you say, it maybe doesn't appears naturally.
Oct 12 19:49:53 <crestfallen>	the above function wasn't working in ghci without a let statement, now I swear it is. maddening**
Oct 12 19:50:02 *	Tesseraction has quit (Ping timeout: 276 seconds)
Oct 12 19:50:22 <crestfallen>	> tt = (\(f,g) -> [f,g] <*> [2,2] <*> [3,4] ) ((*), (+))
Oct 12 19:50:24 <lambdabot>	 <hint>:1:4: error:
Oct 12 19:50:24 <lambdabot>	     parse error on input ‘=’
Oct 12 19:50:24 <lambdabot>	     Perhaps you need a 'let' in a 'do' block?
Oct 12 19:50:40 <monochrom>	I think you can understand evaluation semantics as rules about substitutions. Or more accurate, rules about whether you can use beta reduction.
Oct 12 19:50:55 *	theDon (~td@muedsl-82-207-238-022.citykom.de) has joined
Oct 12 19:51:15 <slack1256>	So, why do we need to restrict beta reduction on a strict setting?
Oct 12 19:51:22 <monochrom>	Call-by-value (non-lazy) says that you can only plug in values. If your parameter isn't a value yet, eval until it is.
Oct 12 19:51:32 *	captjakk (~captjakk@174-16-212-40.hlrn.qwest.net) has joined
Oct 12 19:51:59 <monochrom>	Call-by-name says that just go ahead plug in arbitrary expressions.
Oct 12 19:52:16 <crestfallen>	normal vs applicative order, something I still don't fully get
Oct 12 19:52:52 <sshine>	so f(x) = x*x, and f(g(x)) = g(x)*g(x) under non-strict, but you can't perform that substitution under strict, so restricted.
Oct 12 19:53:02 <crestfallen>	I thought beta reduction was just a kind of sugar
Oct 12 19:53:18 <slack1256>	monochrom: what is value on a strict setting? I guessing thunks aren't otherwise it would be the same in the lazy setting?
Oct 12 19:53:25 <monochrom>	Call-by-name is almost lazy. It's missing sharing and it has more duplication.  (\x -> x+x) (4+5) -> (4+5)+(4+5) you get two independent copies of 4+5 now, you will do redundant work.
Oct 12 19:54:01 <slack1256>	oh so values are whatever is expressed on a normal form!
Oct 12 19:54:11 <EvanR>	so re-strict-ed is a bit redundant
Oct 12 19:54:21 <monochrom>	OK if you have lambda calculus alone without other data types (numbers, booleans, strings, lists...) then a value is a free variable or a lambda.
Oct 12 19:54:35 <slack1256>	yes yes.
Oct 12 19:54:56 <slack1256>	I mean you can "represent" numbers, booleans, list with lambdas anyways.
Oct 12 19:55:12 <slack1256>	OK now is clearer monochrom.
Oct 12 19:55:13 <EvanR>	all you need is lambda
Oct 12 19:55:14 <crestfallen>	monochrom thanks for schooling me the other day : experimentation in ghci is the best way to learn, since its true scientific method
Oct 12 19:55:21 <sshine>	slack1256, nice question. I learned something that I didn't know I didn't know. :)
Oct 12 19:55:23 <monochrom>	Suppose you have (\x -> x) ((\y -> y) z).
Oct 12 19:55:38 <slack1256>	sshine: :-)
Oct 12 19:55:48 <monochrom>	Call-by-value says -> (\x -> x) z -> z
Oct 12 19:55:55 *	lagothrix is now known as Guest85011
Oct 12 19:55:55 *	Guest85011 has quit (Killed (card.freenode.net (Nickname regained by services)))
Oct 12 19:55:56 <sshine>	crestfallen, :m + Data.Scientific -- you can make it even more so!
Oct 12 19:56:01 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Oct 12 19:56:02 <monochrom>	Call-by-name says -> (\y -> y) z -> z
Oct 12 19:56:41 <crestfallen>	sshine, looks like homework!
Oct 12 19:57:06 <sshine>	crestfallen, it was just a pun.
Oct 12 19:57:30 <slack1256>	In effect, it seems that call-by-name extends the notion of "values" to include "suspended expression with a normal form".
Oct 12 19:57:38 <crestfallen>	oh!
Oct 12 19:57:59 <crestfallen>	Thanks all
Oct 12 19:58:01 <sshine>	crestfallen, "the true scientific method in GHCi", I thought you must surely need the Scientific data type. ok, I spoiled it.
Oct 12 19:58:06 <slack1256>	so values = free variables | lambdas | "expresions with a normal form".
Oct 12 19:58:39 <crestfallen>	ghci is a good place for unabashed crying.
Oct 12 19:58:55 <divVerent>	I misread that as unabashed currying first
Oct 12 19:58:55 <monochrom>	I wouldn't do that because you would be tossed when you see "use call-by-name to eval this until you get a value".
**** BEGIN LOGGING AT Mon Oct 14 19:19:20 2019

Oct 14 19:19:20 *	Now talking on #haskell
Oct 14 19:19:20 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Oct 14 19:19:20 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Oct 14 19:19:20 *	Channel #haskell url: http://www.haskell.org/
Oct 14 19:19:26 <ski>	yes "functions don't have effects"
Oct 14 19:19:39 *	zwarag has quit (Ping timeout: 240 seconds)
Oct 14 19:20:22 <ski>	however, as a shorthand, we commonly say "invoke `openFile'", when we mean "call `openFile', and execute the resulting action"
Oct 14 19:20:32 <jusss>	ski: then what's the different between functions and expressions, also function calls and function applications?
Oct 14 19:20:39 *	toppler has quit (Ping timeout: 268 seconds)
Oct 14 19:20:43 <ski>	(and, sometimes people say "call `openFile'" when they mean this)
Oct 14 19:20:55 <crestfallen>	https://termbin.com/e5rom hi I don't understand the textbook passage in this paste. what does it mean by "intermediate results?" thanks
Oct 14 19:20:58 <ski>	`2' is an expression. so is `x'
Oct 14 19:21:04 <ski>	neither of those are function calls
Oct 14 19:21:17 <ski>	`let x = 2 in max x y' is not a function call
Oct 14 19:21:20 <MarcelineVQ>	Nevoic9: There's soo much going on with the == and multiplying Nat for idris to cut through things, recomend you use a predicate type to make things direct. f : Vect n a -> (m : Nat) -> (p : m * 2 `LT` n) -> (a,a)
Oct 14 19:21:35 *	fphilipe has quit (Ping timeout: 276 seconds)
Oct 14 19:21:36 <crestfallen>	the output is identical
Oct 14 19:21:43 <dmwit>	ski: evaluate/execute I've seen many times. side-effect/effect I've never seen.
Oct 14 19:21:48 <ski>	the output of what is identical to what ?
Oct 14 19:22:01 <MarcelineVQ>	Nevoic9: Now you can case on p to inform the shape of vect
Oct 14 19:22:13 <ski>	dmwit : i drew out the lines of this story, years ago
Oct 14 19:22:31 <crestfallen>	ski those two functions yield identical outputs with identical arguments
Oct 14 19:23:15 <ski>	crestfallen : oh, okay
Oct 14 19:23:36 <ski>	crestfallen : hm. i suspect they mean `x' and `y'
Oct 14 19:23:50 *	nineonine has quit (Ping timeout: 265 seconds)
Oct 14 19:24:35 <jusss>	ski: then expressions can be executed, expressions don't have effects, expressions can be function calls, 
Oct 14 19:24:43 <jusss>	ski: what's function application?
Oct 14 19:24:59 <crestfallen>	ski I see, I wonder why author calls x and y intermediate results, but there is some sense in it
Oct 14 19:25:08 <jusss>	this term I saw it a lot, but I don't get it
Oct 14 19:25:20 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 14 19:25:23 <crestfallen>	thanks
Oct 14 19:25:25 <MarcelineVQ>	Nevoic9: in other words it's possible to construct but there's a bit of indirection due to Ord's definitions and the fact that m * 2 < n = True doesn't directly say anything about the Nats despite how it looks, it's more of a proof about Bool's, so idris doesn't learn/infer much due to it. A predicate type like LTE (using LT in this case) proves things about the Nats it involves which makes this much more direct.
Oct 14 19:25:49 <ski>	jusss : expressions are syntactic things (things in the program text). functions are really semantic things (things when the program is running). however one can talk about expressions which will evaluate to functions, and often also just call those "functions" as well
Oct 14 19:26:28 *	thc202 has quit (Ping timeout: 264 seconds)
Oct 14 19:26:40 <ski>	jusss : `f x' is function application. `f' is a function expression (an expression evaluating to a function), `x' is another expression whose value will be passed to the function
Oct 14 19:26:54 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Oct 14 19:27:35 <ski>	jusss : "function application" is more or less synonymous to "function call". by the former, we typically mean the thing in the program text. by the latter, we often also mean how it behaves, when the program is running
Oct 14 19:28:08 <jusss>	ski: but `f' and `f x' both are expressions? 
Oct 14 19:28:09 <ski>	crestfallen : you can think of "executing a list action" as "selecting an element from the list", which is what `x <- xs' and `y <- ys' do
Oct 14 19:28:14 <ski>	jusss : yes
Oct 14 19:28:39 <ski>	crestfallen : you could also write `do x <- xs; y <- ys; return (x * y)'
Oct 14 19:29:07 <ski>	crestfallen : now, if `xs' and `ys' weren't lists, but `IO'-actions, then you'd have no qualms about calling `x' and `y' intermediate results, right ?
Oct 14 19:29:50 <ski>	jusss : `max x (min y z)' is also a function application. applying `max x' to `min y z'
Oct 14 19:30:00 <ski>	(`f x' is applying `f' to `x')
Oct 14 19:31:29 <jusss>	ski: function expressions and function calls are expressions, expressions can be evaluated to functions, and functions don't have effects, actions can be executed, actions have effects, this is right?
Oct 14 19:32:02 <ski>	"expressions can be evaluated to functions" -- in case they have function types, yes
Oct 14 19:32:22 *	toppler has quit (Ping timeout: 268 seconds)
Oct 14 19:32:26 *	zwarag (~zwarag@80-110-97-183.cgn.dynamic.surfer.at) has joined
Oct 14 19:32:31 <ski>	by "function expressions" i basically means "expressions of function types"
Oct 14 19:32:47 <ski>	jusss : yes
Oct 14 19:33:33 <ski>	also, the only way to cause `IO'-actions to execute, is by making them part of `main' (or entering them into the interactor)
Oct 14 19:34:07 <ski>	however, you can e.g. execute `Maybe'-actions, without needing to do anything like that
Oct 14 19:34:42 *	tabemann (~tabemann@2600:1700:7990:24e0:8917:1083:1335:ddbe) has joined
Oct 14 19:35:10 *	chrisdotcode has quit (Quit: chrisdotcode)
Oct 14 19:35:14 <jusss>	ski: expressions like `2', function expressions like `f', function applications like `f 2', they all are expressions, but only function expressions and function applications can be evaluated to functions, this is ok?
Oct 14 19:35:25 *	lprd (~jon@lfbn-1-2729-136.w86-247.abo.wanadoo.fr) has joined
Oct 14 19:35:30 *	xff0x has quit (Read error: Connection reset by peer)
Oct 14 19:35:35 <ski>	you can write `let act = do k1 <- lookup k0 env0; v <- lookup k1 env1; guard (pred v); return (frob v) in case act of Nothing -> ...; Just w -> ..w..'
Oct 14 19:35:49 *	heatsink (~heatsink@2600:1700:bef1:5e10:f43c:4de:2573:d076) has joined
Oct 14 19:35:53 *	hpc has quit (Ping timeout: 276 seconds)
Oct 14 19:35:59 <ski>	here, one could argue the `case act of ...' causes the execution of the `Maybe'-action `act'
Oct 14 19:37:05 <ski>	jusss : "function applications can be evaluated to functions" sounds confused. a function application does not evaluate to a function, unless the function being applies is a function whose result will also be a function (e.g. if the function is defined in "curried style")
Oct 14 19:37:28 *	xff0x (~fox@softbank126114186203.bbtec.net) has joined
Oct 14 19:37:48 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 14 19:37:50 *	rople has quit (Ping timeout: 276 seconds)
Oct 14 19:37:53 <crestfallen>	ski thanks sorry reading back to your comments
Oct 14 19:37:53 <ski>	the function application `not False' will not evaluate to a function (however, in order to evaluate that application, we first need to evaluate the function expression `not', getting back the function value)
Oct 14 19:38:38 <ski>	otoh, `delete "b"' is a function expression which will evaluate to a function
Oct 14 19:38:42 <ski>	@type delete
Oct 14 19:38:43 <lambdabot>	Eq a => a -> [a] -> [a]
Oct 14 19:38:46 *	fizbin (~fizbin@c-98-221-75-24.hsd1.nj.comcast.net) has joined
Oct 14 19:38:53 <jusss>	ski: about the monad Maybe action, I still have a little confused
Oct 14 19:39:14 <jusss>	ski: it's an action, so it has an effect
Oct 14 19:39:19 *	rople (rople@gateway/vpn/privateinternetaccess/rople) has joined
Oct 14 19:39:24 <ski>	> let f = delete "b" in map f [["a","b"],["b","cde"],["c","de","f"]]
Oct 14 19:39:26 <lambdabot>	 [["a"],["cde"],["c","de","f"]]
Oct 14 19:39:27 <crestfallen>	ski copy that, thanks!
Oct 14 19:40:14 <ski>	jusss : yes. the effect in that case is "possible failure to compute a monadic result"
Oct 14 19:40:47 <ski>	jusss : very roughly (and vaguely) speaking, an "effect" is "any deviation from computing a single result, nothing else"
Oct 14 19:41:12 <ski>	jusss : `Maybe' allows expressing "possibly no result at all"-effects
Oct 14 19:41:36 <jusss>	ski: which means all the monad actions have their own effects?
Oct 14 19:42:03 <ski>	jusss : `Either e' also allows expressing failure like this, except that instead of just having a single ("anonymous") kind of failure, you have failures labelled with values of type `e' ("exceptions")
Oct 14 19:42:07 <ski>	jusss : yes
Oct 14 19:42:16 <jusss>	ski: and `IO'?
Oct 14 19:42:23 *	zwarag has quit (Ping timeout: 276 seconds)
Oct 14 19:42:32 <ski>	jusss : `[]' allows expresssing "possibly no result at all, and possibly more than one result"-effects
Oct 14 19:43:14 <ski>	jusss : `return x' (equal to `pure x') always gives an action which actually performs no effects at all. or, if you prefer, only performs the "trivial effect", the "no-op effect"
Oct 14 19:43:15 *	fizbin has quit (Ping timeout: 250 seconds)
Oct 14 19:43:25 <jusss>	ski: next time I meet a monad, I should ask what its effect is first
Oct 14 19:44:03 *	toppler has quit (Ping timeout: 240 seconds)
Oct 14 19:44:15 <jusss>	% :t return
Oct 14 19:44:15 <yahb>	jusss: Monad m => a -> m a
Oct 14 19:44:34 *	andi- has quit (Remote host closed the connection)
Oct 14 19:44:42 <jusss>	ski: this m a is an action, right?
Oct 14 19:45:21 <ski>	jusss : `IO' is (primarily) for doing Input/Output interaction, with the outside world (from the POV of the Haskell process). however, `IO' tends to be used as a sin-bin, so it also allows expressing local mutable state, and multiple threads of execution (whose synchronization is indeterministic)
Oct 14 19:45:43 <ski>	jusss : no, the *value* of type `m a' is an `m'-action. `m a' itself is the *type* of that action
Oct 14 19:45:59 <ski>	(that may be what you meant. but you didn't say it)
Oct 14 19:46:04 *	lprd has quit (Ping timeout: 265 seconds)
Oct 14 19:46:17 *	theDon has quit (Ping timeout: 240 seconds)
Oct 14 19:46:34 <maerwald>	ski: what do you mean with sin-bin?
Oct 14 19:46:55 *	ski thinks it can help to be an extra bit pedantic, about terminology, when concepts are a bit unclear
Oct 14 19:47:22 *	zwarag (~zwarag@80-110-97-183.cgn.dynamic.surfer.at) has joined
Oct 14 19:47:28 <ski>	maerwald : a potpourri of different effects, all mixed together in the same monad
Oct 14 19:47:46 <jusss>	ski: m a is the type of m-action, right?
Oct 14 19:48:06 <maerwald>	ski: well, that is exactly what it is for
Oct 14 19:48:21 *	theDon (~td@94.134.91.94) has joined
Oct 14 19:48:25 <maerwald>	since there is no sensible way to separate that multitude of effects
Oct 14 19:49:17 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 14 19:49:29 <maerwald>	most monad stacks have MonadIO somewhere inside, which blows up the entire purpose
Oct 14 19:50:06 <ski>	well, depends
Oct 14 19:50:44 <ski>	some parts might be like `frob :: Monad m => ... -> T m X'
Oct 14 19:51:18 *	plutoniix (~q@175.176.222.7) has joined
Oct 14 19:52:24 <ski>	jusss : an `m'-action is a value of type `m a', for some type `a', yes. where `m' is a monad, or an idiom (or maybe sometimes only a functor, but i think it's more common to not say "action" then. sometimes "collection" feels like an appropriate word. can also often be used in the monad and idiom cases)
Oct 14 19:53:20 *	st8less has quit (Ping timeout: 268 seconds)
Oct 14 19:53:43 <maerwald>	until we have a *proper* effects system, I believe IO is the right choice for anything that has any intersection with real IO
Oct 14 19:53:50 *	andi- (~andi-@NixOS/user/andi-) has joined
Oct 14 19:54:15 <arahael>	I thought we had one available? (But not in common use) - something similar to what's done in PureScript?
Oct 14 19:54:34 *	lagothrix has quit (Killed (adams.freenode.net (Nickname regained by services)))
Oct 14 19:54:42 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Oct 14 19:54:50 <ski>	i have used multi-level continuation stack, over `IO' (or `ST s', if preferred)
Oct 14 19:55:01 <heatsink>	Disciple was an experimental haskell dialect with effects
Oct 14 19:55:08 <ski>	(the depth of the stack being determined at run-time)
Oct 14 19:55:09 <arahael>	Something like https://hackage.haskell.org/package/freer-effects
Oct 14 19:55:26 <maerwald>	arahael: yeah, freer is nice, but also very leaky
Oct 14 19:55:41 <maerwald>	but, we have 3+ implementations of it
Oct 14 19:55:45 <maerwald>	and none of them are really used
Oct 14 19:55:53 <arahael>	Leaky?  Blegh. :(
Oct 14 19:56:02 <maerwald>	leaky in terms of API/Types
Oct 14 19:56:13 <maerwald>	if you don't understand the implementation, you'll likely not understand the error messages
Oct 14 19:56:42 *	toppler has quit (Ping timeout: 265 seconds)
Oct 14 19:57:00 <maerwald>	mtl isn't that bad when it comes to errors
Oct 14 19:57:27 <maerwald>	but then you can't even have two readers...
Oct 14 19:57:28 <ski>	dmwit : comment/opinion on the side- / effect story ?
Oct 14 19:57:31 *	Saukk has quit (Remote host closed the connection)
Oct 14 19:58:07 Python interface unloaded
**** ENDING LOGGING AT Mon Oct 14 19:58:07 2019

**** BEGIN LOGGING AT Wed Oct 16 10:49:00 2019

Oct 16 10:49:00 *	Now talking on #haskell
Oct 16 10:49:00 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Oct 16 10:49:00 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Oct 16 10:49:00 *	Channel #haskell url: http://www.haskell.org/
Oct 16 10:49:03 <dsal>	Yay, my code compiles.  My tests  are going to be quite an uphill battle, I bet...
Oct 16 10:49:34 <EvanR>	if it compiles it's good. If it passes tests it's perfect (tm)
Oct 16 10:49:55 <dsal>	Well, it's not failing tests...
Oct 16 10:49:58 <svipal>	there's some serious voodoo magic going on in the Traced Monad
Oct 16 10:50:02 <svipal>	Comonad*
Oct 16 10:50:11 *	ddellacosta has quit (Ping timeout: 276 seconds)
Oct 16 10:50:18 <svipal>	what were you trying to do dsal ?
Oct 16 10:50:38 <dsal>	Just convert some hand wavy Int timestamps and durations to UTCTime and NominalDiffTime
Oct 16 10:51:01 <dsal>	I have actual data to work on now, so I know more about what I'm doing.
Oct 16 10:51:10 <crestfallen>	hi I'm trying to get readMay to work with 'import Data.Monoid' and one of the following: 1) {-# LANGUAGE Safe #-} 2) import Data.Safe (readMay)
Oct 16 10:51:18 <crestfallen>	neither works
Oct 16 10:51:50 <merijn>	crestfallen: Doesn't work how?
Oct 16 10:51:57 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 16 10:51:58 <merijn>	What do you expect and what happens instead?
Oct 16 10:52:17 *	Lears has quit (Ping timeout: 240 seconds)
Oct 16 10:53:04 *	nineonine has quit ()
Oct 16 10:53:30 <crestfallen>	won't compile with number of 'Variable not in scope: readMay :: [Char] -> Maybe Int'
Oct 16 10:53:36 <crestfallen>	errora
Oct 16 10:53:41 <crestfallen>	errors*
Oct 16 10:53:50 *	nineonine (~nineonine@216.81.48.202) has joined
Oct 16 10:54:37 *	is_null has quit (Ping timeout: 240 seconds)
Oct 16 10:54:55 *	kupi has quit (Quit: Connection closed for inactivity)
Oct 16 10:55:01 *	fendor (~fendor@91.141.2.34.wireless.dyn.drei.com) has joined
Oct 16 10:55:39 <EvanR>	it doesn't make sense that you'd get that error but Data.Safe imported without error
Oct 16 10:55:59 <EvanR>	i think there's a bug in your question
Oct 16 10:56:08 *	sw1nn_ (~sw1nn@2a00:23c6:238c:f900:b102:1b0e:8d46:abb) has joined
Oct 16 10:56:14 <crestfallen>	could be :)
Oct 16 10:56:26 <crestfallen>	let me pastebin 
Oct 16 10:56:52 *	nav2002 (~nav2002@115.99.216.4) has joined
Oct 16 10:56:53 *	sw1nn has quit (Read error: Connection reset by peer)
Oct 16 10:57:18 <crestfallen>	https://termbin.com/4kpj EvanR merijn 
Oct 16 10:57:46 <int-e>	you commented out the import
Oct 16 10:57:54 *	heatsink (~heatsink@2600:1700:bef1:5e10:e570:7d90:4905:65c6) has joined
Oct 16 10:58:10 <crestfallen>	yeah I've tried both of those on line 2 and 3
Oct 16 10:58:21 *	captjakk has quit (Remote host closed the connection)
Oct 16 10:58:22 <EvanR>	{-# LANGUAGE Safe #-} doesn't have anything to do with readMay
Oct 16 10:58:29 <crestfallen>	ok
Oct 16 10:58:50 <crestfallen>	I'm trying to get readMay to work in this program
Oct 16 10:58:52 <int-e>	Are you sure it's Data.Safe? I've found a Safe module in a package of the same name...
Oct 16 10:59:19 <EvanR>	crestfallen should have package `safe' installed
Oct 16 10:59:45 <sicklorkin>	> mapM (id &&& id) $ take 10 (cycle [8,0,0,8,s])
Oct 16 10:59:47 <lambdabot>	 (8 <> 0 <> 0 <> 8 <> s <> 8 <> 0 <> 0 <> 8 <> s <> mempty,[8,0,0,8,s,8,0,0,8...
Oct 16 10:59:49 <crestfallen>	initially I tried 'import Safe (readMay)'
Oct 16 11:00:01 *	Gunni1 has quit ()
Oct 16 11:00:11 <crestfallen>	as per video tutorial
Oct 16 11:00:14 <int-e>	crestfallen: that should work once you install/depend on the safe package
Oct 16 11:00:35 <int-e>	cf. https://hackage.haskell.org/package/safe
Oct 16 11:01:04 <crestfallen>	ok I'll use cabal to install: '$ cabal install safe'   ?
Oct 16 11:01:10 <int-e>	(how you install it depends on your favorite toolchain... cabal install safe  or  stack install safe  seem the most likely.
Oct 16 11:01:22 <crestfallen>	thanks!
Oct 16 11:01:57 <svipal>	are you trying to use it in your code or in ghci ?
Oct 16 11:02:17 <EvanR>	i'm now inspired to put everything in top level modules
Oct 16 11:02:23 *	heatsink has quit (Ping timeout: 245 seconds)
Oct 16 11:02:26 <EvanR>	screw the hierarchy
Oct 16 11:02:31 *	howdoi (uid224@gateway/web/irccloud.com/x-ikhlnhtpdrwxwula) has joined
Oct 16 11:03:41 *	captjakk (~captjakk@c-65-50-169-164.hs.gigamonster.net) has joined
Oct 16 11:03:46 <svipal>	I completely abandoned having a lot of neatly organized submodules after  struggling with HS boots newtypes and typeclasses
Oct 16 11:04:08 <crestfallen>	that compiled thanks ALL
Oct 16 11:04:41 *	toppler has quit (Ping timeout: 268 seconds)
Oct 16 11:04:45 <EvanR>	crestfallen: no one dared ask, at first, if you even had the package installed because you didn't really explain what the error you were seeing was...
Oct 16 11:04:46 <dsal>	crestfallen: hey, np
Oct 16 11:04:59 *	dmiles has quit (Read error: Connection reset by peer)
Oct 16 11:05:05 *	captjakk has quit (Remote host closed the connection)
Oct 16 11:05:34 *	mdunnio has quit (Remote host closed the connection)
Oct 16 11:05:36 <crestfallen>	please be patient with this babe in the woods
Oct 16 11:05:41 <EvanR>	i think it would have a been a "is it plugged in" type of situation
Oct 16 11:05:49 *	fizbin has quit (Read error: Connection reset by peer)
Oct 16 11:06:28 *	fizbin (~fizbin@c-98-221-75-24.hsd1.nj.comcast.net) has joined
Oct 16 11:07:13 *	ghoulguy has quit (Quit: Quit)
Oct 16 11:07:20 *	glguy (~glguy@freenode/staff/haskell.developer.glguy) has joined
Oct 16 11:07:37 *	dmiles (~dmiles@c-73-67-179-188.hsd1.wa.comcast.net) has joined
Oct 16 11:07:46 *	reggie_ has quit (Remote host closed the connection)
Oct 16 11:07:58 *	reggie_ (~reggie@c-73-35-135-140.hsd1.wa.comcast.net) has joined
Oct 16 11:08:51 *	yitz has quit (Remote host closed the connection)
Oct 16 11:09:06 *	yitz (~yitz@unaffiliated/yitz) has joined
Oct 16 11:09:16 *	trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net) has joined
Oct 16 11:09:29 *	trcc has quit (Client Quit)
Oct 16 11:12:25 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 16 11:12:41 *	mdunnio (~mdunnio@38.126.31.226) has joined
Oct 16 11:15:04 *	oisdk (~oisdk@217-183-12-239-dynamic.agg2.dyx.chf-qkr.eircom.net) has joined
Oct 16 11:16:19 *	freeman42x has quit (Remote host closed the connection)
Oct 16 11:17:46 <merijn>	Hmm, given an 'f :: [a] -> [a] -> [a]' and 'l :: [[a]]' is the a function that nicely applies 'f' to each individual list without introducing an extra wrapping for the empty list? foldr isn't quite it
Oct 16 11:17:47 *	freeman42x (~freeman42@109.255.60.165) has joined
Oct 16 11:17:53 *	freeman42xx (~freeman42@109.255.60.165) has joined
Oct 16 11:18:17 <merijn>	(since foldr would have to use [] as zero element for the empty list)
Oct 16 11:18:42 *	freeman42xx has quit (Client Quit)
Oct 16 11:20:00 <dsal>	I think my conversion from relatively small numbers for time to a fairly wide range of picosecond-based timestamps may have blown out my tests a bit.
Oct 16 11:20:15 *	forgottenone (~forgotten@176.88.102.72) has joined
Oct 16 11:21:21 <dmwit>	merijn: foldr1?
Oct 16 11:21:33 *	deepgroud has quit (Ping timeout: 245 seconds)
Oct 16 11:21:48 <dmwit>	(Or, what do you want it to do if `l = []`?)
Oct 16 11:21:52 <merijn>	dmwit: heh, why'd I forget about that one >.>
Oct 16 11:22:31 <merijn>	dmwit: Can't happen :)
Oct 16 11:23:10 *	captjakk (~captjakk@c-65-50-169-164.hs.gigamonster.net) has joined
Oct 16 11:23:45 Python interface unloaded
Oct 16 11:23:45 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Wed Oct 16 11:23:45 2019

**** BEGIN LOGGING AT Wed Oct 16 11:45:00 2019

Oct 16 11:45:00 *	Now talking on #haskell
Oct 16 11:45:00 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Oct 16 11:45:00 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Oct 16 11:45:00 *	Channel #haskell url: http://www.haskell.org/
Oct 16 11:46:02 *	jcreus (~joan@c-73-202-58-93.hsd1.ca.comcast.net) has joined
Oct 16 11:46:32 *	Unhammer has quit (Ping timeout: 260 seconds)
Oct 16 11:46:41 *	T-Junk (~T-Junk@185.204.1.185) has joined
Oct 16 11:46:45 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Oct 16 11:49:50 *	fendor_ (~fendor@77.119.128.173.wireless.dyn.drei.com) has joined
Oct 16 11:50:31 *	captjakk has quit (Remote host closed the connection)
Oct 16 11:51:51 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 16 11:51:52 <crestfallen>	I'm looking at the definition of semigroup which says: "A semigroup generalizes a monoid in that there might not exist an identity element. It also (originally) generalized a group (a monoid with all inverses) to a type where every element did not have to have an inverse, thus the name semigroup" so this is something I don't understand about these mathematical classes. How can a set with a single binary operation be a generalization of something 
Oct 16 11:51:52 <crestfallen>	far more specific, such as a monoid or group (I understand groups to an elementary degree) thanks. 
Oct 16 11:52:24 <merijn>	crestfallen: More generic = less specific
Oct 16 11:53:02 *	paulasdf (~paulasdf@2601:1c1:c200:2d8c:3b02:890a:8d63:6fa7) has joined
Oct 16 11:53:05 <merijn>	crestfallen: So "semigroup" is a generalisation of monoid (less specific) and monoid a specialisation/subset of semigroup (i.e. more specific)
Oct 16 11:53:33 *	knupfer (~Thunderbi@200116b824969000f69634fffef0b45f.dip.versatel-1u1.de) has joined
Oct 16 11:53:46 <crestfallen>	yeah thanks, but in haskell it came later that Semigroup became a superclass of Monoid right?
Oct 16 11:53:53 <merijn>	So?
Oct 16 11:54:37 <crestfallen>	I was wondering about the need to make that change, when monoid was being used unrelated to semigroup, or is that wrong?
Oct 16 11:54:56 <crestfallen>	trying to form my questions...
Oct 16 11:55:27 <merijn>	crestfallen: The problem is that without that superclass you can define monoids which are not semigroups, which means you can't generalise monoid code to semigroup code without that superclass
Oct 16 11:55:50 *	khisanth_ has quit (Ping timeout: 276 seconds)
Oct 16 11:56:19 <merijn>	There's not technical reason semigroup has to be a superclass of Monoid. You could define instances for both before that was the case
Oct 16 11:56:37 *	ltriant (~ltriant@58-7-143-125.dyn.iinet.net.au) has joined
Oct 16 11:56:45 <merijn>	crestfallen: What the superclass gets you is the guarantee that *every* Monoid also has a Semigroup instances
Oct 16 11:58:25 *	o1lo01ol1o (~o1lo01ol1@104.247.52.66) has joined
Oct 16 11:58:58 *	drbrule (uid395654@gateway/web/irccloud.com/x-pulspqwqpdwatdys) has joined
Oct 16 11:59:14 *	chalkmonster has quit (Quit: WeeChat 2.6)
Oct 16 11:59:37 *	Unhammer (~Unhammer@gateway/tor-sasl/unhammer) has joined
Oct 16 12:01:17 *	ltriant has quit (Ping timeout: 265 seconds)
Oct 16 12:02:20 *	o1lo01ol1o has quit (Remote host closed the connection)
Oct 16 12:03:18 <crestfallen>	thanks merijn please stand by
Oct 16 12:03:34 *	knupfer has quit (Quit: knupfer)
Oct 16 12:03:39 <dignissimus>	I want to install a project is it recommended that I use `cabal install` or `stack install`?
Oct 16 12:03:45 *	knupfer (~Thunderbi@200116b824969000f69634fffef0b45f.dip.versatel-1u1.de) has joined
Oct 16 12:04:00 <merijn>	dignissimus: Well, how are you building the project right now?
Oct 16 12:04:16 *	nowhere_man has quit (Ping timeout: 264 seconds)
Oct 16 12:04:32 <dignissimus>	It's an external one, I don't have it: https://github.com/hdevtools/hdevtools/
Oct 16 12:04:40 *	toppler has quit (Ping timeout: 265 seconds)
Oct 16 12:05:01 <merijn>	Does hdevtools even work anymore?
Oct 16 12:05:23 *	dfeuer (~dfeuer@wikimedia/Dfeuer) has joined
Oct 16 12:05:24 *	zacts (~zacts@dragora/developer/zacts) has joined
Oct 16 12:05:58 <dignissimus>	Not sure, looking at the repo, it does seem quite old
Oct 16 12:06:14 *	zacts has quit (Client Quit)
Oct 16 12:06:45 *	o1lo01ol1o (~o1lo01ol1@104.247.52.66) has joined
Oct 16 12:06:48 <merijn>	There's plenty of repos that are quite old and still work
Oct 16 12:07:18 <merijn>	The more problematic thing is that I remember writing emergency CPR patches to keep it working several years ago and I don't think maintenance has gotten more active :p
Oct 16 12:08:04 <merijn>	dignissimus: I've been playing with ghcide recently which works marvellous (well for my simpler projects, lack of TH support is killing me)
Oct 16 12:08:35 <crestfallen>	merijn, ok I see. monoid has a "single most natural operation for combining values" which is different from a binary operator, correct? so foldr for example, also doesn't need to apply a binary operator necessary to the list
Oct 16 12:08:57 *	khisanth_ (~Khisanth@pool-108-46-0-57.nycmny.east.verizon.net) has joined
Oct 16 12:09:08 <crestfallen>	necessarily* 
Oct 16 12:09:08 <merijn>	crestfallen: Where did you find that definition?
Oct 16 12:09:31 <crestfallen>	https://wiki.haskell.org/Monoid
Oct 16 12:09:34 <merijn>	crestfallen: Because the proper definition of a monoid is "an associative binary operation + identity element"
Oct 16 12:09:48 *	sedeki (~textual@unaffiliated/sedeki) has joined
Oct 16 12:10:37 <crestfallen>	its the first sentence there
Oct 16 12:10:44 *	captjakk (~captjakk@c-65-50-169-164.hs.gigamonster.net) has joined
Oct 16 12:10:58 <merijn>	Yeah, that's sloppy "human terminology" not a proper definition
Oct 16 12:11:06 <crestfallen>	oh boy
Oct 16 12:12:27 *	mdunnio has quit (Remote host closed the connection)
Oct 16 12:12:38 *	Lears (~leary@122-58-153-250-adsl.sparkbb.co.nz) has joined
Oct 16 12:12:41 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 16 12:12:46 <merijn>	crestfallen: The laws of Monoid (the Haskell class and also the math notion) are as follows: "mappend a (mappend b c) == mappend (mappend a b) c" and "mappend mempty x = x = mappend x mempty"
Oct 16 12:12:48 *	infinity0 (~infinity0@freenet/developer/infinity0) has joined
Oct 16 12:13:50 <crestfallen>	so mappend is technically a binary operation? because the definition I posted seems like the writer was careful not to say binary operation
Oct 16 12:13:51 <Athas>	Although a mathematician would slap you for writing it like that.
Oct 16 12:13:51 <dminuoso>	Are there some notable projects displaying how to properly structure a parser using megaparsec?
Oct 16 12:14:05 <merijn>	crestfallen: Mappend *is* a binary operation, not just technically
Oct 16 12:14:33 *	Ariakenom (~Ariakenom@h-98-128-229-79.NA.cust.bahnhof.se) has joined
Oct 16 12:14:37 <merijn>	dminuoso: Eh, the same way you do it with parsec, trifecta, attoparsec? >.>
Oct 16 12:14:57 <dminuoso>	merijn: Sure, so any reference for those? ;)
Oct 16 12:15:03 <MarcelineVQ>	dminuoso: there's a selection of megaparsec tutorials
Oct 16 12:15:17 <merijn>	dminuoso: I usually try to mimic the BNF/logical blocks
Oct 16 12:15:27 <merijn>	dminuoso: and make it up as I go along :p
Oct 16 12:15:55 <MarcelineVQ>	e.g. https://markkarpov.com/megaparsec/megaparsec.html
Oct 16 12:17:40 *	jusss` (~user@106.37.223.243) has joined
Oct 16 12:19:01 *	paulasdf has quit (Ping timeout: 250 seconds)
Oct 16 12:19:51 *	sytherax (~sytherax@60-242-28-108.static.tpgi.com.au) has joined
Oct 16 12:20:18 *	jusss has quit (Ping timeout: 245 seconds)
Oct 16 12:21:00 *	dale_ (~dale@unaffiliated/dale) has joined
Oct 16 12:21:17 <crestfallen>	> foldr not Bool [True,False,True]
Oct 16 12:21:19 *	dale has quit (Disconnected by services)
Oct 16 12:21:20 <lambdabot>	 error:
Oct 16 12:21:20 <lambdabot>	     • Data constructor not in scope: Bool
Oct 16 12:21:20 <lambdabot>	     • Perhaps you meant variable ‘bool’ (imported from Data.Bool)
Oct 16 12:21:20 *	jusss`` (~user@106.37.223.243) has joined
Oct 16 12:21:23 *	dale_ is now known as dale
Oct 16 12:21:26 *	carlomagno (~carlomagn@inet-hqmc06-o.oracle.com) has joined
Oct 16 12:21:31 <crestfallen>	sorry what should the seed value be there?
Oct 16 12:21:41 <dmwit>	can't be made to work
Oct 16 12:21:44 <sm[m]>	dminuoso: I don't know about properly, but hledger is a real world app using it
Oct 16 12:21:52 <dmwit>	not is unary, foldr needs a binary operation
Oct 16 12:21:55 <sm[m]>	it is mostly in monadic style, not applicative
Oct 16 12:22:28 <crestfallen>	dmwit dang I thought I was working with that a while back
Oct 16 12:22:29 *	vlatkoB has quit (Remote host closed the connection)
Oct 16 12:22:47 *	Aquazi has quit (Quit: Connection closed for inactivity)
Oct 16 12:23:28 *	dale has quit (Read error: Connection reset by peer)
Oct 16 12:23:40 <merijn>	crestfallen: There's two monoids on Bool (well, actually a lot more, but two common/oft used ones)
Oct 16 12:23:45 *	dale_ (~dale@unaffiliated/dale) has joined
Oct 16 12:23:53 *	dale_ is now known as dale
Oct 16 12:23:56 <merijn>	crestfallen: But since you can only have one instance per type you need newtypes to use them
Oct 16 12:24:04 <merijn>	crestfallen: Which in this case are Any and All
Oct 16 12:24:14 *	jusss` has quit (Ping timeout: 268 seconds)
Oct 16 12:24:18 <merijn>	> foldMap Any [True, False, True, False]
Oct 16 12:24:20 <lambdabot>	 Any {getAny = True}
Oct 16 12:24:28 <merijn>	> foldMap All [True, False, True, False]
Oct 16 12:24:31 <lambdabot>	 All {getAll = False}
Oct 16 12:24:58 *	jusss``` (~user@106.37.223.243) has joined
Oct 16 12:25:05 *	toppler has quit (Ping timeout: 276 seconds)
Oct 16 12:25:27 <crestfallen>	merijn, ok thanks I was thinking of a snippet I was working on, where the seed was True or Bool, like a snippet to illustrate boolean logic
Oct 16 12:26:20 *	Amras0000 (~Amras@unaffiliated/amras0000) has joined
Oct 16 12:27:08 <crestfallen>	so the difference b/t foldable and monoid is that foldable needs no identity
Oct 16 12:27:16 <crestfallen>	confused
Oct 16 12:27:52 *	jusss`` has quit (Ping timeout: 265 seconds)
Oct 16 12:27:57 *	dale has quit (Ping timeout: 240 seconds)
Oct 16 12:28:03 <merijn>	crestfallen: I'm not sure what you mean by that?
Oct 16 12:28:18 *	Neo-- (~neo@c-67-188-108-242.hsd1.ca.comcast.net) has joined
Oct 16 12:28:27 *	acarrico has quit (Ping timeout: 240 seconds)
Oct 16 12:28:39 *	jusss```` (~user@106.37.223.243) has joined
Oct 16 12:28:57 *	samhh has quit (Ping timeout: 240 seconds)
Oct 16 12:29:19 *	Amras has quit (Ping timeout: 265 seconds)
Oct 16 12:31:38 *	jusss``` has quit (Ping timeout: 268 seconds)
Oct 16 12:31:40 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 16 12:31:51 *	o1lo01ol1o has quit (Remote host closed the connection)
Oct 16 12:32:06 *	o1lo01ol1o (~o1lo01ol1@104.247.52.66) has joined
Oct 16 12:32:18 *	jb55 has quit (Remote host closed the connection)
Oct 16 12:32:50 *	jb55 (~jb55@gateway/tor-sasl/jb55) has joined
Oct 16 12:34:51 *	jusss```` has quit (Ping timeout: 246 seconds)
Oct 16 12:34:52 <dmwit>	(There are four monoids on Bool: (&&)/True, (/=)/False, (==)/True, (||)/False. These correspond to making two independent choices: either Sum or Product, and which of False/True represents 0/1.)
Oct 16 12:35:21 <merijn>	dmwit: You're forgetting *at least* two
Oct 16 12:35:31 <merijn>	oh, wait no I'm thinking of semigroups
Oct 16 12:35:51 <merijn>	(First and Last)
Oct 16 12:36:22 <dmwit>	There are 8 semigroups.
Oct 16 12:38:19 <crestfallen>	dmwit I need to study that thanks both you and merijn .. I gotta go.. you'll be hearing from me again :)
Oct 16 12:38:22 <dmwit>	(besides First and Last, there's const False and const True)
Oct 16 12:38:47 <crestfallen>	this stuff is rough
Oct 16 12:39:05 *	spew (uid195861@gateway/web/irccloud.com/x-tsofckjnvjidhlim) has joined
Oct 16 12:39:11 <crestfallen>	I need to listen to Leonard Cohen
Oct 16 12:39:16 <merijn>	crestfallen: Lets rewind, how'd you end up with these questions? Because perhaps you don't need to know the answer right now :)
Oct 16 12:39:52 <boxscape>	dmwit so const False and const True are Semigroup but not Monoids?
Oct 16 12:39:55 *	fweht (uid344711@gateway/web/irccloud.com/x-utefbivojzrydkmw) has joined
Oct 16 12:40:12 <crestfallen>	I was trying to get one point straight, then other questions came up, then your input made me wonder about various foggy areas
Oct 16 12:40:27 <crestfallen>	It's a bit soup
Oct 16 12:40:32 <crestfallen>	big*
Oct 16 12:40:49 <dmwit>	boxscape: right
Oct 16 12:40:57 *	fendor_ has quit (Ping timeout: 240 seconds)
Oct 16 12:41:04 <boxscape>	dmwit why can't you just set mempty to True for const True and False for const False?
Oct 16 12:41:32 *	mdunnio (~mdunnio@38.126.31.226) has joined
Oct 16 12:41:39 <boxscape>	wait I should probably just look at the identity laws huh
Oct 16 12:42:07 <dmwit>	boxscape: No matter what mempty you pick, mempty <> False = True, which isn't okay.
Oct 16 12:42:15 <boxscape>	okay, that makes sense
Oct 16 12:42:27 <dmwit>	(Sorry, I meant const (const False) and const (const True), of course.)
Oct 16 12:43:20 *	toppler has quit (Ping timeout: 265 seconds)
Oct 16 12:44:43 *	Deide (~Deide@90.249.126.204) has joined
Oct 16 12:45:12 *	carlomagno has quit (Ping timeout: 268 seconds)
Oct 16 12:47:49 <crestfallen>	merijn, I'm trying to get it from the math side as well so I've been reading about these different structures
Oct 16 12:47:51 *	hackage hsinspect 0.0.5 - Inspect Haskell source files.  https://hackage.haskell.org/package/hsinspect-0.0.5 (tseenshe)
Oct 16 12:49:08 *	carlomagno (~carlomagn@inet-hqmc06-o.oracle.com) has joined
Oct 16 12:49:19 <crestfallen>	hey how do you make the little bullet to make clever little comments under your handle in say hexchat? like: crestfallen nods
Oct 16 12:49:37 <svipal>	  *tries*
Oct 16 12:49:42 <dmwit>	cabal v2-* searches up the directory tree for a cabal.project file. If it doesn't find one, but it sees a *.cabal file, it uses that. Can I ask it to skip looking for a cabal.project file and just behave as it would if it just used the *.cabal file in the current directory?
Oct 16 12:49:46 *	svipal tries again
Oct 16 12:49:58 <svipal>	crest, /me
Oct 16 12:50:30 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 16 12:51:13 <crestfallen>	svipal sorry?
Oct 16 12:51:30 <crestfallen>	what do I type precisely..
Oct 16 12:51:50 *	sternmull has quit (Quit: Leaving.)
Oct 16 12:52:06 <boxscape>	you type /me nods
Oct 16 12:52:18 *	crestfallen nods
Oct 16 12:52:22 *	dale (~dale@unaffiliated/dale) has joined
Oct 16 12:52:25 <crestfallen>	thanks ! boxscape 
Oct 16 12:52:46 *	mossplix (~mossplix@102.83.71.123) has joined
Oct 16 12:52:49 <crestfallen>	I've been wondering about that for many moons :)
Oct 16 12:52:51 *	sm[m] high-fives crestfallen
Oct 16 12:53:05 *	crestfallen hip hip hooray!
Oct 16 12:53:43 <dmwit>	I thought I'd be clever and try `cabal v2-build --project-file <(echo packages: $(pwd))`, but it tells me 'No cabal.project file or cabal file matching the default glob './*.cabal' was found.'.
Oct 16 12:53:51 <dmwit>	Which... seems like an odd error in the circumstances.
Oct 16 12:53:51 <dminuoso>	Wow. 80 lines megaparsec program taking about 22 seconds to compile. o.o
Oct 16 12:53:56 <dminuoso>	This is.. odd.
Oct 16 12:54:02 *	sytherax has quit (Ping timeout: 240 seconds)
Oct 16 12:54:30 *	royal_screwup21 has quit (Remote host closed the connection)
Oct 16 12:54:43 *	sedeki has quit (Quit: Textual IRC Client: www.textualapp.com)
Oct 16 12:57:59 <crestfallen>	Athas, sorry did you mean a mathematician would slap the member helping me or the o.p. haskell wiki writer for writing it that way?
Oct 16 12:58:44 <dminuoso>	sm[m], merijn, MarcelineVQ: Cheers by the way for the tips.
Oct 16 12:59:16 *	heatsink (~heatsink@2600:1700:bef1:5e10:e570:7d90:4905:65c6) has joined
Oct 16 12:59:38 <Athas>	crestfallen: neither.  A mathematician would never use prefix application to demonstrate associativity.
Oct 16 12:59:57 *	Dykam has quit (Ping timeout: 240 seconds)
Oct 16 13:00:18 <Athas>	It was just a small joke about merijn's statement about the "math motion" contrasted with his Haskell notation.
Oct 16 13:00:57 *	doublex has quit (Ping timeout: 240 seconds)
Oct 16 13:02:28 *	toppler has quit (Ping timeout: 268 seconds)
Oct 16 13:03:16 *	Dykam (~Dykam@37.139.10.7) has joined
Oct 16 13:03:38 *	heatsink has quit (Ping timeout: 245 seconds)
Oct 16 13:04:07 *	Neo-- has quit (Ping timeout: 265 seconds)
Oct 16 13:05:00 <crestfallen>	Athas, thanks I see, you don't like prefix notation like "mappend a (mappend b c) == mappend (mappend a b) c"  . I studied scheme for a minute and got used to prefix notation so I often prefer it. it's weird how sometimes it just looks wrong, other times clean.
Oct 16 13:06:23 *	dfeuer has quit (Quit: Konversation terminated!)
Oct 16 13:06:40 *	poljar (~poljar@89-172-242-97.adsl.net.t-com.hr) has joined
Oct 16 13:06:43 Python interface unloaded
**** ENDING LOGGING AT Wed Oct 16 13:06:43 2019

**** BEGIN LOGGING AT Thu Oct 17 11:56:08 2019

Oct 17 11:56:08 *	Now talking on #haskell
Oct 17 11:56:08 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Oct 17 11:56:08 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Oct 17 11:56:08 *	Channel #haskell url: http://www.haskell.org/
Oct 17 11:56:10 <kronicmage30>	hey folks, anyone here have epxerience setting up hie?i've gotten it working for the most part, but i'm getting a wierd thing on some haskell files where ghc and ghcid compile it just fine, but hie complains about missing importsI installed the module in question using pacman (on arch linux), but I installed hie from source - this is probably the
Oct 17 11:56:11 <kronicmage30>	causeanyone know how I can resolve this?
Oct 17 11:56:13 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 17 11:56:29 <kronicmage30>	oops sorry my newlines died somehow
Oct 17 11:56:49 <EvanR>	sicklorkin: though error is not an IO action and so doesn't automatically do what die does without extra help
Oct 17 11:58:02 <crestfallen>	https://termbin.com/d7bp  hi I'm looking at the bit at the end about the forgetful functor. any explanation appreciated..
Oct 17 11:59:11 <crestfallen>	it says the monoid category is projected down to earth: set : monoid -> U(m)
Oct 17 11:59:46 <crestfallen>	in advance this is a bartosz milewski lecture
Oct 17 12:00:02 *	jb551 has quit (Remote host closed the connection)
Oct 17 12:00:23 <EvanR>	which part is not clear?
Oct 17 12:00:26 *	jb551 (~jb55@gateway/tor-sasl/jb55) has joined
Oct 17 12:03:18 <crestfallen>	the whole section starting at 'But we need...' I mean, any abstract algebraic structure needs to start with a set, so I'm wondering why he presents it that way and how it is expressed in haskell
Oct 17 12:03:25 *	fweht (uid344711@gateway/web/irccloud.com/x-dvwvgdqyyfnjyxaf) has joined
Oct 17 12:03:56 <crestfallen>	"project to a down to earth set'   ?
Oct 17 12:04:05 <crestfallen>	sorry projected
Oct 17 12:05:05 <EvanR>	U is a functor
Oct 17 12:05:37 *	dfeuer has quit (Ping timeout: 240 seconds)
Oct 17 12:05:39 <EvanR>	it maps any monoid to the underlying set of the monoid
Oct 17 12:06:59 *	knupfer (~Thunderbi@200116b8242a6300f69634fffef0b45f.dip.versatel-1u1.de) has joined
Oct 17 12:08:00 <EvanR>	it maps monoid homomorphisms to just functions between U(m1) and U(m2)
Oct 17 12:09:03 *	toppler has quit (Ping timeout: 245 seconds)
Oct 17 12:09:17 <crestfallen>	ok thank you so he is just reiterated the above into notational form EvanR 
Oct 17 12:09:29 <crestfallen>	the above of the paste
Oct 17 12:09:39 <crestfallen>	reiterating
Oct 17 12:11:16 <crestfallen>	so that is just whiteboard notation, but can you see that in a type signature or instance declaration?
Oct 17 12:11:34 <EvanR>	see what
Oct 17 12:12:51 <crestfallen>	so the set in a type signature would be in the type constraint?
Oct 17 12:13:17 *	militia has quit (Ping timeout: 240 seconds)
Oct 17 12:13:17 <EvanR>	from what is given here there is no haskell
Oct 17 12:13:23 *	captjakk has quit (Remote host closed the connection)
Oct 17 12:13:59 <crestfallen>	right, so generally the set is implicit in the type. a type is a set in all cases, right?
Oct 17 12:14:07 <EvanR>	no
Oct 17 12:14:33 <EvanR>	but in the case of category Mon you are told that each monoid is built on some set
Oct 17 12:14:42 <EvanR>	so it's trivial to extract it
Oct 17 12:15:01 *	mdunnio has quit (Remote host closed the connection)
Oct 17 12:16:51 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 17 12:17:28 *	mdunnio (~mdunnio@38.126.31.226) has joined
Oct 17 12:20:15 *	buckworst has quit (Remote host closed the connection)
Oct 17 12:20:17 *	argent0 has quit (Ping timeout: 276 seconds)
Oct 17 12:20:47 <crestfallen>	so the set in CT is just a point in the diagram. we are only concerned with the homomorphisms that indicate what the set is like, in the parlance of CT EvanR I suppose
Oct 17 12:21:21 <EvanR>	points in a diagram are objects
Oct 17 12:21:40 <dmwit>	This paragraph seems confused and/or backwards. The forgetful functor from monoids to sets is not used to solve the problem of "we need a set to define a monoid".
Oct 17 12:21:57 <EvanR>	yep i feel like there is more text not shown
Oct 17 12:22:24 <crestfallen>	kindly help me rewrite it. also if you could illustrate what you mean by extract
Oct 17 12:22:40 <EvanR>	you wrote this based on a video lecture?
Oct 17 12:22:49 <crestfallen>	those are my transcribed notes, yes
Oct 17 12:22:57 <EvanR>	that explains a few things
Oct 17 12:23:23 <EvanR>	"explain my notes to me" 
Oct 17 12:23:41 *	zacts (~zacts@dragora/developer/zacts) has joined
Oct 17 12:23:46 *	poljar (~poljar@78-1-48-100.adsl.net.t-com.hr) has joined
Oct 17 12:23:48 *	ggole has quit (Quit: Leaving)
Oct 17 12:23:51 *	kronicmage30 has quit (Ping timeout: 260 seconds)
Oct 17 12:24:09 *	poljar1 has quit (Ping timeout: 268 seconds)
Oct 17 12:24:20 *	hiroaki_ has quit (Ping timeout: 265 seconds)
Oct 17 12:24:25 <crestfallen>	well, yeah. I was trying to get the lecture and trying to write good notes
Oct 17 12:24:52 *	stevenxl (uid133530@gateway/web/irccloud.com/x-kuwrmqgqgcnsddzc) has joined
Oct 17 12:24:55 <EvanR>	crestfallen: as simple as something like, if a monoid is a tuple like (m,e,+,law1,law2) then U (m,e,+,law1,law2) = m
Oct 17 12:25:08 <EvanR>	and U f = f
Oct 17 12:26:19 <crestfallen>	ok yeah, law1,law2 are the 2 monoid laws
Oct 17 12:26:39 <EvanR>	well evidence that m e and + satisfy laws
Oct 17 12:28:46 *	zacts has quit (Quit: Konversation terminated!)
Oct 17 12:30:20 <EvanR>	"to have a monoid you have to have a set" is a reason why the forgetful functor makes sense
Oct 17 12:30:26 <EvanR>	at least
Oct 17 12:30:37 *	toppler has quit (Ping timeout: 265 seconds)
Oct 17 12:31:46 <crestfallen>	its name is curious. is it obvious why its forgetful?
Oct 17 12:32:10 <EvanR>	it's obviously forgetting 4 things in the process
Oct 17 12:32:19 <EvanR>	of mapping the objects
Oct 17 12:32:31 <EvanR>	it's also forgetting aspects of the homomorphism
Oct 17 12:32:49 <EvanR>	the fact that its a monoid homomorphism and not just a random function
Oct 17 12:33:34 *	forgottenone has quit (Quit: Konversation terminated!)
Oct 17 12:33:52 <dmwit>	U (f, proofId, proofMappend) = f -- might be more explicit
Oct 17 12:34:12 <EvanR>	yeah
Oct 17 12:35:20 <trcc>	If there is a wai expert out there, I could use some help on wai-logger as wai-middleware: https://stackoverflow.com/questions/58429399/wai-logger-filelogspec-as-scotty-middleware-reporting-openfile-resource-busy-f
Oct 17 12:35:22 <EvanR>	a total of 6 things are being forgetted
Oct 17 12:35:30 <crestfallen>	right, so generally in CT if you look at a morphism, you can see that the set contains elements that are mappend-able, and that are unaltered by identity
Oct 17 12:35:48 <crestfallen>	I mean the monoid is mappend-able
Oct 17 12:35:54 <crestfallen>	the monoid case
Oct 17 12:36:47 <crestfallen>	so i.e. you can guess what elements are in the set
Oct 17 12:37:03 <crestfallen>	what type of elements
Oct 17 12:37:09 *	mdunnio has quit (Remote host closed the connection)
Oct 17 12:37:11 *	brandly has quit (Ping timeout: 276 seconds)
Oct 17 12:37:26 <sicklorkin>	trcc: make sure you havn't accidentally opened the logger twice
Oct 17 12:37:29 *	hiroaki_ (~hiroaki@ip4d166aa9.dynamic.kabel-deutschland.de) has joined
Oct 17 12:37:31 *	mdunnio (~mdunnio@38.126.31.226) has joined
Oct 17 12:37:46 <sicklorkin>	s/opened/started.. you can tonly have one reference to the logger
Oct 17 12:38:26 <trcc>	sicklorkin: will take another look, sec
Oct 17 12:40:05 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 17 12:40:42 <trcc>	Does not seem to be the case. I have added how I use it to https://stackoverflow.com/questions/58429399/wai-logger-filelogspec-as-scotty-middleware-reporting-openfile-resource-busy-f
Oct 17 12:41:24 <sicklorkin>	can you pass in the logger?
Oct 17 12:41:38 *	merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Oct 17 12:41:41 <trcc>	so initialize it before scotty 3000 and pass it in?
Oct 17 12:41:45 <sicklorkin>	yes..
Oct 17 12:41:51 <trcc>	I could definitely try
Oct 17 12:41:57 *	olle has quit (Ping timeout: 240 seconds)
Oct 17 12:42:09 <sicklorkin>	that's what I ended up having to do - had similar issues in my testing framwork
Oct 17 12:42:29 *	reactormonk (~tass@46.114.39.235) has joined
Oct 17 12:44:03 *	olle (~olle@mue-88-130-56-158.dsl.tropolys.de) has joined
Oct 17 12:45:13 *	tromp (~tromp@2a02:a210:1585:3200:7ce5:cc9f:750b:f6ef) has joined
Oct 17 12:45:34 <crestfallen>	dmwit, could you show me how to rewrite the last part, where you say it is backwards, etc?
Oct 17 12:46:13 <crestfallen>	so at least in the future I have a chance ..
Oct 17 12:46:19 <trcc>	oh god sicklorkin you are brilliant! 
Oct 17 12:46:34 *	merijn has quit (Ping timeout: 265 seconds)
Oct 17 12:46:53 <trcc>	Can you post it as answer on stackoverflow? Otherwise i'll do it...
Oct 17 12:48:14 *	freeman42x has quit (Ping timeout: 276 seconds)
Oct 17 12:48:24 <sicklorkin>	trcc: my hands are tied, please go ahead
Oct 17 12:48:39 <trcc>	you are pretty good writing with your tongue then :P
Oct 17 12:49:06 <sicklorkin>	;)
Oct 17 12:50:11 *	tromp has quit (Ping timeout: 276 seconds)
Oct 17 12:52:01 *	militia (~militia@163.ip-51-254-203.eu) has joined
Oct 17 12:53:01 <EvanR>	brilliantlorkin
Oct 17 12:53:06 <MarcelineVQ>	p. sick
Oct 17 12:53:49 *	toppler has quit (Ping timeout: 265 seconds)
Oct 17 12:55:23 *	reactormonk has quit (Ping timeout: 276 seconds)
Oct 17 12:56:56 <dignissimus>	I've noticed that when lists are defined over multiple lines, the commas go at the start of lines, is this convention? If so why/where did it come from and how come other languages have come to do lay things out differently?
**** ENDING LOGGING AT Thu Oct 17 12:58:12 2019

**** BEGIN LOGGING AT Mon Oct 21 10:55:47 2019

Oct 21 10:55:47 *	Now talking on #haskell
Oct 21 10:55:47 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Oct 21 10:55:47 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Oct 21 10:55:47 *	Channel #haskell url: http://www.haskell.org/
Oct 21 10:55:53 <dmwit>	Yes. This led to a runtime leak so egregious once that it actually reduced me to tears.
Oct 21 10:56:11 <dmwit>	(Not this exact primitive; for me it was with MVars. But the analogous thing with MVars.)
Oct 21 10:56:48 <crestfallen>	> (<$>) (foldr (+) 0) [(Just 4.5), (Just 2), (Just 3.3)]
Oct 21 10:56:50 <lambdabot>	 [4.5,2.0,3.3]
Oct 21 10:57:05 <crestfallen>	weird that's not what I expected
Oct 21 10:57:10 <dmwit>	> map sum [Just 4.5, Just 2, Just 3.3]
Oct 21 10:57:13 <lambdabot>	 [4.5,2.0,3.3]
Oct 21 10:57:46 <EvanR>	> sum (Just 4.5)
Oct 21 10:57:48 <lambdabot>	 4.5
Oct 21 10:57:51 <dmwit>	> map (foldr f z) [Nothing, Just x]
Oct 21 10:57:53 <lambdabot>	 error:
Oct 21 10:57:54 <lambdabot>	     Ambiguous occurrence ‘x’
Oct 21 10:57:54 <lambdabot>	     It could refer to either ‘Debug.SimpleReflect.x’,
Oct 21 10:57:59 <dmwit>	?undefine
Oct 21 10:57:59 <lambdabot>	Undefined.
Oct 21 10:58:00 <dmwit>	> map (foldr f z) [Nothing, Just x]
Oct 21 10:58:02 <lambdabot>	 [z,f x z]
Oct 21 10:58:19 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 21 10:58:21 <crestfallen>	sorry wait not following
Oct 21 10:58:26 *	DANtheBEASTman (~dysfigure@li1148-161.members.linode.com) has joined
Oct 21 10:58:43 *	slomo has quit (Ping timeout: 268 seconds)
Oct 21 10:58:55 *	rosterok (uid236576@gateway/web/irccloud.com/x-ssjcxdkqijapeeyo) has joined
Oct 21 10:59:07 *	zwarag has quit (Ping timeout: 250 seconds)
Oct 21 10:59:16 <EvanR>	> foldr (liftA2 (+)) (Just 0) [Just 4.5, Just 2, Just 3.3]
Oct 21 10:59:18 <lambdabot>	 Just 9.8
Oct 21 10:59:19 <MarcelineVQ>	Before the flood shall we ask what was expected?
Oct 21 10:59:42 <higherorder>	dmwit: thanks for chiming in :) Would it still be "idiomatic" to use Either in cases where the two sides are of "equal meaning"? Or would a Haskell dev reading the code frown ?
Oct 21 11:00:02 *	penthium2 has quit ()
Oct 21 11:00:23 *	DANtheBEASTman has quit (Client Quit)
Oct 21 11:00:27 <dmwit>	I will not frown. Also, if I am writing the code, I will make my own type that labels the two branches more descriptively.
Oct 21 11:00:45 *	DANtheBEASTman (~dysfigure@li1148-161.members.linode.com) has joined
Oct 21 11:01:37 *	DANtheBEASTman has quit (Client Quit)
Oct 21 11:01:58 <EvanR>	you can nest Eithers to "implement" any sum type you want, but the result is like using String for all your data
Oct 21 11:02:00 *	DANtheBEASTman (~dysfigure@li1148-161.members.linode.com) has joined
Oct 21 11:02:11 *	heatsink (~heatsink@2600:1700:bef1:5e10:f1ca:43ba:7c4b:388f) has joined
Oct 21 11:02:32 <dmwit>	For example, https://github.com/dmwit/nurse-sveta/blob/master/src/Dr/Mario/Sveta.hs#L76-L79
Oct 21 11:03:25 <dmwit>	(Chosen just because the example is fresh in my mind -- just wrote it yesterday -- which should serve as a piece of evidence about how often this kind of thing comes up. ;-)
Oct 21 11:03:43 *	mdunnio (~mdunnio@208.59.170.5) has joined
Oct 21 11:03:51 *	zwarag (~zwarag@80-110-97-183.cgn.dynamic.surfer.at) has joined
Oct 21 11:05:40 <crestfallen>	well first off, why does 'map sum' work on functor elements in the list?
Oct 21 11:05:53 <dmwit>	It doesn't. It works on foldable elements in the list.
Oct 21 11:05:59 <dmwit>	:t sum
Oct 21 11:06:00 <lambdabot>	(Foldable t, Num a) => t a -> a
Oct 21 11:06:03 <dmwit>	:t map sum
Oct 21 11:06:04 <lambdabot>	(Foldable t, Num b) => [t b] -> [b]
Oct 21 11:06:10 *	jneira (4f9b01a2@gateway/web/cgi-irc/kiwiirc.com/ip.79.155.1.162) has joined
Oct 21 11:06:29 *	heatsink has quit (Ping timeout: 250 seconds)
Oct 21 11:07:15 <EvanR>	map is still specialized to list?
Oct 21 11:07:21 *	albertus1 has quit (Ping timeout: 250 seconds)
Oct 21 11:07:42 <dmwit>	Sure. We already have the perfectly good name fmap for the generalized one.
Oct 21 11:07:50 <dmwit>	(Two names for it, in fact!)
Oct 21 11:08:19 <crestfallen>	wait but there's no accum so that is still a fold?
Oct 21 11:08:54 <dmwit>	I don't understand that question. What is your definition of "fold"? What is your definition of "accum"?
Oct 21 11:09:15 <dignissimus>	I only half understand why this doesn't work, I think because I'm using haskeline, instead of being IO objects, things should be InputT IO objects? But I don't understand what should be an InputT IO object or why or how to make it one https://paste.rs/16Y.hs https://paste.rs/JgB
Oct 21 11:09:20 <dmwit>	(...and why do you believe "there's no accum"?)
Oct 21 11:09:20 <crestfallen>	what is being summed? in your first example with 'map sum'
Oct 21 11:09:20 *	DANtheBEASTman has quit (Quit: I hate quit messages.)
Oct 21 11:09:33 <EvanR>	(i guess i was surprised and relieved that it didn't say (Functor f, Foldable t, Num b) => f (t b) -> f b
Oct 21 11:09:36 <EvanR>	)
Oct 21 11:09:42 <dmwit>	In `sum (Just 4.5)`, the elements of the Maybe Double, namely, 4.5, are being summed.
Oct 21 11:09:43 *	DANtheBEASTman (~dysfigure@li1148-161.members.linode.com) has joined
Oct 21 11:10:05 <crestfallen>	ok
Oct 21 11:10:25 <dignissimus>	I know by using `a <- return newStdGen`  I can make `a` an `IO StdGen` object but that's not useful because I want to be able to use an StdGen object
Oct 21 11:10:38 <dmwit>	dignissimus: Seems like you just need to insert a `lift` or `liftIO` there, as in `generator <- liftIO newStdGen`.
Oct 21 11:11:01 <dmwit>	With such a short transformer stack, the choice between `lift` and `liftIO` is mostly aesthetic. If you plan to refactor later, `liftIO` is the more forward-compatible choice.
Oct 21 11:11:29 *	mdunnio has quit (Remote host closed the connection)
Oct 21 11:11:44 *	albertus1 (~seb@46.114.0.26) has joined
Oct 21 11:11:51 *	mdunnio (~mdunnio@208.59.170.5) has joined
Oct 21 11:11:59 *	albertus1 has quit (Max SendQ exceeded)
Oct 21 11:12:08 <dmwit>	dignissimus: ...but since you're doing IO already, can I recommend switching from `randomR` to `randomRIO`?
Oct 21 11:12:22 *	hackage cpsa 3.6.4 - Symbolic cryptographic protocol analyzer  https://hackage.haskell.org/package/cpsa-3.6.4 (mliskov)
Oct 21 11:12:32 <dmwit>	That will take care of keeping a reference to the seed around, so that future invocations of `aiPlayerLogic` don't keep reseeding.
Oct 21 11:12:33 *	zincy_ has quit (Read error: Connection reset by peer)
Oct 21 11:12:33 *	tom_ has quit (Remote host closed the connection)
Oct 21 11:12:36 <dmwit>	s/future/multiple/
Oct 21 11:12:49 <crestfallen>	> map (foldr f z) [Nothing, Just x]
Oct 21 11:12:51 <lambdabot>	 [z,f x z]
Oct 21 11:13:05 *	zincy_ (~tom@95.147.48.210) has joined
Oct 21 11:13:10 <crestfallen>	??
Oct 21 11:13:10 *	tom_ (~tom@95.147.48.210) has joined
Oct 21 11:13:17 <dminuoso>	dignissimus: note that in principle `a <- return newStdGen` is roughly equivalent to `let a = newStdGen` :)
Oct 21 11:13:23 <crestfallen>	what's happening there
Oct 21 11:13:47 <EvanR>	> foldr f z (Just x)
Oct 21 11:13:48 <lambdabot>	 f x z
Oct 21 11:13:52 *	janat08 has quit (Quit: Connection closed for inactivity)
Oct 21 11:14:04 <dminuoso>	dignissimus: (Im saying roughly because there are a few legitimate use cases of using the former style, when `a` is a more complicated pattern like `Just a`)
Oct 21 11:14:12 *	albertus1 (~seb@46.114.0.26) has joined
Oct 21 11:14:18 <EvanR>	crestfallen: again with the Foldable behavior of Maybe
Oct 21 11:14:27 *	albertus1 has quit (Max SendQ exceeded)
Oct 21 11:14:43 <dmwit>	crestfallen: It was just a quick way to show you the definition of foldr for Maybe.
Oct 21 11:14:46 <dmwit>	Specifically:
Oct 21 11:14:50 <dmwit>	foldr f z Nothing = z
Oct 21 11:14:53 *	albertus1 (~seb@46.114.0.26) has joined
Oct 21 11:14:55 <dmwit>	foldr f z (Just x) = f x z
Oct 21 11:15:03 *	tom_ has quit (Remote host closed the connection)
Oct 21 11:15:19 *	tom_ (~tom@213.205.241.24) has joined
Oct 21 11:15:20 *	tom_ has quit (Read error: Connection reset by peer)
Oct 21 11:15:23 <dmwit>	(I don't know if the implementation of `foldr` for `Maybe` is literally these lines of code, but they're equivalent to it anyway.)
Oct 21 11:15:23 *	zincy_ has quit (Read error: Connection reset by peer)
Oct 21 11:15:44 *	tom_ (~tom@95.147.48.210) has joined
Oct 21 11:16:00 <EvanR>	@src maybe
Oct 21 11:16:01 <lambdabot>	maybe n _ Nothing  = n
Oct 21 11:16:01 <lambdabot>	maybe _ f (Just x) = f x
Oct 21 11:16:27 *	zincy_ (~tom@95.147.48.210) has joined
Oct 21 11:16:40 <dmwit>	Of course to fully explain what happened we'd have to take a detour through some pretty hairy stuff to explain how the Expr type is implemented. But I think it's just a distraction. If you can understand the above equations you've learned everything I wanted you to learn from that lambdabot query.
Oct 21 11:16:49 *	tom_ has quit (Read error: Connection reset by peer)
Oct 21 11:16:54 *	hiroaki (~hiroaki@ip4d166aa9.dynamic.kabel-deutschland.de) has joined
Oct 21 11:17:24 *	tom_ (~tom@95.147.48.210) has joined
Oct 21 11:17:46 *	tom_ has quit (Read error: Connection reset by peer)
Oct 21 11:17:57 *	pera has quit (Ping timeout: 240 seconds)
Oct 21 11:18:18 <crestfallen>	tbh I'm confused...working on it
Oct 21 11:18:20 <EvanR>	folding over a Maybe (with foldr) seems kind of an oddball thing to do. "folding" it with maybe seems more applicable and theoretically nice
Oct 21 11:18:23 *	zincy_ has quit (Read error: Connection reset by peer)
Oct 21 11:18:49 *	paulasdf (~paulasdf@2601:1c1:c200:2d8c:3b02:890a:8d63:6fa7) has joined
Oct 21 11:18:50 *	toppler has quit (Ping timeout: 276 seconds)
Oct 21 11:19:12 <dmwit>	I think having a Foldable instance for Maybe is nice. traverse_ has been handy a few times.
Oct 21 11:19:23 <dignissimus>	Ok, I've replaced the randomR call with one to randomRIO imported and used liftIO and the programme works! Thanks all 
Oct 21 11:19:32 <EvanR>	yeah the oddball Foldable instances seem to exist so Traversable works
Oct 21 11:19:33 <dmwit>	dignissimus: Nice! ^_^
Oct 21 11:19:42 <dmwit>	traverse_ doesn't use Traversable
Oct 21 11:19:46 <dignissimus>	liftIO will be very useful to know about later on too
Oct 21 11:19:51 <EvanR>	:t traverse_
Oct 21 11:19:52 <lambdabot>	(Foldable t, Applicative f) => (a -> f b) -> t a -> f ()
Oct 21 11:19:56 *	albertus1 has quit (Ping timeout: 265 seconds)
Oct 21 11:20:07 <EvanR>	:t for
Oct 21 11:20:09 <lambdabot>	(Traversable t, Applicative f) => t a -> (a -> f b) -> f (t b)
Oct 21 11:20:19 *	replay has quit (Quit: Textual IRC Client: www.textualapp.com)
Oct 21 11:20:30 *	is_null has quit (Ping timeout: 246 seconds)
Oct 21 11:20:34 <EvanR>	k so traverse_ is like a highbrow way to do `when' heh
Oct 21 11:21:00 <crestfallen>	> foldr f z (Just x)
Oct 21 11:21:03 <lambdabot>	 f x z
Oct 21 11:21:13 <crestfallen>	so you don't call z the accumulator
Oct 21 11:21:26 <EvanR>	z is the base value or zero value
Oct 21 11:21:34 *	Lears has quit (Remote host closed the connection)
Oct 21 11:21:35 <dmwit>	I don't. But I would probably understand what you meant if you did.
Oct 21 11:21:37 <EvanR>	> foldr f z Nothing
Oct 21 11:21:38 <lambdabot>	 z
Oct 21 11:21:50 *	Lears (~leary@122-58-153-250-adsl.sparkbb.co.nz) has joined
Oct 21 11:21:59 <EvanR>	the initial value of the accum
Oct 21 11:22:34 *	xsperry (~bc8163c6@217.29.117.252) has joined
Oct 21 11:22:52 *	turab has quit (Ping timeout: 252 seconds)
Oct 21 11:23:13 *	dm9 has quit (Ping timeout: 245 seconds)
Oct 21 11:23:14 <crestfallen>	> map (foldr f z) [Nothing, Just x]
Oct 21 11:23:16 <lambdabot>	 [z,f x z]
Oct 21 11:23:40 <dmwit>	higherorder: Oh yeah, and I've written about this on SO, too! https://stackoverflow.com/a/19073039/791604
Oct 21 11:23:48 <crestfallen>	so there, z becomes the second param of f
Oct 21 11:23:58 <higherorder>	dmwit: oh great, thanks!
Oct 21 11:24:03 <EvanR>	crestfallen: so you can accurately understand all this by considering Maybe as a list with at most 1 element
Oct 21 11:24:21 <EvanR>	> foldr f z [x]
Oct 21 11:24:23 <lambdabot>	 f x z
Oct 21 11:24:28 <EvanR>	> foldr f z []
Oct 21 11:24:30 <lambdabot>	 z
Oct 21 11:24:44 *	turab (~turab@149-160-216-59.dhcp-bl.indiana.edu) has joined
Oct 21 11:24:54 <EvanR>	[x] corresponds to Just x
Oct 21 11:25:24 <crestfallen>	ok copy that but...
Oct 21 11:25:35 *	dm9 (~weechat@p5083AC11.dip0.t-ipconnect.de) has joined
Oct 21 11:25:40 *	takuan (~takuan@d54C0606B.access.telenet.be) has joined
Oct 21 11:25:55 *	albertus1 (~seb@46.114.0.26) has joined
Oct 21 11:26:01 <crestfallen>	why would you have the base value returned as the 2nd param of f as in f x z ?
Oct 21 11:26:12 <EvanR>	that's just the order foldr uses
Oct 21 11:26:28 <dmwit>	crestfallen: Okay, I accept your challenge. I decide not to use z. What do you propose that I use instead?
Oct 21 11:26:28 *	efm has quit (Ping timeout: 268 seconds)
Oct 21 11:26:29 <EvanR>	first arg is "this element" and second arg is "the running total"
Oct 21 11:26:35 *	reggie_ has quit (Remote host closed the connection)
Oct 21 11:26:57 <dmwit>	(The second argument is not a "running total". For that to be a sensible description, the second argument would have to change. It doesn't.)
Oct 21 11:26:59 <crestfallen>	its very interesting, hold on pls
Oct 21 11:27:31 <EvanR>	well, nothing ever changes :) five reasons at least
Oct 21 11:27:42 <EvanR>	> foldr f z [x,y]
Oct 21 11:27:44 <lambdabot>	 f x (f y z)
Oct 21 11:27:44 <dmwit>	(This is related to my comment earlier, "I don't [call z the accumulator].".)
Oct 21 11:27:57 <EvanR>	yeah z is not the accumulator
Oct 21 11:28:05 <crestfallen>	ok base value
Oct 21 11:28:08 <EvanR>	but the second argument is the accumulator
Oct 21 11:28:11 *	Gurkenglas (~Gurkengla@unaffiliated/gurkenglas) has joined
Oct 21 11:28:38 *	fphilipe has quit (Ping timeout: 265 seconds)
Oct 21 11:28:43 <EvanR>	in the lazy case, for foldr, this accumulator has already accumulated, but we can ignore that for now 
Oct 21 11:29:11 *	reggie_ (~reggie@c-73-35-135-140.hsd1.wa.comcast.net) has joined
Oct 21 11:29:22 *	fizbin (~fizbin@2603:3004:624:7f80:1501:23df:7e3f:a421) has joined
Oct 21 11:29:23 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 21 11:29:27 <dmwit>	EvanR: All (recursive) calls to foldr see the same value in `z`. Compare `foldl'`, which actually see different values in this argument in the straightforward implementation.
Oct 21 11:29:59 <EvanR>	all recursive calls don't see the same value, they are not all z
Oct 21 11:30:06 <dmwit>	?src foldr
Oct 21 11:30:06 *	Rudd0^ has quit (Read error: Connection reset by peer)
Oct 21 11:30:06 <lambdabot>	foldr f z []     = z
Oct 21 11:30:06 <lambdabot>	foldr f z (x:xs) = f x (foldr f z xs)
Oct 21 11:30:07 *	Rudd0 has quit (Read error: Connection reset by peer)
Oct 21 11:30:16 <dmwit>	See? It is passed to the recursive foldr call unchanged.
Oct 21 11:30:20 <dmwit>	?src foldl'
Oct 21 11:30:20 <lambdabot>	foldl' f a []     = a
Oct 21 11:30:20 <lambdabot>	foldl' f a (x:xs) = let a' = f a x in a' `seq` foldl' f a' xs
Oct 21 11:30:23 <EvanR>	the second argument is not z, its foldr f z xs
Oct 21 11:30:24 *	efm (~efm@vpn.tummy.com) has joined
Oct 21 11:30:24 <dmwit>	^ Here, not
Oct 21 11:30:31 <EvanR>	to f
Oct 21 11:30:33 <EvanR>	not to foldr
Oct 21 11:30:43 <dmwit>	EvanR: All (recursive) calls to *foldr* see the same value in `z`.
Oct 21 11:30:45 <EvanR>	i think that might be the confusion
Oct 21 11:30:46 <dmwit>	Is what I said.
Oct 21 11:31:04 <crestfallen>	yikes
Oct 21 11:31:23 <dmwit>	Which is *different* to the way other recursive functions behave, and specifically different to the style of recursive function where I'm comfortable calling one argument an accumulator.
Oct 21 11:31:28 <EvanR>	i was thinking in terms of "being in the function" not foldr itself
Oct 21 11:31:32 <slack1256>	Is there an standard resource for learning about free theorems and how to derive them on haskell?
Oct 21 11:31:48 *	mike64 (a6461f1c@166.70.31.28) has joined
Oct 21 11:32:07 <crestfallen>	in this simple example, (+) is not returned along with the base value:
Oct 21 11:32:16 <crestfallen>	> foldr (+) 5 [1,2,3,4]
Oct 21 11:32:18 <lambdabot>	 15
Oct 21 11:32:19 *	fphilipe (~phil@81.6.34.65) has joined
Oct 21 11:32:30 <EvanR>	> foldr f 5 [1,2,3,4]
Oct 21 11:32:32 <lambdabot>	 error:
Oct 21 11:32:32 <lambdabot>	     • Ambiguous type variable ‘a0’ arising from a use of ‘show_M590353136163...
Oct 21 11:32:32 <lambdabot>	       prevents the constraint ‘(Show a0)’ from being solved.
Oct 21 11:32:41 <dmwit>	slack1256: Wadler's paper "Theorems for Free!" is quite approachable.
Oct 21 11:32:57 <slack1256>	Got it!
Oct 21 11:33:02 <EvanR>	f 1 (f 2 (f 3 (f 4 5)))
Oct 21 11:33:31 <EvanR>	so second arg is an accumulator
Oct 21 11:33:35 <mike64>	@djinn (((a->b)->b)->b) -> (a -> b)
Oct 21 11:33:35 <lambdabot>	f a b = a (\ c -> c b)
Oct 21 11:33:38 *	fizbin has quit (Ping timeout: 245 seconds)
Oct 21 11:33:44 *	mike64 has quit (Remote host closed the connection)
Oct 21 11:33:54 <EvanR>	(second arg to foldr def not)
Oct 21 11:35:49 <crestfallen>	def == definitely EvanR ?
Oct 21 11:35:53 <EvanR>	yes
Oct 21 11:36:20 <EvanR>	z is the base
Oct 21 11:36:25 <EvanR>	base case
Oct 21 11:36:44 *	vicfred has quit (Quit: Leaving)
Oct 21 11:36:47 *	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined
Oct 21 11:36:47 *	ariakenom has quit (Quit: WeeChat 2.6)
Oct 21 11:37:20 *	seedvray has quit (Ping timeout: 265 seconds)
Oct 21 11:37:28 *	efm has quit (Read error: Connection reset by peer)
Oct 21 11:38:11 *	albertus1 has quit (Ping timeout: 268 seconds)
Oct 21 11:39:08 *	efm (~efm@vpn.tummy.com) has joined
Oct 21 11:39:12 *	conal has quit (Quit: Computer has gone to sleep.)
Oct 21 11:39:32 *	shaunm1 (~shaunm@185.103.96.143) has joined
Oct 21 11:40:19 *	mike8 (a6461f1c@166.70.31.28) has joined
Oct 21 11:40:21 *	cosimone has quit (Quit: Terminated!)
Oct 21 11:40:37 <mike8>	@djinn (((a->b)->b)->b) -> (a->b)
Oct 21 11:40:37 <lambdabot>	f a b = a (\ c -> c b)
Oct 21 11:41:10 *	mike8 has quit (Remote host closed the connection)
Oct 21 11:41:23 *	conal (~conal@209.209.238.179) has joined
Oct 21 11:43:01 <literallyCrevice>	I'm looking for a custom prelude that exports generalized list functions (for example BasicPrelude's intercalate which works on monoids) and good text conversion functions (text -> ltext -> bytestring -> lbytestring). What should I look into?
Oct 21 11:43:18 <literallyCrevice>	If it doesn't have any partial functions that's a plus, but not certainly required.
Oct 21 11:43:44 <crestfallen>	thanks EvanR dmwit .. if I could go back real quick..
Oct 21 11:44:11 *	paulasdf has quit (Ping timeout: 250 seconds)
Oct 21 11:44:11 *	M0b10s has quit (Ping timeout: 250 seconds)
Oct 21 11:44:24 *	gxt has quit (Ping timeout: 260 seconds)
Oct 21 11:44:25 *	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined
Oct 21 11:44:31 <crestfallen>	so " understand all this by considering Maybe as a list with at most 1 element "
Oct 21 11:44:40 <crestfallen>	...
Oct 21 11:45:29 <EvanR>	pretty much
Oct 21 11:45:29 *	lprd_ has quit (Ping timeout: 250 seconds)
Oct 21 11:45:58 <crestfallen>	> (<$>) (foldr (+) 0) [(Just 4.5), (Just 2), (Just 3.3)]
Oct 21 11:46:00 <lambdabot>	 [4.5,2.0,3.3]
Oct 21 11:46:32 <EvanR>	> (<$>) (foldr (+) 0) [[4.5], [2], [3.3]]
Oct 21 11:46:34 <lambdabot>	 [4.5,2.0,3.3]
Oct 21 11:46:39 <MarcelineVQ>	for lists <$> is map, if that's at all clarifying
Oct 21 11:47:46 <crestfallen>	so (<$>) maps over the Maybe elements, but the (foldr (+) 0)  doesn't return an error, but it's not at all being utilized, right?
Oct 21 11:47:52 *	thelounge409 (57ac5683@gateway/web/thelounge/ip.87.172.86.131) has joined
Oct 21 11:48:05 <jle`>	> foldr (+) 0 (Just 10)
Oct 21 11:48:07 <lambdabot>	 10
Oct 21 11:48:14 <jle`>	crestfallen: foldr (+) 0 is total, it cannot return an error
Oct 21 11:48:18 *	dhil (~dhil@dhcp-90-108.inf.ed.ac.uk) has joined
Oct 21 11:48:20 <jle`>	maybe you are thinking about whether or not it typechecks?
Oct 21 11:48:22 *	wroathe has quit (Read error: Connection reset by peer)
Oct 21 11:48:24 <jle`>	> foldr (+) 0 Nothing
Oct 21 11:48:26 <lambdabot>	 0
Oct 21 11:48:26 *	toppler has quit (Ping timeout: 240 seconds)
Oct 21 11:48:43 <jle`>	crestfallen: (<$>) in your example maps over the list
Oct 21 11:48:50 *	thelounge409 has quit (Client Quit)
Oct 21 11:48:55 <jle`>	> map (foldr (+) 0) [Just 4.5, Just 2, Just 3.3, Nothing]
Oct 21 11:48:57 <lambdabot>	 [4.5,2.0,3.3,0.0]
Oct 21 11:49:28 <EvanR>	crestfallen: did you see how my example was just yours with Just 4.5 replaced with [4.5]. This is all you're doing. Sum of 1 thing
Oct 21 11:50:07 <jle`>	oh it looks like i stumbled into a long conversation
Oct 21 11:50:26 *	merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Oct 21 11:50:40 <jle`>	> sum Nothing
Oct 21 11:50:41 <lambdabot>	 0
Oct 21 11:50:43 <jle`>	> sum (Just 3)
Oct 21 11:50:43 *	Rudd0 (~Rudd0@185.189.115.103) has joined
Oct 21 11:50:45 <lambdabot>	 3
Oct 21 11:50:52 <xsperry>	> catMaybes [Just 1, Nothing, Just 2]
Oct 21 11:50:54 <lambdabot>	 [1,2]
Oct 21 11:50:56 <jle`>	> map sum [Nothing, Just 3]
Oct 21 11:50:58 <lambdabot>	 [0,3]
Oct 21 11:51:00 *	Rudd0^ (~Rudd0@185.189.115.103) has joined
Oct 21 11:51:02 <crestfallen>	yeah ok thanks ALL it is being utilized but it returns the sum of each Maybe element which is just itself
Oct 21 11:51:14 <jle`>	crestfallen: yeah, or 0 if it is Nothing
Oct 21 11:51:24 <jle`>	sum is polymorphic for all Foldable containers
Oct 21 11:51:28 <jle`>	:t sum
Oct 21 11:51:30 <lambdabot>	(Foldable t, Num a) => t a -> a
Oct 21 11:51:48 <jle`>	that's why saying things like 'the Maybe functor' is misleading unless you are actually talking about the functor properties itself
Oct 21 11:51:51 <EvanR>	we returned to the beginning of the convo. Maybe this is a good time to end it :)
Oct 21 11:52:08 <jle`>	when you do `map sum [Just x, Just y, Nothing]`, it isn't "summing over the functor values"
Oct 21 11:52:17 <jle`>	it's summing every "foldable" value
Oct 21 11:52:28 <xsperry>	I don't hear "Maybe functor" nearly as often as "Maybe monad"
Oct 21 11:52:38 <jle`>	just because you see Maybe/Nothing/Just, doesn't mean that Functor is important
Oct 21 11:52:46 <EvanR>	i want to hear about functors more often
Oct 21 11:53:03 <crestfallen>	right. simple enough.
Oct 21 11:53:15 <jle`>	'map sum' will map sum over the *foldable* elements in the list. and here we have the Maybe Foldable
Oct 21 11:53:30 <crestfallen>	you will be EvanR :)   I'm giving myself a month to fully understand them before I move on to applicative
Oct 21 11:53:34 <jle`>	note that sum works even for types that aren't Functor
Oct 21 11:53:45 <jle`>	> sum (S.fromList [1,2,3])
Oct 21 11:53:47 <lambdabot>	 6
Oct 21 11:53:55 <jle`>	(Set is not a Functor)
Oct 21 11:54:16 <jle`>	so 'functor' isn't the important concept being used here, but rather Foldable
Oct 21 11:54:23 *	Azel has quit (Quit: Azel)
Oct 21 11:55:47 <crestfallen>	copy that, thanks everyone that is deep
Oct 21 11:56:13 <EvanR>	i want to hear about haskell's functorial IO system
Oct 21 11:56:37 <EvanR>	haskell IO runs on functors
Oct 21 11:56:52 <EvanR>	hehe
Oct 21 11:57:40 *	doublex has quit (Ping timeout: 264 seconds)
Oct 21 11:58:02 *	fphilipe has quit (Ping timeout: 240 seconds)
Oct 21 11:58:24 <crestfallen>	> map (foldr f z) [Nothing, Just x]
Oct 21 11:58:26 <lambdabot>	 [z,f x z]
Oct 21 11:58:33 <dminuoso>	crestfallen: I think Applicative has a misleading signature method which somewhat contributes to its confusion.
Oct 21 11:58:35 *	chaosmasttter (~chaosmast@p200300C4A72E47010000000000000001.dip0.t-ipconnect.de) has joined
Oct 21 11:58:49 <crestfallen>	especially that interests me ^ because..
Oct 21 11:59:20 <crestfallen>	I thought to operate on Maybe at all, we would need <$>
Oct 21 11:59:39 <merijn>	crestfallen: Why?
Oct 21 11:59:45 <jle`>	yeah, that's definitely a consequence of thinking about 'maybe monad', and definitely wrong :)
Oct 21 11:59:53 <jle`>	crestfallen: you can always just pattern match
Oct 21 12:00:03 <merijn>	crestfallen: "case Just 3 of Nothing -> "foo"; Just x -> show x"
Oct 21 12:00:11 <jle`>	> map (\case Just x -> f x z; Nothing -> z) [Nothing, Just x]
Oct 21 12:00:13 <lambdabot>	 [z,f x z]
Oct 21 12:00:26 <jle`>	(<$>) is a useful function that we build on *top* of pattern matching
Oct 21 12:00:30 <dminuoso>	crestfallen: The Functor interface is merely the observation that "mapping over something with a function, changing its type along side" is something we do frequently.
Oct 21 12:00:35 *	albertus1 (~seb@x4d0cbea3.dyn.telefonica.de) has joined
Oct 21 12:00:39 <dminuoso>	crestfallen: So <$> just captures that pattern. :)
Oct 21 12:00:41 <jle`>	it isn't a primitive action, but rather a useful handy shortcut
Oct 21 12:00:44 <jle`>	over pattern matching
Oct 21 12:00:48 <xsperry>	crestfallen, do you need <$> to operate on a list?
Oct 21 12:01:04 <jle`>	do you need (==) to operate on Int?
Oct 21 12:01:16 *	knupfer has quit (Ping timeout: 264 seconds)
Oct 21 12:01:51 *	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined
Oct 21 12:01:58 <jle`>	ah sorry if that came off as dogpiling :)
Oct 21 12:02:22 <crestfallen>	geez I cannot process all that
Oct 21 12:02:24 <jle`>	actually it's funny, for a while in java, they actually forbade people from defining <$> for Maybe
Oct 21 12:02:26 <dminuoso>	crestfallen: I like to think of Applicative of actually having the shape `class Functor f => Monoidal f where (<+>) :: f a -> f b -> f (a, b); unit :: f ()` which hints that what this is actually about, is combining "effects two effects and just grabbing both results alongside"
Oct 21 12:02:35 <EvanR>	crestfallen needs some to process
Oct 21 12:02:41 <EvanR>	some time
Oct 21 12:02:54 <jle`>	Java introduced option, and people were like "hey let's write a function to map over the contents, instead of manually 'pattern matching' and handling the cases"
Oct 21 12:03:03 <jle`>	and the java people were like "no you can't do that"
Oct 21 12:03:20 <jle`>	"wait that's illegal"
Oct 21 12:03:27 *	heatsink (~heatsink@2600:1700:bef1:5e10:f1ca:43ba:7c4b:388f) has joined
Oct 21 12:03:40 <jle`>	so that would be like someone proposing to add <$> for Maybe to the standards library and people rejecting it
Oct 21 12:03:42 <EvanR>	how do java people go about stopping you from writing a function
Oct 21 12:03:50 *	knupfer (~Thunderbi@200116b824652c00f69634fffef0b45f.dip.versatel-1u1.de) has joined
Oct 21 12:03:54 <jle`>	i exaggerated some bits for my story :)
Oct 21 12:04:00 <jle`>	but it was proposed to add to the standard interface for Option
Oct 21 12:04:03 <EvanR>	ah
Oct 21 12:04:13 <EvanR>	and it was illegal?
Oct 21 12:04:13 *	wroathe (~wroathe@23-30-253-203-static.hfc.comcastbusiness.net) has joined
Oct 21 12:04:15 <jle`>	so the moral of the story is that we are very lucky to even have <$> at all
Oct 21 12:04:20 <jle`>	for Maybe
Oct 21 12:04:25 <jle`>	a lot of people have to make do without it
Oct 21 12:04:27 <merijn>	EvanR: You need to step up your meme game
Oct 21 12:04:36 *	doublex (~doublex@2601:542:c480:6ee0:604d:2b77:50e6:a474) has joined
Oct 21 12:04:41 <crestfallen>	 > map (\case Just x -> f x z; Nothing -> z) [Nothing, Just x
Oct 21 12:04:47 <crestfallen>	I'm still working on this
Oct 21 12:04:50 <EvanR>	oh god... are there memes around
Oct 21 12:04:55 <merijn>	EvanR: https://knowyourmeme.com/memes/wait-thats-illegal
Oct 21 12:04:57 *	vpeurala_ has quit (Ping timeout: 246 seconds)
Oct 21 12:04:59 <crestfallen>	> map (\case Just x -> f x z; Nothing -> z) [Nothing, Just x
Oct 21 12:05:00 <lambdabot>	 <hint>:1:59: error:
Oct 21 12:05:00 <merijn>	EvanR: Memes are everywhere, man
Oct 21 12:05:01 <lambdabot>	     parse error (possibly incorrect indentation or mismatched brackets)
Oct 21 12:05:06 <dminuoso>	jle`: I think the point is not even to have <$> for Maybe, but rather a polymorphic interface such that Maybe is an acceptable choice for Functor.
Oct 21 12:05:16 <crestfallen>	> map (\case Just x -> f x z; Nothing -> z) [Nothing, Just x]
Oct 21 12:05:17 <lambdabot>	 [z,f x z]
Oct 21 12:05:21 <dminuoso>	Because merely mapping over it with fmap is relatively boring, at the end.
Oct 21 12:05:22 *	cr3 has quit (Quit: leaving)
Oct 21 12:05:24 <merijn>	EvanR: Just look: http://lambdacats.org
Oct 21 12:05:27 <jle`>	dminuoso: the debate was actually against having a mapping function at all for Maybe
Oct 21 12:05:28 <merijn>	aww
Oct 21 12:05:32 <dminuoso>	jle`: really. :S
Oct 21 12:05:36 <merijn>	EvanR: Looks like someone took it down :(
Oct 21 12:05:49 <jle`>	yeah, the argument was "we don't want people to start saying that Maybe is a functor. and then too much jargon."
Oct 21 12:06:00 <jle`>	"prevent elitist FP jargon from entering java"
Oct 21 12:06:17 <EvanR>	i have been told that using a functional pattern like that was stupid because of the overhead
Oct 21 12:06:36 <EvanR>	use an if then else instead like everyone else, and it's faster
Oct 21 12:06:52 <dminuoso>	jle`: Amusingly it wouldn't even be elitists entering Java. Those masochist people actually embracing the idea of having small functional tools on the JVM are already off to Scala, so they shouldn't be worried!
Oct 21 12:07:38 <dignissimus>	I have a list of moves and also have function that can map these moves to values, I want to get the move with the largest value, my first idea was `head . sortBy valueFunction`, is that ok?
Oct 21 12:07:39 <jle`>	there was actually a solid technical reason that i am omitting for the sake of a cheeky story
Oct 21 12:07:54 <crestfallen>	One day I will use elistist FP jargon :)
Oct 21 12:08:01 *	heatsink has quit (Ping timeout: 250 seconds)
Oct 21 12:08:06 <EvanR>	jle`: oh good, for a minute i thought i was learning something true about java :)
Oct 21 12:08:08 <jle`>	dignissimus: just be careful of getting an empty list
Oct 21 12:08:18 *	LKoen has quit (Remote host closed the connection)
Oct 21 12:08:28 <jle`>	i mean, from an elitist FP jargon standpoint, there is a reason to not have an fmap for java Option
Oct 21 12:08:36 <jle`>	it's because Java Option cannot hold null
Oct 21 12:08:36 <dminuoso>	jle`: Something to do with "higher kinded" polymorphic functions being impossible?
Oct 21 12:08:54 <jle`>	so fmap (f . g) = fmap f . fmap g won't hold if g returns null
Oct 21 12:09:17 <EvanR>	you can say you're writing "morally correct" java
Oct 21 12:09:18 <dminuoso>	See, non-lawful Functor, all elitist FP would stay far away from Java. 
Oct 21 12:09:22 <dminuoso>	Job done.
Oct 21 12:09:41 *	LKoen (~LKoen@81.255.219.130) has joined
Oct 21 12:09:58 <crestfallen>	jle`, so the pattern matching, it's like it's forced since it doesn't use <$> .. because it doesn't need to. but I guess it doesn't need to ever.
Oct 21 12:10:05 *	comerijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Oct 21 12:10:52 <jle`>	crestfallen: yeah, you don't ever *need* Functor/Applicative/Monad/Foldable/Traversable/Monoid/Semigroup/Eq/Ord/etc. ever for Maybe, because you can always just pattern match
Oct 21 12:11:16 *	Lycurgus (~niemand@98.4.103.219) has joined
Oct 21 12:11:38 <jle`>	(with exceptions for the cases where you feed a Maybe to a function that is polymorphic on all instances of a typeclass, like using 'sort' on a list of maybes)
Oct 21 12:12:18 *	slack1256 has quit (Remote host closed the connection)
Oct 21 12:12:26 *	turab has quit (Ping timeout: 240 seconds)
Oct 21 12:13:02 *	turab (~turab@2001:18e8:2:28b7:f000::1eed) has joined
Oct 21 12:13:14 *	carlomagno has quit (Ping timeout: 240 seconds)
Oct 21 12:13:38 <jle`>	it just makes it convenient to be able to write `x == y`, instead of case x of Nothing -> case y of {Nothing -> True; Just _ -> False}; Just x' -> case y of {Nothing -> False; Just y' -> x == y}
Oct 21 12:13:57 <jle`>	* x' == y' at the end
Oct 21 12:14:00 *	carlomagno (~carlomagn@inet-hqmc06-o.oracle.com) has joined
Oct 21 12:14:15 *	cosimone (~cosimone@2001:b07:ae5:db26:9520:741c:a5e9:2223) has joined
Oct 21 12:15:11 *	comerijn has quit (Ping timeout: 268 seconds)
Oct 21 12:15:48 <xsperry>	> Just 10 == Just 10   -- :)
Oct 21 12:15:49 <lambdabot>	 True
Oct 21 12:16:30 <crestfallen>	ok thanks again. I'm going to clean my venetian blinds now :)
Oct 21 12:17:09 *	replay (~textual@pdpc/supporter/student/replay) has joined
Oct 21 12:18:25 *	carlomagno has quit (Ping timeout: 250 seconds)
Oct 21 12:18:50 *	gxt (~gxt@gateway/tor-sasl/gxt) has joined
Oct 21 12:19:02 *	fphilipe (~phil@81.6.34.65) has joined
Oct 21 12:19:05 *	gwern has quit (Remote host closed the connection)
Oct 21 12:19:43 *	doublex has quit (Ping timeout: 250 seconds)
Oct 21 12:20:44 *	dhil has quit (Ping timeout: 268 seconds)
Oct 21 12:20:57 *	toppler has quit (Ping timeout: 240 seconds)
Oct 21 12:21:23 *	slack1256 (~slack1256@186-78-103-35.baf.movistar.cl) has joined
Oct 21 12:22:00 <dmwit>	jle`: Your code also works with `x == y` at the end. =P
Oct 21 12:22:36 *	carlomagno (~carlomagn@inet-hqmc06-o.oracle.com) has joined
Oct 21 12:22:44 *	fraktor (~walt@walter-desktop.unl.edu) has joined
Oct 21 12:23:15 <fraktor>	So I need to read some configuration files that will have nested config sections.  Is there a way to define a single that would include that?
Oct 21 12:23:38 <dmwit>	I think you accidentally a word.
Oct 21 12:24:04 <dmwit>	But you might like the config-value package.
Oct 21 12:24:18 <fraktor>	A single type.  That's what I accidentally'd
Oct 21 12:24:45 <dmwit>	data Config = Atom Int | Nested [Config] -- e.g.
Oct 21 12:24:59 <fraktor>	Oh yeah, I forgot about algebraic data types.
Oct 21 12:25:40 <fraktor>	But since it would be kind of an arbitrary nested value, how bad is it to make a function that looks something up based on a string like "toplevel.subsection.value"?
Oct 21 12:25:40 *	efm has quit (Ping timeout: 268 seconds)
Oct 21 12:27:29 <merijn>	Sounds like "how bad is it to reinvent lens from first principles" ;)
Oct 21 12:27:41 <merijn>	To which the answer varies based on who you ask ;)
Oct 21 12:27:57 *	fphilipe has quit (Ping timeout: 240 seconds)
Oct 21 12:28:29 *	efm (~efm@vpn.tummy.com) has joined
Oct 21 12:28:55 *	danso (~dan@162.246.218.202) has joined
Oct 21 12:29:02 *	conal has quit (Ping timeout: 276 seconds)
Oct 21 12:29:54 <fraktor>	I don't understand lenses, so maybe they're just what I need
Oct 21 12:30:08 *	andreas31 has quit (Ping timeout: 260 seconds)
Oct 21 12:30:25 *	lprd_ (~jon@2a01cb0404945e0180aa6f56696321e6.ipv6.abo.wanadoo.fr) has joined
Oct 21 12:31:37 Python interface unloaded
**** ENDING LOGGING AT Mon Oct 21 12:31:37 2019

**** BEGIN LOGGING AT Tue Nov 12 15:37:42 2019

Nov 12 15:37:42 *	Now talking on #haskell
Nov 12 15:37:42 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Nov 12 15:37:42 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Nov 12 15:37:42 *	Channel #haskell url: http://www.haskell.org/
Nov 12 15:37:47 *	Guest_21 (a8967046@campus-112-070.ucdavis.edu) has joined
Nov 12 15:37:52 <hpc>	but having the tool makes you think about exactly what goes into that modularity
Nov 12 15:37:57 *	ClaudiusMaximus (~claude@84.251.90.146.dyn.plus.net) has joined
Nov 12 15:38:10 *	scde_ (~scde@p5B2675DE.dip0.t-ipconnect.de) has joined
Nov 12 15:38:18 <refusenick>	That seems like what I'm aiming for (using the computer to check parts of my work I'm not sure about). Maybe I will check out Coq.
Nov 12 15:38:25 <hpc>	like every module has two wires for voltage, etc, etc
Nov 12 15:38:30 <Guest_21>	how would I  add path for ghci
Nov 12 15:39:01 <hpc>	a theorem proving tool teaches you how to think so you write good propositions, such that proving them is useful for the rest of your program
Nov 12 15:39:07 *	scde_ has quit (Remote host closed the connection)
Nov 12 15:39:42 <crestfallen>	https://paste.debian.net/1115978/  hi I was wondering under 'comments' why (return 'X') has that type on line 16, whereas in ghci the type is different (as shown on line 8).
Nov 12 15:40:00 <hpc>	eventually you get in the habit of thinking that way outside the tool, which is sometimes as valuable as having the tool in the first place
Nov 12 15:40:32 <refusenick>	Thanks for the tips. I just realized I need to get back to work.
Nov 12 15:40:54 *	scde_ (~scde@p5B2675DE.dip0.t-ipconnect.de) has joined
Nov 12 15:41:14 *	scde__ (~scde@p5B2675DE.dip0.t-ipconnect.de) has joined
Nov 12 15:41:56 <crestfallen>	btw those comments are from haskellwiki
Nov 12 15:42:11 <ChaiTRex>	crestfallen: It looks like you just filled in the m type variable from 8 with (State Int) down in 16.
Nov 12 15:42:17 *	novum has quit (Quit: :xa)
Nov 12 15:42:24 *	Thra11_ has quit (Ping timeout: 246 seconds)
Nov 12 15:42:58 <crestfallen>	filled in? not sure I follow ChaiTRex 
Nov 12 15:43:24 <ChaiTRex>	crestfallen: Yeah, Monad m => m Char can have m filled in with a monad.
Nov 12 15:43:35 *	machinedgod (~machinedg@87.116.182.151) has joined
Nov 12 15:43:37 <ChaiTRex>	crestfallen: So, it could be used as Maybe Char, since Maybe is a monad.
Nov 12 15:43:46 <ChaiTRex>	crestfallen: It could be IO Char, since IO is a monad.
Nov 12 15:43:56 <ChaiTRex>	crestfallen: State Int appears to be a monad as well.
Nov 12 15:44:25 <ChaiTRex>	crestfallen: So State Int Char is the same as Monad m => m Char with m filled in with (State Int).
Nov 12 15:44:50 *	lprd_ has quit (Ping timeout: 276 seconds)
Nov 12 15:45:13 *	boogiewoogie has quit (Remote host closed the connection)
Nov 12 15:45:55 <crestfallen>	But isn't it that Int is the element type of the monad State? ChaiTRex 
Nov 12 15:46:26 *	davama (~davama@c-69-141-208-198.hsd1.nj.comcast.net) has joined
Nov 12 15:46:40 *	davama has quit (Remote host closed the connection)
Nov 12 15:46:54 <crestfallen>	i.e. Int is separate from the type of Monad, State?
Nov 12 15:47:28 *	boogiewoogie (~booglewoo@2a02:908:d41:8bc0:8c3c:9a1b:8c3c:67cf) has joined
Nov 12 15:47:39 *	jules000 (~jules000@ip565b06dd.direct-adsl.nl) has joined
Nov 12 15:47:45 <ChaiTRex>	crestfallen: No, State by itself isn't a monad.
Nov 12 15:47:47 *	scde__ has quit (Quit: Leaving)
Nov 12 15:48:02 *	merijn has quit (Ping timeout: 240 seconds)
Nov 12 15:48:14 *	scde_ has quit (Quit: Quit)
Nov 12 15:48:57 *	jgt1 has quit (Ping timeout: 240 seconds)
Nov 12 15:49:12 <crestfallen>	ok. so State needs to include something indicating change, in this case Int used as a counter. iiuc  ChaiTRex 
Nov 12 15:49:49 *	stefan (~cri@42dots.de) has joined
Nov 12 15:50:28 <ChaiTRex>	crestfallen: The type right after State is kind of like further inside the monad than the type the monad stores in the normal sense.
Nov 12 15:50:30 *	owlscientist has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
Nov 12 15:50:50 <ChaiTRex>	crestfallen: The type the monad stores in the normal sense is much more transitory.
Nov 12 15:51:11 *	lucasb has quit (Quit: Connection closed for inactivity)
Nov 12 15:51:22 <ChaiTRex>	crestfallen: You have to use special commands to get the Int out.
Nov 12 15:51:39 <ChaiTRex>	crestfallen: It's stuck deep in there.
Nov 12 15:52:03 *	owlscientist (~owlscient@sburn/devel/name) has joined
Nov 12 15:52:03 *	owlscientist has quit (Client Quit)
Nov 12 15:52:04 <ChaiTRex>	crestfallen: But there's also this temporary sort of value that it's storing in the normal sense, which is the second type after State
Nov 12 15:52:28 <ChaiTRex>	crestfallen: Monads deal with the more temporary sort of value.
Nov 12 15:52:37 *	t7 has quit (Quit: Konversation terminated!)
Nov 12 15:52:39 *	owlscientist (~owlscient@sburn/devel/name) has joined
Nov 12 15:52:49 *	owlscientist has quit (Client Quit)
Nov 12 15:53:46 <crestfallen>	thank you I will need to have that clarified I think
Nov 12 15:53:56 <ChaiTRex>	crestfallen: It's like IO has special commands to get the time of day.
Nov 12 15:54:09 <ChaiTRex>	crestfallen: But the type of IO isn't IO TimeOfDay or whatever.
Nov 12 15:54:20 <ChaiTRex>	crestfallen: It's the immediate value you're working with.
Nov 12 15:54:33 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 12 15:54:47 <ChaiTRex>	crestfallen: Similarly, State Int has a special command to get an Int stored inside of it back out, but that's not the immediate value you're working with, which is a Char.
Nov 12 15:55:06 *	Guest_21 has quit (Remote host closed the connection)
Nov 12 15:55:47 *	owlscientist (~owlscient@sburn/devel/name) has joined
Nov 12 15:55:54 *	owlscientist has quit (Client Quit)
Nov 12 15:55:57 *	carlomagno (~carlomagn@inet-hqmc01-o.oracle.com) has joined
Nov 12 15:56:19 *	Thra11_ (Thra11@gateway/vpn/protonvpn/thra11) has joined
Nov 12 15:56:29 *	owlscientist (~owlscient@sburn/devel/name) has joined
Nov 12 15:56:40 *	owlscientist has quit (Client Quit)
Nov 12 15:57:26 <crestfallen>	so can I say that a monad has metadata that makes it distinct from a functor? ChaiTRex 
Nov 12 15:57:35 *	reallymemorable has quit (Quit: reallymemorable)
Nov 12 15:57:56 *	jules000 has quit (Remote host closed the connection)
Nov 12 15:59:06 *	stzsch has quit (Ping timeout: 252 seconds)
Nov 12 15:59:15 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 12 16:00:01 <crestfallen>	ie the time of day would be metadata that coincides with the counter changing from 1 to 2, perhaps
Nov 12 16:00:01 *	Chefe has quit ()
Nov 12 16:00:20 <ChaiTRex>	crestfallen: Some do. IO can retrieve some extra data. Similarly, State Int can retrieve an Int.
Nov 12 16:00:45 <ChaiTRex>	crestfallen: IO has a lot of things it can get, State Int tells you you can get an Int and that's it.
Nov 12 16:01:01 <koz_>	It also tells you it won't query any databases, write any files, or rm -rf / you.
Nov 12 16:01:05 <ChaiTRex>	crestfallen: But those are part of the monad type's m part, not its a.
Nov 12 16:01:13 <koz_>	Once you have IO, you have _anything_.
Nov 12 16:01:45 *	heatsink (~heatsink@2600:1700:bef1:5e10:29b4:7b69:622a:a65c) has joined
Nov 12 16:02:45 *	stzsch (~no@2804:14d:4cd1:823f:5604:a6ff:fe8e:d858) has joined
Nov 12 16:03:15 *	jules000 (~jules000@ip565b06dd.direct-adsl.nl) has joined
Nov 12 16:04:07 *	cosimone has quit (Ping timeout: 250 seconds)
Nov 12 16:04:34 *	Aquazi has quit (Quit: Connection closed for inactivity)
Nov 12 16:04:59 *	robogoat has quit (Ping timeout: 276 seconds)
Nov 12 16:05:32 *	jud (~jud@cpe-70-113-106-222.austin.res.rr.com) has joined
Nov 12 16:05:33 <crestfallen>	what won't query databases, you mean State Int right?
Nov 12 16:06:01 <crestfallen>	koz_, ChaiTRex 
Nov 12 16:06:08 *	heatsink has quit (Ping timeout: 245 seconds)
Nov 12 16:06:34 *	scde has quit (Ping timeout: 265 seconds)
Nov 12 16:07:17 <ChaiTRex>	crestfallen: Yes, that's right.
Nov 12 16:07:17 <koz_>	crestfallen: Yes.
Nov 12 16:07:25 <koz_>	If you have 'IO a', it can do basically whatever the hell.
Nov 12 16:07:38 <koz_>	Query databases, rm -rf / your hard drive, launch nukes, etc etc etc.
Nov 12 16:07:56 *	harai has quit (Ping timeout: 260 seconds)
Nov 12 16:08:04 <koz_>	If you have 'State s a', you have access to some state of type s that you can modify or read and _nothing else_.
Nov 12 16:09:02 *	jathan has quit (Quit: WeeChat 2.3)
Nov 12 16:09:48 *	harai (~harai@gateway/tor-sasl/harai) has joined
Nov 12 16:10:05 <crestfallen>	thanks a lot. so if it's just an Int it's a counter, it couldn't be the result of function application
Nov 12 16:10:32 <koz_>	crestfallen: I don't understand what you mean.
Nov 12 16:10:58 <koz_>	If I have a State Int a, it describes a computation which produces an a, that, in its course, has access to a readable, modifiable Int value.
Nov 12 16:11:17 <koz_>	State s a can be thought of as a way of saying s -> (a, s), or, in our case, Int -> (a, Int)
Nov 12 16:11:28 <koz_>	Until you _provide_ an Int to 'get things going', it's just a function.
Nov 12 16:11:49 <crestfallen>	state changes as the result of function application potentially, but isn't the result itself.
Nov 12 16:11:59 <koz_>	crestfallen: It can be, depending on how you run it.
Nov 12 16:12:03 <koz_>	:t runState
Nov 12 16:12:05 <lambdabot>	State s a -> s -> (a, s)
Nov 12 16:12:08 <koz_>	^ produces both
Nov 12 16:12:10 <koz_>	:t evalState
Nov 12 16:12:11 <lambdabot>	State s a -> s -> a
Nov 12 16:12:16 <koz_>	^ produces only the 'result'
Nov 12 16:12:19 <koz_>	:t execState
Nov 12 16:12:20 <lambdabot>	State s a -> s -> s
Nov 12 16:12:26 <koz_>	^ produces only the 'final state'
Nov 12 16:13:07 <crestfallen>	that's interesting, yeah I was thinking vaguely along the correct lines. thanks kindly koz_ ChaiTRex 
Nov 12 16:13:13 <koz_>	crestfallen: No worries.
Nov 12 16:14:05 <koz_>	:t even
Nov 12 16:14:06 *	boogiewoogie has quit (Remote host closed the connection)
Nov 12 16:14:06 <lambdabot>	Integral a => a -> Bool
Nov 12 16:14:13 *	spew has quit (Quit: Connection closed for inactivity)
Nov 12 16:14:21 <Axman6>	can you even?
Nov 12 16:14:25 *	lprd_ (~jon@2a01cb0404945e0199c3e305a15427bc.ipv6.abo.wanadoo.fr) has joined
Nov 12 16:15:07 <jle`>	:t not . even
Nov 12 16:15:09 <lambdabot>	Integral a => a -> Bool
Nov 12 16:16:12 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 12 16:16:35 *	philzook (~philzook@pool-71-117-174-201.prvdri.fios.verizon.net) has joined
Nov 12 16:17:00 *	o1lo01ol1o (~o1lo01ol1@cpe-74-72-45-166.nyc.res.rr.com) has joined
Nov 12 16:17:48 *	chaosmasttter has quit (Ping timeout: 252 seconds)
Nov 12 16:17:55 <pie_>	im jealous of people having actual teams to figure stuff out http://felixmulder.com/writing/2019/10/05/Haskell-in-Production.html
Nov 12 16:18:10 <pie_>	bootstrapping by yourself is really hard :/
Nov 12 16:18:23 *	jules000 has quit (Remote host closed the connection)
Nov 12 16:18:27 *	stzsch has quit (Ping timeout: 246 seconds)
Nov 12 16:18:44 <ChaiTRex>	crestfallen: You're welcome.
Nov 12 16:20:31 *	jules000 (~jules000@ip565b06dd.direct-adsl.nl) has joined
Nov 12 16:20:45 *	Deide has quit (Quit: Seeee yaaaa)
Nov 12 16:20:57 *	jao has quit (Ping timeout: 240 seconds)
Nov 12 16:21:41 *	o1lo01ol1o has quit (Ping timeout: 268 seconds)
Nov 12 16:22:29 *	boogiewoogie (~booglewoo@2a02:908:d41:8bc0:209d:dc33:a342:949) has joined
Nov 12 16:23:27 *	jao (~jao@pdpc/supporter/professional/jao) has joined
Nov 12 16:26:02 *	machinedgod has quit (Ping timeout: 240 seconds)
Nov 12 16:26:24 *	philzook has quit (Remote host closed the connection)
Nov 12 16:26:57 *	jules000 has quit (Remote host closed the connection)
Nov 12 16:28:37 *	dansho has quit (Ping timeout: 240 seconds)
Nov 12 16:29:14 *	zebra (~zebra2@d28-23-66-253.dim.wideopenwest.com) has joined
Nov 12 16:29:20 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 12 16:29:39 *	lprd_ has quit (Ping timeout: 246 seconds)
Nov 12 16:29:59 *	stzsch (~no@2804:14d:4cd1:823f:5604:a6ff:fe8e:d858) has joined
Nov 12 16:31:06 *	ravenousmoose (~ravenousm@ptr-cud5aqg5mwnp5zv7fzk.18120a2.ip6.access.telenet.be) has joined
Nov 12 16:31:33 *	ddellacosta has quit (Ping timeout: 268 seconds)
Nov 12 16:32:13 *	pipqw (~pqzx@unaffiliated/pqzx) has joined
Nov 12 16:32:19 *	hackage shake-ext 3.1.1.0 - Helper functions for linting with shake  https://hackage.haskell.org/package/shake-ext-3.1.1.0 (vmchale)
Nov 12 16:32:36 *	machinedgod (~machinedg@87.116.178.240) has joined
Nov 12 16:33:36 *	phreedom has quit (Ping timeout: 260 seconds)
Nov 12 16:33:59 *	phreedom (~quassel@gateway/tor-sasl/phreedom) has joined
Nov 12 16:35:24 *	ravenousmoose has quit (Ping timeout: 252 seconds)
Nov 12 16:38:28 *	LCRERGO (~lucas@186.209.70.182) has joined
Nov 12 16:39:47 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 12 16:39:49 *	hackage gdp 0.0.3.0 - Reason about invariants and preconditions with ghosts of departed proofs.  https://hackage.haskell.org/package/gdp-0.0.3.0 (mnoonan)
Nov 12 16:43:59 *	machinedgod has quit (Ping timeout: 276 seconds)
Nov 12 16:44:18 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 12 16:44:45 *	Sgeo_ has quit (Read error: Connection reset by peer)
Nov 12 16:44:50 *	wroathe has quit (Read error: Connection reset by peer)
Nov 12 16:46:21 *	jluttine has quit (Ping timeout: 268 seconds)
Nov 12 16:46:44 *	testy has quit (Quit: Konversation terminated!)
Nov 12 16:47:21 *	phoenixlzx1 (~phoenixlz@172.83.40.52) has joined
Nov 12 16:47:50 *	Sgeo (~Sgeo@ool-18b982ad.dyn.optonline.net) has joined
Nov 12 16:48:08 *	fendor has quit (Quit: Leaving)
Nov 12 16:48:49 *	CrazyPython (~crazypyth@71-135-5-88.lightspeed.rlghnc.sbcglobal.net) has joined
Nov 12 16:49:19 *	hackage ats-pkg 3.3.0.5 - A build tool for ATS  https://hackage.haskell.org/package/ats-pkg-3.3.0.5 (vmchale)
Nov 12 16:50:03 *	RusAlex has quit (Ping timeout: 240 seconds)
Nov 12 16:50:30 *	jud^ (~jud@cpe-70-113-106-222.austin.res.rr.com) has joined
Nov 12 16:50:32 <jackdk>	lambdabot: that's odd
Nov 12 16:50:48 *	jud^ has quit (Read error: Connection reset by peer)
Nov 12 16:51:52 *	RusAlex (~Chel@unaffiliated/rusalex) has joined
Nov 12 16:53:37 *	acertain- (~acertainf@159.203.132.140) has joined
Nov 12 16:54:50 *	Lycurgus (~quassel@98.4.103.219) has joined
Nov 12 16:57:25 *	acertain- has quit (Quit: ZNC - http://znc.in)
Nov 12 16:57:46 *	acertain- (~acertain@unaffiliated/fread2281) has joined
Nov 12 16:58:45 *	pera has quit (Quit: leaving)
Nov 12 16:58:57 *	acertain- has quit (Client Quit)
Nov 12 16:59:19 *	acertaio (~acertain@unaffiliated/fread2281) has joined
Nov 12 17:00:24 *	acertaio is now known as acertain
Nov 12 17:01:09 *	lagothrix has quit (Ping timeout: 268 seconds)
Nov 12 17:01:40 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Nov 12 17:02:38 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Nov 12 17:02:53 *	acertain has quit (Client Quit)
Nov 12 17:03:02 *	heatsink (~heatsink@2600:1700:bef1:5e10:29b4:7b69:622a:a65c) has joined
Nov 12 17:03:06 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 12 17:05:04 *	acertain (~acertain@unaffiliated/fread2281) has joined
Nov 12 17:07:18 *	heatsink has quit (Ping timeout: 252 seconds)
Nov 12 17:07:27 *	olle has quit (Ping timeout: 246 seconds)
Nov 12 17:09:19 *	olle (~olle@i577BC841.versanet.de) has joined
Nov 12 17:09:54 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 12 17:09:56 *	Wedamm has quit (Quit: Leaving.)
Nov 12 17:10:02 <jackdk>	I have vague recollections about a project that let you write tests to ensure that rewrite rules fired. Was it a fever dream, or does someone else know what I'm talking about? My search-fu is failing.
Nov 12 17:10:33 <jusss>	what is turing-complete?
Nov 12 17:11:54 *	nbloomf (~nbloomf@2600:1700:83e0:1f40:85f8:bce8:e79d:4726) has joined
Nov 12 17:13:16 *	lagothrix has quit (Ping timeout: 265 seconds)
Nov 12 17:14:08 <alexfmpe[m]>	jackdk: maybe http://hackage.haskell.org/package/inspection-testing ?
Nov 12 17:14:32 *	carldd has quit (Ping timeout: 276 seconds)
Nov 12 17:15:43 <jackdk>	potentially... I'll have a dig, thanks alexfmpe[m] 
Nov 12 17:16:10 *	tabemann (~tabemann@rrcs-162-155-170-75.central.biz.rr.com) has joined
Nov 12 17:16:37 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Nov 12 17:17:08 *	refusenick has quit (Ping timeout: 265 seconds)
Nov 12 17:17:30 *	o1lo01ol1o (~o1lo01ol1@cpe-74-72-45-166.nyc.res.rr.com) has joined
Nov 12 17:17:54 *	conal has quit (Quit: Computer has gone to sleep.)
Nov 12 17:18:09 *	vimto (~vimto@unaffiliated/vimto) has joined
Nov 12 17:19:46 *	conal (~conal@107.181.166.148) has joined
Nov 12 17:20:16 *	zebra has quit (Ping timeout: 268 seconds)
Nov 12 17:20:57 *	[itchyjunk] has quit (Quit: Leaving)
Nov 12 17:21:58 *	o1lo01ol1o has quit (Ping timeout: 252 seconds)
Nov 12 17:24:34 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 12 17:26:28 <crestfallen>	one more thing about this paste: what is Primitives referring to on line 12 ? I read about primitives in ghci docs but they are beyond me   https://paste.debian.net/1115978/ 
Nov 12 17:26:32 *	vimto has quit (Quit: WeeChat 1.4)
Nov 12 17:28:13 *	CrazyPython has quit (Read error: Connection reset by peer)
Nov 12 17:28:24 *	vimto (~vimto@unaffiliated/vimto) has joined
Nov 12 17:28:50 <Lycurgus>	primitives, in this case, are irreducible actions defined in terms of other irreducible actions
Nov 12 17:29:24 *	lemonpepper24 (lemonpeppe@gateway/vpn/privateinternetaccess/lemonpepper24) has joined
Nov 12 17:29:29 <Lycurgus>	in a more legitimate case the distinction would be clearer
Nov 12 17:30:02 <Lycurgus>	eg, the ghci machine defined in terms of llvm code
Nov 12 17:31:20 *	vimto has quit (Client Quit)
Nov 12 17:31:23 <electricityZZZZ>	so what does it mean for software to be "written in" a language
Nov 12 17:31:30 *	Marc0F3 (~marcofe@185.61.186.159) has joined
Nov 12 17:31:32 <Lycurgus>	the root analogy is real machine instruction sets which are defined in terms of bit ops on a (typically) von neuman machine
Nov 12 17:31:41 *	xff0x has quit (Quit: xff0x)
Nov 12 17:31:52 *	vimto (~vimto@unaffiliated/vimto) has joined
Nov 12 17:31:55 <crestfallen>	Lycurgus, beyond me.. sorry
Nov 12 17:32:06 <Lycurgus>	i.e. circuits implementing those bit ops
Nov 12 17:33:10 <Lycurgus>	it's also a sneering epithet used by the Emperor in the Empire Strikes Back
Nov 12 17:33:51 <Lycurgus>	'primitves on the forest moon of Endor'
Nov 12 17:34:20 *	refusenick (~user@205.155.225.252) has joined
Nov 12 17:34:48 *	Azel (~Thunderbi@ppp-115-87-105-247.revip4.asianet.co.th) has joined
Nov 12 17:34:51 *	pfurla (~pfurla@ec2-18-208-170-161.compute-1.amazonaws.com) has joined
Nov 12 17:36:02 <Lycurgus>	*ghc
Nov 12 17:37:22 *	MarcelineVQ (~anja@167.88.134.190) has joined
Nov 12 17:38:00 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 12 17:42:22 *	pfurla_ (~pfurla@ool-182ed2e2.dyn.optonline.net) has joined
Nov 12 17:42:28 *	mounty has quit (Ping timeout: 268 seconds)
Nov 12 17:42:51 *	mounty (~mounty@d122-109-45-84.per802.wa.optusnet.com.au) has joined
Nov 12 17:43:01 *	carldd (~carldd@90-224-49-113-no56.tbcn.telia.com) has joined
Nov 12 17:43:08 *	notzmv (~zmv@unaffiliated/zmv) has joined
Nov 12 17:43:54 *	merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Nov 12 17:43:56 *	boogiewoogie has quit (Remote host closed the connection)
Nov 12 17:45:05 *	jeltsch has quit (Ping timeout: 250 seconds)
Nov 12 17:45:39 *	pfurla has quit (Ping timeout: 265 seconds)
Nov 12 17:46:12 *	Lost_Walrus_Rack (~Thunderbi@2601:542:4100:9320::65e0) has joined
Nov 12 17:46:34 *	Lost_Walrus_Rack has quit (Client Quit)
Nov 12 17:48:27 *	theorbtwo has quit (Remote host closed the connection)
Nov 12 17:48:42 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 12 17:48:42 *	wildtrees has quit (Quit: Leaving)
Nov 12 17:48:44 *	theorbtwo (~theorb@cpc81860-swin19-2-0-cust166.3-1.cable.virginm.net) has joined
Nov 12 17:49:53 *	subttle has quit (Quit: leaving)
Nov 12 17:51:07 *	Azel has quit (Quit: Azel)
Nov 12 17:53:38 *	Anthaas has quit (Ping timeout: 240 seconds)
Nov 12 17:53:43 *	mossless (~Thunderbi@137.132.213.208) has joined
Nov 12 17:54:36 *	Anthaas (~Anthaas@unaffiliated/anthaas) has joined
Nov 12 17:56:42 *	jluttine (~jluttine@109.204.147.177) has joined
Nov 12 17:57:20 <refusenick>	I don't understand from the Stack docs - how do I upgrade all of my extra-deps to their latest versions?
Nov 12 17:57:58 *	elfets has quit (Quit: Leaving)
Nov 12 17:58:00 *	urodna has quit (Quit: urodna)
Nov 12 17:58:08 *	nineonine has quit (Remote host closed the connection)
Nov 12 17:59:30 <MarcelineVQ>	type in the versions you want, or delete them entirely and stack will reccomend the latest versions that work with your other dependencies in your snapshot
Nov 12 18:01:30 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 12 18:01:32 <refusenick>	The docs say "stack remove" is deprecated. What do?
Nov 12 18:01:38 *	replay has quit (Quit: Textual IRC Client: www.textualapp.com)
Nov 12 18:01:54 <MarcelineVQ>	dunno never heard of it
Nov 12 18:02:05 <refusenick>	err, "uninstall" is deprecated.
Nov 12 18:02:46 <refusenick>	is https://stackoverflow.com/questions/38636436/how-to-uninstall-a-haskell-package-installed-with-stack still current?
Nov 12 18:03:06 *	ClaudiusMaximus has quit (Quit: ...zzzZZZ)
Nov 12 18:03:21 *	sword865 (uid208942@gateway/web/irccloud.com/x-jofjgcpmyrihxnan) has joined
Nov 12 18:03:27 *	Marc0F3 has quit (Read error: Connection reset by peer)
Nov 12 18:04:30 *	jluttine has quit (Ping timeout: 265 seconds)
Nov 12 18:05:35 <MarcelineVQ>	seems suspect, you shouldn't need to mess with ghc-pkg. rather if you want a specific thing gone you'd go to ~/.stack/snapshots and find the thing you want to get rid of
Nov 12 18:06:20 *	turab has quit (Ping timeout: 252 seconds)
Nov 12 18:06:25 <refusenick>	just "rm" it?
Nov 12 18:06:59 <MarcelineVQ>	If you need it gone yeah, is there a reason you want to do that aside from saving space?
Nov 12 18:07:10 *	mpiechotka (~mpiechotk@107-203-255-70.lightspeed.sntcca.sbcglobal.net) has joined
Nov 12 18:07:18 <refusenick>	I want to update some packages to the latest version in extra-deps
Nov 12 18:07:29 <refusenick>	I'm new to Haskell.
Nov 12 18:07:38 *	jb55 has quit (Remote host closed the connection)
Nov 12 18:07:41 <MarcelineVQ>	rming installed things won't be related to that
Nov 12 18:08:01 *	jb55 (~jb55@gateway/tor-sasl/jb55) has joined
Nov 12 18:08:05 <refusenick>	Then how do I delete the package and reinstall its latest version?
Nov 12 18:08:21 <MarcelineVQ>	If you want the latest versions in your extra-deps, you'd type the version number of the latest version in your extra-deps
Nov 12 18:08:37 <refusenick>	It says not to edit the global stack.yaml though, doesn't it?
Nov 12 18:08:53 *	SoundLogic (~SoundLogi@75-134-16-17.dhcp.mdsn.wi.charter.com) has joined
Nov 12 18:08:59 *	lprd_ (~jon@2a01cb0404945e0199c3e305a15427bc.ipv6.abo.wanadoo.fr) has joined
Nov 12 18:09:09 <refusenick>	Maybe it's b/c I'm using DuckDuckGo, but I'm not finding the full extra-deps documentation online.
Nov 12 18:09:54 <siraben>	Why is it a parse error to declare the fixity of (:)? How is it done in Base?
Nov 12 18:10:10 *	kupi has quit (Quit: Connection closed for inactivity)
Nov 12 18:10:17 <siraben>	"infixr 5 : , ++" is invalid, for instance, but "infixr ++" is valid
Nov 12 18:11:29 <MarcelineVQ>	afaik : [] , are wired in so you can't use their syntax
Nov 12 18:12:15 <siraben>	Aww
Nov 12 18:12:29 *	macroprep (~brotherco@cpe-172-193-104-55.qld.foxtel.net.au) has joined
Nov 12 18:12:37 <siraben>	By the way, anyone else reading Ben Lynn's blog posts on writing a functional compiler for Haskell? https://crypto.stanford.edu/~blynn/compiler/grind.html it's very informative
Nov 12 18:12:39 <MarcelineVQ>	refusenic: if something you want to to needs extra-deps you're typically meant to make a project and add it to that project's stack.yaml
Nov 12 18:13:03 *	mossless has quit (Quit: mossless)
Nov 12 18:13:10 *	chalkmonster (~chalkmons@unaffiliated/chalkmonster) has joined
Nov 12 18:13:24 <siraben>	The Haskell combinatory compiler won the IOCCC this year O.O https://www.ioccc.org/2019/lynn/hint.html
Nov 12 18:13:35 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 12 18:15:38 *	mikail_ has quit (Ping timeout: 276 seconds)
Nov 12 18:16:23 *	tabemann has quit (Ping timeout: 268 seconds)
Nov 12 18:18:06 <MarcelineVQ>	refusenick: this is important documentation https://docs.haskellstack.org/en/stable/stack_yaml_vs_cabal_package_file/
Nov 12 18:18:14 *	merijn has quit (Ping timeout: 268 seconds)
Nov 12 18:18:30 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 12 18:18:46 <MarcelineVQ>	since it explains why even extra-deps is a thing
Nov 12 18:19:09 *	silver has quit (Read error: Connection reset by peer)
Nov 12 18:19:54 <refusenick>	MarcelineVQ: I don't quite understand why copies of packages and even GHC itself need to be continuously reinstalled. I get that it's for reproducibility, but isn't being putatively purely functional (or at least aiming to reduce hidden state) supposed to be a way around having to copy things for every possible change? Shouldn't Haskell be reproducible without that?
Nov 12 18:20:08 <sm[m]>	refusenick: it's normal to have more than one version of haskell packages installed, you don't usually need to delete them. Just specify the version you want and build again
Nov 12 18:20:12 <MarcelineVQ>	They're not reinstalled if they're the same versions
Nov 12 18:20:13 *	o1lo01ol1o (~o1lo01ol1@cpe-74-72-45-166.nyc.res.rr.com) has joined
Nov 12 18:20:30 Python interface unloaded
**** ENDING LOGGING AT Tue Nov 12 18:20:30 2019

**** BEGIN LOGGING AT Tue Nov 26 15:42:07 2019

Nov 26 15:42:07 *	Now talking on #haskell
Nov 26 15:42:07 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Nov 26 15:42:07 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Nov 26 15:42:07 *	Channel #haskell url: http://www.haskell.org/
Nov 26 15:42:19 <Polarina>	Why would you not care about the color space?
Nov 26 15:42:22 *	kipras has quit (Read error: Connection reset by peer)
Nov 26 15:43:50 <crestfallen>	hi I'm getting a missingMethod error, no explicit implementation for `fmap`. wondering what I'm missing..       https://termbin.com/bm4x
Nov 26 15:44:11 <dsal>	Polarina: Because all I care about is whether this is a valid PNG.
Nov 26 15:44:22 <crestfallen>	s/warning/error
Nov 26 15:44:34 <dsal>	Polarina: I've got a bunch of files with names like 0dae0af728ae719f0a43bec7becd9fc7131fff46142e13cbd0b5ab8de57dca3f and I don't know what's in them.
Nov 26 15:45:18 *	poljar (~poljar@89-172-247-52.adsl.net.t-com.hr) has joined
Nov 26 15:45:42 <crestfallen>	s/error/warning  :)
Nov 26 15:45:42 <AWizzArd>	crestfallen: does this change when you try to use `fmap` instead of `(<$>)`?
Nov 26 15:45:45 <merijn>	crestfallen: <$> is not a member of Functor
Nov 26 15:45:55 <merijn>	crestfallen: So you did, in fact, not implement fmap
Nov 26 15:46:05 <Axman6>	crestfallen: and if <$> were in )functor, you would have to indent it
Nov 26 15:46:58 <crestfallen>	man. <$> is for monoids? I am rusty
Nov 26 15:47:06 <koz_>	crestfallen: <$> is just infix fmap.
Nov 26 15:47:11 *	poljar_ has quit (Ping timeout: 250 seconds)
Nov 26 15:47:20 <koz_>	<> is for Semigroups, and since every Monoid is a Semigroup, you can use it with Monoids too.
Nov 26 15:47:28 <merijn>	crestfallen: <$> is fmap, but it is *not* part of the typeclass
Nov 26 15:47:30 <AWizzArd>	Axman6: that is also a good tip, I once spent several minutes to discover that indentation is required when implementing methods. They can’t be top-level.
Nov 26 15:47:32 <MarcelineVQ>	it's a synonym for it, it's not literally fmap which is what you have to implement to implement Functor
Nov 26 15:47:44 *	heatsink (~heatsink@2600:1700:bef1:5e10:685c:2c83:4e60:e4fd) has joined
Nov 26 15:47:49 <crestfallen>	ok , thanks. then it's strange that the prefix notation is illegal
Nov 26 15:48:02 *	danvet has quit (Ping timeout: 265 seconds)
Nov 26 15:48:03 *	phaul (~phaul@188.29.71.60.threembb.co.uk) has joined
Nov 26 15:48:04 <merijn>	crestfallen: What? Why is that strange?
Nov 26 15:48:30 *	poljar1 (~poljar@93-143-179-64.adsl.net.t-com.hr) has joined
Nov 26 15:48:35 <merijn>	crestfallen: <$> is not *literally* fmap, it is a separate, distinct function whose implementation happens to be "fmap"
Nov 26 15:48:41 *	philzook has quit (Remote host closed the connection)
Nov 26 15:49:09 <EvanR>	it seems that SDL high level bindings don't export the newtype constructor for Texture and so you can't get at the pointer. But I need it for a low level raw call. I'm just SOL ?
Nov 26 15:49:11 <merijn>	crestfallen: It's as if I write "let f = id in ..." in some sense 'f' *is* 'id', but it's still a completely independent function definition
Nov 26 15:49:26 <merijn>	EvanR: unsafeCoerce :p
Nov 26 15:49:29 <EvanR>	ah
Nov 26 15:49:39 <EvanR>	(safe coerce?)
Nov 26 15:49:39 <merijn>	EvanR: Actually, you can try using "coerce"
Nov 26 15:49:42 *	philzook (~philzook@cpe-173-90-79-106.neo.res.rr.com) has joined
Nov 26 15:49:44 <merijn>	EvanR: It might work!
Nov 26 15:50:03 <EvanR>	i think we established yesterday if the ctor isn't exported the Coerce instance isn't made
Nov 26 15:50:10 <crestfallen>	thanks ALL I'll sort it out before I'm 60
Nov 26 15:50:27 *	Jesin (~Jesin@pool-108-28-118-103.washdc.fios.verizon.net) has joined
Nov 26 15:50:27 *	orcus (~orcus@unaffiliated/orcus) has joined
Nov 26 15:50:48 <AWizzArd>	When I have an (Aeson) Value, is there a way to serialize it into a byte array that I can save and read back in later and have exactly the same Value? Compact?
Nov 26 15:50:56 *	poljar has quit (Ping timeout: 265 seconds)
Nov 26 15:51:28 <crestfallen>	I'm following this tutorial so I'm now feeling sorry for myself:  https://vaibhavsagar.com/blog/2016/06/17/haskell-state/
Nov 26 15:51:53 <crestfallen>	see beginning of this page ^
Nov 26 15:51:58 *	heatsink has quit (Ping timeout: 245 seconds)
Nov 26 15:51:59 <AWizzArd>	I would like to parse a JSON Text only once and store it in, say, a DB blob, and later not have to parse it again.
Nov 26 15:52:55 <MarcelineVQ>	crestfallen: That's the defintion for Functor in the nicta course the page links.
Nov 26 15:53:39 <dsal>	AWizzArd: Before  you parse it, you have it unparsed.  You could just keep that original value.
Nov 26 15:53:49 <MarcelineVQ>	https://github.com/data61/fp-course/blob/master/src/Course/Functor.hs
Nov 26 15:54:21 *	fphilipe (~phil@2a02:168:f6c3:0:f1c0:e140:936c:3cb4) has joined
Nov 26 15:54:55 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 26 15:55:10 <MarcelineVQ>	the "State exercises" it refers to are https://github.com/data61/fp-course/blob/master/src/Course/State.hs
Nov 26 15:55:18 *	davr0s_ (~davrs@host81-153-180-142.range81-153.btcentralplus.com) has joined
Nov 26 15:55:19 <crestfallen>	but is it correct?
Nov 26 15:55:22 <koz_>	Is there any 'higher-level' wrapper for Windows' GDL in Haskell? I can't find anything except Win32 (which is a lot painful to use), or stuff that requires external libraries (which are not ideal in my case).
Nov 26 15:55:57 <koz_>	Phyx-: ^
Nov 26 15:55:59 <crestfallen>	anyway fmap doesn't work either. I get the same missingMethods warning
Nov 26 15:55:59 <MarcelineVQ>	is what correct?
Nov 26 15:55:59 <vaibhavsagar>	crestfallen: that certainly wasn't my intention :(
Nov 26 15:56:04 <AWizzArd>	dsal: The unparsed is just a Text representation of a JSON object. I need to work with a Value, so I have to parse the Text into something I can work with. I have many of those and want a very cheap way to read them.
Nov 26 15:56:16 *	leifm (d2362170@gateway/web/cgi-irc/kiwiirc.com/ip.210.54.33.112) has joined
Nov 26 15:56:36 <AWizzArd>	dsal: I thought about writing a Value into a compact region. I guess that this compresses the whole thing into one single byte array.
Nov 26 15:56:41 <crestfallen>	vaibhavsagar, I don't know what's going on, nor do I understand what the intention is.
Nov 26 15:57:17 <dsal>	AWizzArd: Sure, I'm just saying that if you want to store the original value, you've got that initially.
Nov 26 15:57:22 <MarcelineVQ>	it's correct for the nicta definition of the Functor class, which is not the Functor class you have when you just open ghci
Nov 26 15:57:25 <dibblego>	crestfallen: please show what your are found and what error you get
Nov 26 15:57:31 <crestfallen>	I just try to go through tutorials and get things to work or at least compile.
Nov 26 15:57:31 <MarcelineVQ>	"<crestfallen> anyway fmap doesn't work either. I get the same missingMethods warning" if you want people to help with that you need to show it
Nov 26 15:57:42 <dibblego>	*you are doing (sorry)
Nov 26 15:58:10 <AWizzArd>	dsal: I could store a human-readable json string, yes. But when I want to use it in Haskell again I again have to parse it into a Value. This is the step that I would like to save.
Nov 26 15:58:11 <MarcelineVQ>	but I'm going to go guess you didn't indent like Axman6 mentioned earlier
Nov 26 15:58:28 *	poljar (~poljar@93-143-186-218.adsl.net.t-com.hr) has joined
Nov 26 15:59:15 *	iSCSI[m] (a0x07matri@gateway/shell/matrix.org/x-vmdkbjtqbakafemo) has joined
Nov 26 15:59:32 *	fphilipe has quit (Ping timeout: 276 seconds)
Nov 26 15:59:37 *	davr0s_ has quit (Ping timeout: 240 seconds)
Nov 26 16:00:01 *	gribble1 has quit ()
Nov 26 16:00:38 *	poljar1 has quit (Ping timeout: 252 seconds)
Nov 26 16:01:20 <Phyx->	koz_: you mean GDI+? No there's not afaik. GDI+ has mostly been superceded by DirectDraw and Direct2D ever since DWM came out but no haskell bindings for those at all afaik. 
Nov 26 16:01:23 <crestfallen>	MarcelineVQ, yeah thanks it was the indent. I didn't take it to mean fmap also needs an indent here .. Axman6 
Nov 26 16:01:29 *	fphilipe (~phil@2a02:168:f6c3:0:f1c0:e140:936c:3cb4) has joined
Nov 26 16:01:33 *	pfurla has quit (Read error: Connection reset by peer)
Nov 26 16:01:50 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 26 16:02:02 *	LKoen has quit (Quit: “It’s only logical. First you learn to talk, then you learn to think. Too bad it’s not the other way round.”)
Nov 26 16:02:18 *	poljar1 (~poljar@93-143-146-77.adsl.net.t-com.hr) has joined
Nov 26 16:02:29 *	pfurla (~pfurla@ool-182ed2e2.dyn.optonline.net) has joined
Nov 26 16:02:34 <koz_>	Phyx-: OK, let me stop A-B-problem-ing. I need to make a Windows GUI: there is no concern for portability to other platforms, but any external libs must be avoided at all costs. I guess Win32 can help me, but it's very low-level and painful. Is there something higher-level I could use?
Nov 26 16:03:21 <Polarina>	koz_, you could consider OpenGL.
Nov 26 16:03:37 <koz_>	Polarina: What would you suggest I use for this?
Nov 26 16:03:53 *	maelsea (~maelsea@82.47.218.177) has left ("The Lounge - https://thelounge.chat")
Nov 26 16:04:18 *	amalloy is now known as amalloy_
Nov 26 16:04:28 *	DTZUZO has quit (Ping timeout: 265 seconds)
Nov 26 16:05:23 *	poljar has quit (Ping timeout: 276 seconds)
Nov 26 16:05:51 *	Ariakenom has quit (Read error: Connection reset by peer)
Nov 26 16:06:25 <EvanR>	koz_: you could make a windows GUI front end using windows dev technology, and it communicates with a haskell process using IPC
Nov 26 16:06:36 <Phyx->	koz_: my only experience with haskell gui has been with gtk. To be honest the few occasions I needed a gui for a controlling haskell code I wrote it in another language against a haskell dll with the logic as there's no support for any modern windows gui toolkit in haskell 
Nov 26 16:06:41 *	fphilipe has quit (Ping timeout: 276 seconds)
Nov 26 16:06:44 <EvanR>	or that
Nov 26 16:06:52 <koz_>	Phyx-: So basically I gotta write C++?
Nov 26 16:06:58 <EvanR>	C# my dude
Nov 26 16:07:00 <koz_>	(or C# I guess)
Nov 26 16:07:04 <crestfallen>	vaibhavsagar hi mind if I pm you? 
Nov 26 16:07:14 <merijn>	30 minutes of "why the hell am I getting syntax error complaints?!" from SQLite, only to realise the sqlite version being shipped isn't up to date >.>
Nov 26 16:07:49 <koz_>	That... definitely isn't ideal.
Nov 26 16:07:51 <merijn>	koz_: ftlkhs seems reasonably easy to use and build
Nov 26 16:07:54 <Phyx->	koz_: i honestly wouldn't go down the road of using the win32 api for gui.. It's.. Painful and it'll be raster based. You have to do basic stuff like dpi scaling yourself 
Nov 26 16:07:56 <merijn>	koz_: Not very pretty, though
Nov 26 16:08:08 <koz_>	Phyx-: Yeah, that's not ideal.
Nov 26 16:08:35 <koz_>	merijn: Can I build it so that users don't need to have anything besides a fat Haskell binary around?
Nov 26 16:09:27 <koz_>	Because the instructions for installing fltkhs on Windows begin with 'Set up Stack', which I am not using.
Nov 26 16:09:43 <dsal>	https://gist.github.com/dustin/e9295c5b61e89a15dfd750262ebde871 <--  this seemed a little repetitive
Nov 26 16:10:14 <EvanR>	a fat exe with a statically link haskell DLL
Nov 26 16:10:33 *	poljar (~poljar@93-143-188-66.adsl.net.t-com.hr) has joined
Nov 26 16:10:38 *	thunderrd (~thunderrd@183.182.115.127) has joined
Nov 26 16:10:43 <merijn>	koz_: Just because the instructions are for stack doesn't mean you need stack
Nov 26 16:10:55 <merijn>	Anyway, bed time
Nov 26 16:11:02 <koz_>	merijn: Sleep well, and thanks!
Nov 26 16:11:03 *	ddere (uid110888@gateway/web/irccloud.com/x-qftjflptxrhmnnyc) has joined
Nov 26 16:11:34 <Phyx->	koz_: can't you just ship the dlls along with the program? 
Nov 26 16:11:53 *	poljar1 has quit (Ping timeout: 268 seconds)
Nov 26 16:11:56 <koz_>	Phyx-: Can I just stuff them in the same folder and expect it to work without issue?
Nov 26 16:12:16 *	Sheilong (uid293653@gateway/web/irccloud.com/x-szdxmvskozycpwgu) has joined
Nov 26 16:12:17 <koz_>	I haven't dealt with DLL anything on Windows this end of ever, so I have no idea what to expect.
Nov 26 16:12:20 <vaibhavsagar>	crestfallen: happy to take questions but I'm out right now so it'll be a few hours before I can get back to you
Nov 26 16:12:20 <Phyx->	I've only got experience with gtk2hs, wrote a decent game in it back at uni. Was easy enough to figure out
Nov 26 16:13:02 <Phyx->	koz_: yes that's actually the original distribution model for applications on Windows. Just put everything in the same folder 
Nov 26 16:13:10 *	iSCSI[m] is now known as a_0x07[m]
Nov 26 16:13:12 *	jlamothe has quit (Ping timeout: 246 seconds)
Nov 26 16:13:32 <koz_>	Phyx-: Well, in that case, I'm happy to use whatever is most convenient, maintained, and easy to get help for.
Nov 26 16:13:36 <crestfallen>	vaibhavsagar, thanks! talk later
Nov 26 16:13:37 <Phyx->	Global installation of DLL and subsequent "dll hell" only because a thing because people tried to save disk space 
Nov 26 16:13:52 *	Drens5 (~Drens5@ip5454fcac.speed.planet.nl) has joined
Nov 26 16:14:24 *	leifm has quit (Quit: Connection closed)
Nov 26 16:14:29 *	koz_ is confused why exeExtension lives in System.Directory and not System.FilePath.
Nov 26 16:14:29 *	ph88 has quit (Ping timeout: 250 seconds)
Nov 26 16:14:45 <koz_>	Phyx-: So on that basis, would you suggest I use gtk2hs?
Nov 26 16:15:18 *	merijn has quit (Ping timeout: 245 seconds)
Nov 26 16:15:42 *	zmv has quit (Remote host closed the connection)
Nov 26 16:16:33 *	poljar1 (~poljar@89-172-225-134.adsl.net.t-com.hr) has joined
Nov 26 16:16:39 <Phyx->	koz_: I've last written a gui almost a decade ago.. So I really wouldn't know which is the best option these days or easiest to use in Haskell :) but I would imagine it's gtk or qt. 
Nov 26 16:17:03 <koz_>	I haven't written a GUI this end of _ever_, so I have no idea either.
Nov 26 16:17:10 >vaibhavsagar<	I got it to work with fmap indented. not sure what the distinction is between (<$>) and fmap in this case. but as it does work with fmap indented, how would you flesh out the functor instance (and applicative if you have time) with some interesting examples.? really lost on bringing anything together.
Nov 26 16:17:18 <koz_>	Thanks for patiently answering my questions though - I appreciate it.
Nov 26 16:17:30 <dsal>	I've had success writing GUIs in objective C for OS X or NeXTSTEP.   Otherwise, I'd just do a web thing.
Nov 26 16:17:38 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 26 16:17:42 <ysangkok>	Phyx-: another argument for dynamic linking is "it allows me to fix an issue in a library without rebuilding everything". in the linux distribution model, this translates to pushing the burden of package maintainership from the program authors to the individual distributions, IMHO
Nov 26 16:18:08 <dsal>	ysangkok: s/fix a/create an/
Nov 26 16:18:28 <koz_>	dsal: By 'web thing' you mean Electron?
Nov 26 16:18:32 <koz_>	Or actually run in the browser?
Nov 26 16:18:50 <dsal>	koz_: I've never tried that.  I just do stuff in the browser when  I want a GUI.
Nov 26 16:18:55 <ysangkok>	dsal: well, if you wanted to advertise dynamic linking, you wouldn't say it creates an issue :P
Nov 26 16:18:59 *	tromp (~tromp@2a02:a210:1585:3200:1154:e0fa:ddc3:145e) has joined
Nov 26 16:19:02 *	poljar has quit (Ping timeout: 276 seconds)
Nov 26 16:19:07 <dsal>	ysangkok: Yeah.   pros and cons
Nov 26 16:19:08 <ysangkok>	i am just saying disk space is not the only argument
Nov 26 16:19:18 <koz_>	dsal: This is... possible but not ideal.
Nov 26 16:19:25 <evelyn>	Sometimes a TUI can be as powerful as a full-blown GUI
Nov 26 16:19:26 <koz_>	I'd rather have a standalone for what I'm trying to do.
Nov 26 16:19:40 *	CrazyPython (~crazypyth@71-135-5-88.lightspeed.rlghnc.sbcglobal.net) has joined
Nov 26 16:19:46 <koz_>	evelyn: Not an option in this case. I'm writing this for use by first-year programming students, many of whom can barely stand a computer up the right way.
Nov 26 16:21:41 *	jao has quit (Remote host closed the connection)
Nov 26 16:22:19 *	spew has quit (Quit: Connection closed for inactivity)
Nov 26 16:22:20 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 26 16:22:45 *	poljar (~poljar@93-143-129-221.adsl.net.t-com.hr) has joined
Nov 26 16:22:57 <koz_>	I shall investigate the options again. Thanks again for all your folks' help.
Nov 26 16:23:00 <Phyx->	koz_: np, unfortunately I have limited gui experience as well :) and what I do have isn't in haskell :) 
Nov 26 16:23:23 <koz_>	Phyx-: I guess it's never too late to learn. It's like, two and a half weeks before I go on holiday leave, so good time to learn new stuff.
Nov 26 16:23:34 <koz_>	I already learned a tonne about file system watching I never thought I needed. :P
Nov 26 16:23:35 *	tromp has quit (Ping timeout: 250 seconds)
Nov 26 16:23:57 *	cybai (~cybai@2400:2200:322:f982:4df5:1fb3:832e:1ac3) has joined
Nov 26 16:24:11 *	Deide has quit (Quit: Seeee yaaaa)
Nov 26 16:24:30 *	Azel has quit (Quit: Azel)
Nov 26 16:24:31 <Phyx->	koz_: i probably spend more time in assembly than haskell so don't have much need for a UI there :p
Nov 26 16:24:39 *	jao (~user@pdpc/supporter/professional/jao) has joined
Nov 26 16:24:48 <koz_>	Phyx-: I wish I could say I was this lucky. I spend most of my time in the classroom.
Nov 26 16:24:56 <koz_>	(I teach programming, in not-Haskell sadly)
Nov 26 16:25:03 <Phyx->	ysangkok: and it's faster to link :) 
Nov 26 16:25:10 *	shah^ has quit ()
Nov 26 16:25:32 *	poljar1 has quit (Ping timeout: 276 seconds)
Nov 26 16:25:37 *	aadcg (~aadcg@95-27-40-157.broadband.corbina.ru) has joined
Nov 26 16:26:47 *	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined
Nov 26 16:27:28 *	t8 (~tommo@2a00:23c5:1284:fc00:11be:5757:bd95:ffdb) has joined
Nov 26 16:27:36 <Phyx->	koz_: ah, btw https://chocolatey.org/packages/haskell-dev got approved today so that should make it a single package to set up an initial working environment. After that you can update or downgrade each individual component as you wish (e.g. Ghc, cabal) 
Nov 26 16:28:36 *	t7 has quit (Disconnected by services)
Nov 26 16:28:39 *	t8 is now known as t7
Nov 26 16:28:58 <lavalike>	is chocolatey anywhere close to brew in terms of reliability of installing and uninstalling and maintaining of the packages?
Nov 26 16:30:18 *	conal has quit (Quit: Computer has gone to sleep.)
Nov 26 16:30:41 >vaibhavsagar<	btw if you wouldn't mind to email me johnwerner@berkeley.edu    tbh I'm not even sure how to provide arguments to these state examples.. thanks 
Nov 26 16:31:10 *	poljar1 (~poljar@89-172-235-201.adsl.net.t-com.hr) has joined
Nov 26 16:31:48 *	poljar has quit (Ping timeout: 252 seconds)
Nov 26 16:31:55 *	ffl^ (ffl@ip98-186-247-88.mc.at.cox.net) has joined
Nov 26 16:32:41 *	roconnor has quit (Ping timeout: 276 seconds)
Nov 26 16:34:11 <Phyx->	I don't have any experience with brew. So I can't make any comparisons. Chocolatey is extremely reliable and every package is machine verified before getting approved and hand verified if their not marked as trusted. 
Nov 26 16:34:29 *	conal (~conal@107.181.166.220) has joined
Nov 26 16:34:40 <Phyx->	It's based on Microsoft's nuget which is what drives the dotnet package ecosystem 
Nov 26 16:34:51 *	poljar (~poljar@93-143-140-145.adsl.net.t-com.hr) has joined
Nov 26 16:35:06 <koz_>	If I want a DiffTime representing 1 second, how many zeroes do I need after the 1?
Nov 26 16:35:43 *	thc202 has quit (Ping timeout: 245 seconds)
Nov 26 16:35:50 <koz_>	s/DiffTime/NominalDiffTime/
Nov 26 16:36:16 <lavalike>	Phyx-: thanks, I will have to work on windows for a while so I thought I'd ask
Nov 26 16:36:17 *	poljar1 has quit (Ping timeout: 240 seconds)
Nov 26 16:36:57 <EvanR>	koz_: you mean 1?
Nov 26 16:37:25 <EvanR>	the Num instance converts integer literal to number of seconds
Nov 26 16:37:33 <koz_>	EvanR: Oh, that easy huh. Thanks!
Nov 26 16:37:46 <EvanR>	ikr
Nov 26 16:37:50 <EvanR>	time is easy!
Nov 26 16:38:10 <jdt>	working with a basic VHF antenna (https://www.amazon.com/gp/product/B016SIJX28/ ) and a LimeSDR with a small no-name pre-amp and a larger, 85 watt RM Italy amplifier for transmitting. Trying to manage SWR - when I crank it up, the SWR gets very high (like 10). If I keep the LimeSDR gain around 36db, I can get closer to 2 for SWR.
Nov 26 16:38:21 <jdt>	is that just something I need to live with for this little antenna?
Nov 26 16:38:28 *	xkapastel (uid17782@gateway/web/irccloud.com/x-hfqwlknlpafvhdow) has joined
Nov 26 16:38:31 <EvanR>	are you sure you don't want ##electronics?
Nov 26 16:38:58 <jdt>	oh shoot.
Nov 26 16:38:59 <jdt>	lol
Nov 26 16:39:01 <EvanR>	you're in the haskell channel
Nov 26 16:39:05 <jdt>	I thought this was the hamradio channel.
Nov 26 16:39:07 <jdt>	sorry.
Nov 26 16:39:16 <jdt>	all I could see was the ##h in my emacs client.
Nov 26 16:39:16 <EvanR>	oh neat... joining
Nov 26 16:39:19 <jdt>	ignore me. :)
Nov 26 16:39:21 <koz_>	Dependently typed ham radio.
Nov 26 16:39:23 <Phyx->	lavalike: I spent a lot of time on those packages and afaik everyone who uses them likes them. It's also a lot simpler. Want a new ghc, just one command. Want multiple ghc, one command. Want to update or downgrade? One command. The packages contain significant scripting to ensure that they don't use global state. So if anything does go wrong you can just un install and reinstall without problems for instance 
Nov 26 16:39:26 *	leungbk (~user@2605:e000:1315:706:51ff:f802:d626:bcb) has joined
Nov 26 16:39:31 <koz_>	I have to echo Phyx- on this.
Nov 26 16:39:44 <koz_>	I use Chocolatey on Windows to manage everything from my GHC to my Inkscape.
Nov 26 16:39:49 <koz_>	I have yet to have even one complaint.
Nov 26 16:40:30 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 26 16:40:34 <Phyx->	lavalike: and they auto configure themselves. So you don't have to mess with PATH or anything like that to get things to work. Compiling configure based packages etc work out of the box. 
Nov 26 16:41:35 *	cheater (~cheater@unaffiliated/cheater) has joined
Nov 26 16:42:02 <Phyx->	Yeah, I use it for most things these days too. And chocolatey is supported out of the box by circleci, Azure pipelines, Travis and appveyor. So it makes CI scripting for windows also very easy
Nov 26 16:42:53 *	poljar1 (~poljar@78-1-39-38.adsl.net.t-com.hr) has joined
Nov 26 16:43:57 *	aplainzetakind has quit (Ping timeout: 250 seconds)
Nov 26 16:44:21 <koz_>	Phyx- (or anyone else with Haskell-on-Windows-fu): I've looked into things, and supposedly, you're meant to use haskell-gi now. It gives a list of things to install in MSYS2, which I can do. How do I then provision the DLLs needed?
Nov 26 16:44:42 *	maybefbi (~user@202.73.38.196) has joined
Nov 26 16:44:48 *	st8less has quit (Quit: WeeChat 2.6)
Nov 26 16:44:57 *	poljar has quit (Ping timeout: 240 seconds)
Nov 26 16:44:58 <koz_>	https://github.com/haskell-gi/haskell-gi/wiki/Using-haskell-gi-in-Windows
Nov 26 16:45:45 *	merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Nov 26 16:46:27 *	magnus1 (~magnus@90.194.108.57) has joined
Nov 26 16:46:33 *	t7 has quit (Quit: Konversation terminated!)
Nov 26 16:46:47 <Phyx->	koz_: simplest would probably be to compile your program and use (inside an msys2 shell) ldd or strace on your program to find which dlls it uses and where they are and copy those. 
Nov 26 16:47:01 *	phreedom_ (~quassel@gateway/tor-sasl/phreedom) has joined
Nov 26 16:47:06 <koz_>	I guess that works.
Nov 26 16:47:08 *	turab (~turab@2601:805:c101:b230::9) has joined
Nov 26 16:47:18 *	phreedom has quit (Remote host closed the connection)
Nov 26 16:47:22 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 26 16:47:57 *	SoundLogic has quit (Ping timeout: 240 seconds)
Nov 26 16:48:35 <Phyx->	koz_: alternative you can use depends.exe or just grab the binaries for the packages you installed via pacman from repo.msys2.org. But you'll likely end up with more than you need then :) 
Nov 26 16:48:44 *	magnus1 has quit (Client Quit)
Nov 26 16:48:47 *	CrazyPython has quit (Read error: Connection reset by peer)
Nov 26 16:48:55 <koz_>	Phyx-: depends.exe?
Nov 26 16:49:00 *	heatsink (~heatsink@2600:1700:bef1:5e10:685c:2c83:4e60:e4fd) has joined
Nov 26 16:49:32 <Phyx->	koz_: http://www.dependencywalker.com/
Nov 26 16:49:56 <koz_>	Oh, neat.
Nov 26 16:49:59 <koz_>	It's like ldd.
Nov 26 16:50:13 <Phyx->	Yeah
Nov 26 16:50:16 <koz_>	Phyx-: I don't mind if I end up with more than I need. I need a setup that is as unbreakable as possible.
Nov 26 16:50:24 <Phyx->	choco install dependencywalker :) 
Nov 26 16:50:31 *	cybai has quit (Remote host closed the connection)
Nov 26 16:50:34 <koz_>	An absolute idea is 'one fat binary and nothing else', but if I'm gonna use haskell-gi I guess I can't.
Nov 26 16:50:39 *	merijn has quit (Ping timeout: 246 seconds)
Nov 26 16:51:24 *	owlscientist has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
Nov 26 16:52:01 <EvanR>	a windows universal binary :)
Nov 26 16:52:12 <EvanR>	falls back to win95 or DOS if it has to
Nov 26 16:52:24 <koz_>	s/idea/ideal/
Nov 26 16:52:34 <koz_>	EvanR: Lol.
Nov 26 16:52:39 <Phyx->	I doubt the msys2 packages contain static versions of the libraries. But yeah you can just get the binaries from repo directly. Excluding any tools such as pkg-config
Nov 26 16:52:59 <koz_>	pkg-config is only needed at build time, correct?
Nov 26 16:53:26 *	roconnor (~roconnor@host-45-78-202-124.dyn.295.ca) has joined
Nov 26 16:53:29 *	heatsink has quit (Ping timeout: 250 seconds)
Nov 26 16:54:52 *	jathan has quit (Quit: WeeChat 2.3)
Nov 26 16:55:16 *	hackage pointfree-fancy 1.1.1.15 - Tool for refactoring expressions into pointfree form  https://hackage.haskell.org/package/pointfree-fancy-1.1.1.15 (vmchale)
Nov 26 16:55:28 *	poljar (~poljar@93-143-146-28.adsl.net.t-com.hr) has joined
Nov 26 16:55:44 <Phyx->	koz_: yeah
Nov 26 16:55:58 <koz_>	Phyx-: OK, that seems reasonable. Will attempt and see.
Nov 26 16:56:04 *	YellowOnion_ (~YellowOni@125-238-108-212-fibre.sparkbb.co.nz) has joined
Nov 26 16:56:25 <koz_>	Supposing I was insane^Wcommitted enough to build static versions of all those deps, could I statically link them into my Haskell exe then?
Nov 26 16:56:38 <koz_>	Would that work with those libraries, or do they insist on dynalinking?
Nov 26 16:56:44 *	nowhereman has quit (Ping timeout: 276 seconds)
Nov 26 16:56:51 *	owlscientist (~owlscient@sburn/devel/name) has joined
Nov 26 16:56:54 *	owlscientist has quit (Client Quit)
Nov 26 16:57:23 *	poljar1 has quit (Ping timeout: 276 seconds)
Nov 26 16:57:33 *	Tops2 (~Tobias@dyndsl-095-033-110-079.ewe-ip-backbone.de) has joined
Nov 26 16:57:37 *	owlscientist (~owlscient@sburn/devel/name) has joined
Nov 26 16:57:43 *	owlscientist has quit (Client Quit)
Nov 26 16:57:52 *	cybai (~cybai@2400:2200:322:f982:9045:11e1:45c6:b48c) has joined
Nov 26 16:58:11 *	owlscientist (~owlscient@sburn/devel/name) has joined
Nov 26 16:58:30 *	owlscientist has quit (Client Quit)
Nov 26 16:59:47 *	mmfood has quit (Read error: Connection reset by peer)
Nov 26 17:00:17 *	voyons_osti has quit (Quit: Leaving)
Nov 26 17:00:38 *	Yellow_Onion has quit (Ping timeout: 276 seconds)
Nov 26 17:04:15 *	poljar1 (~poljar@93-143-153-83.adsl.net.t-com.hr) has joined
Nov 26 17:05:37 *	boxscape has quit (Quit: Ping timeout (120 seconds))
Nov 26 17:06:46 *	poljar has quit (Ping timeout: 268 seconds)
Nov 26 17:09:16 *	antsmartian (~antsmarti@122.164.168.233) has joined
Nov 26 17:10:12 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 26 17:14:07 *	zeta_0 (~zeta@h63.52.155.207.dynamic.ip.windstream.net) has joined
Nov 26 17:14:47 *	carldd has quit (Ping timeout: 268 seconds)
Nov 26 17:15:18 *	son0p has quit (Quit: leaving)
Nov 26 17:19:36 Python interface unloaded
**** ENDING LOGGING AT Tue Nov 26 17:19:36 2019

**** BEGIN LOGGING AT Tue Nov 26 17:24:29 2019

Nov 26 17:24:29 *	Now talking on #haskell
Nov 26 17:24:29 *	Topic for #haskell is: https://www.haskell.org | https://wiki.haskell.org/IRC_channel | Paste code/errors: https://gist.github.com/ | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic: #haskell-offtopic | https://downloads.haskell.org
Nov 26 17:24:29 *	Topic for #haskell set by glguy (Sat Jan  5 07:21:52 2019)
Nov 26 17:24:29 *	Channel #haskell url: http://www.haskell.org/
Nov 26 17:24:30 *	philzook (~philzook@cpe-173-90-79-106.neo.res.rr.com) has joined
Nov 26 17:27:19 *	xff0x has quit (Quit: xff0x)
Nov 26 17:27:55 *	poljar_ (~poljar@93-143-161-146.adsl.net.t-com.hr) has joined
Nov 26 17:28:16 *	poljar1 has quit (Ping timeout: 240 seconds)
Nov 26 17:28:35 <monochrom>	Perhaps one day we should port GHC to Commodore 64.
Nov 26 17:28:59 <monochrom>	Because it's called "64" it ought to be 64-bit, right? right? >:)
Nov 26 17:29:09 *	Arcaelyx has quit (Quit: Arcaelyx)
Nov 26 17:30:12 <crestfallen>	real quick , I was wondering why something like pure = a -> f a    is called a degenerate case. or what degenerate is generally in cs. in math they are talking about triangles as degenerate, so the only criterion I see with pure is that it is 'simpler' since the function is just a type as in 'a'. 
Nov 26 17:30:29 *	cybai has quit (Remote host closed the connection)
Nov 26 17:30:46 *	poljar (~poljar@93-143-164-214.adsl.net.t-com.hr) has joined
Nov 26 17:31:21 *	YellowOnion (~YellowOni@125-238-108-212-fibre.sparkbb.co.nz) has joined
Nov 26 17:31:21 <divVerent>	crestfallen: just like that, a degenerate triangle is also simpler
Nov 26 17:31:33 <crestfallen>	say if a triangle has an angle that is zero, it lies on a line and is degenerate
Nov 26 17:31:36 <divVerent>	as its three points are on a line, its area is zero
Nov 26 17:31:58 <MarcelineVQ>	it depends what pure is said to be a degenerate case of
Nov 26 17:32:10 <divVerent>	but degerate triangles also do NOT fulfill some things normal triangles do - degenerate functions don't have that in this case
Nov 26 17:32:20 <MarcelineVQ>	as to "why something like pure = a -> f a    is called a degenerate case" I mean
Nov 26 17:32:28 <divVerent>	like, a degenerate tringle does not have a unique circumcircle
Nov 26 17:32:40 <crestfallen>	divVerent, thanks, yeah I never knew a triangle could be defined like that
Nov 26 17:32:40 <divVerent>	unless you also see a line as a degenerate circle, of course :)
Nov 26 17:32:54 *	f-a (~f-a@151.82.185.124) has joined
Nov 26 17:33:00 *	poljar_ has quit (Ping timeout: 246 seconds)
Nov 26 17:33:05 <monochrom>	lines and points are two degenerate kinds of circles
Nov 26 17:33:09 <crestfallen>	MarcelineVQ, I guess it is being related to <*>
Nov 26 17:33:13 <divVerent>	which it technically is (e.g. inversion at a point independent from all other points you are using turns both lines and triangles into circles equally)
Nov 26 17:33:16 *	hackage tmp-postgres 1.20.0.1 - Start and stop a temporary postgres  https://hackage.haskell.org/package/tmp-postgres-1.20.0.1 (JonathanFischoff)
Nov 26 17:33:31 <monochrom>	lines being if you allow radius to be infinity, points if you allow radius to be 0.
Nov 26 17:33:36 *	poljar1 (~poljar@93-143-166-191.adsl.net.t-com.hr) has joined
Nov 26 17:33:49 <divVerent>	but anyway, I wouldn't call pure :: a -> f a degenerate per se
Nov 26 17:34:13 <monochrom>	But I did.
Nov 26 17:34:25 <crestfallen>	I think it means that a is a type and not a function that takes an argument
Nov 26 17:34:25 <monochrom>	Perhaps I should call it "imagine liftA0".
Nov 26 17:34:27 <divVerent>	however, I'd say it generates degenerate elements of f a
Nov 26 17:34:44 <divVerent>	namely, elements that use no properties of the Applicative, in a way
Nov 26 17:34:55 <crestfallen>	a is merely a data type
Nov 26 17:35:08 *	YellowOnion_ has quit (Ping timeout: 268 seconds)
Nov 26 17:35:09 <crestfallen>	in the context of the hutton text
Nov 26 17:35:25 <divVerent>	e.g. in the [] Applicative, pure :: a -> [a] returns one-element lists
Nov 26 17:35:39 <divVerent>	I wouldn't call those lists degenerate per se, but in context of the [] Applicative, they are
Nov 26 17:35:54 <divVerent>	simply because they do "nothing special"
Nov 26 17:35:54 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 26 17:36:16 *	hackage tmp-postgres 1.21.0.0 - Start and stop a temporary postgres  https://hackage.haskell.org/package/tmp-postgres-1.21.0.0 (JonathanFischoff)
Nov 26 17:36:17 <crestfallen>	yeah since a singleton is still a list in every way, right?
Nov 26 17:36:18 *	poljar has quit (Ping timeout: 265 seconds)
Nov 26 17:36:30 <divVerent>	yes
Nov 26 17:36:54 <divVerent>	now outside the context of Applicative, I'd rather call the empty list degenerate
Nov 26 17:36:56 *	stephen0731 (~stephen07@li471-144.members.linode.com) has joined
Nov 26 17:37:03 <monochrom>	My line of thought was that Applicative gives you liftA2, liftA3, etc., and you also have liftA1 as fmap from Functor, so how do I explain pure?  I explained by extrapolating in the other direction, that is towards 0.  At that point it's analogous to "point = circle of radisu 0" so I called it degenerate.
Nov 26 17:37:08 <divVerent>	it e.g. is the only list that is member of multiple list types (namely, all of them)
Nov 26 17:37:22 <divVerent>	pure f <*> pure x = pure (f x)
Nov 26 17:37:29 <divVerent>	explains the degenerate-ness of pure very well, IMHO
Nov 26 17:37:44 *	nineonine has quit (Read error: Connection reset by peer)
Nov 26 17:38:35 *	poljar (~poljar@78-1-41-52.adsl.net.t-com.hr) has joined
Nov 26 17:38:48 *	stephen0731 has quit (Client Quit)
Nov 26 17:39:02 *	SoundLogic (~SoundLogi@75-134-16-17.dhcp.mdsn.wi.charter.com) has joined
Nov 26 17:39:12 *	stephen0731 (~stephen07@li471-144.members.linode.com) has joined
Nov 26 17:39:24 <crestfallen>	they do nothing special [singleton] say, but they can be passed around as structures, I guess.
Nov 26 17:39:38 *	tom_ (~tom@95.151.84.61) has joined
Nov 26 17:39:39 <divVerent>	yeah, pure basically is liftA0
Nov 26 17:40:18 *	machinedgod has quit (Ping timeout: 245 seconds)
Nov 26 17:40:43 <divVerent>	hm... but to do this reductively, how to turn liftA2 into liftA the same way that turns liftA3 into liftA2?
Nov 26 17:40:55 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 26 17:40:56 *	notzmv (~zmv@unaffiliated/zmv) has joined
Nov 26 17:41:08 *	poljar1 has quit (Ping timeout: 265 seconds)
Nov 26 17:41:20 *	replay has quit (Quit: Textual IRC Client: www.textualapp.com)
Nov 26 17:41:30 *	dongcarl has quit ()
Nov 26 17:42:06 *	tom__ has quit (Ping timeout: 246 seconds)
Nov 26 17:42:09 <crestfallen>	divVerent, ...
Nov 26 17:42:11 *	conal has quit (Quit: Computer has gone to sleep.)
Nov 26 17:42:11 <divVerent>	liftA2 f = liftA3 (const f) (pure undefined)
Nov 26 17:42:19 <divVerent>	looks like this reduction always goes one level lower
Nov 26 17:42:29 <crestfallen>	I haven't come to the lift stuff yet.. however...
Nov 26 17:42:44 *	f-a (~f-a@151.82.185.124) has left
Nov 26 17:42:51 <divVerent>	so what is liftA (const f) (pure undefined)? It's actually pure f.
Nov 26 17:42:52 *	carldd (~carldd@90-224-49-113-no56.tbcn.telia.com) has joined
Nov 26 17:42:53 *	zincy_ has quit (Ping timeout: 276 seconds)
Nov 26 17:42:58 *	tom__ (~tom@95.151.84.61) has joined
Nov 26 17:43:11 <crestfallen>	could we go back to pure f <*> pure x = pure (f x) explains the degenerate-ness of pure very well, IMHO
Nov 26 17:43:27 <divVerent>	yes :)
Nov 26 17:44:19 <divVerent>	liftA_minus_1 = pure (const f) (pure undefined)... that now really makes no sense, unless you're in the (-> a) applicative.
Nov 26 17:44:51 <crestfallen>	no capiche
Nov 26 17:45:03 <divVerent>	it makes zero sense anyway :)
Nov 26 17:45:37 <crestfallen>	pure f      that injects a function into a structure?
Nov 26 17:45:49 <divVerent>	sort of, yeah
Nov 26 17:45:56 *	antsmartian has quit (Remote host closed the connection)
Nov 26 17:46:00 <divVerent>	pure a injects a value into the structure, so Applicative can operate on it
Nov 26 17:46:27 <crestfallen>	the last post, yes that I see
Nov 26 17:46:46 *	hackage hOpenPGP 2.8.5 - native Haskell implementation of OpenPGP (RFC4880)  https://hackage.haskell.org/package/hOpenPGP-2.8.5 (ClintAdams)
Nov 26 17:47:08 *	Yellow_Onion (~YellowOni@125-238-108-212-fibre.sparkbb.co.nz) has joined
Nov 26 17:47:09 *	zeta_0 has quit (Quit: rcirc on GNU Emacs 26.3)
Nov 26 17:47:44 <crestfallen>	so what sort of function could pure inject into a structure.. not any function, correct?
Nov 26 17:49:14 *	leo__ (~leo@177.17.216.176.dynamic.adsl.gvt.net.br) has joined
Nov 26 17:49:32 *	cybai (~cybai@2400:2200:322:f982:6572:ea9c:fe85:7e3c) has joined
Nov 26 17:49:37 <crestfallen>	but in the case of pure f <*> pure x = pure (f x)   ultimately f has an argument 
Nov 26 17:49:42 <divVerent>	it can inject anything
Nov 26 17:50:14 *	heatsink (~heatsink@107-136-5-69.lightspeed.sntcca.sbcglobal.net) has joined
Nov 26 17:50:20 <divVerent>	Prelude Control.Applicative> (pure (+1)) <*> [2, 3, 5, 7]
Nov 26 17:50:22 <divVerent>	[3,4,6,8]
Nov 26 17:50:31 <divVerent>	I know that example is rather useless, but here pure injects a function
Nov 26 17:50:54 <divVerent>	Prelude Control.Applicative> [(+1), (+2)] <*> pure 42
Nov 26 17:50:55 <divVerent>	[43,44]
Nov 26 17:50:57 <divVerent>	and here it injects a value
Nov 26 17:51:13 *	conal (~conal@107.181.166.220) has joined
Nov 26 17:51:17 *	YellowOnion has quit (Ping timeout: 265 seconds)
Nov 26 17:51:18 <crestfallen>	good example
Nov 26 17:51:25 <divVerent>	basically Applicative in a way generalizes functions as values and lets you operate with them in similar ways
Nov 26 17:51:57 <divVerent>	and the list Applicative is probably the easiest to understand I think
Nov 26 17:52:29 <crestfallen>	so the above example (pure (+1)) <*> [2, 3, 5, 7]     ....     pure (+1) would be degenerate
Nov 26 17:54:56 <divVerent>	sort of - it's the part that doesn't really use the Applicative
Nov 26 17:55:14 *	heatsink has quit (Ping timeout: 276 seconds)
Nov 26 17:55:27 *	conal has quit (Client Quit)
Nov 26 17:55:39 <crestfallen>	I see that is reasonable. thanks kindly
Nov 26 17:55:43 *	poljar1 (~poljar@93-143-179-14.adsl.net.t-com.hr) has joined
Nov 26 17:56:21 <crestfallen>	the applicative uses _it_
Nov 26 17:56:46 <divVerent>	left op f = op (pure f) (pure undefined)
Nov 26 17:56:48 *	efm has quit (Read error: Connection reset by peer)
Nov 26 17:57:02 <divVerent>	now this is fun... this "left" turns liftA3 into liftA2, into liftA, into pure...
Nov 26 17:57:10 <divVerent>	but left pure is pure again
Nov 26 17:57:20 *	poljar has quit (Ping timeout: 268 seconds)
Nov 26 17:57:28 <dibblego>	liftA1 :: (a -> b) -> f a -> f b
Nov 26 17:57:34 <dibblego>	liftA2 :: (a -> b -> c) -> f a -> f b -> f c
Nov 26 17:57:38 <dibblego>	liftA3 :: (a -> b -> c -> d) -> f a -> f b -> f c -> f d
Nov 26 17:57:40 <divVerent>	Prelude Control.Applicative> :t left (pure :: a -> (b -> c) -> a)
Nov 26 17:57:42 <divVerent>	left (pure :: a -> (b -> c) -> a) :: Applicative f => a -> f a
Nov 26 17:57:44 <dibblego>	liftA4 :: (a -> b -> c -> d -> e) -> f a -> f b -> f c -> f d -> f e
Nov 26 17:57:48 <dibblego>	liftA0 :: ?
Nov 26 17:57:57 *	merijn has quit (Ping timeout: 268 seconds)
Nov 26 17:58:03 <divVerent>	well, that's what my "left" does... it removes one layer of lifting
Nov 26 17:58:14 <divVerent>	Prelude Control.Applicative> :t left liftA
Nov 26 17:58:16 <divVerent>	left liftA :: Applicative f => b -> f b
Nov 26 17:58:26 <divVerent>	so liftA0 :: a -> f a, which must be pure
Nov 26 17:58:31 <crestfallen>	yes actually those posts are close to the text I'm using divVerent dibblego 
Nov 26 17:58:46 <dibblego>	it is the zero or identity case
Nov 26 17:58:57 *	conal (~conal@107.181.166.220) has joined
Nov 26 17:59:05 <divVerent>	what surprises me is that applying my "left" to liftA0 (i.e. pure) yields liftA0 again, once I make it work at all
Nov 26 17:59:28 <koz_>	If I want to check if there's a file in a directory whose name fits a certain pattern, what should I use?
Nov 26 17:59:39 <crestfallen>	but how can pure (+1) be identity, it is succ, right?
Nov 26 17:59:47 <divVerent>	it's succ, yes
Nov 26 17:59:56 <dibblego>	crestfallen: pure is the identity for (<*>)
Nov 26 18:00:50 <dibblego>	just like 0 is the identity for (+)
Nov 26 18:01:05 *	olligobber has quit (Ping timeout: 276 seconds)
Nov 26 18:01:11 <crestfallen>	but in the case of a function being lifted dibblego  as in (+1) ? not sure I follow
Nov 26 18:01:17 *	Amras has quit (Remote host closed the connection)
Nov 26 18:01:19 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 26 18:01:36 *	ludat (b515f585@181.21.245.133) has joined
Nov 26 18:01:46 <dibblego>	@let identityPure \f x -> (pure f <*> pure x) == pure (f x)
Nov 26 18:01:46 <lambdabot>	 Parse failed: TemplateHaskell language extension is not enabled. Please add ...
Nov 26 18:01:54 <dibblego>	> let identityPure \f x -> (pure f <*> pure x) == pure (f x)
Nov 26 18:01:56 <lambdabot>	 <hint>:1:18: error:
Nov 26 18:01:56 <lambdabot>	     Unexpected lambda expression in function application:
Nov 26 18:01:56 <lambdabot>	         \ f x -> (pure f <*> pure x) == pure (f x)
Nov 26 18:01:59 <dibblego>	sorry
Nov 26 18:02:11 <dibblego>	anyway, that will always return True
Nov 26 18:02:27 <dibblego>	also this: (\x -> pure id <*> x)
Nov 26 18:02:28 *	fphilipe (~phil@2a02:168:f6c3:0:f1c0:e140:936c:3cb4) has joined
Nov 26 18:02:44 <dibblego>	also this: (\x -> pure id <*> x == x)
Nov 26 18:02:59 <divVerent>	oh, I get it... liftA_minus_1 can only exist in the a-> applicative, but it reduces to pure in the same
Nov 26 18:03:17 <divVerent>	but then... shouldn't liftA and pure ALSO be somewhat "equivalent" in the a-> applicative?
Nov 26 18:03:17 <dibblego>	> pure (+1) <*> [1,2,3,4,5]
Nov 26 18:03:19 <lambdabot>	 [2,3,4,5,6]
Nov 26 18:03:22 <crestfallen>	pure id <*> x == x    that makes complete sense
Nov 26 18:03:33 *	poljar (~poljar@93-143-184-238.adsl.net.t-com.hr) has joined
Nov 26 18:03:57 <dibblego>	> pure id <*> [1,2,3,4,5]
Nov 26 18:03:59 <lambdabot>	 [1,2,3,4,5]
Nov 26 18:04:20 *	poljar1 has quit (Ping timeout: 276 seconds)
Nov 26 18:04:22 <dibblego>	(pure f <*> x) == (f <$> x)
Nov 26 18:04:42 <dmwit>	koz_: http://hackage.haskell.org/package/filepattern possibly
Nov 26 18:04:50 <koz_>	dmwit: Thanks!
Nov 26 18:06:43 *	amerigo has quit (Quit: Connection closed for inactivity)
Nov 26 18:07:23 *	poljar1 (~poljar@93-143-187-137.adsl.net.t-com.hr) has joined
Nov 26 18:07:35 *	fphilipe has quit (Ping timeout: 276 seconds)
Nov 26 18:07:47 *	tromp (~tromp@2a02:a210:1585:3200:1154:e0fa:ddc3:145e) has joined
Nov 26 18:07:47 *	jscarmona1 (~jscarmona@141.98.102.179) has joined
Nov 26 18:08:17 *	[itchyjunk] has quit (Remote host closed the connection)
Nov 26 18:08:25 <divVerent>	oh, now I get it... it actually IS
Nov 26 18:08:28 <divVerent>	(a -> b) -> (a -> a) -> a -> b
Nov 26 18:08:30 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 26 18:08:31 *	efm (~efm@vpn.tummy.com) has joined
Nov 26 18:08:33 <divVerent>	is a type both pure and liftA can have
Nov 26 18:08:43 <divVerent>	the -> Applicative is certainly amazing
Nov 26 18:08:51 <crestfallen>	so yeah, pure just injects anything into a structure so that it can be used in the applicative, whether it changes anything or not. that's why its degenerate dibblego I suppose
Nov 26 18:09:23 <dibblego>	I tend to call it the identity or neutral element, "the thing that does nothing"
Nov 26 18:09:39 <divVerent>	except... the neutral element for <*> would be something else
Nov 26 18:09:42 <dibblego>	I think of it as [] in relation to (++), or 0 in relation to (+), or id in relation to (.)
Nov 26 18:09:43 <crestfallen>	but how can pure (+1) be seen to do nothing?
Nov 26 18:09:49 <divVerent>	it'd be the value X so that X <*> y = y for all y
Nov 26 18:09:57 <divVerent>	crestfallen: but it doesn't do nothing
Nov 26 18:10:06 <divVerent>	in my example it incremented all the list elemnets on the other side by 1
Nov 26 18:10:11 <divVerent>	that X, of course, is pure id
Nov 26 18:10:11 *	poljar has quit (Ping timeout: 276 seconds)
Nov 26 18:10:14 *	poljar_ (~poljar@93-143-158-102.adsl.net.t-com.hr) has joined
Nov 26 18:10:17 *	jix has quit (Ping timeout: 268 seconds)
Nov 26 18:10:17 *	chivay has quit (Ping timeout: 268 seconds)
Nov 26 18:10:29 <dibblego>	pure id
Nov 26 18:10:33 <divVerent>	now is there also a neutral element on the right of <*>?
Nov 26 18:11:17 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 26 18:11:24 <divVerent>	no, but there is at least
Nov 26 18:11:35 <divVerent>	pure ($ x) <*> pure id = x
Nov 26 18:11:40 <divVerent>	I suppose that's as neutral as it gets
Nov 26 18:12:11 <crestfallen>	...
Nov 26 18:12:16 *	tromp has quit (Ping timeout: 252 seconds)
Nov 26 18:12:21 <dmwit>	% newtype Eat a = Eat (a -> Eat a)
Nov 26 18:12:22 <yahb>	dmwit: 
Nov 26 18:12:37 <divVerent>	it's a consequence of the Interchange law of Applicative
Nov 26 18:12:42 <dmwit>	% unEat (Eat f) = f
Nov 26 18:12:43 <yahb>	dmwit: 
Nov 26 18:12:45 *	poljar1 has quit (Ping timeout: 268 seconds)
Nov 26 18:13:05 <divVerent>	dmwit: this looks like it's gonna get somewhere cool ;)
Nov 26 18:14:17 <dmwit>	% :t \v -> (unEat <$> v) <*> pure undefined
Nov 26 18:14:17 <yahb>	dmwit: Applicative f => f (Eat a) -> f (Eat a)
Nov 26 18:15:15 <crestfallen>	Interchange law... looking in my book. there are functor laws discussed...are they shared with applicative?
Nov 26 18:15:37 <dmwit>	Yes, Applicatives must be Functors.
Nov 26 18:16:07 *	jix (~jix@209.250.235.106) has joined
Nov 26 18:16:26 *	poljar (~poljar@93-143-190-160.adsl.net.t-com.hr) has joined
Nov 26 18:16:46 *	chivay (~chivay@0xc2.net) has joined
Nov 26 18:17:11 <crestfallen>	actually, that is implied only in the book... but the logic is not immediately apparent to me
Nov 26 18:17:41 *	poljar_ has quit (Ping timeout: 268 seconds)
Nov 26 18:18:06 <crestfallen>	cant wait to understand dmwit 's example
Nov 26 18:18:32 <crestfallen>	need to wait til morning tea
Nov 26 18:18:54 *	juri__ (~juri@79.140.121.51) has joined
Nov 26 18:19:00 *	amalloy_ is now known as amalloy
Nov 26 18:20:03 <crestfallen>	divVerent, dibblego dmwit really appreciate it
Nov 26 18:20:08 <dibblego>	np
Nov 26 18:20:09 *	juri_ has quit (Ping timeout: 268 seconds)
Nov 26 18:21:36 *	poljar1 (~poljar@78-1-60-120.adsl.net.t-com.hr) has joined
Nov 26 18:22:07 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 26 18:22:42 *	poljar has quit (Ping timeout: 265 seconds)
Nov 26 18:22:45 *	plutoniix (~q@175.176.222.7) has joined
Nov 26 18:22:52 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 26 18:23:20 *	cybai has quit (Remote host closed the connection)
Nov 26 18:24:02 *	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined
Nov 26 18:24:33 <divVerent>	crestfallen: I didn't understand the example either... damn, even got confused by the <$> which is just an odd way of saying fmap
Nov 26 18:26:09 <divVerent>	with v :: f (Eat t), fmap unEat v :: f (t -> Eat t), which kinda makes sense
Nov 26 18:26:39 <divVerent>	and then the <*> with pure undefined basically passes a value that does not matter to the first argument of the function, yielding an Eat t back
Nov 26 18:26:51 <divVerent>	(so, a f (Eat t) in total)
Nov 26 18:27:05 *	jix has quit (Ping timeout: 276 seconds)
Nov 26 18:27:05 *	chivay has quit (Ping timeout: 250 seconds)
Nov 26 18:27:46 <crestfallen>	divVerent, wait could you load that into lambdabot or whatever yahb is? I don't know that % command
Nov 26 18:27:48 <divVerent>	the fun part here is that Eat t allows getting a value out of a t -> Eat t
Nov 26 18:28:03 <divVerent>	which normally you can't just do
Nov 26 18:28:15 <divVerent>	sorry, no, would take me too many attempts
Nov 26 18:29:05 <crestfallen>	dang
Nov 26 18:29:05 *	poljar (~poljar@78-1-61-60.adsl.net.t-com.hr) has joined
Nov 26 18:29:34 <divVerent>	also, I can't currently even think of any value of the type Eat
Nov 26 18:29:46 *	nbloomf has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
Nov 26 18:30:00 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 26 18:30:05 <divVerent>	is that even inhabited?
Nov 26 18:30:19 <EvanR>	sure
Nov 26 18:30:45 *	poljar1 has quit (Ping timeout: 246 seconds)
Nov 26 18:30:59 <divVerent>	but by anything other than Eat undefined and variants?
Nov 26 18:30:59 *	conal has quit (Ping timeout: 276 seconds)
Nov 26 18:31:31 *	howdoi has quit (Quit: Connection closed for inactivity)
Nov 26 18:32:07 <EvanR>	i think Eat undefined is different from let e = Eat (\x -> e) in e
Nov 26 18:32:51 <Clint>	dcoutts: are you okay with bzlib having a lower bound on base 4.9?
Nov 26 18:33:26 *	conal (~conal@107.181.166.220) has joined
Nov 26 18:33:30 <crestfallen>	actually, after all this time I still don't quite get the structure of a let statement. They are coming up in state monad/applicative definitions. the result is often on the lhs which confuses me
Nov 26 18:33:30 *	jix (~jix@209.250.235.106) has joined
Nov 26 18:33:52 *	nbloomf (~nbloomf@2600:1700:83e0:1f40:b5e1:77ed:921d:eb4e) has joined
Nov 26 18:33:54 <divVerent>	is any of the differences actually observable though, except in the form of bottom vs non-bottom?
Nov 26 18:33:57 <EvanR>	you mean the result uses something defined in the bindings
Nov 26 18:34:12 <crestfallen>	the function application is on the rhs, and the result, with the new state, is on the left
Nov 26 18:34:12 *	chivay (~chivay@0xc2.net) has joined
Nov 26 18:34:14 <EvanR>	which makes sense
Nov 26 18:35:07 <EvanR>	the structure is let <bindings> in <evaluate this>. The only trick is bindinds are recursion and can appear in binding rhses
Nov 26 18:35:15 <EvanR>	recursive*
Nov 26 18:35:24 <EvanR>	aka letrec
Nov 26 18:36:55 <EvanR>	divVerent: one freezes or crashes, the other doesn't
Nov 26 18:37:11 <EvanR>	the other one let's you feed is any number of times without problems
Nov 26 18:37:25 <divVerent>	EvanR: ah, I see
Nov 26 18:37:25 *	poljar has quit (Ping timeout: 268 seconds)
Nov 26 18:37:51 *	poljar (~poljar@93-143-143-107.adsl.net.t-com.hr) has joined
Nov 26 18:37:59 <divVerent>	not sure what to call that in theory, but it seems like it's only really observable from "outside"
Nov 26 18:38:12 <EvanR>	codata
Nov 26 18:38:30 <crestfallen>	letrec  what's that?
Nov 26 18:38:36 <EvanR>	recursive let
Nov 26 18:38:49 <divVerent>	i.e. you can't define any expression that takes an Eat and for which values exist so it may return True for one and False for another
Nov 26 18:38:56 <divVerent>	of course... you can't do that for the type () either
Nov 26 18:39:08 *	andyo has quit (Ping timeout: 265 seconds)
Nov 26 18:39:09 *	Kaiepi has quit (Remote host closed the connection)
Nov 26 18:39:12 <EvanR>	yeah it may be observably equivalent to ()
Nov 26 18:39:27 <dmwit>	Yes, Eat is a fancy ().
Nov 26 18:39:35 *	Kaiepi (~Kaiepi@99.192.113.32) has joined
Nov 26 18:39:44 <dmwit>	This is closely related to my objection to the "encoding" of untyped lambda calculus as data L = L (L -> L)
Nov 26 18:40:07 <dmwit>	or newtype if you prefer
Nov 26 18:40:11 <divVerent>	sure
Nov 26 18:40:32 <shachaf>	What's the objection?
Nov 26 18:40:41 <dmwit>	If you allow IO in my distinguisher, I think I can make countably many distinguishable Eats.
Nov 26 18:40:52 *	sdrodge_ is now known as sdrodge
Nov 26 18:41:02 *	andyo (~andyo@63.228.117.97) has joined
Nov 26 18:41:05 <dmwit>	(Even if you force me to identify otherwise-distinguishable bottoms.)
Nov 26 18:41:15 <dmwit>	shachaf: Can't observe anything interesting about the terms.
Nov 26 18:41:51 <crestfallen>	Eat is a fancy ()  << looks like an eating disorder
Nov 26 18:41:56 <shachaf>	You can observe that they halt.
Nov 26 18:42:00 <divVerent>	dmwit: well... in IO, I can make countably many distinguishable items of () too
Nov 26 18:42:02 <shachaf>	Sorry, reduce to normal form.
Nov 26 18:42:08 <divVerent>	error "1", error "2", error "3" ...
Nov 26 18:42:13 <dmwit>	divVerent: Not if I force you to identify otherwise-distinguishable bottoms.
Nov 26 18:42:17 *	halogenandtoast (~halogenan@2605:a601:aa4c:a600:6437:2249:8ed3:9c13) has joined
Nov 26 18:42:28 <divVerent>	right, I see
Nov 26 18:42:37 *	poljar1 (~poljar@93-143-148-170.adsl.net.t-com.hr) has joined
Nov 26 18:42:44 <halogenandtoast>	Is there a shorthand (or operator) that is essentially ((f <$>) . g)
Nov 26 18:42:48 *	poljar has quit (Ping timeout: 245 seconds)
Nov 26 18:43:18 <dmwit>	shachaf: Can you?
Nov 26 18:43:18 <shachaf>	(fmap f . g) is a shorthand.
Nov 26 18:43:33 <dmwit>	I mean.
Nov 26 18:43:41 <dmwit>	You can't return a Bool saying whether it reduces to normal form.
Nov 26 18:43:49 <EvanR>	it's semidecidable
Nov 26 18:43:58 <shachaf>	Sure, you can only semiobserve it, if you prefer.
Nov 26 18:44:09 <shachaf>	You can return a () saying whether it reduces to normal form.
Nov 26 18:44:28 *	regakakobigman has quit (Ping timeout: 245 seconds)
Nov 26 18:44:35 <dmwit>	Whereas with a good encoding there's a lot more things you can observe about a lambda term.
Nov 26 18:44:39 <dmwit>	Like whether it's an application or not.
Nov 26 18:44:45 <dmwit>	Whether it's alpha-equivalent to another term.
Nov 26 18:44:54 <dmwit>	All kinds of good stuff.
Nov 26 18:45:16 <crestfallen>	EvanR I really wish I understood your posts re: recursive bindings on the rh sides. I understand recursion in many cases fairly well..
Nov 26 18:45:32 <shachaf>	I mean, that depends on what you want out of your encoding.
Nov 26 18:45:32 <halogenandtoast>	shachaf: thanks, that does look better for one case, but I have another that is (fmap (f a) . g) and can not decide if that is better than (f a <$>) . g
Nov 26 18:45:46 *	poljar (~poljar@89-172-253-67.adsl.net.t-com.hr) has joined
Nov 26 18:45:46 <EvanR>	crestfallen: the bindings define names using equations. The names can be used on the right side of each equation
Nov 26 18:46:22 <crestfallen>	one moment pls
Nov 26 18:46:33 <divVerent>	hm... this repr of untped  lambda calculus... 
Nov 26 18:46:43 *	Kristof_HT (~Kristof@76.31.165.37) has joined
Nov 26 18:46:47 <shachaf>	(\x -> f a <$> g x) is a longhand that might be clearer sometimes.
Nov 26 18:46:50 <divVerent>	lets me get a L out of thin air: (\l -> (unL l) l) (L (\l -> (unL l) l))
Nov 26 18:46:53 *	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined
Nov 26 18:47:13 <divVerent>	of course, it's not like I can actually _do_ anything with it, so it may as well be undefined :: L
Nov 26 18:47:17 <EvanR>	L id is even more thin!
Nov 26 18:47:24 <divVerent>	right
Nov 26 18:47:28 <divVerent>	but I wanted an endless loop
Nov 26 18:47:34 <divVerent>	but then realized I can't actually trigger it ;)
Nov 26 18:47:37 <EvanR>	u bad
Nov 26 18:47:41 <shachaf>	dmwit: I think people want to talk about what lambda expressions represent, rather than how they're reduced.
Nov 26 18:47:53 *	poljar1 has quit (Ping timeout: 276 seconds)
Nov 26 18:48:16 <divVerent>	and yes, L id is basically the same
Nov 26 18:48:26 <shachaf>	You can always add additional ur objects or something if you want.
Nov 26 18:48:39 <crestfallen>	https://termbin.com/ykqx   EvanR if you could peek at this and in the Applicative instance help me understand how recursion works in the let statement
Nov 26 18:49:07 <EvanR>	it's not using recursion
Nov 26 18:49:10 <shachaf>	But obviously statements like Rice's theorem will work for this this kind of representation, and won't work for things that tell you details about the reduction.
Nov 26 18:49:33 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 26 18:49:34 <dmwit>	shachaf: We've already got () for representing things where all you can do is semi-decide if it terminates.
Nov 26 18:49:34 <EvanR>	you could write that without recursive let
Nov 26 18:49:47 *	sagax (~sagax_nb@213.138.71.146) has joined
Nov 26 18:49:57 *	thivu (~sphone@59.153.253.15) has joined
Nov 26 18:50:10 *	thivu has quit (Remote host closed the connection)
Nov 26 18:50:35 <shachaf>	Well, the type L is certainly different in Haskell from the type ().
Nov 26 18:50:55 <dmwit>	Not in very interesting ways.
Nov 26 18:50:55 *	wildtrees has quit (Quit: Leaving)
Nov 26 18:50:57 *	stephen0731 has quit (Remote host closed the connection)
Nov 26 18:51:01 <shachaf>	You can write _|_ without recursion with it, unlike with ().
Nov 26 18:51:06 <shachaf>	I think that's pretty interesting.
Nov 26 18:51:11 *	dmwit doesn't
Nov 26 18:51:20 <EvanR>	:\
Nov 26 18:51:26 *	thivu (~sphone@59.153.253.15) has joined
Nov 26 18:51:30 <shachaf>	Well, OK, that's because Haskell is kind of nonsense.
Nov 26 18:52:12 *	stephen0731 (~stephen07@li471-144.members.linode.com) has joined
Nov 26 18:52:20 <shachaf>	But it's kind of the point of this L ~~ (L -> L) model of untyped lambda calculus.
Nov 26 18:53:56 <shachaf>	Hmm, I was about to say something about having a surjection : L -> (L -> L), but of course you have that in a total language with () too!
Nov 26 18:54:01 *	uniquerockrz (~uniqueroc@static.54.179.203.116.clients.your-server.de) has joined
Nov 26 18:55:39 <divVerent>	I like the Void type more anyway
Nov 26 18:55:41 *	thivu has quit (Ping timeout: 250 seconds)
Nov 26 18:55:57 <divVerent>	never understood why C doesn't have it, and modern compilers call it void __attribute__((noreturn)) :)
Nov 26 18:57:01 *	xkapastel has quit (Quit: Connection closed for inactivity)
Nov 26 18:57:11 *	Saukk (~Saukk@2001:998:fe:2781:1c59:9bb5:b94c:2) has joined
Nov 26 18:57:11 <crestfallen>	so this:    let <bindings> in <evaluate this>     allow you to give the state names s' and s'' to reflect ST a -> ST b. The bindings are s' and s''     EvanR  ?   
Nov 26 18:57:55 <crestfallen>	allows*
Nov 26 18:59:04 <crestfallen>	so no I think the bindings are the tuples (f,s') and (x,s'')
Nov 26 18:59:49 <crestfallen>	in the case of the let statement applicative 
Nov 26 18:59:49 <EvanR>	yes
Nov 26 18:59:53 *	poljar has quit (Ping timeout: 245 seconds)
Nov 26 19:00:01 *	jscarmona1 has quit ()
Nov 26 19:00:15 *	merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined
Nov 26 19:00:35 <EvanR>	> let (x,y) = (1,2); z = x + 1 in (z,y)
Nov 26 19:00:36 <lambdabot>	 (2,2)
Nov 26 19:00:37 *	poljar (~poljar@93-143-156-91.adsl.net.t-com.hr) has joined
Nov 26 19:00:46 <EvanR>	same thing
Nov 26 19:03:32 <crestfallen>	yes, f actually reflects ST (a -> b)  
Nov 26 19:04:40 <crestfallen>	I hope. thanks EvanR 
Nov 26 19:05:27 *	stephen0731 has quit (Quit: stephen0731)
Nov 26 19:05:56 <dmj`>	has anyone written a function that deduplicates a vector in-place ? (this means [a,b,a,c] would yield [a,b,c])
Nov 26 19:05:57 *	stephen0731 (~stephen07@li471-144.members.linode.com) has joined
Nov 26 19:06:02 *	xff0x (~fox@210.57.57.162) has joined
Nov 26 19:06:21 *	MoarSpaceFi (~Forgot_my@65.155.84.20) has joined
Nov 26 19:06:26 <Axman6>	so nub for vectors?
Nov 26 19:06:50 <Axman6>	I assume you wan mutable vectors?
Nov 26 19:07:15 <maerwald>	the question is whether the output vector is allowed to be sorted
Nov 26 19:07:27 *	poljar1 (~poljar@93-143-168-171.adsl.net.t-com.hr) has joined
Nov 26 19:07:37 <dmj`>	Axman6: yes
Nov 26 19:07:41 <dmj`>	maerwald: yes
Nov 26 19:07:48 <dmj`>	in-place nub for Vector
Nov 26 19:08:25 <maerwald>	that should be reasonable in time and space after the input vector has been sorted, you only compare against the previous element
Nov 26 19:08:39 <dmj`>	maerwald: that's exactly my approach
Nov 26 19:09:08 <maerwald>	I wrote such a function in go, but not in haskell xD
Nov 26 19:09:13 <dmj`>	I forgot to mention one thing, the operation must also allow for a combining step
Nov 26 19:09:14 <Axman6>	you're using vector-algorithms then?
Nov 26 19:09:23 <dmj`>	Axman6: I wrote my own in-place quicksort
Nov 26 19:09:36 <dmj`>	and it's quick-checked so you know it's right ;) 
Nov 26 19:09:59 *	poljar has quit (Ping timeout: 250 seconds)
Nov 26 19:10:11 <dmj`>	nubVectorInPlace :: Ord a => (a -> a -> a) -> Vector a -> Vector a
Nov 26 19:10:32 *	poljar (~poljar@93-143-147-212.adsl.net.t-com.hr) has joined
Nov 26 19:10:39 *	theDon has quit (Ping timeout: 246 seconds)
Nov 26 19:10:50 *	heatsink (~heatsink@2600:1700:bef1:5e10:5551:1c19:a5fd:e31d) has joined
Nov 26 19:11:05 <dmj`>	Axman6: I am going to use in-place quicksort on the Vector, than write another operation using modify that accumulates up the chunks in a linear scan, in-place overwriting, carefully moving the indices down the vector, finally yielding the slice at the end.
Nov 26 19:11:10 <dmj`>	then*
Nov 26 19:12:34 *	theDon (~td@94.134.91.210) has joined
Nov 26 19:13:14 *	poljar1 has quit (Ping timeout: 276 seconds)
Nov 26 19:13:14 *	uniquerockrz has quit (Read error: Connection reset by peer)
Nov 26 19:13:33 <maerwald>	dmj`: I did a bottom-up iterative mergesort (non-recursive), which turned out to be *really* fast
Nov 26 19:13:36 <maerwald>	https://gist.github.com/hasufell/2f7146e39291a5eb3c5560c8f82b7c55
Nov 26 19:14:06 <maerwald>	should probably give that a go in haskell
Nov 26 19:15:51 *	lagothrix is now known as Guest59596
Nov 26 19:15:51 *	Guest59596 has quit (Killed (cherryh.freenode.net (Nickname regained by services)))
Nov 26 19:15:57 <EvanR>	go in haskell *shudder*
Nov 26 19:15:59 *	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined
Nov 26 19:16:09 <maerwald>	lolol
Nov 26 19:16:27 Python interface unloaded
Nov 26 19:16:27 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Tue Nov 26 19:16:27 2019

