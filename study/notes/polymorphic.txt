isEqual :: Eq a => a -> a -> Bool
isEqual x y = x == y

is constrained polymorphic: its constrained to 
the set of types which have an instance of 
the Eq typeclass.

---------

id :: a -> a
id x = x

whereas the identity function is parametrically 
polymorphic: it is not constrained, it works 
for any type and doesn't use any information 
specific to a given type or set of types.


